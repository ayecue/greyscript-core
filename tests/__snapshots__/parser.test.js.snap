// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse default scripts ascii.src 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 14,
        "line": 1,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 14,
          "line": 1,
        },
        "fields": Array [],
        "start": Position {
          "character": 12,
          "line": 1,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 9,
          "line": 1,
        },
        "name": "AsciiGen",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 9,
        "line": 3,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 9,
          "line": 3,
        },
        "fields": Array [],
        "start": Position {
          "character": 7,
          "line": 3,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 4,
          "line": 3,
        },
        "name": "map",
        "start": Position {
          "character": 1,
          "line": 3,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 5,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 5,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 5,
            },
            "start": Position {
              "character": 10,
              "line": 5,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 5,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 10,
                "line": 5,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 5,
            },
            "start": Position {
              "character": 20,
              "line": 5,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 5,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 20,
                "line": 5,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 5,
            },
            "start": Position {
              "character": 30,
              "line": 5,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 5,
              },
              "raw": "\\"|| || \\"",
              "start": Position {
                "character": 30,
                "line": 5,
              },
              "type": "StringLiteral",
              "value": "|| || ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 5,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 5,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 5,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 5,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 5,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 5,
          },
          "name": "a",
          "start": Position {
            "character": 5,
            "line": 5,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 5,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 36,
        "line": 6,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 36,
          "line": 6,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 17,
              "line": 6,
            },
            "start": Position {
              "character": 10,
              "line": 6,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 17,
                "line": 6,
              },
              "raw": "\\"||¯/ \\"",
              "start": Position {
                "character": 10,
                "line": 6,
              },
              "type": "StringLiteral",
              "value": "||¯/ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 26,
              "line": 6,
            },
            "start": Position {
              "character": 19,
              "line": 6,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 26,
                "line": 6,
              },
              "raw": "\\"|| \\\\ \\"",
              "start": Position {
                "character": 19,
                "line": 6,
              },
              "type": "StringLiteral",
              "value": "|| \\\\ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 35,
              "line": 6,
            },
            "start": Position {
              "character": 28,
              "line": 6,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 35,
                "line": 6,
              },
              "raw": "\\"||_/ \\"",
              "start": Position {
                "character": 28,
                "line": 6,
              },
              "type": "StringLiteral",
              "value": "||_/ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 6,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 6,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 6,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 6,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 6,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 6,
          },
          "name": "b",
          "start": Position {
            "character": 5,
            "line": 6,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 6,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 33,
        "line": 7,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 33,
          "line": 7,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 16,
              "line": 7,
            },
            "start": Position {
              "character": 10,
              "line": 7,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 16,
                "line": 7,
              },
              "raw": "\\"||¯ \\"",
              "start": Position {
                "character": 10,
                "line": 7,
              },
              "type": "StringLiteral",
              "value": "||¯ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 24,
              "line": 7,
            },
            "start": Position {
              "character": 18,
              "line": 7,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 24,
                "line": 7,
              },
              "raw": "\\"||  \\"",
              "start": Position {
                "character": 18,
                "line": 7,
              },
              "type": "StringLiteral",
              "value": "||  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 32,
              "line": 7,
            },
            "start": Position {
              "character": 26,
              "line": 7,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 32,
                "line": 7,
              },
              "raw": "\\"||_ \\"",
              "start": Position {
                "character": 26,
                "line": 7,
              },
              "type": "StringLiteral",
              "value": "||_ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 7,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 7,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 7,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 7,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 7,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 7,
          },
          "name": "c",
          "start": Position {
            "character": 5,
            "line": 7,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 7,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 8,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 8,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 8,
            },
            "start": Position {
              "character": 10,
              "line": 8,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 8,
              },
              "raw": "\\"||¯\\\\\\\\ \\"",
              "start": Position {
                "character": 10,
                "line": 8,
              },
              "type": "StringLiteral",
              "value": "||¯\\\\\\\\ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 8,
            },
            "start": Position {
              "character": 20,
              "line": 8,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 8,
              },
              "raw": "\\"|| // \\"",
              "start": Position {
                "character": 20,
                "line": 8,
              },
              "type": "StringLiteral",
              "value": "|| // ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 8,
            },
            "start": Position {
              "character": 30,
              "line": 8,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 8,
              },
              "raw": "\\"||//  \\"",
              "start": Position {
                "character": 30,
                "line": 8,
              },
              "type": "StringLiteral",
              "value": "||//  ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 8,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 8,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 8,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 8,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 8,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 8,
          },
          "name": "d",
          "start": Position {
            "character": 5,
            "line": 8,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 8,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 33,
        "line": 9,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 33,
          "line": 9,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 16,
              "line": 9,
            },
            "start": Position {
              "character": 10,
              "line": 9,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 16,
                "line": 9,
              },
              "raw": "\\"||¯ \\"",
              "start": Position {
                "character": 10,
                "line": 9,
              },
              "type": "StringLiteral",
              "value": "||¯ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 24,
              "line": 9,
            },
            "start": Position {
              "character": 18,
              "line": 9,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 24,
                "line": 9,
              },
              "raw": "\\"||- \\"",
              "start": Position {
                "character": 18,
                "line": 9,
              },
              "type": "StringLiteral",
              "value": "||- ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 32,
              "line": 9,
            },
            "start": Position {
              "character": 26,
              "line": 9,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 32,
                "line": 9,
              },
              "raw": "\\"||_ \\"",
              "start": Position {
                "character": 26,
                "line": 9,
              },
              "type": "StringLiteral",
              "value": "||_ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 9,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 9,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 9,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 9,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 9,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 9,
          },
          "name": "e",
          "start": Position {
            "character": 5,
            "line": 9,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 9,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 33,
        "line": 10,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 33,
          "line": 10,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 16,
              "line": 10,
            },
            "start": Position {
              "character": 10,
              "line": 10,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 16,
                "line": 10,
              },
              "raw": "\\"||¯ \\"",
              "start": Position {
                "character": 10,
                "line": 10,
              },
              "type": "StringLiteral",
              "value": "||¯ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 24,
              "line": 10,
            },
            "start": Position {
              "character": 18,
              "line": 10,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 24,
                "line": 10,
              },
              "raw": "\\"||_ \\"",
              "start": Position {
                "character": 18,
                "line": 10,
              },
              "type": "StringLiteral",
              "value": "||_ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 32,
              "line": 10,
            },
            "start": Position {
              "character": 26,
              "line": 10,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 32,
                "line": 10,
              },
              "raw": "\\"||  \\"",
              "start": Position {
                "character": 26,
                "line": 10,
              },
              "type": "StringLiteral",
              "value": "||  ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 10,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 10,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 10,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 10,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 10,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 10,
          },
          "name": "f",
          "start": Position {
            "character": 5,
            "line": 10,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 10,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 11,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 11,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 11,
            },
            "start": Position {
              "character": 10,
              "line": 11,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 11,
              },
              "raw": "\\"||¯¯  \\"",
              "start": Position {
                "character": 10,
                "line": 11,
              },
              "type": "StringLiteral",
              "value": "||¯¯  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 11,
            },
            "start": Position {
              "character": 20,
              "line": 11,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 11,
              },
              "raw": "\\"|| \\\\\\\\ \\"",
              "start": Position {
                "character": 20,
                "line": 11,
              },
              "type": "StringLiteral",
              "value": "|| \\\\\\\\ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 11,
            },
            "start": Position {
              "character": 30,
              "line": 11,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 11,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 30,
                "line": 11,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 11,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 11,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 11,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 11,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 11,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 11,
          },
          "name": "g",
          "start": Position {
            "character": 5,
            "line": 11,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 11,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 12,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 12,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 12,
            },
            "start": Position {
              "character": 10,
              "line": 12,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 12,
              },
              "raw": "\\"|| || \\"",
              "start": Position {
                "character": 10,
                "line": 12,
              },
              "type": "StringLiteral",
              "value": "|| || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 12,
            },
            "start": Position {
              "character": 20,
              "line": 12,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 12,
              },
              "raw": "\\"||-|| \\"",
              "start": Position {
                "character": 20,
                "line": 12,
              },
              "type": "StringLiteral",
              "value": "||-|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 12,
            },
            "start": Position {
              "character": 30,
              "line": 12,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 12,
              },
              "raw": "\\"|| || \\"",
              "start": Position {
                "character": 30,
                "line": 12,
              },
              "type": "StringLiteral",
              "value": "|| || ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 12,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 12,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 12,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 12,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 12,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 12,
          },
          "name": "h",
          "start": Position {
            "character": 5,
            "line": 12,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 12,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 30,
        "line": 13,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 30,
          "line": 13,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 15,
              "line": 13,
            },
            "start": Position {
              "character": 10,
              "line": 13,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 15,
                "line": 13,
              },
              "raw": "\\"|| \\"",
              "start": Position {
                "character": 10,
                "line": 13,
              },
              "type": "StringLiteral",
              "value": "|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 22,
              "line": 13,
            },
            "start": Position {
              "character": 17,
              "line": 13,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 22,
                "line": 13,
              },
              "raw": "\\"|| \\"",
              "start": Position {
                "character": 17,
                "line": 13,
              },
              "type": "StringLiteral",
              "value": "|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 29,
              "line": 13,
            },
            "start": Position {
              "character": 24,
              "line": 13,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 29,
                "line": 13,
              },
              "raw": "\\"|| \\"",
              "start": Position {
                "character": 24,
                "line": 13,
              },
              "type": "StringLiteral",
              "value": "|| ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 13,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 13,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 13,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 13,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 13,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 13,
          },
          "name": "i",
          "start": Position {
            "character": 5,
            "line": 13,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 13,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 14,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 14,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 14,
            },
            "start": Position {
              "character": 10,
              "line": 14,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 14,
              },
              "raw": "\\" ¯||¯ \\"",
              "start": Position {
                "character": 10,
                "line": 14,
              },
              "type": "StringLiteral",
              "value": " ¯||¯ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 14,
            },
            "start": Position {
              "character": 20,
              "line": 14,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 14,
              },
              "raw": "\\"  ||  \\"",
              "start": Position {
                "character": 20,
                "line": 14,
              },
              "type": "StringLiteral",
              "value": "  ||  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 14,
            },
            "start": Position {
              "character": 30,
              "line": 14,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 14,
              },
              "raw": "\\"|_||  \\"",
              "start": Position {
                "character": 30,
                "line": 14,
              },
              "type": "StringLiteral",
              "value": "|_||  ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 14,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 14,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 14,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 14,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 14,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 14,
          },
          "name": "j",
          "start": Position {
            "character": 5,
            "line": 14,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 14,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 15,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 15,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 15,
            },
            "start": Position {
              "character": 10,
              "line": 15,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 15,
              },
              "raw": "\\"||  / \\"",
              "start": Position {
                "character": 10,
                "line": 15,
              },
              "type": "StringLiteral",
              "value": "||  / ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 15,
            },
            "start": Position {
              "character": 20,
              "line": 15,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 15,
              },
              "raw": "\\"|| /  \\"",
              "start": Position {
                "character": 20,
                "line": 15,
              },
              "type": "StringLiteral",
              "value": "|| /  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 15,
            },
            "start": Position {
              "character": 30,
              "line": 15,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 15,
              },
              "raw": "\\"||¯\\\\\\\\ \\"",
              "start": Position {
                "character": 30,
                "line": 15,
              },
              "type": "StringLiteral",
              "value": "||¯\\\\\\\\ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 15,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 15,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 15,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 15,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 15,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 15,
          },
          "name": "k",
          "start": Position {
            "character": 5,
            "line": 15,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 15,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 33,
        "line": 16,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 33,
          "line": 16,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 16,
              "line": 16,
            },
            "start": Position {
              "character": 10,
              "line": 16,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 16,
                "line": 16,
              },
              "raw": "\\"||  \\"",
              "start": Position {
                "character": 10,
                "line": 16,
              },
              "type": "StringLiteral",
              "value": "||  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 24,
              "line": 16,
            },
            "start": Position {
              "character": 18,
              "line": 16,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 24,
                "line": 16,
              },
              "raw": "\\"||  \\"",
              "start": Position {
                "character": 18,
                "line": 16,
              },
              "type": "StringLiteral",
              "value": "||  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 32,
              "line": 16,
            },
            "start": Position {
              "character": 26,
              "line": 16,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 32,
                "line": 16,
              },
              "raw": "\\"||_ \\"",
              "start": Position {
                "character": 26,
                "line": 16,
              },
              "type": "StringLiteral",
              "value": "||_ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 16,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 16,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 16,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 16,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 16,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 16,
          },
          "name": "l",
          "start": Position {
            "character": 5,
            "line": 16,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 16,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 45,
        "line": 17,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 45,
          "line": 17,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 20,
              "line": 17,
            },
            "start": Position {
              "character": 10,
              "line": 17,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 17,
              },
              "raw": "\\"||\\\\\\\\/|| \\"",
              "start": Position {
                "character": 10,
                "line": 17,
              },
              "type": "StringLiteral",
              "value": "||\\\\\\\\/|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 32,
              "line": 17,
            },
            "start": Position {
              "character": 22,
              "line": 17,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 32,
                "line": 17,
              },
              "raw": "\\"||   || \\"",
              "start": Position {
                "character": 22,
                "line": 17,
              },
              "type": "StringLiteral",
              "value": "||   || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 44,
              "line": 17,
            },
            "start": Position {
              "character": 34,
              "line": 17,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 44,
                "line": 17,
              },
              "raw": "\\"||   || \\"",
              "start": Position {
                "character": 34,
                "line": 17,
              },
              "type": "StringLiteral",
              "value": "||   || ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 17,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 17,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 17,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 17,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 17,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 17,
          },
          "name": "m",
          "start": Position {
            "character": 5,
            "line": 17,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 17,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 45,
        "line": 18,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 45,
          "line": 18,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 20,
              "line": 18,
            },
            "start": Position {
              "character": 10,
              "line": 18,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 18,
              },
              "raw": "\\"||\\\\\\\\ || \\"",
              "start": Position {
                "character": 10,
                "line": 18,
              },
              "type": "StringLiteral",
              "value": "||\\\\\\\\ || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 32,
              "line": 18,
            },
            "start": Position {
              "character": 22,
              "line": 18,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 32,
                "line": 18,
              },
              "raw": "\\"|| \\\\\\\\|| \\"",
              "start": Position {
                "character": 22,
                "line": 18,
              },
              "type": "StringLiteral",
              "value": "|| \\\\\\\\|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 44,
              "line": 18,
            },
            "start": Position {
              "character": 34,
              "line": 18,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 44,
                "line": 18,
              },
              "raw": "\\"||  \\\\|| \\"",
              "start": Position {
                "character": 34,
                "line": 18,
              },
              "type": "StringLiteral",
              "value": "||  \\\\|| ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 18,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 18,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 18,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 18,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 18,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 18,
          },
          "name": "n",
          "start": Position {
            "character": 5,
            "line": 18,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 18,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 19,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 19,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 19,
            },
            "start": Position {
              "character": 10,
              "line": 19,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 19,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 10,
                "line": 19,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 19,
            },
            "start": Position {
              "character": 20,
              "line": 19,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 19,
              },
              "raw": "\\"|| || \\"",
              "start": Position {
                "character": 20,
                "line": 19,
              },
              "type": "StringLiteral",
              "value": "|| || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 19,
            },
            "start": Position {
              "character": 30,
              "line": 19,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 19,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 30,
                "line": 19,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 19,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 19,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 19,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 19,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 19,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 19,
          },
          "name": "o",
          "start": Position {
            "character": 5,
            "line": 19,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 19,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 20,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 20,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 20,
            },
            "start": Position {
              "character": 10,
              "line": 20,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 20,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 10,
                "line": 20,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 20,
            },
            "start": Position {
              "character": 20,
              "line": 20,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 20,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 20,
                "line": 20,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 20,
            },
            "start": Position {
              "character": 30,
              "line": 20,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 20,
              },
              "raw": "\\"||    \\"",
              "start": Position {
                "character": 30,
                "line": 20,
              },
              "type": "StringLiteral",
              "value": "||    ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 20,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 20,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 20,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 20,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 20,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 20,
          },
          "name": "p",
          "start": Position {
            "character": 5,
            "line": 20,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 20,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 42,
        "line": 21,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 42,
          "line": 21,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 19,
              "line": 21,
            },
            "start": Position {
              "character": 10,
              "line": 21,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 21,
              },
              "raw": "\\"||¯||  \\"",
              "start": Position {
                "character": 10,
                "line": 21,
              },
              "type": "StringLiteral",
              "value": "||¯||  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 30,
              "line": 21,
            },
            "start": Position {
              "character": 21,
              "line": 21,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 30,
                "line": 21,
              },
              "raw": "\\"|| ||  \\"",
              "start": Position {
                "character": 21,
                "line": 21,
              },
              "type": "StringLiteral",
              "value": "|| ||  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 41,
              "line": 21,
            },
            "start": Position {
              "character": 32,
              "line": 21,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 41,
                "line": 21,
              },
              "raw": "\\"||_||¬ \\"",
              "start": Position {
                "character": 32,
                "line": 21,
              },
              "type": "StringLiteral",
              "value": "||_||¬ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 21,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 21,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 21,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 21,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 21,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 21,
          },
          "name": "q",
          "start": Position {
            "character": 5,
            "line": 21,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 21,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 22,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 22,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 22,
            },
            "start": Position {
              "character": 10,
              "line": 22,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 22,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 10,
                "line": 22,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 22,
            },
            "start": Position {
              "character": 20,
              "line": 22,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 22,
              },
              "raw": "\\"||¯\\\\\\\\ \\"",
              "start": Position {
                "character": 20,
                "line": 22,
              },
              "type": "StringLiteral",
              "value": "||¯\\\\\\\\ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 22,
            },
            "start": Position {
              "character": 30,
              "line": 22,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 22,
              },
              "raw": "\\"|| || \\"",
              "start": Position {
                "character": 30,
                "line": 22,
              },
              "type": "StringLiteral",
              "value": "|| || ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 22,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 22,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 22,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 22,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 22,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 22,
          },
          "name": "r",
          "start": Position {
            "character": 5,
            "line": 22,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 22,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 36,
        "line": 23,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 36,
          "line": 23,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 17,
              "line": 23,
            },
            "start": Position {
              "character": 10,
              "line": 23,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 17,
                "line": 23,
              },
              "raw": "\\"||¯¯ \\"",
              "start": Position {
                "character": 10,
                "line": 23,
              },
              "type": "StringLiteral",
              "value": "||¯¯ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 26,
              "line": 23,
            },
            "start": Position {
              "character": 19,
              "line": 23,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 26,
                "line": 23,
              },
              "raw": "\\" \\\\\\\\  \\"",
              "start": Position {
                "character": 19,
                "line": 23,
              },
              "type": "StringLiteral",
              "value": " \\\\\\\\  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 35,
              "line": 23,
            },
            "start": Position {
              "character": 28,
              "line": 23,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 35,
                "line": 23,
              },
              "raw": "\\"__|| \\"",
              "start": Position {
                "character": 28,
                "line": 23,
              },
              "type": "StringLiteral",
              "value": "__|| ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 23,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 23,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 23,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 23,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 23,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 23,
          },
          "name": "s",
          "start": Position {
            "character": 5,
            "line": 23,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 23,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 36,
        "line": 24,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 36,
          "line": 24,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 17,
              "line": 24,
            },
            "start": Position {
              "character": 10,
              "line": 24,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 17,
                "line": 24,
              },
              "raw": "\\"¯||¯ \\"",
              "start": Position {
                "character": 10,
                "line": 24,
              },
              "type": "StringLiteral",
              "value": "¯||¯ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 26,
              "line": 24,
            },
            "start": Position {
              "character": 19,
              "line": 24,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 26,
                "line": 24,
              },
              "raw": "\\" ||  \\"",
              "start": Position {
                "character": 19,
                "line": 24,
              },
              "type": "StringLiteral",
              "value": " ||  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 35,
              "line": 24,
            },
            "start": Position {
              "character": 28,
              "line": 24,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 35,
                "line": 24,
              },
              "raw": "\\" ||  \\"",
              "start": Position {
                "character": 28,
                "line": 24,
              },
              "type": "StringLiteral",
              "value": " ||  ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 24,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 24,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 24,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 24,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 24,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 24,
          },
          "name": "t",
          "start": Position {
            "character": 5,
            "line": 24,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 24,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 25,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 25,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 25,
            },
            "start": Position {
              "character": 10,
              "line": 25,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 25,
              },
              "raw": "\\"|| || \\"",
              "start": Position {
                "character": 10,
                "line": 25,
              },
              "type": "StringLiteral",
              "value": "|| || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 25,
            },
            "start": Position {
              "character": 20,
              "line": 25,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 25,
              },
              "raw": "\\"|| || \\"",
              "start": Position {
                "character": 20,
                "line": 25,
              },
              "type": "StringLiteral",
              "value": "|| || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 25,
            },
            "start": Position {
              "character": 30,
              "line": 25,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 25,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 30,
                "line": 25,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 25,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 25,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 25,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 25,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 25,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 25,
          },
          "name": "u",
          "start": Position {
            "character": 5,
            "line": 25,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 25,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 26,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 26,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 26,
            },
            "start": Position {
              "character": 10,
              "line": 26,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 26,
              },
              "raw": "\\"\\\\\\\\ || \\"",
              "start": Position {
                "character": 10,
                "line": 26,
              },
              "type": "StringLiteral",
              "value": "\\\\\\\\ || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 26,
            },
            "start": Position {
              "character": 20,
              "line": 26,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 26,
              },
              "raw": "\\" \\\\\\\\|| \\"",
              "start": Position {
                "character": 20,
                "line": 26,
              },
              "type": "StringLiteral",
              "value": " \\\\\\\\|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 26,
            },
            "start": Position {
              "character": 30,
              "line": 26,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 26,
              },
              "raw": "\\"  \\\\\\\\| \\"",
              "start": Position {
                "character": 30,
                "line": 26,
              },
              "type": "StringLiteral",
              "value": "  \\\\\\\\| ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 26,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 26,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 26,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 26,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 26,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 26,
          },
          "name": "v",
          "start": Position {
            "character": 5,
            "line": 26,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 26,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 48,
        "line": 27,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 48,
          "line": 27,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 21,
              "line": 27,
            },
            "start": Position {
              "character": 10,
              "line": 27,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 21,
                "line": 27,
              },
              "raw": "\\"\\\\\\\\ |\\\\\\\\ | \\"",
              "start": Position {
                "character": 10,
                "line": 27,
              },
              "type": "StringLiteral",
              "value": "\\\\\\\\ |\\\\\\\\ | ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 34,
              "line": 27,
            },
            "start": Position {
              "character": 23,
              "line": 27,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 34,
                "line": 27,
              },
              "raw": "\\" \\\\\\\\| \\\\\\\\| \\"",
              "start": Position {
                "character": 23,
                "line": 27,
              },
              "type": "StringLiteral",
              "value": " \\\\\\\\| \\\\\\\\| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 47,
              "line": 27,
            },
            "start": Position {
              "character": 36,
              "line": 27,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 47,
                "line": 27,
              },
              "raw": "\\"  \\\\\\\\  \\\\\\\\ \\"",
              "start": Position {
                "character": 36,
                "line": 27,
              },
              "type": "StringLiteral",
              "value": "  \\\\\\\\  \\\\\\\\ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 27,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 27,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 27,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 27,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 27,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 27,
          },
          "name": "w",
          "start": Position {
            "character": 5,
            "line": 27,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 27,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 28,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 28,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 28,
            },
            "start": Position {
              "character": 10,
              "line": 28,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 28,
              },
              "raw": "\\"\\\\\\\\  / \\"",
              "start": Position {
                "character": 10,
                "line": 28,
              },
              "type": "StringLiteral",
              "value": "\\\\\\\\  / ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 28,
            },
            "start": Position {
              "character": 20,
              "line": 28,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 28,
              },
              "raw": "\\" \\\\\\\\/  \\"",
              "start": Position {
                "character": 20,
                "line": 28,
              },
              "type": "StringLiteral",
              "value": " \\\\\\\\/  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 28,
            },
            "start": Position {
              "character": 30,
              "line": 28,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 28,
              },
              "raw": "\\" //\\\\  \\"",
              "start": Position {
                "character": 30,
                "line": 28,
              },
              "type": "StringLiteral",
              "value": " //\\\\  ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 28,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 28,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 28,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 28,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 28,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 28,
          },
          "name": "x",
          "start": Position {
            "character": 5,
            "line": 28,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 28,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 42,
        "line": 29,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 42,
          "line": 29,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 19,
              "line": 29,
            },
            "start": Position {
              "character": 10,
              "line": 29,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 29,
              },
              "raw": "\\"\\\\\\\\  // \\"",
              "start": Position {
                "character": 10,
                "line": 29,
              },
              "type": "StringLiteral",
              "value": "\\\\\\\\  // ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 30,
              "line": 29,
            },
            "start": Position {
              "character": 21,
              "line": 29,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 30,
                "line": 29,
              },
              "raw": "\\" \\\\\\\\//  \\"",
              "start": Position {
                "character": 21,
                "line": 29,
              },
              "type": "StringLiteral",
              "value": " \\\\\\\\//  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 41,
              "line": 29,
            },
            "start": Position {
              "character": 32,
              "line": 29,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 41,
                "line": 29,
              },
              "raw": "\\"  ||   \\"",
              "start": Position {
                "character": 32,
                "line": 29,
              },
              "type": "StringLiteral",
              "value": "  ||   ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 29,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 29,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 29,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 29,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 29,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 29,
          },
          "name": "y",
          "start": Position {
            "character": 5,
            "line": 29,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 29,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 33,
        "line": 30,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 33,
          "line": 30,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 16,
              "line": 30,
            },
            "start": Position {
              "character": 10,
              "line": 30,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 16,
                "line": 30,
              },
              "raw": "\\"¯// \\"",
              "start": Position {
                "character": 10,
                "line": 30,
              },
              "type": "StringLiteral",
              "value": "¯// ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 24,
              "line": 30,
            },
            "start": Position {
              "character": 18,
              "line": 30,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 24,
                "line": 30,
              },
              "raw": "\\"//  \\"",
              "start": Position {
                "character": 18,
                "line": 30,
              },
              "type": "StringLiteral",
              "value": "//  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 32,
              "line": 30,
            },
            "start": Position {
              "character": 26,
              "line": 30,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 32,
                "line": 30,
              },
              "raw": "\\"||_ \\"",
              "start": Position {
                "character": 26,
                "line": 30,
              },
              "type": "StringLiteral",
              "value": "||_ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 30,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 30,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 30,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 30,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 30,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 30,
          },
          "name": "z",
          "start": Position {
            "character": 5,
            "line": 30,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 30,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 42,
        "line": 31,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 42,
          "line": 31,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 21,
              "line": 31,
            },
            "start": Position {
              "character": 13,
              "line": 31,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 21,
                "line": 31,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 13,
                "line": 31,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 31,
              "line": 31,
            },
            "start": Position {
              "character": 23,
              "line": 31,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 31,
                "line": 31,
              },
              "raw": "\\"||x|| \\"",
              "start": Position {
                "character": 23,
                "line": 31,
              },
              "type": "StringLiteral",
              "value": "||x|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 41,
              "line": 31,
            },
            "start": Position {
              "character": 33,
              "line": 31,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 41,
                "line": 31,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 33,
                "line": 31,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 31,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 31,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 31,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 31,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 31,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 31,
          },
          "raw": "\\"0\\"",
          "start": Position {
            "character": 5,
            "line": 31,
          },
          "type": "StringLiteral",
          "value": "0",
        },
        "start": Position {
          "character": 5,
          "line": 31,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 36,
        "line": 32,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 36,
          "line": 32,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 19,
              "line": 32,
            },
            "start": Position {
              "character": 13,
              "line": 32,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 32,
              },
              "raw": "\\"'|| \\"",
              "start": Position {
                "character": 13,
                "line": 32,
              },
              "type": "StringLiteral",
              "value": "'|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 27,
              "line": 32,
            },
            "start": Position {
              "character": 21,
              "line": 32,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 27,
                "line": 32,
              },
              "raw": "\\" || \\"",
              "start": Position {
                "character": 21,
                "line": 32,
              },
              "type": "StringLiteral",
              "value": " || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 35,
              "line": 32,
            },
            "start": Position {
              "character": 29,
              "line": 32,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 35,
                "line": 32,
              },
              "raw": "\\" || \\"",
              "start": Position {
                "character": 29,
                "line": 32,
              },
              "type": "StringLiteral",
              "value": " || ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 32,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 32,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 32,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 32,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 32,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 32,
          },
          "raw": "\\"1\\"",
          "start": Position {
            "character": 5,
            "line": 32,
          },
          "type": "StringLiteral",
          "value": "1",
        },
        "start": Position {
          "character": 5,
          "line": 32,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 33,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 33,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 20,
              "line": 33,
            },
            "start": Position {
              "character": 13,
              "line": 33,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 33,
              },
              "raw": "\\"¯¯|| \\"",
              "start": Position {
                "character": 13,
                "line": 33,
              },
              "type": "StringLiteral",
              "value": "¯¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 29,
              "line": 33,
            },
            "start": Position {
              "character": 22,
              "line": 33,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 29,
                "line": 33,
              },
              "raw": "\\"||¯  \\"",
              "start": Position {
                "character": 22,
                "line": 33,
              },
              "type": "StringLiteral",
              "value": "||¯  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 33,
            },
            "start": Position {
              "character": 31,
              "line": 33,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 33,
              },
              "raw": "\\"||_  \\"",
              "start": Position {
                "character": 31,
                "line": 33,
              },
              "type": "StringLiteral",
              "value": "||_  ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 33,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 33,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 33,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 33,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 33,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 33,
          },
          "raw": "\\"2\\"",
          "start": Position {
            "character": 5,
            "line": 33,
          },
          "type": "StringLiteral",
          "value": "2",
        },
        "start": Position {
          "character": 5,
          "line": 33,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 36,
        "line": 34,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 36,
          "line": 34,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 19,
              "line": 34,
            },
            "start": Position {
              "character": 13,
              "line": 34,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 34,
              },
              "raw": "\\"¯|| \\"",
              "start": Position {
                "character": 13,
                "line": 34,
              },
              "type": "StringLiteral",
              "value": "¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 27,
              "line": 34,
            },
            "start": Position {
              "character": 21,
              "line": 34,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 27,
                "line": 34,
              },
              "raw": "\\"-|| \\"",
              "start": Position {
                "character": 21,
                "line": 34,
              },
              "type": "StringLiteral",
              "value": "-|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 35,
              "line": 34,
            },
            "start": Position {
              "character": 29,
              "line": 34,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 35,
                "line": 34,
              },
              "raw": "\\"_|| \\"",
              "start": Position {
                "character": 29,
                "line": 34,
              },
              "type": "StringLiteral",
              "value": "_|| ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 34,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 34,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 34,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 34,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 34,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 34,
          },
          "raw": "\\"3\\"",
          "start": Position {
            "character": 5,
            "line": 34,
          },
          "type": "StringLiteral",
          "value": "3",
        },
        "start": Position {
          "character": 5,
          "line": 34,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 35,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 35,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 20,
              "line": 35,
            },
            "start": Position {
              "character": 13,
              "line": 35,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 35,
              },
              "raw": "\\" /|| \\"",
              "start": Position {
                "character": 13,
                "line": 35,
              },
              "type": "StringLiteral",
              "value": " /|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 29,
              "line": 35,
            },
            "start": Position {
              "character": 22,
              "line": 35,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 29,
                "line": 35,
              },
              "raw": "\\"/_|| \\"",
              "start": Position {
                "character": 22,
                "line": 35,
              },
              "type": "StringLiteral",
              "value": "/_|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 35,
            },
            "start": Position {
              "character": 31,
              "line": 35,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 35,
              },
              "raw": "\\"  || \\"",
              "start": Position {
                "character": 31,
                "line": 35,
              },
              "type": "StringLiteral",
              "value": "  || ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 35,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 35,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 35,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 35,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 35,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 35,
          },
          "raw": "\\"4\\"",
          "start": Position {
            "character": 5,
            "line": 35,
          },
          "type": "StringLiteral",
          "value": "4",
        },
        "start": Position {
          "character": 5,
          "line": 35,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 36,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 36,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 20,
              "line": 36,
            },
            "start": Position {
              "character": 13,
              "line": 36,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 36,
              },
              "raw": "\\"||¯¯ \\"",
              "start": Position {
                "character": 13,
                "line": 36,
              },
              "type": "StringLiteral",
              "value": "||¯¯ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 29,
              "line": 36,
            },
            "start": Position {
              "character": 22,
              "line": 36,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 29,
                "line": 36,
              },
              "raw": "\\" ¯|| \\"",
              "start": Position {
                "character": 22,
                "line": 36,
              },
              "type": "StringLiteral",
              "value": " ¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 36,
            },
            "start": Position {
              "character": 31,
              "line": 36,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 36,
              },
              "raw": "\\" _|| \\"",
              "start": Position {
                "character": 31,
                "line": 36,
              },
              "type": "StringLiteral",
              "value": " _|| ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 36,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 36,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 36,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 36,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 36,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 36,
          },
          "raw": "\\"5\\"",
          "start": Position {
            "character": 5,
            "line": 36,
          },
          "type": "StringLiteral",
          "value": "5",
        },
        "start": Position {
          "character": 5,
          "line": 36,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 42,
        "line": 37,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 42,
          "line": 37,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 21,
              "line": 37,
            },
            "start": Position {
              "character": 13,
              "line": 37,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 21,
                "line": 37,
              },
              "raw": "\\"||¯¯  \\"",
              "start": Position {
                "character": 13,
                "line": 37,
              },
              "type": "StringLiteral",
              "value": "||¯¯  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 31,
              "line": 37,
            },
            "start": Position {
              "character": 23,
              "line": 37,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 31,
                "line": 37,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 23,
                "line": 37,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 41,
              "line": 37,
            },
            "start": Position {
              "character": 33,
              "line": 37,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 41,
                "line": 37,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 33,
                "line": 37,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 37,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 37,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 37,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 37,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 37,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 37,
          },
          "raw": "\\"6\\"",
          "start": Position {
            "character": 5,
            "line": 37,
          },
          "type": "StringLiteral",
          "value": "6",
        },
        "start": Position {
          "character": 5,
          "line": 37,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 38,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 38,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 20,
              "line": 38,
            },
            "start": Position {
              "character": 13,
              "line": 38,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 38,
              },
              "raw": "\\"¯¯// \\"",
              "start": Position {
                "character": 13,
                "line": 38,
              },
              "type": "StringLiteral",
              "value": "¯¯// ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 29,
              "line": 38,
            },
            "start": Position {
              "character": 22,
              "line": 38,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 29,
                "line": 38,
              },
              "raw": "\\" //  \\"",
              "start": Position {
                "character": 22,
                "line": 38,
              },
              "type": "StringLiteral",
              "value": " //  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 38,
            },
            "start": Position {
              "character": 31,
              "line": 38,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 38,
              },
              "raw": "\\"//   \\"",
              "start": Position {
                "character": 31,
                "line": 38,
              },
              "type": "StringLiteral",
              "value": "//   ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 38,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 38,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 38,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 38,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 38,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 38,
          },
          "raw": "\\"7\\"",
          "start": Position {
            "character": 5,
            "line": 38,
          },
          "type": "StringLiteral",
          "value": "7",
        },
        "start": Position {
          "character": 5,
          "line": 38,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 42,
        "line": 39,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 42,
          "line": 39,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 21,
              "line": 39,
            },
            "start": Position {
              "character": 13,
              "line": 39,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 21,
                "line": 39,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 13,
                "line": 39,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 31,
              "line": 39,
            },
            "start": Position {
              "character": 23,
              "line": 39,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 31,
                "line": 39,
              },
              "raw": "\\"||-|| \\"",
              "start": Position {
                "character": 23,
                "line": 39,
              },
              "type": "StringLiteral",
              "value": "||-|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 41,
              "line": 39,
            },
            "start": Position {
              "character": 33,
              "line": 39,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 41,
                "line": 39,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 33,
                "line": 39,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 39,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 39,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 39,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 39,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 39,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 39,
          },
          "raw": "\\"8\\"",
          "start": Position {
            "character": 5,
            "line": 39,
          },
          "type": "StringLiteral",
          "value": "8",
        },
        "start": Position {
          "character": 5,
          "line": 39,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 42,
        "line": 40,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 42,
          "line": 40,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 21,
              "line": 40,
            },
            "start": Position {
              "character": 13,
              "line": 40,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 21,
                "line": 40,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 13,
                "line": 40,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 31,
              "line": 40,
            },
            "start": Position {
              "character": 23,
              "line": 40,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 31,
                "line": 40,
              },
              "raw": "\\"  ¯|| \\"",
              "start": Position {
                "character": 23,
                "line": 40,
              },
              "type": "StringLiteral",
              "value": "  ¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 41,
              "line": 40,
            },
            "start": Position {
              "character": 33,
              "line": 40,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 41,
                "line": 40,
              },
              "raw": "\\"  //  \\"",
              "start": Position {
                "character": 33,
                "line": 40,
              },
              "type": "StringLiteral",
              "value": "  //  ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 40,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 40,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 40,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 40,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 40,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 40,
          },
          "raw": "\\"9\\"",
          "start": Position {
            "character": 5,
            "line": 40,
          },
          "type": "StringLiteral",
          "value": "9",
        },
        "start": Position {
          "character": 5,
          "line": 40,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 30,
        "line": 41,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 30,
          "line": 41,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 17,
              "line": 41,
            },
            "start": Position {
              "character": 13,
              "line": 41,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 17,
                "line": 41,
              },
              "raw": "\\"  \\"",
              "start": Position {
                "character": 13,
                "line": 41,
              },
              "type": "StringLiteral",
              "value": "  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 23,
              "line": 41,
            },
            "start": Position {
              "character": 19,
              "line": 41,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 23,
                "line": 41,
              },
              "raw": "\\"  \\"",
              "start": Position {
                "character": 19,
                "line": 41,
              },
              "type": "StringLiteral",
              "value": "  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 29,
              "line": 41,
            },
            "start": Position {
              "character": 25,
              "line": 41,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 29,
                "line": 41,
              },
              "raw": "\\"  \\"",
              "start": Position {
                "character": 25,
                "line": 41,
              },
              "type": "StringLiteral",
              "value": "  ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 41,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 41,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 41,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 41,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 41,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 41,
          },
          "raw": "\\" \\"",
          "start": Position {
            "character": 5,
            "line": 41,
          },
          "type": "StringLiteral",
          "value": " ",
        },
        "start": Position {
          "character": 5,
          "line": 41,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 19,
        "line": 43,
      },
      "init": ASTIdentifier {
        "end": Position {
          "character": 19,
          "line": 43,
        },
        "name": "map",
        "start": Position {
          "character": 16,
          "line": 43,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 1,
        "line": 43,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 9,
            "line": 43,
          },
          "name": "AsciiGen",
          "start": Position {
            "character": 1,
            "line": 43,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 15,
          "line": 43,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 43,
          },
          "name": "MAP",
          "start": Position {
            "character": 10,
            "line": 43,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 9,
          "line": 43,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 69,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 21,
              "line": 46,
            },
            "init": ASTListConstructorExpression {
              "end": Position {
                "character": 21,
                "line": 46,
              },
              "fields": Array [
                ASTListValue {
                  "end": Position {
                    "character": 12,
                    "line": 46,
                  },
                  "start": Position {
                    "character": 10,
                    "line": 46,
                  },
                  "type": "ListValue",
                  "value": ASTListConstructorExpression {
                    "end": Position {
                      "character": 12,
                      "line": 46,
                    },
                    "fields": Array [],
                    "start": Position {
                      "character": 10,
                      "line": 46,
                    },
                    "type": "ListConstructorExpression",
                  },
                },
                ASTListValue {
                  "end": Position {
                    "character": 16,
                    "line": 46,
                  },
                  "start": Position {
                    "character": 14,
                    "line": 46,
                  },
                  "type": "ListValue",
                  "value": ASTListConstructorExpression {
                    "end": Position {
                      "character": 16,
                      "line": 46,
                    },
                    "fields": Array [],
                    "start": Position {
                      "character": 14,
                      "line": 46,
                    },
                    "type": "ListConstructorExpression",
                  },
                },
                ASTListValue {
                  "end": Position {
                    "character": 20,
                    "line": 46,
                  },
                  "start": Position {
                    "character": 18,
                    "line": 46,
                  },
                  "type": "ListValue",
                  "value": ASTListConstructorExpression {
                    "end": Position {
                      "character": 20,
                      "line": 46,
                    },
                    "fields": Array [],
                    "start": Position {
                      "character": 18,
                      "line": 46,
                    },
                    "type": "ListConstructorExpression",
                  },
                },
              ],
              "start": Position {
                "character": 9,
                "line": 46,
              },
              "type": "ListConstructorExpression",
            },
            "start": Position {
              "character": 5,
              "line": 46,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 6,
                "line": 46,
              },
              "name": "r",
              "start": Position {
                "character": 5,
                "line": 46,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 21,
              "line": 47,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 17,
                  "line": 47,
                },
                "name": "self",
                "start": Position {
                  "character": 13,
                  "line": 47,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 21,
                "line": 47,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 21,
                  "line": 47,
                },
                "name": "MAP",
                "start": Position {
                  "character": 18,
                  "line": 47,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 17,
                "line": 47,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 47,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 47,
              },
              "name": "signs",
              "start": Position {
                "character": 5,
                "line": 47,
              },
              "type": "Identifier",
            },
          },
          ASTForGenericStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 26,
                  "line": 50,
                },
                "init": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 20,
                      "line": 50,
                    },
                    "name": "char",
                    "start": Position {
                      "character": 16,
                      "line": 50,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 26,
                    "line": 50,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 26,
                      "line": 50,
                    },
                    "name": "lower",
                    "start": Position {
                      "character": 21,
                      "line": 50,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 20,
                    "line": 50,
                  },
                  "type": "MemberExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 50,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 13,
                    "line": 50,
                  },
                  "name": "char",
                  "start": Position {
                    "character": 9,
                    "line": 50,
                  },
                  "type": "Identifier",
                },
              },
              ASTIfStatement {
                "clauses": Array [
                  ASTIfClause {
                    "body": Array [
                      ASTCallStatement {
                        "end": Position {
                          "character": 38,
                          "line": 52,
                        },
                        "expression": ASTCallExpression {
                          "arguments": Array [
                            ASTIndexExpression {
                              "base": ASTIndexExpression {
                                "base": ASTIdentifier {
                                  "end": Position {
                                    "character": 28,
                                    "line": 52,
                                  },
                                  "name": "signs",
                                  "start": Position {
                                    "character": 23,
                                    "line": 52,
                                  },
                                  "type": "Identifier",
                                },
                                "end": Position {
                                  "character": 35,
                                  "line": 52,
                                },
                                "index": ASTIdentifier {
                                  "end": Position {
                                    "character": 33,
                                    "line": 52,
                                  },
                                  "name": "char",
                                  "start": Position {
                                    "character": 29,
                                    "line": 52,
                                  },
                                  "type": "Identifier",
                                },
                                "start": Position {
                                  "character": 29,
                                  "line": 52,
                                },
                                "type": "IndexExpression",
                              },
                              "end": Position {
                                "character": 38,
                                "line": 52,
                              },
                              "index": ASTLiteral {
                                "end": Position {
                                  "character": 36,
                                  "line": 52,
                                },
                                "raw": "0",
                                "start": Position {
                                  "character": 35,
                                  "line": 52,
                                },
                                "type": "NumericLiteral",
                                "value": 0,
                              },
                              "start": Position {
                                "character": 35,
                                "line": 52,
                              },
                              "type": "IndexExpression",
                            },
                          ],
                          "base": ASTMemberExpression {
                            "base": ASTIndexExpression {
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 14,
                                  "line": 52,
                                },
                                "name": "r",
                                "start": Position {
                                  "character": 13,
                                  "line": 52,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 18,
                                "line": 52,
                              },
                              "index": ASTLiteral {
                                "end": Position {
                                  "character": 16,
                                  "line": 52,
                                },
                                "raw": "0",
                                "start": Position {
                                  "character": 15,
                                  "line": 52,
                                },
                                "type": "NumericLiteral",
                                "value": 0,
                              },
                              "start": Position {
                                "character": 15,
                                "line": 52,
                              },
                              "type": "IndexExpression",
                            },
                            "end": Position {
                              "character": 23,
                              "line": 52,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 22,
                                "line": 52,
                              },
                              "name": "push",
                              "start": Position {
                                "character": 18,
                                "line": 52,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 17,
                              "line": 52,
                            },
                            "type": "MemberExpression",
                          },
                          "end": Position {
                            "character": 38,
                            "line": 52,
                          },
                          "start": Position {
                            "character": 22,
                            "line": 52,
                          },
                          "type": "CallExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 52,
                        },
                        "type": "CallStatement",
                      },
                      ASTCallStatement {
                        "end": Position {
                          "character": 38,
                          "line": 53,
                        },
                        "expression": ASTCallExpression {
                          "arguments": Array [
                            ASTIndexExpression {
                              "base": ASTIndexExpression {
                                "base": ASTIdentifier {
                                  "end": Position {
                                    "character": 28,
                                    "line": 53,
                                  },
                                  "name": "signs",
                                  "start": Position {
                                    "character": 23,
                                    "line": 53,
                                  },
                                  "type": "Identifier",
                                },
                                "end": Position {
                                  "character": 35,
                                  "line": 53,
                                },
                                "index": ASTIdentifier {
                                  "end": Position {
                                    "character": 33,
                                    "line": 53,
                                  },
                                  "name": "char",
                                  "start": Position {
                                    "character": 29,
                                    "line": 53,
                                  },
                                  "type": "Identifier",
                                },
                                "start": Position {
                                  "character": 29,
                                  "line": 53,
                                },
                                "type": "IndexExpression",
                              },
                              "end": Position {
                                "character": 38,
                                "line": 53,
                              },
                              "index": ASTLiteral {
                                "end": Position {
                                  "character": 36,
                                  "line": 53,
                                },
                                "raw": "1",
                                "start": Position {
                                  "character": 35,
                                  "line": 53,
                                },
                                "type": "NumericLiteral",
                                "value": 1,
                              },
                              "start": Position {
                                "character": 35,
                                "line": 53,
                              },
                              "type": "IndexExpression",
                            },
                          ],
                          "base": ASTMemberExpression {
                            "base": ASTIndexExpression {
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 14,
                                  "line": 53,
                                },
                                "name": "r",
                                "start": Position {
                                  "character": 13,
                                  "line": 53,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 18,
                                "line": 53,
                              },
                              "index": ASTLiteral {
                                "end": Position {
                                  "character": 16,
                                  "line": 53,
                                },
                                "raw": "1",
                                "start": Position {
                                  "character": 15,
                                  "line": 53,
                                },
                                "type": "NumericLiteral",
                                "value": 1,
                              },
                              "start": Position {
                                "character": 15,
                                "line": 53,
                              },
                              "type": "IndexExpression",
                            },
                            "end": Position {
                              "character": 23,
                              "line": 53,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 22,
                                "line": 53,
                              },
                              "name": "push",
                              "start": Position {
                                "character": 18,
                                "line": 53,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 17,
                              "line": 53,
                            },
                            "type": "MemberExpression",
                          },
                          "end": Position {
                            "character": 38,
                            "line": 53,
                          },
                          "start": Position {
                            "character": 22,
                            "line": 53,
                          },
                          "type": "CallExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 53,
                        },
                        "type": "CallStatement",
                      },
                      ASTCallStatement {
                        "end": Position {
                          "character": 38,
                          "line": 54,
                        },
                        "expression": ASTCallExpression {
                          "arguments": Array [
                            ASTIndexExpression {
                              "base": ASTIndexExpression {
                                "base": ASTIdentifier {
                                  "end": Position {
                                    "character": 28,
                                    "line": 54,
                                  },
                                  "name": "signs",
                                  "start": Position {
                                    "character": 23,
                                    "line": 54,
                                  },
                                  "type": "Identifier",
                                },
                                "end": Position {
                                  "character": 35,
                                  "line": 54,
                                },
                                "index": ASTIdentifier {
                                  "end": Position {
                                    "character": 33,
                                    "line": 54,
                                  },
                                  "name": "char",
                                  "start": Position {
                                    "character": 29,
                                    "line": 54,
                                  },
                                  "type": "Identifier",
                                },
                                "start": Position {
                                  "character": 29,
                                  "line": 54,
                                },
                                "type": "IndexExpression",
                              },
                              "end": Position {
                                "character": 38,
                                "line": 54,
                              },
                              "index": ASTLiteral {
                                "end": Position {
                                  "character": 36,
                                  "line": 54,
                                },
                                "raw": "2",
                                "start": Position {
                                  "character": 35,
                                  "line": 54,
                                },
                                "type": "NumericLiteral",
                                "value": 2,
                              },
                              "start": Position {
                                "character": 35,
                                "line": 54,
                              },
                              "type": "IndexExpression",
                            },
                          ],
                          "base": ASTMemberExpression {
                            "base": ASTIndexExpression {
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 14,
                                  "line": 54,
                                },
                                "name": "r",
                                "start": Position {
                                  "character": 13,
                                  "line": 54,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 18,
                                "line": 54,
                              },
                              "index": ASTLiteral {
                                "end": Position {
                                  "character": 16,
                                  "line": 54,
                                },
                                "raw": "2",
                                "start": Position {
                                  "character": 15,
                                  "line": 54,
                                },
                                "type": "NumericLiteral",
                                "value": 2,
                              },
                              "start": Position {
                                "character": 15,
                                "line": 54,
                              },
                              "type": "IndexExpression",
                            },
                            "end": Position {
                              "character": 23,
                              "line": 54,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 22,
                                "line": 54,
                              },
                              "name": "push",
                              "start": Position {
                                "character": 18,
                                "line": 54,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 17,
                              "line": 54,
                            },
                            "type": "MemberExpression",
                          },
                          "end": Position {
                            "character": 38,
                            "line": 54,
                          },
                          "start": Position {
                            "character": 22,
                            "line": 54,
                          },
                          "type": "CallExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 54,
                        },
                        "type": "CallStatement",
                      },
                    ],
                    "condition": ASTCallExpression {
                      "arguments": Array [
                        ASTIdentifier {
                          "end": Position {
                            "character": 32,
                            "line": 51,
                          },
                          "name": "char",
                          "start": Position {
                            "character": 28,
                            "line": 51,
                          },
                          "type": "Identifier",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 18,
                            "line": 51,
                          },
                          "name": "signs",
                          "start": Position {
                            "character": 13,
                            "line": 51,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 28,
                          "line": 51,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 27,
                            "line": 51,
                          },
                          "name": "hasIndex",
                          "start": Position {
                            "character": 19,
                            "line": 51,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 18,
                          "line": 51,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 34,
                        "line": 51,
                      },
                      "start": Position {
                        "character": 27,
                        "line": 51,
                      },
                      "type": "CallExpression",
                    },
                    "end": Position {
                      "character": 15,
                      "line": 55,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 51,
                    },
                    "type": "IfClause",
                  },
                ],
                "end": Position {
                  "character": 15,
                  "line": 55,
                },
                "start": Position {
                  "character": 9,
                  "line": 51,
                },
                "type": "IfStatement",
              },
            ],
            "end": Position {
              "character": 12,
              "line": 56,
            },
            "iterator": ASTIdentifier {
              "end": Position {
                "character": 20,
                "line": 49,
              },
              "name": "str",
              "start": Position {
                "character": 17,
                "line": 49,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 49,
            },
            "type": "ForGenericStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 49,
              },
              "name": "char",
              "start": Position {
                "character": 9,
                "line": 49,
              },
              "type": "Identifier",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 65,
                      "line": 59,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 65,
                        "line": 59,
                      },
                      "left": ASTEvaluationExpression {
                        "end": Position {
                          "character": 52,
                          "line": 59,
                        },
                        "left": ASTListConstructorExpression {
                          "end": Position {
                            "character": 44,
                            "line": 59,
                          },
                          "fields": Array [
                            ASTListValue {
                              "end": Position {
                                "character": 43,
                                "line": 59,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 59,
                              },
                              "type": "ListValue",
                              "value": ASTEvaluationExpression {
                                "end": Position {
                                  "character": 43,
                                  "line": 59,
                                },
                                "left": ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 38,
                                    "line": 59,
                                  },
                                  "left": ASTLiteral {
                                    "end": Position {
                                      "character": 27,
                                      "line": 59,
                                    },
                                    "raw": "\\"<color=#\\"",
                                    "start": Position {
                                      "character": 17,
                                      "line": 59,
                                    },
                                    "type": "StringLiteral",
                                    "value": "<color=#",
                                  },
                                  "operator": "+",
                                  "right": ASTIdentifier {
                                    "end": Position {
                                      "character": 36,
                                      "line": 59,
                                    },
                                    "name": "colors",
                                    "start": Position {
                                      "character": 30,
                                      "line": 59,
                                    },
                                    "type": "Identifier",
                                  },
                                  "start": Position {
                                    "character": 28,
                                    "line": 59,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "operator": "+",
                                "right": ASTLiteral {
                                  "end": Position {
                                    "character": 42,
                                    "line": 59,
                                  },
                                  "raw": "\\">\\"",
                                  "start": Position {
                                    "character": 39,
                                    "line": 59,
                                  },
                                  "type": "StringLiteral",
                                  "value": ">",
                                },
                                "start": Position {
                                  "character": 28,
                                  "line": 59,
                                },
                                "type": "BinaryExpression",
                              },
                            },
                          ],
                          "start": Position {
                            "character": 16,
                            "line": 59,
                          },
                          "type": "ListConstructorExpression",
                        },
                        "operator": "+",
                        "right": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 47,
                              "line": 59,
                            },
                            "name": "r",
                            "start": Position {
                              "character": 46,
                              "line": 59,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 52,
                            "line": 59,
                          },
                          "index": ASTLiteral {
                            "end": Position {
                              "character": 49,
                              "line": 59,
                            },
                            "raw": "0",
                            "start": Position {
                              "character": 48,
                              "line": 59,
                            },
                            "type": "NumericLiteral",
                            "value": 0,
                          },
                          "start": Position {
                            "character": 48,
                            "line": 59,
                          },
                          "type": "IndexExpression",
                        },
                        "start": Position {
                          "character": 44,
                          "line": 59,
                        },
                        "type": "BinaryExpression",
                      },
                      "operator": "+",
                      "right": ASTListConstructorExpression {
                        "end": Position {
                          "character": 65,
                          "line": 59,
                        },
                        "fields": Array [
                          ASTListValue {
                            "end": Position {
                              "character": 64,
                              "line": 59,
                            },
                            "start": Position {
                              "character": 54,
                              "line": 59,
                            },
                            "type": "ListValue",
                            "value": ASTLiteral {
                              "end": Position {
                                "character": 64,
                                "line": 59,
                              },
                              "raw": "\\"</color>\\"",
                              "start": Position {
                                "character": 54,
                                "line": 59,
                              },
                              "type": "StringLiteral",
                              "value": "</color>",
                            },
                          },
                        ],
                        "start": Position {
                          "character": 53,
                          "line": 59,
                        },
                        "type": "ListConstructorExpression",
                      },
                      "start": Position {
                        "character": 44,
                        "line": 59,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 59,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 59,
                        },
                        "name": "r",
                        "start": Position {
                          "character": 9,
                          "line": 59,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 15,
                        "line": 59,
                      },
                      "index": ASTLiteral {
                        "end": Position {
                          "character": 12,
                          "line": 59,
                        },
                        "raw": "0",
                        "start": Position {
                          "character": 11,
                          "line": 59,
                        },
                        "type": "NumericLiteral",
                        "value": 0,
                      },
                      "start": Position {
                        "character": 11,
                        "line": 59,
                      },
                      "type": "IndexExpression",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 65,
                      "line": 60,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 65,
                        "line": 60,
                      },
                      "left": ASTEvaluationExpression {
                        "end": Position {
                          "character": 52,
                          "line": 60,
                        },
                        "left": ASTListConstructorExpression {
                          "end": Position {
                            "character": 44,
                            "line": 60,
                          },
                          "fields": Array [
                            ASTListValue {
                              "end": Position {
                                "character": 43,
                                "line": 60,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 60,
                              },
                              "type": "ListValue",
                              "value": ASTEvaluationExpression {
                                "end": Position {
                                  "character": 43,
                                  "line": 60,
                                },
                                "left": ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 38,
                                    "line": 60,
                                  },
                                  "left": ASTLiteral {
                                    "end": Position {
                                      "character": 27,
                                      "line": 60,
                                    },
                                    "raw": "\\"<color=#\\"",
                                    "start": Position {
                                      "character": 17,
                                      "line": 60,
                                    },
                                    "type": "StringLiteral",
                                    "value": "<color=#",
                                  },
                                  "operator": "+",
                                  "right": ASTIdentifier {
                                    "end": Position {
                                      "character": 36,
                                      "line": 60,
                                    },
                                    "name": "colors",
                                    "start": Position {
                                      "character": 30,
                                      "line": 60,
                                    },
                                    "type": "Identifier",
                                  },
                                  "start": Position {
                                    "character": 28,
                                    "line": 60,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "operator": "+",
                                "right": ASTLiteral {
                                  "end": Position {
                                    "character": 42,
                                    "line": 60,
                                  },
                                  "raw": "\\">\\"",
                                  "start": Position {
                                    "character": 39,
                                    "line": 60,
                                  },
                                  "type": "StringLiteral",
                                  "value": ">",
                                },
                                "start": Position {
                                  "character": 28,
                                  "line": 60,
                                },
                                "type": "BinaryExpression",
                              },
                            },
                          ],
                          "start": Position {
                            "character": 16,
                            "line": 60,
                          },
                          "type": "ListConstructorExpression",
                        },
                        "operator": "+",
                        "right": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 47,
                              "line": 60,
                            },
                            "name": "r",
                            "start": Position {
                              "character": 46,
                              "line": 60,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 52,
                            "line": 60,
                          },
                          "index": ASTLiteral {
                            "end": Position {
                              "character": 49,
                              "line": 60,
                            },
                            "raw": "1",
                            "start": Position {
                              "character": 48,
                              "line": 60,
                            },
                            "type": "NumericLiteral",
                            "value": 1,
                          },
                          "start": Position {
                            "character": 48,
                            "line": 60,
                          },
                          "type": "IndexExpression",
                        },
                        "start": Position {
                          "character": 44,
                          "line": 60,
                        },
                        "type": "BinaryExpression",
                      },
                      "operator": "+",
                      "right": ASTListConstructorExpression {
                        "end": Position {
                          "character": 65,
                          "line": 60,
                        },
                        "fields": Array [
                          ASTListValue {
                            "end": Position {
                              "character": 64,
                              "line": 60,
                            },
                            "start": Position {
                              "character": 54,
                              "line": 60,
                            },
                            "type": "ListValue",
                            "value": ASTLiteral {
                              "end": Position {
                                "character": 64,
                                "line": 60,
                              },
                              "raw": "\\"</color>\\"",
                              "start": Position {
                                "character": 54,
                                "line": 60,
                              },
                              "type": "StringLiteral",
                              "value": "</color>",
                            },
                          },
                        ],
                        "start": Position {
                          "character": 53,
                          "line": 60,
                        },
                        "type": "ListConstructorExpression",
                      },
                      "start": Position {
                        "character": 44,
                        "line": 60,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 60,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 60,
                        },
                        "name": "r",
                        "start": Position {
                          "character": 9,
                          "line": 60,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 15,
                        "line": 60,
                      },
                      "index": ASTLiteral {
                        "end": Position {
                          "character": 12,
                          "line": 60,
                        },
                        "raw": "1",
                        "start": Position {
                          "character": 11,
                          "line": 60,
                        },
                        "type": "NumericLiteral",
                        "value": 1,
                      },
                      "start": Position {
                        "character": 11,
                        "line": 60,
                      },
                      "type": "IndexExpression",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 65,
                      "line": 61,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 65,
                        "line": 61,
                      },
                      "left": ASTEvaluationExpression {
                        "end": Position {
                          "character": 52,
                          "line": 61,
                        },
                        "left": ASTListConstructorExpression {
                          "end": Position {
                            "character": 44,
                            "line": 61,
                          },
                          "fields": Array [
                            ASTListValue {
                              "end": Position {
                                "character": 43,
                                "line": 61,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 61,
                              },
                              "type": "ListValue",
                              "value": ASTEvaluationExpression {
                                "end": Position {
                                  "character": 43,
                                  "line": 61,
                                },
                                "left": ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 38,
                                    "line": 61,
                                  },
                                  "left": ASTLiteral {
                                    "end": Position {
                                      "character": 27,
                                      "line": 61,
                                    },
                                    "raw": "\\"<color=#\\"",
                                    "start": Position {
                                      "character": 17,
                                      "line": 61,
                                    },
                                    "type": "StringLiteral",
                                    "value": "<color=#",
                                  },
                                  "operator": "+",
                                  "right": ASTIdentifier {
                                    "end": Position {
                                      "character": 36,
                                      "line": 61,
                                    },
                                    "name": "colors",
                                    "start": Position {
                                      "character": 30,
                                      "line": 61,
                                    },
                                    "type": "Identifier",
                                  },
                                  "start": Position {
                                    "character": 28,
                                    "line": 61,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "operator": "+",
                                "right": ASTLiteral {
                                  "end": Position {
                                    "character": 42,
                                    "line": 61,
                                  },
                                  "raw": "\\">\\"",
                                  "start": Position {
                                    "character": 39,
                                    "line": 61,
                                  },
                                  "type": "StringLiteral",
                                  "value": ">",
                                },
                                "start": Position {
                                  "character": 28,
                                  "line": 61,
                                },
                                "type": "BinaryExpression",
                              },
                            },
                          ],
                          "start": Position {
                            "character": 16,
                            "line": 61,
                          },
                          "type": "ListConstructorExpression",
                        },
                        "operator": "+",
                        "right": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 47,
                              "line": 61,
                            },
                            "name": "r",
                            "start": Position {
                              "character": 46,
                              "line": 61,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 52,
                            "line": 61,
                          },
                          "index": ASTLiteral {
                            "end": Position {
                              "character": 49,
                              "line": 61,
                            },
                            "raw": "2",
                            "start": Position {
                              "character": 48,
                              "line": 61,
                            },
                            "type": "NumericLiteral",
                            "value": 2,
                          },
                          "start": Position {
                            "character": 48,
                            "line": 61,
                          },
                          "type": "IndexExpression",
                        },
                        "start": Position {
                          "character": 44,
                          "line": 61,
                        },
                        "type": "BinaryExpression",
                      },
                      "operator": "+",
                      "right": ASTListConstructorExpression {
                        "end": Position {
                          "character": 65,
                          "line": 61,
                        },
                        "fields": Array [
                          ASTListValue {
                            "end": Position {
                              "character": 64,
                              "line": 61,
                            },
                            "start": Position {
                              "character": 54,
                              "line": 61,
                            },
                            "type": "ListValue",
                            "value": ASTLiteral {
                              "end": Position {
                                "character": 64,
                                "line": 61,
                              },
                              "raw": "\\"</color>\\"",
                              "start": Position {
                                "character": 54,
                                "line": 61,
                              },
                              "type": "StringLiteral",
                              "value": "</color>",
                            },
                          },
                        ],
                        "start": Position {
                          "character": 53,
                          "line": 61,
                        },
                        "type": "ListConstructorExpression",
                      },
                      "start": Position {
                        "character": 44,
                        "line": 61,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 61,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 61,
                        },
                        "name": "r",
                        "start": Position {
                          "character": 9,
                          "line": 61,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 15,
                        "line": 61,
                      },
                      "index": ASTLiteral {
                        "end": Position {
                          "character": 12,
                          "line": 61,
                        },
                        "raw": "2",
                        "start": Position {
                          "character": 11,
                          "line": 61,
                        },
                        "type": "NumericLiteral",
                        "value": 2,
                      },
                      "start": Position {
                        "character": 11,
                        "line": 61,
                      },
                      "type": "IndexExpression",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 36,
                    "line": 58,
                  },
                  "left": ASTCallExpression {
                    "arguments": Array [
                      ASTIdentifier {
                        "end": Position {
                          "character": 22,
                          "line": 58,
                        },
                        "name": "colors",
                        "start": Position {
                          "character": 16,
                          "line": 58,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 58,
                      },
                      "name": "typeof",
                      "start": Position {
                        "character": 9,
                        "line": 58,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 26,
                      "line": 58,
                    },
                    "start": Position {
                      "character": 15,
                      "line": 58,
                    },
                    "type": "CallExpression",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 35,
                      "line": 58,
                    },
                    "raw": "\\"string\\"",
                    "start": Position {
                      "character": 27,
                      "line": 58,
                    },
                    "type": "StringLiteral",
                    "value": "string",
                  },
                  "start": Position {
                    "character": 24,
                    "line": 58,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 12,
                  "line": 62,
                },
                "start": Position {
                  "character": 5,
                  "line": 58,
                },
                "type": "IfClause",
              },
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 68,
                      "line": 63,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 68,
                        "line": 63,
                      },
                      "left": ASTEvaluationExpression {
                        "end": Position {
                          "character": 55,
                          "line": 63,
                        },
                        "left": ASTListConstructorExpression {
                          "end": Position {
                            "character": 47,
                            "line": 63,
                          },
                          "fields": Array [
                            ASTListValue {
                              "end": Position {
                                "character": 46,
                                "line": 63,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 63,
                              },
                              "type": "ListValue",
                              "value": ASTEvaluationExpression {
                                "end": Position {
                                  "character": 46,
                                  "line": 63,
                                },
                                "left": ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 41,
                                    "line": 63,
                                  },
                                  "left": ASTLiteral {
                                    "end": Position {
                                      "character": 27,
                                      "line": 63,
                                    },
                                    "raw": "\\"<color=#\\"",
                                    "start": Position {
                                      "character": 17,
                                      "line": 63,
                                    },
                                    "type": "StringLiteral",
                                    "value": "<color=#",
                                  },
                                  "operator": "+",
                                  "right": ASTIndexExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 36,
                                        "line": 63,
                                      },
                                      "name": "colors",
                                      "start": Position {
                                        "character": 30,
                                        "line": 63,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 41,
                                      "line": 63,
                                    },
                                    "index": ASTLiteral {
                                      "end": Position {
                                        "character": 38,
                                        "line": 63,
                                      },
                                      "raw": "0",
                                      "start": Position {
                                        "character": 37,
                                        "line": 63,
                                      },
                                      "type": "NumericLiteral",
                                      "value": 0,
                                    },
                                    "start": Position {
                                      "character": 37,
                                      "line": 63,
                                    },
                                    "type": "IndexExpression",
                                  },
                                  "start": Position {
                                    "character": 28,
                                    "line": 63,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "operator": "+",
                                "right": ASTLiteral {
                                  "end": Position {
                                    "character": 45,
                                    "line": 63,
                                  },
                                  "raw": "\\">\\"",
                                  "start": Position {
                                    "character": 42,
                                    "line": 63,
                                  },
                                  "type": "StringLiteral",
                                  "value": ">",
                                },
                                "start": Position {
                                  "character": 28,
                                  "line": 63,
                                },
                                "type": "BinaryExpression",
                              },
                            },
                          ],
                          "start": Position {
                            "character": 16,
                            "line": 63,
                          },
                          "type": "ListConstructorExpression",
                        },
                        "operator": "+",
                        "right": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 50,
                              "line": 63,
                            },
                            "name": "r",
                            "start": Position {
                              "character": 49,
                              "line": 63,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 55,
                            "line": 63,
                          },
                          "index": ASTLiteral {
                            "end": Position {
                              "character": 52,
                              "line": 63,
                            },
                            "raw": "0",
                            "start": Position {
                              "character": 51,
                              "line": 63,
                            },
                            "type": "NumericLiteral",
                            "value": 0,
                          },
                          "start": Position {
                            "character": 51,
                            "line": 63,
                          },
                          "type": "IndexExpression",
                        },
                        "start": Position {
                          "character": 47,
                          "line": 63,
                        },
                        "type": "BinaryExpression",
                      },
                      "operator": "+",
                      "right": ASTListConstructorExpression {
                        "end": Position {
                          "character": 68,
                          "line": 63,
                        },
                        "fields": Array [
                          ASTListValue {
                            "end": Position {
                              "character": 67,
                              "line": 63,
                            },
                            "start": Position {
                              "character": 57,
                              "line": 63,
                            },
                            "type": "ListValue",
                            "value": ASTLiteral {
                              "end": Position {
                                "character": 67,
                                "line": 63,
                              },
                              "raw": "\\"</color>\\"",
                              "start": Position {
                                "character": 57,
                                "line": 63,
                              },
                              "type": "StringLiteral",
                              "value": "</color>",
                            },
                          },
                        ],
                        "start": Position {
                          "character": 56,
                          "line": 63,
                        },
                        "type": "ListConstructorExpression",
                      },
                      "start": Position {
                        "character": 47,
                        "line": 63,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 63,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 63,
                        },
                        "name": "r",
                        "start": Position {
                          "character": 9,
                          "line": 63,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 15,
                        "line": 63,
                      },
                      "index": ASTLiteral {
                        "end": Position {
                          "character": 12,
                          "line": 63,
                        },
                        "raw": "0",
                        "start": Position {
                          "character": 11,
                          "line": 63,
                        },
                        "type": "NumericLiteral",
                        "value": 0,
                      },
                      "start": Position {
                        "character": 11,
                        "line": 63,
                      },
                      "type": "IndexExpression",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 68,
                      "line": 64,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 68,
                        "line": 64,
                      },
                      "left": ASTEvaluationExpression {
                        "end": Position {
                          "character": 55,
                          "line": 64,
                        },
                        "left": ASTListConstructorExpression {
                          "end": Position {
                            "character": 47,
                            "line": 64,
                          },
                          "fields": Array [
                            ASTListValue {
                              "end": Position {
                                "character": 46,
                                "line": 64,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 64,
                              },
                              "type": "ListValue",
                              "value": ASTEvaluationExpression {
                                "end": Position {
                                  "character": 46,
                                  "line": 64,
                                },
                                "left": ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 41,
                                    "line": 64,
                                  },
                                  "left": ASTLiteral {
                                    "end": Position {
                                      "character": 27,
                                      "line": 64,
                                    },
                                    "raw": "\\"<color=#\\"",
                                    "start": Position {
                                      "character": 17,
                                      "line": 64,
                                    },
                                    "type": "StringLiteral",
                                    "value": "<color=#",
                                  },
                                  "operator": "+",
                                  "right": ASTIndexExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 36,
                                        "line": 64,
                                      },
                                      "name": "colors",
                                      "start": Position {
                                        "character": 30,
                                        "line": 64,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 41,
                                      "line": 64,
                                    },
                                    "index": ASTLiteral {
                                      "end": Position {
                                        "character": 38,
                                        "line": 64,
                                      },
                                      "raw": "1",
                                      "start": Position {
                                        "character": 37,
                                        "line": 64,
                                      },
                                      "type": "NumericLiteral",
                                      "value": 1,
                                    },
                                    "start": Position {
                                      "character": 37,
                                      "line": 64,
                                    },
                                    "type": "IndexExpression",
                                  },
                                  "start": Position {
                                    "character": 28,
                                    "line": 64,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "operator": "+",
                                "right": ASTLiteral {
                                  "end": Position {
                                    "character": 45,
                                    "line": 64,
                                  },
                                  "raw": "\\">\\"",
                                  "start": Position {
                                    "character": 42,
                                    "line": 64,
                                  },
                                  "type": "StringLiteral",
                                  "value": ">",
                                },
                                "start": Position {
                                  "character": 28,
                                  "line": 64,
                                },
                                "type": "BinaryExpression",
                              },
                            },
                          ],
                          "start": Position {
                            "character": 16,
                            "line": 64,
                          },
                          "type": "ListConstructorExpression",
                        },
                        "operator": "+",
                        "right": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 50,
                              "line": 64,
                            },
                            "name": "r",
                            "start": Position {
                              "character": 49,
                              "line": 64,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 55,
                            "line": 64,
                          },
                          "index": ASTLiteral {
                            "end": Position {
                              "character": 52,
                              "line": 64,
                            },
                            "raw": "1",
                            "start": Position {
                              "character": 51,
                              "line": 64,
                            },
                            "type": "NumericLiteral",
                            "value": 1,
                          },
                          "start": Position {
                            "character": 51,
                            "line": 64,
                          },
                          "type": "IndexExpression",
                        },
                        "start": Position {
                          "character": 47,
                          "line": 64,
                        },
                        "type": "BinaryExpression",
                      },
                      "operator": "+",
                      "right": ASTListConstructorExpression {
                        "end": Position {
                          "character": 68,
                          "line": 64,
                        },
                        "fields": Array [
                          ASTListValue {
                            "end": Position {
                              "character": 67,
                              "line": 64,
                            },
                            "start": Position {
                              "character": 57,
                              "line": 64,
                            },
                            "type": "ListValue",
                            "value": ASTLiteral {
                              "end": Position {
                                "character": 67,
                                "line": 64,
                              },
                              "raw": "\\"</color>\\"",
                              "start": Position {
                                "character": 57,
                                "line": 64,
                              },
                              "type": "StringLiteral",
                              "value": "</color>",
                            },
                          },
                        ],
                        "start": Position {
                          "character": 56,
                          "line": 64,
                        },
                        "type": "ListConstructorExpression",
                      },
                      "start": Position {
                        "character": 47,
                        "line": 64,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 64,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 64,
                        },
                        "name": "r",
                        "start": Position {
                          "character": 9,
                          "line": 64,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 15,
                        "line": 64,
                      },
                      "index": ASTLiteral {
                        "end": Position {
                          "character": 12,
                          "line": 64,
                        },
                        "raw": "1",
                        "start": Position {
                          "character": 11,
                          "line": 64,
                        },
                        "type": "NumericLiteral",
                        "value": 1,
                      },
                      "start": Position {
                        "character": 11,
                        "line": 64,
                      },
                      "type": "IndexExpression",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 68,
                      "line": 65,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 68,
                        "line": 65,
                      },
                      "left": ASTEvaluationExpression {
                        "end": Position {
                          "character": 55,
                          "line": 65,
                        },
                        "left": ASTListConstructorExpression {
                          "end": Position {
                            "character": 47,
                            "line": 65,
                          },
                          "fields": Array [
                            ASTListValue {
                              "end": Position {
                                "character": 46,
                                "line": 65,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 65,
                              },
                              "type": "ListValue",
                              "value": ASTEvaluationExpression {
                                "end": Position {
                                  "character": 46,
                                  "line": 65,
                                },
                                "left": ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 41,
                                    "line": 65,
                                  },
                                  "left": ASTLiteral {
                                    "end": Position {
                                      "character": 27,
                                      "line": 65,
                                    },
                                    "raw": "\\"<color=#\\"",
                                    "start": Position {
                                      "character": 17,
                                      "line": 65,
                                    },
                                    "type": "StringLiteral",
                                    "value": "<color=#",
                                  },
                                  "operator": "+",
                                  "right": ASTIndexExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 36,
                                        "line": 65,
                                      },
                                      "name": "colors",
                                      "start": Position {
                                        "character": 30,
                                        "line": 65,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 41,
                                      "line": 65,
                                    },
                                    "index": ASTLiteral {
                                      "end": Position {
                                        "character": 38,
                                        "line": 65,
                                      },
                                      "raw": "2",
                                      "start": Position {
                                        "character": 37,
                                        "line": 65,
                                      },
                                      "type": "NumericLiteral",
                                      "value": 2,
                                    },
                                    "start": Position {
                                      "character": 37,
                                      "line": 65,
                                    },
                                    "type": "IndexExpression",
                                  },
                                  "start": Position {
                                    "character": 28,
                                    "line": 65,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "operator": "+",
                                "right": ASTLiteral {
                                  "end": Position {
                                    "character": 45,
                                    "line": 65,
                                  },
                                  "raw": "\\">\\"",
                                  "start": Position {
                                    "character": 42,
                                    "line": 65,
                                  },
                                  "type": "StringLiteral",
                                  "value": ">",
                                },
                                "start": Position {
                                  "character": 28,
                                  "line": 65,
                                },
                                "type": "BinaryExpression",
                              },
                            },
                          ],
                          "start": Position {
                            "character": 16,
                            "line": 65,
                          },
                          "type": "ListConstructorExpression",
                        },
                        "operator": "+",
                        "right": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 50,
                              "line": 65,
                            },
                            "name": "r",
                            "start": Position {
                              "character": 49,
                              "line": 65,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 55,
                            "line": 65,
                          },
                          "index": ASTLiteral {
                            "end": Position {
                              "character": 52,
                              "line": 65,
                            },
                            "raw": "2",
                            "start": Position {
                              "character": 51,
                              "line": 65,
                            },
                            "type": "NumericLiteral",
                            "value": 2,
                          },
                          "start": Position {
                            "character": 51,
                            "line": 65,
                          },
                          "type": "IndexExpression",
                        },
                        "start": Position {
                          "character": 47,
                          "line": 65,
                        },
                        "type": "BinaryExpression",
                      },
                      "operator": "+",
                      "right": ASTListConstructorExpression {
                        "end": Position {
                          "character": 68,
                          "line": 65,
                        },
                        "fields": Array [
                          ASTListValue {
                            "end": Position {
                              "character": 67,
                              "line": 65,
                            },
                            "start": Position {
                              "character": 57,
                              "line": 65,
                            },
                            "type": "ListValue",
                            "value": ASTLiteral {
                              "end": Position {
                                "character": 67,
                                "line": 65,
                              },
                              "raw": "\\"</color>\\"",
                              "start": Position {
                                "character": 57,
                                "line": 65,
                              },
                              "type": "StringLiteral",
                              "value": "</color>",
                            },
                          },
                        ],
                        "start": Position {
                          "character": 56,
                          "line": 65,
                        },
                        "type": "ListConstructorExpression",
                      },
                      "start": Position {
                        "character": 47,
                        "line": 65,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 65,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 65,
                        },
                        "name": "r",
                        "start": Position {
                          "character": 9,
                          "line": 65,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 15,
                        "line": 65,
                      },
                      "index": ASTLiteral {
                        "end": Position {
                          "character": 12,
                          "line": 65,
                        },
                        "raw": "2",
                        "start": Position {
                          "character": 11,
                          "line": 65,
                        },
                        "type": "NumericLiteral",
                        "value": 2,
                      },
                      "start": Position {
                        "character": 11,
                        "line": 65,
                      },
                      "type": "IndexExpression",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 39,
                    "line": 62,
                  },
                  "left": ASTCallExpression {
                    "arguments": Array [
                      ASTIdentifier {
                        "end": Position {
                          "character": 27,
                          "line": 62,
                        },
                        "name": "colors",
                        "start": Position {
                          "character": 21,
                          "line": 62,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 62,
                      },
                      "name": "typeof",
                      "start": Position {
                        "character": 14,
                        "line": 62,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 31,
                      "line": 62,
                    },
                    "start": Position {
                      "character": 20,
                      "line": 62,
                    },
                    "type": "CallExpression",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 38,
                      "line": 62,
                    },
                    "raw": "\\"list\\"",
                    "start": Position {
                      "character": 32,
                      "line": 62,
                    },
                    "type": "StringLiteral",
                    "value": "list",
                  },
                  "start": Position {
                    "character": 29,
                    "line": 62,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 11,
                  "line": 66,
                },
                "start": Position {
                  "character": 13,
                  "line": 62,
                },
                "type": "ElseifClause",
              },
            ],
            "end": Position {
              "character": 11,
              "line": 66,
            },
            "start": Position {
              "character": 5,
              "line": 58,
            },
            "type": "IfStatement",
          },
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTLiteral {
                  "end": Position {
                    "character": 67,
                    "line": 68,
                  },
                  "raw": "\\"\\\\n\\"",
                  "start": Position {
                    "character": 63,
                    "line": 68,
                  },
                  "type": "StringLiteral",
                  "value": "\\\\n",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTListConstructorExpression {
                  "end": Position {
                    "character": 57,
                    "line": 68,
                  },
                  "fields": Array [
                    ASTListValue {
                      "end": Position {
                        "character": 27,
                        "line": 68,
                      },
                      "start": Position {
                        "character": 22,
                        "line": 68,
                      },
                      "type": "ListValue",
                      "value": ASTCallExpression {
                        "arguments": Array [
                          ASTLiteral {
                            "end": Position {
                              "character": 25,
                              "line": 68,
                            },
                            "raw": "\\"\\"",
                            "start": Position {
                              "character": 23,
                              "line": 68,
                            },
                            "type": "StringLiteral",
                            "value": "",
                          },
                        ],
                        "base": ASTMemberExpression {
                          "base": ASTIndexExpression {
                            "base": ASTIdentifier {
                              "end": Position {
                                "character": 14,
                                "line": 68,
                              },
                              "name": "r",
                              "start": Position {
                                "character": 13,
                                "line": 68,
                              },
                              "type": "Identifier",
                            },
                            "end": Position {
                              "character": 18,
                              "line": 68,
                            },
                            "index": ASTLiteral {
                              "end": Position {
                                "character": 16,
                                "line": 68,
                              },
                              "raw": "0",
                              "start": Position {
                                "character": 15,
                                "line": 68,
                              },
                              "type": "NumericLiteral",
                              "value": 0,
                            },
                            "start": Position {
                              "character": 15,
                              "line": 68,
                            },
                            "type": "IndexExpression",
                          },
                          "end": Position {
                            "character": 23,
                            "line": 68,
                          },
                          "identifier": ASTIdentifier {
                            "end": Position {
                              "character": 22,
                              "line": 68,
                            },
                            "name": "join",
                            "start": Position {
                              "character": 18,
                              "line": 68,
                            },
                            "type": "Identifier",
                          },
                          "indexer": ".",
                          "start": Position {
                            "character": 17,
                            "line": 68,
                          },
                          "type": "MemberExpression",
                        },
                        "end": Position {
                          "character": 27,
                          "line": 68,
                        },
                        "start": Position {
                          "character": 22,
                          "line": 68,
                        },
                        "type": "CallExpression",
                      },
                    },
                    ASTListValue {
                      "end": Position {
                        "character": 42,
                        "line": 68,
                      },
                      "start": Position {
                        "character": 37,
                        "line": 68,
                      },
                      "type": "ListValue",
                      "value": ASTCallExpression {
                        "arguments": Array [
                          ASTLiteral {
                            "end": Position {
                              "character": 40,
                              "line": 68,
                            },
                            "raw": "\\"\\"",
                            "start": Position {
                              "character": 38,
                              "line": 68,
                            },
                            "type": "StringLiteral",
                            "value": "",
                          },
                        ],
                        "base": ASTMemberExpression {
                          "base": ASTIndexExpression {
                            "base": ASTIdentifier {
                              "end": Position {
                                "character": 29,
                                "line": 68,
                              },
                              "name": "r",
                              "start": Position {
                                "character": 28,
                                "line": 68,
                              },
                              "type": "Identifier",
                            },
                            "end": Position {
                              "character": 33,
                              "line": 68,
                            },
                            "index": ASTLiteral {
                              "end": Position {
                                "character": 31,
                                "line": 68,
                              },
                              "raw": "1",
                              "start": Position {
                                "character": 30,
                                "line": 68,
                              },
                              "type": "NumericLiteral",
                              "value": 1,
                            },
                            "start": Position {
                              "character": 30,
                              "line": 68,
                            },
                            "type": "IndexExpression",
                          },
                          "end": Position {
                            "character": 38,
                            "line": 68,
                          },
                          "identifier": ASTIdentifier {
                            "end": Position {
                              "character": 37,
                              "line": 68,
                            },
                            "name": "join",
                            "start": Position {
                              "character": 33,
                              "line": 68,
                            },
                            "type": "Identifier",
                          },
                          "indexer": ".",
                          "start": Position {
                            "character": 32,
                            "line": 68,
                          },
                          "type": "MemberExpression",
                        },
                        "end": Position {
                          "character": 42,
                          "line": 68,
                        },
                        "start": Position {
                          "character": 37,
                          "line": 68,
                        },
                        "type": "CallExpression",
                      },
                    },
                    ASTListValue {
                      "end": Position {
                        "character": 57,
                        "line": 68,
                      },
                      "start": Position {
                        "character": 52,
                        "line": 68,
                      },
                      "type": "ListValue",
                      "value": ASTCallExpression {
                        "arguments": Array [
                          ASTLiteral {
                            "end": Position {
                              "character": 55,
                              "line": 68,
                            },
                            "raw": "\\"\\"",
                            "start": Position {
                              "character": 53,
                              "line": 68,
                            },
                            "type": "StringLiteral",
                            "value": "",
                          },
                        ],
                        "base": ASTMemberExpression {
                          "base": ASTIndexExpression {
                            "base": ASTIdentifier {
                              "end": Position {
                                "character": 44,
                                "line": 68,
                              },
                              "name": "r",
                              "start": Position {
                                "character": 43,
                                "line": 68,
                              },
                              "type": "Identifier",
                            },
                            "end": Position {
                              "character": 48,
                              "line": 68,
                            },
                            "index": ASTLiteral {
                              "end": Position {
                                "character": 46,
                                "line": 68,
                              },
                              "raw": "2",
                              "start": Position {
                                "character": 45,
                                "line": 68,
                              },
                              "type": "NumericLiteral",
                              "value": 2,
                            },
                            "start": Position {
                              "character": 45,
                              "line": 68,
                            },
                            "type": "IndexExpression",
                          },
                          "end": Position {
                            "character": 53,
                            "line": 68,
                          },
                          "identifier": ASTIdentifier {
                            "end": Position {
                              "character": 52,
                              "line": 68,
                            },
                            "name": "join",
                            "start": Position {
                              "character": 48,
                              "line": 68,
                            },
                            "type": "Identifier",
                          },
                          "indexer": ".",
                          "start": Position {
                            "character": 47,
                            "line": 68,
                          },
                          "type": "MemberExpression",
                        },
                        "end": Position {
                          "character": 57,
                          "line": 68,
                        },
                        "start": Position {
                          "character": 52,
                          "line": 68,
                        },
                        "type": "CallExpression",
                      },
                    },
                  ],
                  "start": Position {
                    "character": 12,
                    "line": 68,
                  },
                  "type": "ListConstructorExpression",
                },
                "end": Position {
                  "character": 63,
                  "line": 68,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 62,
                    "line": 68,
                  },
                  "name": "join",
                  "start": Position {
                    "character": 58,
                    "line": 68,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 57,
                  "line": 68,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 68,
                "line": 68,
              },
              "start": Position {
                "character": 62,
                "line": 68,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 69,
            },
            "start": Position {
              "character": 5,
              "line": 68,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 69,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 28,
              "line": 45,
            },
            "name": "str",
            "start": Position {
              "character": 25,
              "line": 45,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 36,
              "line": 45,
            },
            "name": "colors",
            "start": Position {
              "character": 30,
              "line": 45,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 16,
          "line": 45,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 45,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 9,
            "line": 45,
          },
          "name": "AsciiGen",
          "start": Position {
            "character": 1,
            "line": 45,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 15,
          "line": 45,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 45,
          },
          "name": "gen",
          "start": Position {
            "character": 10,
            "line": 45,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 9,
          "line": 45,
        },
        "type": "MemberExpression",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 29,
        "line": 71,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTCallExpression {
            "arguments": Array [
              ASTLiteral {
                "end": Position {
                  "character": 27,
                  "line": 71,
                },
                "raw": "\\"Hallo\\"",
                "start": Position {
                  "character": 20,
                  "line": 71,
                },
                "type": "StringLiteral",
                "value": "Hallo",
              },
            ],
            "base": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 15,
                  "line": 71,
                },
                "name": "AsciiGen",
                "start": Position {
                  "character": 7,
                  "line": 71,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 20,
                "line": 71,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 19,
                  "line": 71,
                },
                "name": "gen",
                "start": Position {
                  "character": 16,
                  "line": 71,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 15,
                "line": 71,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 29,
              "line": 71,
            },
            "start": Position {
              "character": 19,
              "line": 71,
            },
            "type": "CallExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 71,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 71,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 29,
          "line": 71,
        },
        "start": Position {
          "character": 6,
          "line": 71,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 71,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 29,
    "line": 71,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 5,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 10,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 5,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 20,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 5,
      },
      "raw": "\\"|| || \\"",
      "start": Position {
        "character": 30,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "|| || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 6,
      },
      "raw": "\\"||¯/ \\"",
      "start": Position {
        "character": 10,
        "line": 6,
      },
      "type": "StringLiteral",
      "value": "||¯/ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 6,
      },
      "raw": "\\"|| \\\\ \\"",
      "start": Position {
        "character": 19,
        "line": 6,
      },
      "type": "StringLiteral",
      "value": "|| \\\\ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 35,
        "line": 6,
      },
      "raw": "\\"||_/ \\"",
      "start": Position {
        "character": 28,
        "line": 6,
      },
      "type": "StringLiteral",
      "value": "||_/ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 7,
      },
      "raw": "\\"||¯ \\"",
      "start": Position {
        "character": 10,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "||¯ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 7,
      },
      "raw": "\\"||  \\"",
      "start": Position {
        "character": 18,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 7,
      },
      "raw": "\\"||_ \\"",
      "start": Position {
        "character": 26,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "||_ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 8,
      },
      "raw": "\\"||¯\\\\\\\\ \\"",
      "start": Position {
        "character": 10,
        "line": 8,
      },
      "type": "StringLiteral",
      "value": "||¯\\\\\\\\ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 8,
      },
      "raw": "\\"|| // \\"",
      "start": Position {
        "character": 20,
        "line": 8,
      },
      "type": "StringLiteral",
      "value": "|| // ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 8,
      },
      "raw": "\\"||//  \\"",
      "start": Position {
        "character": 30,
        "line": 8,
      },
      "type": "StringLiteral",
      "value": "||//  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 9,
      },
      "raw": "\\"||¯ \\"",
      "start": Position {
        "character": 10,
        "line": 9,
      },
      "type": "StringLiteral",
      "value": "||¯ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 9,
      },
      "raw": "\\"||- \\"",
      "start": Position {
        "character": 18,
        "line": 9,
      },
      "type": "StringLiteral",
      "value": "||- ",
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 9,
      },
      "raw": "\\"||_ \\"",
      "start": Position {
        "character": 26,
        "line": 9,
      },
      "type": "StringLiteral",
      "value": "||_ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 10,
      },
      "raw": "\\"||¯ \\"",
      "start": Position {
        "character": 10,
        "line": 10,
      },
      "type": "StringLiteral",
      "value": "||¯ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 10,
      },
      "raw": "\\"||_ \\"",
      "start": Position {
        "character": 18,
        "line": 10,
      },
      "type": "StringLiteral",
      "value": "||_ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 10,
      },
      "raw": "\\"||  \\"",
      "start": Position {
        "character": 26,
        "line": 10,
      },
      "type": "StringLiteral",
      "value": "||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 11,
      },
      "raw": "\\"||¯¯  \\"",
      "start": Position {
        "character": 10,
        "line": 11,
      },
      "type": "StringLiteral",
      "value": "||¯¯  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 11,
      },
      "raw": "\\"|| \\\\\\\\ \\"",
      "start": Position {
        "character": 20,
        "line": 11,
      },
      "type": "StringLiteral",
      "value": "|| \\\\\\\\ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 11,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 30,
        "line": 11,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 12,
      },
      "raw": "\\"|| || \\"",
      "start": Position {
        "character": 10,
        "line": 12,
      },
      "type": "StringLiteral",
      "value": "|| || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 12,
      },
      "raw": "\\"||-|| \\"",
      "start": Position {
        "character": 20,
        "line": 12,
      },
      "type": "StringLiteral",
      "value": "||-|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 12,
      },
      "raw": "\\"|| || \\"",
      "start": Position {
        "character": 30,
        "line": 12,
      },
      "type": "StringLiteral",
      "value": "|| || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 15,
        "line": 13,
      },
      "raw": "\\"|| \\"",
      "start": Position {
        "character": 10,
        "line": 13,
      },
      "type": "StringLiteral",
      "value": "|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 22,
        "line": 13,
      },
      "raw": "\\"|| \\"",
      "start": Position {
        "character": 17,
        "line": 13,
      },
      "type": "StringLiteral",
      "value": "|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 13,
      },
      "raw": "\\"|| \\"",
      "start": Position {
        "character": 24,
        "line": 13,
      },
      "type": "StringLiteral",
      "value": "|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 14,
      },
      "raw": "\\" ¯||¯ \\"",
      "start": Position {
        "character": 10,
        "line": 14,
      },
      "type": "StringLiteral",
      "value": " ¯||¯ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 14,
      },
      "raw": "\\"  ||  \\"",
      "start": Position {
        "character": 20,
        "line": 14,
      },
      "type": "StringLiteral",
      "value": "  ||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 14,
      },
      "raw": "\\"|_||  \\"",
      "start": Position {
        "character": 30,
        "line": 14,
      },
      "type": "StringLiteral",
      "value": "|_||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 15,
      },
      "raw": "\\"||  / \\"",
      "start": Position {
        "character": 10,
        "line": 15,
      },
      "type": "StringLiteral",
      "value": "||  / ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 15,
      },
      "raw": "\\"|| /  \\"",
      "start": Position {
        "character": 20,
        "line": 15,
      },
      "type": "StringLiteral",
      "value": "|| /  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 15,
      },
      "raw": "\\"||¯\\\\\\\\ \\"",
      "start": Position {
        "character": 30,
        "line": 15,
      },
      "type": "StringLiteral",
      "value": "||¯\\\\\\\\ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 16,
      },
      "raw": "\\"||  \\"",
      "start": Position {
        "character": 10,
        "line": 16,
      },
      "type": "StringLiteral",
      "value": "||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 16,
      },
      "raw": "\\"||  \\"",
      "start": Position {
        "character": 18,
        "line": 16,
      },
      "type": "StringLiteral",
      "value": "||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 16,
      },
      "raw": "\\"||_ \\"",
      "start": Position {
        "character": 26,
        "line": 16,
      },
      "type": "StringLiteral",
      "value": "||_ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 17,
      },
      "raw": "\\"||\\\\\\\\/|| \\"",
      "start": Position {
        "character": 10,
        "line": 17,
      },
      "type": "StringLiteral",
      "value": "||\\\\\\\\/|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 17,
      },
      "raw": "\\"||   || \\"",
      "start": Position {
        "character": 22,
        "line": 17,
      },
      "type": "StringLiteral",
      "value": "||   || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 44,
        "line": 17,
      },
      "raw": "\\"||   || \\"",
      "start": Position {
        "character": 34,
        "line": 17,
      },
      "type": "StringLiteral",
      "value": "||   || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 18,
      },
      "raw": "\\"||\\\\\\\\ || \\"",
      "start": Position {
        "character": 10,
        "line": 18,
      },
      "type": "StringLiteral",
      "value": "||\\\\\\\\ || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 18,
      },
      "raw": "\\"|| \\\\\\\\|| \\"",
      "start": Position {
        "character": 22,
        "line": 18,
      },
      "type": "StringLiteral",
      "value": "|| \\\\\\\\|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 44,
        "line": 18,
      },
      "raw": "\\"||  \\\\|| \\"",
      "start": Position {
        "character": 34,
        "line": 18,
      },
      "type": "StringLiteral",
      "value": "||  \\\\|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 19,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 10,
        "line": 19,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 19,
      },
      "raw": "\\"|| || \\"",
      "start": Position {
        "character": 20,
        "line": 19,
      },
      "type": "StringLiteral",
      "value": "|| || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 19,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 30,
        "line": 19,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 20,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 10,
        "line": 20,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 20,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 20,
        "line": 20,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 20,
      },
      "raw": "\\"||    \\"",
      "start": Position {
        "character": 30,
        "line": 20,
      },
      "type": "StringLiteral",
      "value": "||    ",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 21,
      },
      "raw": "\\"||¯||  \\"",
      "start": Position {
        "character": 10,
        "line": 21,
      },
      "type": "StringLiteral",
      "value": "||¯||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 30,
        "line": 21,
      },
      "raw": "\\"|| ||  \\"",
      "start": Position {
        "character": 21,
        "line": 21,
      },
      "type": "StringLiteral",
      "value": "|| ||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 21,
      },
      "raw": "\\"||_||¬ \\"",
      "start": Position {
        "character": 32,
        "line": 21,
      },
      "type": "StringLiteral",
      "value": "||_||¬ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 22,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 10,
        "line": 22,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 22,
      },
      "raw": "\\"||¯\\\\\\\\ \\"",
      "start": Position {
        "character": 20,
        "line": 22,
      },
      "type": "StringLiteral",
      "value": "||¯\\\\\\\\ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 22,
      },
      "raw": "\\"|| || \\"",
      "start": Position {
        "character": 30,
        "line": 22,
      },
      "type": "StringLiteral",
      "value": "|| || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 23,
      },
      "raw": "\\"||¯¯ \\"",
      "start": Position {
        "character": 10,
        "line": 23,
      },
      "type": "StringLiteral",
      "value": "||¯¯ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 23,
      },
      "raw": "\\" \\\\\\\\  \\"",
      "start": Position {
        "character": 19,
        "line": 23,
      },
      "type": "StringLiteral",
      "value": " \\\\\\\\  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 35,
        "line": 23,
      },
      "raw": "\\"__|| \\"",
      "start": Position {
        "character": 28,
        "line": 23,
      },
      "type": "StringLiteral",
      "value": "__|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 24,
      },
      "raw": "\\"¯||¯ \\"",
      "start": Position {
        "character": 10,
        "line": 24,
      },
      "type": "StringLiteral",
      "value": "¯||¯ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 24,
      },
      "raw": "\\" ||  \\"",
      "start": Position {
        "character": 19,
        "line": 24,
      },
      "type": "StringLiteral",
      "value": " ||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 35,
        "line": 24,
      },
      "raw": "\\" ||  \\"",
      "start": Position {
        "character": 28,
        "line": 24,
      },
      "type": "StringLiteral",
      "value": " ||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 25,
      },
      "raw": "\\"|| || \\"",
      "start": Position {
        "character": 10,
        "line": 25,
      },
      "type": "StringLiteral",
      "value": "|| || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 25,
      },
      "raw": "\\"|| || \\"",
      "start": Position {
        "character": 20,
        "line": 25,
      },
      "type": "StringLiteral",
      "value": "|| || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 25,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 30,
        "line": 25,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 26,
      },
      "raw": "\\"\\\\\\\\ || \\"",
      "start": Position {
        "character": 10,
        "line": 26,
      },
      "type": "StringLiteral",
      "value": "\\\\\\\\ || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 26,
      },
      "raw": "\\" \\\\\\\\|| \\"",
      "start": Position {
        "character": 20,
        "line": 26,
      },
      "type": "StringLiteral",
      "value": " \\\\\\\\|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 26,
      },
      "raw": "\\"  \\\\\\\\| \\"",
      "start": Position {
        "character": 30,
        "line": 26,
      },
      "type": "StringLiteral",
      "value": "  \\\\\\\\| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 27,
      },
      "raw": "\\"\\\\\\\\ |\\\\\\\\ | \\"",
      "start": Position {
        "character": 10,
        "line": 27,
      },
      "type": "StringLiteral",
      "value": "\\\\\\\\ |\\\\\\\\ | ",
    },
    ASTLiteral {
      "end": Position {
        "character": 34,
        "line": 27,
      },
      "raw": "\\" \\\\\\\\| \\\\\\\\| \\"",
      "start": Position {
        "character": 23,
        "line": 27,
      },
      "type": "StringLiteral",
      "value": " \\\\\\\\| \\\\\\\\| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 47,
        "line": 27,
      },
      "raw": "\\"  \\\\\\\\  \\\\\\\\ \\"",
      "start": Position {
        "character": 36,
        "line": 27,
      },
      "type": "StringLiteral",
      "value": "  \\\\\\\\  \\\\\\\\ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 28,
      },
      "raw": "\\"\\\\\\\\  / \\"",
      "start": Position {
        "character": 10,
        "line": 28,
      },
      "type": "StringLiteral",
      "value": "\\\\\\\\  / ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 28,
      },
      "raw": "\\" \\\\\\\\/  \\"",
      "start": Position {
        "character": 20,
        "line": 28,
      },
      "type": "StringLiteral",
      "value": " \\\\\\\\/  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 28,
      },
      "raw": "\\" //\\\\  \\"",
      "start": Position {
        "character": 30,
        "line": 28,
      },
      "type": "StringLiteral",
      "value": " //\\\\  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 29,
      },
      "raw": "\\"\\\\\\\\  // \\"",
      "start": Position {
        "character": 10,
        "line": 29,
      },
      "type": "StringLiteral",
      "value": "\\\\\\\\  // ",
    },
    ASTLiteral {
      "end": Position {
        "character": 30,
        "line": 29,
      },
      "raw": "\\" \\\\\\\\//  \\"",
      "start": Position {
        "character": 21,
        "line": 29,
      },
      "type": "StringLiteral",
      "value": " \\\\\\\\//  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 29,
      },
      "raw": "\\"  ||   \\"",
      "start": Position {
        "character": 32,
        "line": 29,
      },
      "type": "StringLiteral",
      "value": "  ||   ",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 30,
      },
      "raw": "\\"¯// \\"",
      "start": Position {
        "character": 10,
        "line": 30,
      },
      "type": "StringLiteral",
      "value": "¯// ",
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 30,
      },
      "raw": "\\"//  \\"",
      "start": Position {
        "character": 18,
        "line": 30,
      },
      "type": "StringLiteral",
      "value": "//  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 30,
      },
      "raw": "\\"||_ \\"",
      "start": Position {
        "character": 26,
        "line": 30,
      },
      "type": "StringLiteral",
      "value": "||_ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 31,
      },
      "raw": "\\"0\\"",
      "start": Position {
        "character": 5,
        "line": 31,
      },
      "type": "StringLiteral",
      "value": "0",
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 31,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 13,
        "line": 31,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 31,
      },
      "raw": "\\"||x|| \\"",
      "start": Position {
        "character": 23,
        "line": 31,
      },
      "type": "StringLiteral",
      "value": "||x|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 31,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 33,
        "line": 31,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 32,
      },
      "raw": "\\"1\\"",
      "start": Position {
        "character": 5,
        "line": 32,
      },
      "type": "StringLiteral",
      "value": "1",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 32,
      },
      "raw": "\\"'|| \\"",
      "start": Position {
        "character": 13,
        "line": 32,
      },
      "type": "StringLiteral",
      "value": "'|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 32,
      },
      "raw": "\\" || \\"",
      "start": Position {
        "character": 21,
        "line": 32,
      },
      "type": "StringLiteral",
      "value": " || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 35,
        "line": 32,
      },
      "raw": "\\" || \\"",
      "start": Position {
        "character": 29,
        "line": 32,
      },
      "type": "StringLiteral",
      "value": " || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 33,
      },
      "raw": "\\"2\\"",
      "start": Position {
        "character": 5,
        "line": 33,
      },
      "type": "StringLiteral",
      "value": "2",
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 33,
      },
      "raw": "\\"¯¯|| \\"",
      "start": Position {
        "character": 13,
        "line": 33,
      },
      "type": "StringLiteral",
      "value": "¯¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 33,
      },
      "raw": "\\"||¯  \\"",
      "start": Position {
        "character": 22,
        "line": 33,
      },
      "type": "StringLiteral",
      "value": "||¯  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 33,
      },
      "raw": "\\"||_  \\"",
      "start": Position {
        "character": 31,
        "line": 33,
      },
      "type": "StringLiteral",
      "value": "||_  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 34,
      },
      "raw": "\\"3\\"",
      "start": Position {
        "character": 5,
        "line": 34,
      },
      "type": "StringLiteral",
      "value": "3",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 34,
      },
      "raw": "\\"¯|| \\"",
      "start": Position {
        "character": 13,
        "line": 34,
      },
      "type": "StringLiteral",
      "value": "¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 34,
      },
      "raw": "\\"-|| \\"",
      "start": Position {
        "character": 21,
        "line": 34,
      },
      "type": "StringLiteral",
      "value": "-|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 35,
        "line": 34,
      },
      "raw": "\\"_|| \\"",
      "start": Position {
        "character": 29,
        "line": 34,
      },
      "type": "StringLiteral",
      "value": "_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 35,
      },
      "raw": "\\"4\\"",
      "start": Position {
        "character": 5,
        "line": 35,
      },
      "type": "StringLiteral",
      "value": "4",
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 35,
      },
      "raw": "\\" /|| \\"",
      "start": Position {
        "character": 13,
        "line": 35,
      },
      "type": "StringLiteral",
      "value": " /|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 35,
      },
      "raw": "\\"/_|| \\"",
      "start": Position {
        "character": 22,
        "line": 35,
      },
      "type": "StringLiteral",
      "value": "/_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 35,
      },
      "raw": "\\"  || \\"",
      "start": Position {
        "character": 31,
        "line": 35,
      },
      "type": "StringLiteral",
      "value": "  || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 36,
      },
      "raw": "\\"5\\"",
      "start": Position {
        "character": 5,
        "line": 36,
      },
      "type": "StringLiteral",
      "value": "5",
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 36,
      },
      "raw": "\\"||¯¯ \\"",
      "start": Position {
        "character": 13,
        "line": 36,
      },
      "type": "StringLiteral",
      "value": "||¯¯ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 36,
      },
      "raw": "\\" ¯|| \\"",
      "start": Position {
        "character": 22,
        "line": 36,
      },
      "type": "StringLiteral",
      "value": " ¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 36,
      },
      "raw": "\\" _|| \\"",
      "start": Position {
        "character": 31,
        "line": 36,
      },
      "type": "StringLiteral",
      "value": " _|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 37,
      },
      "raw": "\\"6\\"",
      "start": Position {
        "character": 5,
        "line": 37,
      },
      "type": "StringLiteral",
      "value": "6",
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 37,
      },
      "raw": "\\"||¯¯  \\"",
      "start": Position {
        "character": 13,
        "line": 37,
      },
      "type": "StringLiteral",
      "value": "||¯¯  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 37,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 23,
        "line": 37,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 37,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 33,
        "line": 37,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 38,
      },
      "raw": "\\"7\\"",
      "start": Position {
        "character": 5,
        "line": 38,
      },
      "type": "StringLiteral",
      "value": "7",
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 38,
      },
      "raw": "\\"¯¯// \\"",
      "start": Position {
        "character": 13,
        "line": 38,
      },
      "type": "StringLiteral",
      "value": "¯¯// ",
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 38,
      },
      "raw": "\\" //  \\"",
      "start": Position {
        "character": 22,
        "line": 38,
      },
      "type": "StringLiteral",
      "value": " //  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 38,
      },
      "raw": "\\"//   \\"",
      "start": Position {
        "character": 31,
        "line": 38,
      },
      "type": "StringLiteral",
      "value": "//   ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 39,
      },
      "raw": "\\"8\\"",
      "start": Position {
        "character": 5,
        "line": 39,
      },
      "type": "StringLiteral",
      "value": "8",
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 39,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 13,
        "line": 39,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 39,
      },
      "raw": "\\"||-|| \\"",
      "start": Position {
        "character": 23,
        "line": 39,
      },
      "type": "StringLiteral",
      "value": "||-|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 39,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 33,
        "line": 39,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 40,
      },
      "raw": "\\"9\\"",
      "start": Position {
        "character": 5,
        "line": 40,
      },
      "type": "StringLiteral",
      "value": "9",
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 40,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 13,
        "line": 40,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 40,
      },
      "raw": "\\"  ¯|| \\"",
      "start": Position {
        "character": 23,
        "line": 40,
      },
      "type": "StringLiteral",
      "value": "  ¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 40,
      },
      "raw": "\\"  //  \\"",
      "start": Position {
        "character": 33,
        "line": 40,
      },
      "type": "StringLiteral",
      "value": "  //  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 41,
      },
      "raw": "\\" \\"",
      "start": Position {
        "character": 5,
        "line": 41,
      },
      "type": "StringLiteral",
      "value": " ",
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 41,
      },
      "raw": "\\"  \\"",
      "start": Position {
        "character": 13,
        "line": 41,
      },
      "type": "StringLiteral",
      "value": "  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 23,
        "line": 41,
      },
      "raw": "\\"  \\"",
      "start": Position {
        "character": 19,
        "line": 41,
      },
      "type": "StringLiteral",
      "value": "  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 41,
      },
      "raw": "\\"  \\"",
      "start": Position {
        "character": 25,
        "line": 41,
      },
      "type": "StringLiteral",
      "value": "  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 52,
      },
      "raw": "0",
      "start": Position {
        "character": 15,
        "line": 52,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 36,
        "line": 52,
      },
      "raw": "0",
      "start": Position {
        "character": 35,
        "line": 52,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 53,
      },
      "raw": "1",
      "start": Position {
        "character": 15,
        "line": 53,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 36,
        "line": 53,
      },
      "raw": "1",
      "start": Position {
        "character": 35,
        "line": 53,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 54,
      },
      "raw": "2",
      "start": Position {
        "character": 15,
        "line": 54,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 36,
        "line": 54,
      },
      "raw": "2",
      "start": Position {
        "character": 35,
        "line": 54,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 35,
        "line": 58,
      },
      "raw": "\\"string\\"",
      "start": Position {
        "character": 27,
        "line": 58,
      },
      "type": "StringLiteral",
      "value": "string",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 59,
      },
      "raw": "0",
      "start": Position {
        "character": 11,
        "line": 59,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 59,
      },
      "raw": "\\"<color=#\\"",
      "start": Position {
        "character": 17,
        "line": 59,
      },
      "type": "StringLiteral",
      "value": "<color=#",
    },
    ASTLiteral {
      "end": Position {
        "character": 42,
        "line": 59,
      },
      "raw": "\\">\\"",
      "start": Position {
        "character": 39,
        "line": 59,
      },
      "type": "StringLiteral",
      "value": ">",
    },
    ASTLiteral {
      "end": Position {
        "character": 49,
        "line": 59,
      },
      "raw": "0",
      "start": Position {
        "character": 48,
        "line": 59,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 64,
        "line": 59,
      },
      "raw": "\\"</color>\\"",
      "start": Position {
        "character": 54,
        "line": 59,
      },
      "type": "StringLiteral",
      "value": "</color>",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 60,
      },
      "raw": "1",
      "start": Position {
        "character": 11,
        "line": 60,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 60,
      },
      "raw": "\\"<color=#\\"",
      "start": Position {
        "character": 17,
        "line": 60,
      },
      "type": "StringLiteral",
      "value": "<color=#",
    },
    ASTLiteral {
      "end": Position {
        "character": 42,
        "line": 60,
      },
      "raw": "\\">\\"",
      "start": Position {
        "character": 39,
        "line": 60,
      },
      "type": "StringLiteral",
      "value": ">",
    },
    ASTLiteral {
      "end": Position {
        "character": 49,
        "line": 60,
      },
      "raw": "1",
      "start": Position {
        "character": 48,
        "line": 60,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 64,
        "line": 60,
      },
      "raw": "\\"</color>\\"",
      "start": Position {
        "character": 54,
        "line": 60,
      },
      "type": "StringLiteral",
      "value": "</color>",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 61,
      },
      "raw": "2",
      "start": Position {
        "character": 11,
        "line": 61,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 61,
      },
      "raw": "\\"<color=#\\"",
      "start": Position {
        "character": 17,
        "line": 61,
      },
      "type": "StringLiteral",
      "value": "<color=#",
    },
    ASTLiteral {
      "end": Position {
        "character": 42,
        "line": 61,
      },
      "raw": "\\">\\"",
      "start": Position {
        "character": 39,
        "line": 61,
      },
      "type": "StringLiteral",
      "value": ">",
    },
    ASTLiteral {
      "end": Position {
        "character": 49,
        "line": 61,
      },
      "raw": "2",
      "start": Position {
        "character": 48,
        "line": 61,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 64,
        "line": 61,
      },
      "raw": "\\"</color>\\"",
      "start": Position {
        "character": 54,
        "line": 61,
      },
      "type": "StringLiteral",
      "value": "</color>",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 62,
      },
      "raw": "\\"list\\"",
      "start": Position {
        "character": 32,
        "line": 62,
      },
      "type": "StringLiteral",
      "value": "list",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 63,
      },
      "raw": "0",
      "start": Position {
        "character": 11,
        "line": 63,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 63,
      },
      "raw": "\\"<color=#\\"",
      "start": Position {
        "character": 17,
        "line": 63,
      },
      "type": "StringLiteral",
      "value": "<color=#",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 63,
      },
      "raw": "0",
      "start": Position {
        "character": 37,
        "line": 63,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 63,
      },
      "raw": "\\">\\"",
      "start": Position {
        "character": 42,
        "line": 63,
      },
      "type": "StringLiteral",
      "value": ">",
    },
    ASTLiteral {
      "end": Position {
        "character": 52,
        "line": 63,
      },
      "raw": "0",
      "start": Position {
        "character": 51,
        "line": 63,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 67,
        "line": 63,
      },
      "raw": "\\"</color>\\"",
      "start": Position {
        "character": 57,
        "line": 63,
      },
      "type": "StringLiteral",
      "value": "</color>",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 64,
      },
      "raw": "1",
      "start": Position {
        "character": 11,
        "line": 64,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 64,
      },
      "raw": "\\"<color=#\\"",
      "start": Position {
        "character": 17,
        "line": 64,
      },
      "type": "StringLiteral",
      "value": "<color=#",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 64,
      },
      "raw": "1",
      "start": Position {
        "character": 37,
        "line": 64,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 64,
      },
      "raw": "\\">\\"",
      "start": Position {
        "character": 42,
        "line": 64,
      },
      "type": "StringLiteral",
      "value": ">",
    },
    ASTLiteral {
      "end": Position {
        "character": 52,
        "line": 64,
      },
      "raw": "1",
      "start": Position {
        "character": 51,
        "line": 64,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 67,
        "line": 64,
      },
      "raw": "\\"</color>\\"",
      "start": Position {
        "character": 57,
        "line": 64,
      },
      "type": "StringLiteral",
      "value": "</color>",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 65,
      },
      "raw": "2",
      "start": Position {
        "character": 11,
        "line": 65,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 65,
      },
      "raw": "\\"<color=#\\"",
      "start": Position {
        "character": 17,
        "line": 65,
      },
      "type": "StringLiteral",
      "value": "<color=#",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 65,
      },
      "raw": "2",
      "start": Position {
        "character": 37,
        "line": 65,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 65,
      },
      "raw": "\\">\\"",
      "start": Position {
        "character": 42,
        "line": 65,
      },
      "type": "StringLiteral",
      "value": ">",
    },
    ASTLiteral {
      "end": Position {
        "character": 52,
        "line": 65,
      },
      "raw": "2",
      "start": Position {
        "character": 51,
        "line": 65,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 67,
        "line": 65,
      },
      "raw": "\\"</color>\\"",
      "start": Position {
        "character": 57,
        "line": 65,
      },
      "type": "StringLiteral",
      "value": "</color>",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 68,
      },
      "raw": "0",
      "start": Position {
        "character": 15,
        "line": 68,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 68,
      },
      "raw": "\\"\\"",
      "start": Position {
        "character": 23,
        "line": 68,
      },
      "type": "StringLiteral",
      "value": "",
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 68,
      },
      "raw": "1",
      "start": Position {
        "character": 30,
        "line": 68,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 40,
        "line": 68,
      },
      "raw": "\\"\\"",
      "start": Position {
        "character": 38,
        "line": 68,
      },
      "type": "StringLiteral",
      "value": "",
    },
    ASTLiteral {
      "end": Position {
        "character": 46,
        "line": 68,
      },
      "raw": "2",
      "start": Position {
        "character": 45,
        "line": 68,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 55,
        "line": 68,
      },
      "raw": "\\"\\"",
      "start": Position {
        "character": 53,
        "line": 68,
      },
      "type": "StringLiteral",
      "value": "",
    },
    ASTLiteral {
      "end": Position {
        "character": 67,
        "line": 68,
      },
      "raw": "\\"\\\\n\\"",
      "start": Position {
        "character": 63,
        "line": 68,
      },
      "type": "StringLiteral",
      "value": "\\\\n",
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 71,
      },
      "raw": "\\"Hallo\\"",
      "start": Position {
        "character": 20,
        "line": 71,
      },
      "type": "StringLiteral",
      "value": "Hallo",
    },
  ],
  "namespaces": Set {
    "AsciiGen",
    "map",
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z",
    "MAP",
    "gen",
    "colors",
    "signs",
    "lower",
    "push",
    "join",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts ascii.src unsafe 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 14,
        "line": 1,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 14,
          "line": 1,
        },
        "fields": Array [],
        "start": Position {
          "character": 12,
          "line": 1,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 9,
          "line": 1,
        },
        "name": "AsciiGen",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 9,
        "line": 3,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 9,
          "line": 3,
        },
        "fields": Array [],
        "start": Position {
          "character": 7,
          "line": 3,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 4,
          "line": 3,
        },
        "name": "map",
        "start": Position {
          "character": 1,
          "line": 3,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 5,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 5,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 5,
            },
            "start": Position {
              "character": 10,
              "line": 5,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 5,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 10,
                "line": 5,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 5,
            },
            "start": Position {
              "character": 20,
              "line": 5,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 5,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 20,
                "line": 5,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 5,
            },
            "start": Position {
              "character": 30,
              "line": 5,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 5,
              },
              "raw": "\\"|| || \\"",
              "start": Position {
                "character": 30,
                "line": 5,
              },
              "type": "StringLiteral",
              "value": "|| || ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 5,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 5,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 5,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 5,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 5,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 5,
          },
          "name": "a",
          "start": Position {
            "character": 5,
            "line": 5,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 5,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 36,
        "line": 6,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 36,
          "line": 6,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 17,
              "line": 6,
            },
            "start": Position {
              "character": 10,
              "line": 6,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 17,
                "line": 6,
              },
              "raw": "\\"||¯/ \\"",
              "start": Position {
                "character": 10,
                "line": 6,
              },
              "type": "StringLiteral",
              "value": "||¯/ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 26,
              "line": 6,
            },
            "start": Position {
              "character": 19,
              "line": 6,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 26,
                "line": 6,
              },
              "raw": "\\"|| \\\\ \\"",
              "start": Position {
                "character": 19,
                "line": 6,
              },
              "type": "StringLiteral",
              "value": "|| \\\\ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 35,
              "line": 6,
            },
            "start": Position {
              "character": 28,
              "line": 6,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 35,
                "line": 6,
              },
              "raw": "\\"||_/ \\"",
              "start": Position {
                "character": 28,
                "line": 6,
              },
              "type": "StringLiteral",
              "value": "||_/ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 6,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 6,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 6,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 6,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 6,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 6,
          },
          "name": "b",
          "start": Position {
            "character": 5,
            "line": 6,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 6,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 33,
        "line": 7,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 33,
          "line": 7,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 16,
              "line": 7,
            },
            "start": Position {
              "character": 10,
              "line": 7,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 16,
                "line": 7,
              },
              "raw": "\\"||¯ \\"",
              "start": Position {
                "character": 10,
                "line": 7,
              },
              "type": "StringLiteral",
              "value": "||¯ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 24,
              "line": 7,
            },
            "start": Position {
              "character": 18,
              "line": 7,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 24,
                "line": 7,
              },
              "raw": "\\"||  \\"",
              "start": Position {
                "character": 18,
                "line": 7,
              },
              "type": "StringLiteral",
              "value": "||  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 32,
              "line": 7,
            },
            "start": Position {
              "character": 26,
              "line": 7,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 32,
                "line": 7,
              },
              "raw": "\\"||_ \\"",
              "start": Position {
                "character": 26,
                "line": 7,
              },
              "type": "StringLiteral",
              "value": "||_ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 7,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 7,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 7,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 7,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 7,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 7,
          },
          "name": "c",
          "start": Position {
            "character": 5,
            "line": 7,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 7,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 8,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 8,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 8,
            },
            "start": Position {
              "character": 10,
              "line": 8,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 8,
              },
              "raw": "\\"||¯\\\\\\\\ \\"",
              "start": Position {
                "character": 10,
                "line": 8,
              },
              "type": "StringLiteral",
              "value": "||¯\\\\\\\\ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 8,
            },
            "start": Position {
              "character": 20,
              "line": 8,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 8,
              },
              "raw": "\\"|| // \\"",
              "start": Position {
                "character": 20,
                "line": 8,
              },
              "type": "StringLiteral",
              "value": "|| // ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 8,
            },
            "start": Position {
              "character": 30,
              "line": 8,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 8,
              },
              "raw": "\\"||//  \\"",
              "start": Position {
                "character": 30,
                "line": 8,
              },
              "type": "StringLiteral",
              "value": "||//  ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 8,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 8,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 8,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 8,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 8,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 8,
          },
          "name": "d",
          "start": Position {
            "character": 5,
            "line": 8,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 8,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 33,
        "line": 9,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 33,
          "line": 9,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 16,
              "line": 9,
            },
            "start": Position {
              "character": 10,
              "line": 9,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 16,
                "line": 9,
              },
              "raw": "\\"||¯ \\"",
              "start": Position {
                "character": 10,
                "line": 9,
              },
              "type": "StringLiteral",
              "value": "||¯ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 24,
              "line": 9,
            },
            "start": Position {
              "character": 18,
              "line": 9,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 24,
                "line": 9,
              },
              "raw": "\\"||- \\"",
              "start": Position {
                "character": 18,
                "line": 9,
              },
              "type": "StringLiteral",
              "value": "||- ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 32,
              "line": 9,
            },
            "start": Position {
              "character": 26,
              "line": 9,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 32,
                "line": 9,
              },
              "raw": "\\"||_ \\"",
              "start": Position {
                "character": 26,
                "line": 9,
              },
              "type": "StringLiteral",
              "value": "||_ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 9,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 9,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 9,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 9,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 9,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 9,
          },
          "name": "e",
          "start": Position {
            "character": 5,
            "line": 9,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 9,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 33,
        "line": 10,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 33,
          "line": 10,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 16,
              "line": 10,
            },
            "start": Position {
              "character": 10,
              "line": 10,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 16,
                "line": 10,
              },
              "raw": "\\"||¯ \\"",
              "start": Position {
                "character": 10,
                "line": 10,
              },
              "type": "StringLiteral",
              "value": "||¯ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 24,
              "line": 10,
            },
            "start": Position {
              "character": 18,
              "line": 10,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 24,
                "line": 10,
              },
              "raw": "\\"||_ \\"",
              "start": Position {
                "character": 18,
                "line": 10,
              },
              "type": "StringLiteral",
              "value": "||_ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 32,
              "line": 10,
            },
            "start": Position {
              "character": 26,
              "line": 10,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 32,
                "line": 10,
              },
              "raw": "\\"||  \\"",
              "start": Position {
                "character": 26,
                "line": 10,
              },
              "type": "StringLiteral",
              "value": "||  ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 10,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 10,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 10,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 10,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 10,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 10,
          },
          "name": "f",
          "start": Position {
            "character": 5,
            "line": 10,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 10,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 11,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 11,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 11,
            },
            "start": Position {
              "character": 10,
              "line": 11,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 11,
              },
              "raw": "\\"||¯¯  \\"",
              "start": Position {
                "character": 10,
                "line": 11,
              },
              "type": "StringLiteral",
              "value": "||¯¯  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 11,
            },
            "start": Position {
              "character": 20,
              "line": 11,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 11,
              },
              "raw": "\\"|| \\\\\\\\ \\"",
              "start": Position {
                "character": 20,
                "line": 11,
              },
              "type": "StringLiteral",
              "value": "|| \\\\\\\\ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 11,
            },
            "start": Position {
              "character": 30,
              "line": 11,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 11,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 30,
                "line": 11,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 11,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 11,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 11,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 11,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 11,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 11,
          },
          "name": "g",
          "start": Position {
            "character": 5,
            "line": 11,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 11,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 12,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 12,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 12,
            },
            "start": Position {
              "character": 10,
              "line": 12,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 12,
              },
              "raw": "\\"|| || \\"",
              "start": Position {
                "character": 10,
                "line": 12,
              },
              "type": "StringLiteral",
              "value": "|| || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 12,
            },
            "start": Position {
              "character": 20,
              "line": 12,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 12,
              },
              "raw": "\\"||-|| \\"",
              "start": Position {
                "character": 20,
                "line": 12,
              },
              "type": "StringLiteral",
              "value": "||-|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 12,
            },
            "start": Position {
              "character": 30,
              "line": 12,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 12,
              },
              "raw": "\\"|| || \\"",
              "start": Position {
                "character": 30,
                "line": 12,
              },
              "type": "StringLiteral",
              "value": "|| || ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 12,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 12,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 12,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 12,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 12,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 12,
          },
          "name": "h",
          "start": Position {
            "character": 5,
            "line": 12,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 12,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 30,
        "line": 13,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 30,
          "line": 13,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 15,
              "line": 13,
            },
            "start": Position {
              "character": 10,
              "line": 13,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 15,
                "line": 13,
              },
              "raw": "\\"|| \\"",
              "start": Position {
                "character": 10,
                "line": 13,
              },
              "type": "StringLiteral",
              "value": "|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 22,
              "line": 13,
            },
            "start": Position {
              "character": 17,
              "line": 13,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 22,
                "line": 13,
              },
              "raw": "\\"|| \\"",
              "start": Position {
                "character": 17,
                "line": 13,
              },
              "type": "StringLiteral",
              "value": "|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 29,
              "line": 13,
            },
            "start": Position {
              "character": 24,
              "line": 13,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 29,
                "line": 13,
              },
              "raw": "\\"|| \\"",
              "start": Position {
                "character": 24,
                "line": 13,
              },
              "type": "StringLiteral",
              "value": "|| ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 13,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 13,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 13,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 13,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 13,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 13,
          },
          "name": "i",
          "start": Position {
            "character": 5,
            "line": 13,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 13,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 14,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 14,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 14,
            },
            "start": Position {
              "character": 10,
              "line": 14,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 14,
              },
              "raw": "\\" ¯||¯ \\"",
              "start": Position {
                "character": 10,
                "line": 14,
              },
              "type": "StringLiteral",
              "value": " ¯||¯ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 14,
            },
            "start": Position {
              "character": 20,
              "line": 14,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 14,
              },
              "raw": "\\"  ||  \\"",
              "start": Position {
                "character": 20,
                "line": 14,
              },
              "type": "StringLiteral",
              "value": "  ||  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 14,
            },
            "start": Position {
              "character": 30,
              "line": 14,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 14,
              },
              "raw": "\\"|_||  \\"",
              "start": Position {
                "character": 30,
                "line": 14,
              },
              "type": "StringLiteral",
              "value": "|_||  ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 14,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 14,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 14,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 14,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 14,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 14,
          },
          "name": "j",
          "start": Position {
            "character": 5,
            "line": 14,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 14,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 15,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 15,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 15,
            },
            "start": Position {
              "character": 10,
              "line": 15,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 15,
              },
              "raw": "\\"||  / \\"",
              "start": Position {
                "character": 10,
                "line": 15,
              },
              "type": "StringLiteral",
              "value": "||  / ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 15,
            },
            "start": Position {
              "character": 20,
              "line": 15,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 15,
              },
              "raw": "\\"|| /  \\"",
              "start": Position {
                "character": 20,
                "line": 15,
              },
              "type": "StringLiteral",
              "value": "|| /  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 15,
            },
            "start": Position {
              "character": 30,
              "line": 15,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 15,
              },
              "raw": "\\"||¯\\\\\\\\ \\"",
              "start": Position {
                "character": 30,
                "line": 15,
              },
              "type": "StringLiteral",
              "value": "||¯\\\\\\\\ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 15,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 15,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 15,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 15,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 15,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 15,
          },
          "name": "k",
          "start": Position {
            "character": 5,
            "line": 15,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 15,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 33,
        "line": 16,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 33,
          "line": 16,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 16,
              "line": 16,
            },
            "start": Position {
              "character": 10,
              "line": 16,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 16,
                "line": 16,
              },
              "raw": "\\"||  \\"",
              "start": Position {
                "character": 10,
                "line": 16,
              },
              "type": "StringLiteral",
              "value": "||  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 24,
              "line": 16,
            },
            "start": Position {
              "character": 18,
              "line": 16,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 24,
                "line": 16,
              },
              "raw": "\\"||  \\"",
              "start": Position {
                "character": 18,
                "line": 16,
              },
              "type": "StringLiteral",
              "value": "||  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 32,
              "line": 16,
            },
            "start": Position {
              "character": 26,
              "line": 16,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 32,
                "line": 16,
              },
              "raw": "\\"||_ \\"",
              "start": Position {
                "character": 26,
                "line": 16,
              },
              "type": "StringLiteral",
              "value": "||_ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 16,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 16,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 16,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 16,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 16,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 16,
          },
          "name": "l",
          "start": Position {
            "character": 5,
            "line": 16,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 16,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 45,
        "line": 17,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 45,
          "line": 17,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 20,
              "line": 17,
            },
            "start": Position {
              "character": 10,
              "line": 17,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 17,
              },
              "raw": "\\"||\\\\\\\\/|| \\"",
              "start": Position {
                "character": 10,
                "line": 17,
              },
              "type": "StringLiteral",
              "value": "||\\\\\\\\/|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 32,
              "line": 17,
            },
            "start": Position {
              "character": 22,
              "line": 17,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 32,
                "line": 17,
              },
              "raw": "\\"||   || \\"",
              "start": Position {
                "character": 22,
                "line": 17,
              },
              "type": "StringLiteral",
              "value": "||   || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 44,
              "line": 17,
            },
            "start": Position {
              "character": 34,
              "line": 17,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 44,
                "line": 17,
              },
              "raw": "\\"||   || \\"",
              "start": Position {
                "character": 34,
                "line": 17,
              },
              "type": "StringLiteral",
              "value": "||   || ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 17,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 17,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 17,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 17,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 17,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 17,
          },
          "name": "m",
          "start": Position {
            "character": 5,
            "line": 17,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 17,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 45,
        "line": 18,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 45,
          "line": 18,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 20,
              "line": 18,
            },
            "start": Position {
              "character": 10,
              "line": 18,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 18,
              },
              "raw": "\\"||\\\\\\\\ || \\"",
              "start": Position {
                "character": 10,
                "line": 18,
              },
              "type": "StringLiteral",
              "value": "||\\\\\\\\ || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 32,
              "line": 18,
            },
            "start": Position {
              "character": 22,
              "line": 18,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 32,
                "line": 18,
              },
              "raw": "\\"|| \\\\\\\\|| \\"",
              "start": Position {
                "character": 22,
                "line": 18,
              },
              "type": "StringLiteral",
              "value": "|| \\\\\\\\|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 44,
              "line": 18,
            },
            "start": Position {
              "character": 34,
              "line": 18,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 44,
                "line": 18,
              },
              "raw": "\\"||  \\\\|| \\"",
              "start": Position {
                "character": 34,
                "line": 18,
              },
              "type": "StringLiteral",
              "value": "||  \\\\|| ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 18,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 18,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 18,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 18,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 18,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 18,
          },
          "name": "n",
          "start": Position {
            "character": 5,
            "line": 18,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 18,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 19,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 19,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 19,
            },
            "start": Position {
              "character": 10,
              "line": 19,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 19,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 10,
                "line": 19,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 19,
            },
            "start": Position {
              "character": 20,
              "line": 19,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 19,
              },
              "raw": "\\"|| || \\"",
              "start": Position {
                "character": 20,
                "line": 19,
              },
              "type": "StringLiteral",
              "value": "|| || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 19,
            },
            "start": Position {
              "character": 30,
              "line": 19,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 19,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 30,
                "line": 19,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 19,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 19,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 19,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 19,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 19,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 19,
          },
          "name": "o",
          "start": Position {
            "character": 5,
            "line": 19,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 19,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 20,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 20,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 20,
            },
            "start": Position {
              "character": 10,
              "line": 20,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 20,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 10,
                "line": 20,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 20,
            },
            "start": Position {
              "character": 20,
              "line": 20,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 20,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 20,
                "line": 20,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 20,
            },
            "start": Position {
              "character": 30,
              "line": 20,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 20,
              },
              "raw": "\\"||    \\"",
              "start": Position {
                "character": 30,
                "line": 20,
              },
              "type": "StringLiteral",
              "value": "||    ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 20,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 20,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 20,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 20,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 20,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 20,
          },
          "name": "p",
          "start": Position {
            "character": 5,
            "line": 20,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 20,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 42,
        "line": 21,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 42,
          "line": 21,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 19,
              "line": 21,
            },
            "start": Position {
              "character": 10,
              "line": 21,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 21,
              },
              "raw": "\\"||¯||  \\"",
              "start": Position {
                "character": 10,
                "line": 21,
              },
              "type": "StringLiteral",
              "value": "||¯||  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 30,
              "line": 21,
            },
            "start": Position {
              "character": 21,
              "line": 21,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 30,
                "line": 21,
              },
              "raw": "\\"|| ||  \\"",
              "start": Position {
                "character": 21,
                "line": 21,
              },
              "type": "StringLiteral",
              "value": "|| ||  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 41,
              "line": 21,
            },
            "start": Position {
              "character": 32,
              "line": 21,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 41,
                "line": 21,
              },
              "raw": "\\"||_||¬ \\"",
              "start": Position {
                "character": 32,
                "line": 21,
              },
              "type": "StringLiteral",
              "value": "||_||¬ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 21,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 21,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 21,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 21,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 21,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 21,
          },
          "name": "q",
          "start": Position {
            "character": 5,
            "line": 21,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 21,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 22,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 22,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 22,
            },
            "start": Position {
              "character": 10,
              "line": 22,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 22,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 10,
                "line": 22,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 22,
            },
            "start": Position {
              "character": 20,
              "line": 22,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 22,
              },
              "raw": "\\"||¯\\\\\\\\ \\"",
              "start": Position {
                "character": 20,
                "line": 22,
              },
              "type": "StringLiteral",
              "value": "||¯\\\\\\\\ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 22,
            },
            "start": Position {
              "character": 30,
              "line": 22,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 22,
              },
              "raw": "\\"|| || \\"",
              "start": Position {
                "character": 30,
                "line": 22,
              },
              "type": "StringLiteral",
              "value": "|| || ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 22,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 22,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 22,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 22,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 22,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 22,
          },
          "name": "r",
          "start": Position {
            "character": 5,
            "line": 22,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 22,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 36,
        "line": 23,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 36,
          "line": 23,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 17,
              "line": 23,
            },
            "start": Position {
              "character": 10,
              "line": 23,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 17,
                "line": 23,
              },
              "raw": "\\"||¯¯ \\"",
              "start": Position {
                "character": 10,
                "line": 23,
              },
              "type": "StringLiteral",
              "value": "||¯¯ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 26,
              "line": 23,
            },
            "start": Position {
              "character": 19,
              "line": 23,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 26,
                "line": 23,
              },
              "raw": "\\" \\\\\\\\  \\"",
              "start": Position {
                "character": 19,
                "line": 23,
              },
              "type": "StringLiteral",
              "value": " \\\\\\\\  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 35,
              "line": 23,
            },
            "start": Position {
              "character": 28,
              "line": 23,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 35,
                "line": 23,
              },
              "raw": "\\"__|| \\"",
              "start": Position {
                "character": 28,
                "line": 23,
              },
              "type": "StringLiteral",
              "value": "__|| ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 23,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 23,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 23,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 23,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 23,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 23,
          },
          "name": "s",
          "start": Position {
            "character": 5,
            "line": 23,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 23,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 36,
        "line": 24,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 36,
          "line": 24,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 17,
              "line": 24,
            },
            "start": Position {
              "character": 10,
              "line": 24,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 17,
                "line": 24,
              },
              "raw": "\\"¯||¯ \\"",
              "start": Position {
                "character": 10,
                "line": 24,
              },
              "type": "StringLiteral",
              "value": "¯||¯ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 26,
              "line": 24,
            },
            "start": Position {
              "character": 19,
              "line": 24,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 26,
                "line": 24,
              },
              "raw": "\\" ||  \\"",
              "start": Position {
                "character": 19,
                "line": 24,
              },
              "type": "StringLiteral",
              "value": " ||  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 35,
              "line": 24,
            },
            "start": Position {
              "character": 28,
              "line": 24,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 35,
                "line": 24,
              },
              "raw": "\\" ||  \\"",
              "start": Position {
                "character": 28,
                "line": 24,
              },
              "type": "StringLiteral",
              "value": " ||  ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 24,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 24,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 24,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 24,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 24,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 24,
          },
          "name": "t",
          "start": Position {
            "character": 5,
            "line": 24,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 24,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 25,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 25,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 25,
            },
            "start": Position {
              "character": 10,
              "line": 25,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 25,
              },
              "raw": "\\"|| || \\"",
              "start": Position {
                "character": 10,
                "line": 25,
              },
              "type": "StringLiteral",
              "value": "|| || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 25,
            },
            "start": Position {
              "character": 20,
              "line": 25,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 25,
              },
              "raw": "\\"|| || \\"",
              "start": Position {
                "character": 20,
                "line": 25,
              },
              "type": "StringLiteral",
              "value": "|| || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 25,
            },
            "start": Position {
              "character": 30,
              "line": 25,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 25,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 30,
                "line": 25,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 25,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 25,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 25,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 25,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 25,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 25,
          },
          "name": "u",
          "start": Position {
            "character": 5,
            "line": 25,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 25,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 26,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 26,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 26,
            },
            "start": Position {
              "character": 10,
              "line": 26,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 26,
              },
              "raw": "\\"\\\\\\\\ || \\"",
              "start": Position {
                "character": 10,
                "line": 26,
              },
              "type": "StringLiteral",
              "value": "\\\\\\\\ || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 26,
            },
            "start": Position {
              "character": 20,
              "line": 26,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 26,
              },
              "raw": "\\" \\\\\\\\|| \\"",
              "start": Position {
                "character": 20,
                "line": 26,
              },
              "type": "StringLiteral",
              "value": " \\\\\\\\|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 26,
            },
            "start": Position {
              "character": 30,
              "line": 26,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 26,
              },
              "raw": "\\"  \\\\\\\\| \\"",
              "start": Position {
                "character": 30,
                "line": 26,
              },
              "type": "StringLiteral",
              "value": "  \\\\\\\\| ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 26,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 26,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 26,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 26,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 26,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 26,
          },
          "name": "v",
          "start": Position {
            "character": 5,
            "line": 26,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 26,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 48,
        "line": 27,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 48,
          "line": 27,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 21,
              "line": 27,
            },
            "start": Position {
              "character": 10,
              "line": 27,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 21,
                "line": 27,
              },
              "raw": "\\"\\\\\\\\ |\\\\\\\\ | \\"",
              "start": Position {
                "character": 10,
                "line": 27,
              },
              "type": "StringLiteral",
              "value": "\\\\\\\\ |\\\\\\\\ | ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 34,
              "line": 27,
            },
            "start": Position {
              "character": 23,
              "line": 27,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 34,
                "line": 27,
              },
              "raw": "\\" \\\\\\\\| \\\\\\\\| \\"",
              "start": Position {
                "character": 23,
                "line": 27,
              },
              "type": "StringLiteral",
              "value": " \\\\\\\\| \\\\\\\\| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 47,
              "line": 27,
            },
            "start": Position {
              "character": 36,
              "line": 27,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 47,
                "line": 27,
              },
              "raw": "\\"  \\\\\\\\  \\\\\\\\ \\"",
              "start": Position {
                "character": 36,
                "line": 27,
              },
              "type": "StringLiteral",
              "value": "  \\\\\\\\  \\\\\\\\ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 27,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 27,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 27,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 27,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 27,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 27,
          },
          "name": "w",
          "start": Position {
            "character": 5,
            "line": 27,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 27,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 28,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 28,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 18,
              "line": 28,
            },
            "start": Position {
              "character": 10,
              "line": 28,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 28,
              },
              "raw": "\\"\\\\\\\\  / \\"",
              "start": Position {
                "character": 10,
                "line": 28,
              },
              "type": "StringLiteral",
              "value": "\\\\\\\\  / ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 28,
              "line": 28,
            },
            "start": Position {
              "character": 20,
              "line": 28,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 28,
                "line": 28,
              },
              "raw": "\\" \\\\\\\\/  \\"",
              "start": Position {
                "character": 20,
                "line": 28,
              },
              "type": "StringLiteral",
              "value": " \\\\\\\\/  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 28,
            },
            "start": Position {
              "character": 30,
              "line": 28,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 28,
              },
              "raw": "\\" //\\\\  \\"",
              "start": Position {
                "character": 30,
                "line": 28,
              },
              "type": "StringLiteral",
              "value": " //\\\\  ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 28,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 28,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 28,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 28,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 28,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 28,
          },
          "name": "x",
          "start": Position {
            "character": 5,
            "line": 28,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 28,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 42,
        "line": 29,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 42,
          "line": 29,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 19,
              "line": 29,
            },
            "start": Position {
              "character": 10,
              "line": 29,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 29,
              },
              "raw": "\\"\\\\\\\\  // \\"",
              "start": Position {
                "character": 10,
                "line": 29,
              },
              "type": "StringLiteral",
              "value": "\\\\\\\\  // ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 30,
              "line": 29,
            },
            "start": Position {
              "character": 21,
              "line": 29,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 30,
                "line": 29,
              },
              "raw": "\\" \\\\\\\\//  \\"",
              "start": Position {
                "character": 21,
                "line": 29,
              },
              "type": "StringLiteral",
              "value": " \\\\\\\\//  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 41,
              "line": 29,
            },
            "start": Position {
              "character": 32,
              "line": 29,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 41,
                "line": 29,
              },
              "raw": "\\"  ||   \\"",
              "start": Position {
                "character": 32,
                "line": 29,
              },
              "type": "StringLiteral",
              "value": "  ||   ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 29,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 29,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 29,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 29,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 29,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 29,
          },
          "name": "y",
          "start": Position {
            "character": 5,
            "line": 29,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 29,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 33,
        "line": 30,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 33,
          "line": 30,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 16,
              "line": 30,
            },
            "start": Position {
              "character": 10,
              "line": 30,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 16,
                "line": 30,
              },
              "raw": "\\"¯// \\"",
              "start": Position {
                "character": 10,
                "line": 30,
              },
              "type": "StringLiteral",
              "value": "¯// ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 24,
              "line": 30,
            },
            "start": Position {
              "character": 18,
              "line": 30,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 24,
                "line": 30,
              },
              "raw": "\\"//  \\"",
              "start": Position {
                "character": 18,
                "line": 30,
              },
              "type": "StringLiteral",
              "value": "//  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 32,
              "line": 30,
            },
            "start": Position {
              "character": 26,
              "line": 30,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 32,
                "line": 30,
              },
              "raw": "\\"||_ \\"",
              "start": Position {
                "character": 26,
                "line": 30,
              },
              "type": "StringLiteral",
              "value": "||_ ",
            },
          },
        ],
        "start": Position {
          "character": 9,
          "line": 30,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 30,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 30,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 30,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 8,
          "line": 30,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 30,
          },
          "name": "z",
          "start": Position {
            "character": 5,
            "line": 30,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 4,
          "line": 30,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 42,
        "line": 31,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 42,
          "line": 31,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 21,
              "line": 31,
            },
            "start": Position {
              "character": 13,
              "line": 31,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 21,
                "line": 31,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 13,
                "line": 31,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 31,
              "line": 31,
            },
            "start": Position {
              "character": 23,
              "line": 31,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 31,
                "line": 31,
              },
              "raw": "\\"||x|| \\"",
              "start": Position {
                "character": 23,
                "line": 31,
              },
              "type": "StringLiteral",
              "value": "||x|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 41,
              "line": 31,
            },
            "start": Position {
              "character": 33,
              "line": 31,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 41,
                "line": 31,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 33,
                "line": 31,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 31,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 31,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 31,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 31,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 31,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 31,
          },
          "raw": "\\"0\\"",
          "start": Position {
            "character": 5,
            "line": 31,
          },
          "type": "StringLiteral",
          "value": "0",
        },
        "start": Position {
          "character": 5,
          "line": 31,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 36,
        "line": 32,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 36,
          "line": 32,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 19,
              "line": 32,
            },
            "start": Position {
              "character": 13,
              "line": 32,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 32,
              },
              "raw": "\\"'|| \\"",
              "start": Position {
                "character": 13,
                "line": 32,
              },
              "type": "StringLiteral",
              "value": "'|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 27,
              "line": 32,
            },
            "start": Position {
              "character": 21,
              "line": 32,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 27,
                "line": 32,
              },
              "raw": "\\" || \\"",
              "start": Position {
                "character": 21,
                "line": 32,
              },
              "type": "StringLiteral",
              "value": " || ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 35,
              "line": 32,
            },
            "start": Position {
              "character": 29,
              "line": 32,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 35,
                "line": 32,
              },
              "raw": "\\" || \\"",
              "start": Position {
                "character": 29,
                "line": 32,
              },
              "type": "StringLiteral",
              "value": " || ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 32,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 32,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 32,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 32,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 32,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 32,
          },
          "raw": "\\"1\\"",
          "start": Position {
            "character": 5,
            "line": 32,
          },
          "type": "StringLiteral",
          "value": "1",
        },
        "start": Position {
          "character": 5,
          "line": 32,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 33,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 33,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 20,
              "line": 33,
            },
            "start": Position {
              "character": 13,
              "line": 33,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 33,
              },
              "raw": "\\"¯¯|| \\"",
              "start": Position {
                "character": 13,
                "line": 33,
              },
              "type": "StringLiteral",
              "value": "¯¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 29,
              "line": 33,
            },
            "start": Position {
              "character": 22,
              "line": 33,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 29,
                "line": 33,
              },
              "raw": "\\"||¯  \\"",
              "start": Position {
                "character": 22,
                "line": 33,
              },
              "type": "StringLiteral",
              "value": "||¯  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 33,
            },
            "start": Position {
              "character": 31,
              "line": 33,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 33,
              },
              "raw": "\\"||_  \\"",
              "start": Position {
                "character": 31,
                "line": 33,
              },
              "type": "StringLiteral",
              "value": "||_  ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 33,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 33,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 33,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 33,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 33,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 33,
          },
          "raw": "\\"2\\"",
          "start": Position {
            "character": 5,
            "line": 33,
          },
          "type": "StringLiteral",
          "value": "2",
        },
        "start": Position {
          "character": 5,
          "line": 33,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 36,
        "line": 34,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 36,
          "line": 34,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 19,
              "line": 34,
            },
            "start": Position {
              "character": 13,
              "line": 34,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 34,
              },
              "raw": "\\"¯|| \\"",
              "start": Position {
                "character": 13,
                "line": 34,
              },
              "type": "StringLiteral",
              "value": "¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 27,
              "line": 34,
            },
            "start": Position {
              "character": 21,
              "line": 34,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 27,
                "line": 34,
              },
              "raw": "\\"-|| \\"",
              "start": Position {
                "character": 21,
                "line": 34,
              },
              "type": "StringLiteral",
              "value": "-|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 35,
              "line": 34,
            },
            "start": Position {
              "character": 29,
              "line": 34,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 35,
                "line": 34,
              },
              "raw": "\\"_|| \\"",
              "start": Position {
                "character": 29,
                "line": 34,
              },
              "type": "StringLiteral",
              "value": "_|| ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 34,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 34,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 34,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 34,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 34,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 34,
          },
          "raw": "\\"3\\"",
          "start": Position {
            "character": 5,
            "line": 34,
          },
          "type": "StringLiteral",
          "value": "3",
        },
        "start": Position {
          "character": 5,
          "line": 34,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 35,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 35,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 20,
              "line": 35,
            },
            "start": Position {
              "character": 13,
              "line": 35,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 35,
              },
              "raw": "\\" /|| \\"",
              "start": Position {
                "character": 13,
                "line": 35,
              },
              "type": "StringLiteral",
              "value": " /|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 29,
              "line": 35,
            },
            "start": Position {
              "character": 22,
              "line": 35,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 29,
                "line": 35,
              },
              "raw": "\\"/_|| \\"",
              "start": Position {
                "character": 22,
                "line": 35,
              },
              "type": "StringLiteral",
              "value": "/_|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 35,
            },
            "start": Position {
              "character": 31,
              "line": 35,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 35,
              },
              "raw": "\\"  || \\"",
              "start": Position {
                "character": 31,
                "line": 35,
              },
              "type": "StringLiteral",
              "value": "  || ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 35,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 35,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 35,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 35,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 35,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 35,
          },
          "raw": "\\"4\\"",
          "start": Position {
            "character": 5,
            "line": 35,
          },
          "type": "StringLiteral",
          "value": "4",
        },
        "start": Position {
          "character": 5,
          "line": 35,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 36,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 36,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 20,
              "line": 36,
            },
            "start": Position {
              "character": 13,
              "line": 36,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 36,
              },
              "raw": "\\"||¯¯ \\"",
              "start": Position {
                "character": 13,
                "line": 36,
              },
              "type": "StringLiteral",
              "value": "||¯¯ ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 29,
              "line": 36,
            },
            "start": Position {
              "character": 22,
              "line": 36,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 29,
                "line": 36,
              },
              "raw": "\\" ¯|| \\"",
              "start": Position {
                "character": 22,
                "line": 36,
              },
              "type": "StringLiteral",
              "value": " ¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 36,
            },
            "start": Position {
              "character": 31,
              "line": 36,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 36,
              },
              "raw": "\\" _|| \\"",
              "start": Position {
                "character": 31,
                "line": 36,
              },
              "type": "StringLiteral",
              "value": " _|| ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 36,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 36,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 36,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 36,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 36,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 36,
          },
          "raw": "\\"5\\"",
          "start": Position {
            "character": 5,
            "line": 36,
          },
          "type": "StringLiteral",
          "value": "5",
        },
        "start": Position {
          "character": 5,
          "line": 36,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 42,
        "line": 37,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 42,
          "line": 37,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 21,
              "line": 37,
            },
            "start": Position {
              "character": 13,
              "line": 37,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 21,
                "line": 37,
              },
              "raw": "\\"||¯¯  \\"",
              "start": Position {
                "character": 13,
                "line": 37,
              },
              "type": "StringLiteral",
              "value": "||¯¯  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 31,
              "line": 37,
            },
            "start": Position {
              "character": 23,
              "line": 37,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 31,
                "line": 37,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 23,
                "line": 37,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 41,
              "line": 37,
            },
            "start": Position {
              "character": 33,
              "line": 37,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 41,
                "line": 37,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 33,
                "line": 37,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 37,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 37,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 37,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 37,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 37,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 37,
          },
          "raw": "\\"6\\"",
          "start": Position {
            "character": 5,
            "line": 37,
          },
          "type": "StringLiteral",
          "value": "6",
        },
        "start": Position {
          "character": 5,
          "line": 37,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 39,
        "line": 38,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 39,
          "line": 38,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 20,
              "line": 38,
            },
            "start": Position {
              "character": 13,
              "line": 38,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 38,
              },
              "raw": "\\"¯¯// \\"",
              "start": Position {
                "character": 13,
                "line": 38,
              },
              "type": "StringLiteral",
              "value": "¯¯// ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 29,
              "line": 38,
            },
            "start": Position {
              "character": 22,
              "line": 38,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 29,
                "line": 38,
              },
              "raw": "\\" //  \\"",
              "start": Position {
                "character": 22,
                "line": 38,
              },
              "type": "StringLiteral",
              "value": " //  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 38,
              "line": 38,
            },
            "start": Position {
              "character": 31,
              "line": 38,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 38,
                "line": 38,
              },
              "raw": "\\"//   \\"",
              "start": Position {
                "character": 31,
                "line": 38,
              },
              "type": "StringLiteral",
              "value": "//   ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 38,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 38,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 38,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 38,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 38,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 38,
          },
          "raw": "\\"7\\"",
          "start": Position {
            "character": 5,
            "line": 38,
          },
          "type": "StringLiteral",
          "value": "7",
        },
        "start": Position {
          "character": 5,
          "line": 38,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 42,
        "line": 39,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 42,
          "line": 39,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 21,
              "line": 39,
            },
            "start": Position {
              "character": 13,
              "line": 39,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 21,
                "line": 39,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 13,
                "line": 39,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 31,
              "line": 39,
            },
            "start": Position {
              "character": 23,
              "line": 39,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 31,
                "line": 39,
              },
              "raw": "\\"||-|| \\"",
              "start": Position {
                "character": 23,
                "line": 39,
              },
              "type": "StringLiteral",
              "value": "||-|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 41,
              "line": 39,
            },
            "start": Position {
              "character": 33,
              "line": 39,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 41,
                "line": 39,
              },
              "raw": "\\"||_|| \\"",
              "start": Position {
                "character": 33,
                "line": 39,
              },
              "type": "StringLiteral",
              "value": "||_|| ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 39,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 39,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 39,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 39,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 39,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 39,
          },
          "raw": "\\"8\\"",
          "start": Position {
            "character": 5,
            "line": 39,
          },
          "type": "StringLiteral",
          "value": "8",
        },
        "start": Position {
          "character": 5,
          "line": 39,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 42,
        "line": 40,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 42,
          "line": 40,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 21,
              "line": 40,
            },
            "start": Position {
              "character": 13,
              "line": 40,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 21,
                "line": 40,
              },
              "raw": "\\"||¯|| \\"",
              "start": Position {
                "character": 13,
                "line": 40,
              },
              "type": "StringLiteral",
              "value": "||¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 31,
              "line": 40,
            },
            "start": Position {
              "character": 23,
              "line": 40,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 31,
                "line": 40,
              },
              "raw": "\\"  ¯|| \\"",
              "start": Position {
                "character": 23,
                "line": 40,
              },
              "type": "StringLiteral",
              "value": "  ¯|| ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 41,
              "line": 40,
            },
            "start": Position {
              "character": 33,
              "line": 40,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 41,
                "line": 40,
              },
              "raw": "\\"  //  \\"",
              "start": Position {
                "character": 33,
                "line": 40,
              },
              "type": "StringLiteral",
              "value": "  //  ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 40,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 40,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 40,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 40,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 40,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 40,
          },
          "raw": "\\"9\\"",
          "start": Position {
            "character": 5,
            "line": 40,
          },
          "type": "StringLiteral",
          "value": "9",
        },
        "start": Position {
          "character": 5,
          "line": 40,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 30,
        "line": 41,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 30,
          "line": 41,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 17,
              "line": 41,
            },
            "start": Position {
              "character": 13,
              "line": 41,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 17,
                "line": 41,
              },
              "raw": "\\"  \\"",
              "start": Position {
                "character": 13,
                "line": 41,
              },
              "type": "StringLiteral",
              "value": "  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 23,
              "line": 41,
            },
            "start": Position {
              "character": 19,
              "line": 41,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 23,
                "line": 41,
              },
              "raw": "\\"  \\"",
              "start": Position {
                "character": 19,
                "line": 41,
              },
              "type": "StringLiteral",
              "value": "  ",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 29,
              "line": 41,
            },
            "start": Position {
              "character": 25,
              "line": 41,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 29,
                "line": 41,
              },
              "raw": "\\"  \\"",
              "start": Position {
                "character": 25,
                "line": 41,
              },
              "type": "StringLiteral",
              "value": "  ",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 41,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 41,
      },
      "type": "AssignmentStatement",
      "variable": ASTIndexExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 4,
            "line": 41,
          },
          "name": "map",
          "start": Position {
            "character": 1,
            "line": 41,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 41,
        },
        "index": ASTLiteral {
          "end": Position {
            "character": 8,
            "line": 41,
          },
          "raw": "\\" \\"",
          "start": Position {
            "character": 5,
            "line": 41,
          },
          "type": "StringLiteral",
          "value": " ",
        },
        "start": Position {
          "character": 5,
          "line": 41,
        },
        "type": "IndexExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 19,
        "line": 43,
      },
      "init": ASTIdentifier {
        "end": Position {
          "character": 19,
          "line": 43,
        },
        "name": "map",
        "start": Position {
          "character": 16,
          "line": 43,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 1,
        "line": 43,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 9,
            "line": 43,
          },
          "name": "AsciiGen",
          "start": Position {
            "character": 1,
            "line": 43,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 15,
          "line": 43,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 43,
          },
          "name": "MAP",
          "start": Position {
            "character": 10,
            "line": 43,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 9,
          "line": 43,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 69,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 21,
              "line": 46,
            },
            "init": ASTListConstructorExpression {
              "end": Position {
                "character": 21,
                "line": 46,
              },
              "fields": Array [
                ASTListValue {
                  "end": Position {
                    "character": 12,
                    "line": 46,
                  },
                  "start": Position {
                    "character": 10,
                    "line": 46,
                  },
                  "type": "ListValue",
                  "value": ASTListConstructorExpression {
                    "end": Position {
                      "character": 12,
                      "line": 46,
                    },
                    "fields": Array [],
                    "start": Position {
                      "character": 10,
                      "line": 46,
                    },
                    "type": "ListConstructorExpression",
                  },
                },
                ASTListValue {
                  "end": Position {
                    "character": 16,
                    "line": 46,
                  },
                  "start": Position {
                    "character": 14,
                    "line": 46,
                  },
                  "type": "ListValue",
                  "value": ASTListConstructorExpression {
                    "end": Position {
                      "character": 16,
                      "line": 46,
                    },
                    "fields": Array [],
                    "start": Position {
                      "character": 14,
                      "line": 46,
                    },
                    "type": "ListConstructorExpression",
                  },
                },
                ASTListValue {
                  "end": Position {
                    "character": 20,
                    "line": 46,
                  },
                  "start": Position {
                    "character": 18,
                    "line": 46,
                  },
                  "type": "ListValue",
                  "value": ASTListConstructorExpression {
                    "end": Position {
                      "character": 20,
                      "line": 46,
                    },
                    "fields": Array [],
                    "start": Position {
                      "character": 18,
                      "line": 46,
                    },
                    "type": "ListConstructorExpression",
                  },
                },
              ],
              "start": Position {
                "character": 9,
                "line": 46,
              },
              "type": "ListConstructorExpression",
            },
            "start": Position {
              "character": 5,
              "line": 46,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 6,
                "line": 46,
              },
              "name": "r",
              "start": Position {
                "character": 5,
                "line": 46,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 21,
              "line": 47,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 17,
                  "line": 47,
                },
                "name": "self",
                "start": Position {
                  "character": 13,
                  "line": 47,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 21,
                "line": 47,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 21,
                  "line": 47,
                },
                "name": "MAP",
                "start": Position {
                  "character": 18,
                  "line": 47,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 17,
                "line": 47,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 47,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 47,
              },
              "name": "signs",
              "start": Position {
                "character": 5,
                "line": 47,
              },
              "type": "Identifier",
            },
          },
          ASTForGenericStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 26,
                  "line": 50,
                },
                "init": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 20,
                      "line": 50,
                    },
                    "name": "char",
                    "start": Position {
                      "character": 16,
                      "line": 50,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 26,
                    "line": 50,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 26,
                      "line": 50,
                    },
                    "name": "lower",
                    "start": Position {
                      "character": 21,
                      "line": 50,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 20,
                    "line": 50,
                  },
                  "type": "MemberExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 50,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 13,
                    "line": 50,
                  },
                  "name": "char",
                  "start": Position {
                    "character": 9,
                    "line": 50,
                  },
                  "type": "Identifier",
                },
              },
              ASTIfStatement {
                "clauses": Array [
                  ASTIfClause {
                    "body": Array [
                      ASTCallStatement {
                        "end": Position {
                          "character": 38,
                          "line": 52,
                        },
                        "expression": ASTCallExpression {
                          "arguments": Array [
                            ASTIndexExpression {
                              "base": ASTIndexExpression {
                                "base": ASTIdentifier {
                                  "end": Position {
                                    "character": 28,
                                    "line": 52,
                                  },
                                  "name": "signs",
                                  "start": Position {
                                    "character": 23,
                                    "line": 52,
                                  },
                                  "type": "Identifier",
                                },
                                "end": Position {
                                  "character": 35,
                                  "line": 52,
                                },
                                "index": ASTIdentifier {
                                  "end": Position {
                                    "character": 33,
                                    "line": 52,
                                  },
                                  "name": "char",
                                  "start": Position {
                                    "character": 29,
                                    "line": 52,
                                  },
                                  "type": "Identifier",
                                },
                                "start": Position {
                                  "character": 29,
                                  "line": 52,
                                },
                                "type": "IndexExpression",
                              },
                              "end": Position {
                                "character": 38,
                                "line": 52,
                              },
                              "index": ASTLiteral {
                                "end": Position {
                                  "character": 36,
                                  "line": 52,
                                },
                                "raw": "0",
                                "start": Position {
                                  "character": 35,
                                  "line": 52,
                                },
                                "type": "NumericLiteral",
                                "value": 0,
                              },
                              "start": Position {
                                "character": 35,
                                "line": 52,
                              },
                              "type": "IndexExpression",
                            },
                          ],
                          "base": ASTMemberExpression {
                            "base": ASTIndexExpression {
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 14,
                                  "line": 52,
                                },
                                "name": "r",
                                "start": Position {
                                  "character": 13,
                                  "line": 52,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 18,
                                "line": 52,
                              },
                              "index": ASTLiteral {
                                "end": Position {
                                  "character": 16,
                                  "line": 52,
                                },
                                "raw": "0",
                                "start": Position {
                                  "character": 15,
                                  "line": 52,
                                },
                                "type": "NumericLiteral",
                                "value": 0,
                              },
                              "start": Position {
                                "character": 15,
                                "line": 52,
                              },
                              "type": "IndexExpression",
                            },
                            "end": Position {
                              "character": 23,
                              "line": 52,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 22,
                                "line": 52,
                              },
                              "name": "push",
                              "start": Position {
                                "character": 18,
                                "line": 52,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 17,
                              "line": 52,
                            },
                            "type": "MemberExpression",
                          },
                          "end": Position {
                            "character": 38,
                            "line": 52,
                          },
                          "start": Position {
                            "character": 22,
                            "line": 52,
                          },
                          "type": "CallExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 52,
                        },
                        "type": "CallStatement",
                      },
                      ASTCallStatement {
                        "end": Position {
                          "character": 38,
                          "line": 53,
                        },
                        "expression": ASTCallExpression {
                          "arguments": Array [
                            ASTIndexExpression {
                              "base": ASTIndexExpression {
                                "base": ASTIdentifier {
                                  "end": Position {
                                    "character": 28,
                                    "line": 53,
                                  },
                                  "name": "signs",
                                  "start": Position {
                                    "character": 23,
                                    "line": 53,
                                  },
                                  "type": "Identifier",
                                },
                                "end": Position {
                                  "character": 35,
                                  "line": 53,
                                },
                                "index": ASTIdentifier {
                                  "end": Position {
                                    "character": 33,
                                    "line": 53,
                                  },
                                  "name": "char",
                                  "start": Position {
                                    "character": 29,
                                    "line": 53,
                                  },
                                  "type": "Identifier",
                                },
                                "start": Position {
                                  "character": 29,
                                  "line": 53,
                                },
                                "type": "IndexExpression",
                              },
                              "end": Position {
                                "character": 38,
                                "line": 53,
                              },
                              "index": ASTLiteral {
                                "end": Position {
                                  "character": 36,
                                  "line": 53,
                                },
                                "raw": "1",
                                "start": Position {
                                  "character": 35,
                                  "line": 53,
                                },
                                "type": "NumericLiteral",
                                "value": 1,
                              },
                              "start": Position {
                                "character": 35,
                                "line": 53,
                              },
                              "type": "IndexExpression",
                            },
                          ],
                          "base": ASTMemberExpression {
                            "base": ASTIndexExpression {
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 14,
                                  "line": 53,
                                },
                                "name": "r",
                                "start": Position {
                                  "character": 13,
                                  "line": 53,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 18,
                                "line": 53,
                              },
                              "index": ASTLiteral {
                                "end": Position {
                                  "character": 16,
                                  "line": 53,
                                },
                                "raw": "1",
                                "start": Position {
                                  "character": 15,
                                  "line": 53,
                                },
                                "type": "NumericLiteral",
                                "value": 1,
                              },
                              "start": Position {
                                "character": 15,
                                "line": 53,
                              },
                              "type": "IndexExpression",
                            },
                            "end": Position {
                              "character": 23,
                              "line": 53,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 22,
                                "line": 53,
                              },
                              "name": "push",
                              "start": Position {
                                "character": 18,
                                "line": 53,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 17,
                              "line": 53,
                            },
                            "type": "MemberExpression",
                          },
                          "end": Position {
                            "character": 38,
                            "line": 53,
                          },
                          "start": Position {
                            "character": 22,
                            "line": 53,
                          },
                          "type": "CallExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 53,
                        },
                        "type": "CallStatement",
                      },
                      ASTCallStatement {
                        "end": Position {
                          "character": 38,
                          "line": 54,
                        },
                        "expression": ASTCallExpression {
                          "arguments": Array [
                            ASTIndexExpression {
                              "base": ASTIndexExpression {
                                "base": ASTIdentifier {
                                  "end": Position {
                                    "character": 28,
                                    "line": 54,
                                  },
                                  "name": "signs",
                                  "start": Position {
                                    "character": 23,
                                    "line": 54,
                                  },
                                  "type": "Identifier",
                                },
                                "end": Position {
                                  "character": 35,
                                  "line": 54,
                                },
                                "index": ASTIdentifier {
                                  "end": Position {
                                    "character": 33,
                                    "line": 54,
                                  },
                                  "name": "char",
                                  "start": Position {
                                    "character": 29,
                                    "line": 54,
                                  },
                                  "type": "Identifier",
                                },
                                "start": Position {
                                  "character": 29,
                                  "line": 54,
                                },
                                "type": "IndexExpression",
                              },
                              "end": Position {
                                "character": 38,
                                "line": 54,
                              },
                              "index": ASTLiteral {
                                "end": Position {
                                  "character": 36,
                                  "line": 54,
                                },
                                "raw": "2",
                                "start": Position {
                                  "character": 35,
                                  "line": 54,
                                },
                                "type": "NumericLiteral",
                                "value": 2,
                              },
                              "start": Position {
                                "character": 35,
                                "line": 54,
                              },
                              "type": "IndexExpression",
                            },
                          ],
                          "base": ASTMemberExpression {
                            "base": ASTIndexExpression {
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 14,
                                  "line": 54,
                                },
                                "name": "r",
                                "start": Position {
                                  "character": 13,
                                  "line": 54,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 18,
                                "line": 54,
                              },
                              "index": ASTLiteral {
                                "end": Position {
                                  "character": 16,
                                  "line": 54,
                                },
                                "raw": "2",
                                "start": Position {
                                  "character": 15,
                                  "line": 54,
                                },
                                "type": "NumericLiteral",
                                "value": 2,
                              },
                              "start": Position {
                                "character": 15,
                                "line": 54,
                              },
                              "type": "IndexExpression",
                            },
                            "end": Position {
                              "character": 23,
                              "line": 54,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 22,
                                "line": 54,
                              },
                              "name": "push",
                              "start": Position {
                                "character": 18,
                                "line": 54,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 17,
                              "line": 54,
                            },
                            "type": "MemberExpression",
                          },
                          "end": Position {
                            "character": 38,
                            "line": 54,
                          },
                          "start": Position {
                            "character": 22,
                            "line": 54,
                          },
                          "type": "CallExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 54,
                        },
                        "type": "CallStatement",
                      },
                    ],
                    "condition": ASTCallExpression {
                      "arguments": Array [
                        ASTIdentifier {
                          "end": Position {
                            "character": 32,
                            "line": 51,
                          },
                          "name": "char",
                          "start": Position {
                            "character": 28,
                            "line": 51,
                          },
                          "type": "Identifier",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 18,
                            "line": 51,
                          },
                          "name": "signs",
                          "start": Position {
                            "character": 13,
                            "line": 51,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 28,
                          "line": 51,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 27,
                            "line": 51,
                          },
                          "name": "hasIndex",
                          "start": Position {
                            "character": 19,
                            "line": 51,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 18,
                          "line": 51,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 34,
                        "line": 51,
                      },
                      "start": Position {
                        "character": 27,
                        "line": 51,
                      },
                      "type": "CallExpression",
                    },
                    "end": Position {
                      "character": 15,
                      "line": 55,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 51,
                    },
                    "type": "IfClause",
                  },
                ],
                "end": Position {
                  "character": 15,
                  "line": 55,
                },
                "start": Position {
                  "character": 9,
                  "line": 51,
                },
                "type": "IfStatement",
              },
            ],
            "end": Position {
              "character": 12,
              "line": 56,
            },
            "iterator": ASTIdentifier {
              "end": Position {
                "character": 20,
                "line": 49,
              },
              "name": "str",
              "start": Position {
                "character": 17,
                "line": 49,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 49,
            },
            "type": "ForGenericStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 49,
              },
              "name": "char",
              "start": Position {
                "character": 9,
                "line": 49,
              },
              "type": "Identifier",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 65,
                      "line": 59,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 65,
                        "line": 59,
                      },
                      "left": ASTEvaluationExpression {
                        "end": Position {
                          "character": 52,
                          "line": 59,
                        },
                        "left": ASTListConstructorExpression {
                          "end": Position {
                            "character": 44,
                            "line": 59,
                          },
                          "fields": Array [
                            ASTListValue {
                              "end": Position {
                                "character": 43,
                                "line": 59,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 59,
                              },
                              "type": "ListValue",
                              "value": ASTEvaluationExpression {
                                "end": Position {
                                  "character": 43,
                                  "line": 59,
                                },
                                "left": ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 38,
                                    "line": 59,
                                  },
                                  "left": ASTLiteral {
                                    "end": Position {
                                      "character": 27,
                                      "line": 59,
                                    },
                                    "raw": "\\"<color=#\\"",
                                    "start": Position {
                                      "character": 17,
                                      "line": 59,
                                    },
                                    "type": "StringLiteral",
                                    "value": "<color=#",
                                  },
                                  "operator": "+",
                                  "right": ASTIdentifier {
                                    "end": Position {
                                      "character": 36,
                                      "line": 59,
                                    },
                                    "name": "colors",
                                    "start": Position {
                                      "character": 30,
                                      "line": 59,
                                    },
                                    "type": "Identifier",
                                  },
                                  "start": Position {
                                    "character": 28,
                                    "line": 59,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "operator": "+",
                                "right": ASTLiteral {
                                  "end": Position {
                                    "character": 42,
                                    "line": 59,
                                  },
                                  "raw": "\\">\\"",
                                  "start": Position {
                                    "character": 39,
                                    "line": 59,
                                  },
                                  "type": "StringLiteral",
                                  "value": ">",
                                },
                                "start": Position {
                                  "character": 28,
                                  "line": 59,
                                },
                                "type": "BinaryExpression",
                              },
                            },
                          ],
                          "start": Position {
                            "character": 16,
                            "line": 59,
                          },
                          "type": "ListConstructorExpression",
                        },
                        "operator": "+",
                        "right": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 47,
                              "line": 59,
                            },
                            "name": "r",
                            "start": Position {
                              "character": 46,
                              "line": 59,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 52,
                            "line": 59,
                          },
                          "index": ASTLiteral {
                            "end": Position {
                              "character": 49,
                              "line": 59,
                            },
                            "raw": "0",
                            "start": Position {
                              "character": 48,
                              "line": 59,
                            },
                            "type": "NumericLiteral",
                            "value": 0,
                          },
                          "start": Position {
                            "character": 48,
                            "line": 59,
                          },
                          "type": "IndexExpression",
                        },
                        "start": Position {
                          "character": 44,
                          "line": 59,
                        },
                        "type": "BinaryExpression",
                      },
                      "operator": "+",
                      "right": ASTListConstructorExpression {
                        "end": Position {
                          "character": 65,
                          "line": 59,
                        },
                        "fields": Array [
                          ASTListValue {
                            "end": Position {
                              "character": 64,
                              "line": 59,
                            },
                            "start": Position {
                              "character": 54,
                              "line": 59,
                            },
                            "type": "ListValue",
                            "value": ASTLiteral {
                              "end": Position {
                                "character": 64,
                                "line": 59,
                              },
                              "raw": "\\"</color>\\"",
                              "start": Position {
                                "character": 54,
                                "line": 59,
                              },
                              "type": "StringLiteral",
                              "value": "</color>",
                            },
                          },
                        ],
                        "start": Position {
                          "character": 53,
                          "line": 59,
                        },
                        "type": "ListConstructorExpression",
                      },
                      "start": Position {
                        "character": 44,
                        "line": 59,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 59,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 59,
                        },
                        "name": "r",
                        "start": Position {
                          "character": 9,
                          "line": 59,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 15,
                        "line": 59,
                      },
                      "index": ASTLiteral {
                        "end": Position {
                          "character": 12,
                          "line": 59,
                        },
                        "raw": "0",
                        "start": Position {
                          "character": 11,
                          "line": 59,
                        },
                        "type": "NumericLiteral",
                        "value": 0,
                      },
                      "start": Position {
                        "character": 11,
                        "line": 59,
                      },
                      "type": "IndexExpression",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 65,
                      "line": 60,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 65,
                        "line": 60,
                      },
                      "left": ASTEvaluationExpression {
                        "end": Position {
                          "character": 52,
                          "line": 60,
                        },
                        "left": ASTListConstructorExpression {
                          "end": Position {
                            "character": 44,
                            "line": 60,
                          },
                          "fields": Array [
                            ASTListValue {
                              "end": Position {
                                "character": 43,
                                "line": 60,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 60,
                              },
                              "type": "ListValue",
                              "value": ASTEvaluationExpression {
                                "end": Position {
                                  "character": 43,
                                  "line": 60,
                                },
                                "left": ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 38,
                                    "line": 60,
                                  },
                                  "left": ASTLiteral {
                                    "end": Position {
                                      "character": 27,
                                      "line": 60,
                                    },
                                    "raw": "\\"<color=#\\"",
                                    "start": Position {
                                      "character": 17,
                                      "line": 60,
                                    },
                                    "type": "StringLiteral",
                                    "value": "<color=#",
                                  },
                                  "operator": "+",
                                  "right": ASTIdentifier {
                                    "end": Position {
                                      "character": 36,
                                      "line": 60,
                                    },
                                    "name": "colors",
                                    "start": Position {
                                      "character": 30,
                                      "line": 60,
                                    },
                                    "type": "Identifier",
                                  },
                                  "start": Position {
                                    "character": 28,
                                    "line": 60,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "operator": "+",
                                "right": ASTLiteral {
                                  "end": Position {
                                    "character": 42,
                                    "line": 60,
                                  },
                                  "raw": "\\">\\"",
                                  "start": Position {
                                    "character": 39,
                                    "line": 60,
                                  },
                                  "type": "StringLiteral",
                                  "value": ">",
                                },
                                "start": Position {
                                  "character": 28,
                                  "line": 60,
                                },
                                "type": "BinaryExpression",
                              },
                            },
                          ],
                          "start": Position {
                            "character": 16,
                            "line": 60,
                          },
                          "type": "ListConstructorExpression",
                        },
                        "operator": "+",
                        "right": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 47,
                              "line": 60,
                            },
                            "name": "r",
                            "start": Position {
                              "character": 46,
                              "line": 60,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 52,
                            "line": 60,
                          },
                          "index": ASTLiteral {
                            "end": Position {
                              "character": 49,
                              "line": 60,
                            },
                            "raw": "1",
                            "start": Position {
                              "character": 48,
                              "line": 60,
                            },
                            "type": "NumericLiteral",
                            "value": 1,
                          },
                          "start": Position {
                            "character": 48,
                            "line": 60,
                          },
                          "type": "IndexExpression",
                        },
                        "start": Position {
                          "character": 44,
                          "line": 60,
                        },
                        "type": "BinaryExpression",
                      },
                      "operator": "+",
                      "right": ASTListConstructorExpression {
                        "end": Position {
                          "character": 65,
                          "line": 60,
                        },
                        "fields": Array [
                          ASTListValue {
                            "end": Position {
                              "character": 64,
                              "line": 60,
                            },
                            "start": Position {
                              "character": 54,
                              "line": 60,
                            },
                            "type": "ListValue",
                            "value": ASTLiteral {
                              "end": Position {
                                "character": 64,
                                "line": 60,
                              },
                              "raw": "\\"</color>\\"",
                              "start": Position {
                                "character": 54,
                                "line": 60,
                              },
                              "type": "StringLiteral",
                              "value": "</color>",
                            },
                          },
                        ],
                        "start": Position {
                          "character": 53,
                          "line": 60,
                        },
                        "type": "ListConstructorExpression",
                      },
                      "start": Position {
                        "character": 44,
                        "line": 60,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 60,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 60,
                        },
                        "name": "r",
                        "start": Position {
                          "character": 9,
                          "line": 60,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 15,
                        "line": 60,
                      },
                      "index": ASTLiteral {
                        "end": Position {
                          "character": 12,
                          "line": 60,
                        },
                        "raw": "1",
                        "start": Position {
                          "character": 11,
                          "line": 60,
                        },
                        "type": "NumericLiteral",
                        "value": 1,
                      },
                      "start": Position {
                        "character": 11,
                        "line": 60,
                      },
                      "type": "IndexExpression",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 65,
                      "line": 61,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 65,
                        "line": 61,
                      },
                      "left": ASTEvaluationExpression {
                        "end": Position {
                          "character": 52,
                          "line": 61,
                        },
                        "left": ASTListConstructorExpression {
                          "end": Position {
                            "character": 44,
                            "line": 61,
                          },
                          "fields": Array [
                            ASTListValue {
                              "end": Position {
                                "character": 43,
                                "line": 61,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 61,
                              },
                              "type": "ListValue",
                              "value": ASTEvaluationExpression {
                                "end": Position {
                                  "character": 43,
                                  "line": 61,
                                },
                                "left": ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 38,
                                    "line": 61,
                                  },
                                  "left": ASTLiteral {
                                    "end": Position {
                                      "character": 27,
                                      "line": 61,
                                    },
                                    "raw": "\\"<color=#\\"",
                                    "start": Position {
                                      "character": 17,
                                      "line": 61,
                                    },
                                    "type": "StringLiteral",
                                    "value": "<color=#",
                                  },
                                  "operator": "+",
                                  "right": ASTIdentifier {
                                    "end": Position {
                                      "character": 36,
                                      "line": 61,
                                    },
                                    "name": "colors",
                                    "start": Position {
                                      "character": 30,
                                      "line": 61,
                                    },
                                    "type": "Identifier",
                                  },
                                  "start": Position {
                                    "character": 28,
                                    "line": 61,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "operator": "+",
                                "right": ASTLiteral {
                                  "end": Position {
                                    "character": 42,
                                    "line": 61,
                                  },
                                  "raw": "\\">\\"",
                                  "start": Position {
                                    "character": 39,
                                    "line": 61,
                                  },
                                  "type": "StringLiteral",
                                  "value": ">",
                                },
                                "start": Position {
                                  "character": 28,
                                  "line": 61,
                                },
                                "type": "BinaryExpression",
                              },
                            },
                          ],
                          "start": Position {
                            "character": 16,
                            "line": 61,
                          },
                          "type": "ListConstructorExpression",
                        },
                        "operator": "+",
                        "right": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 47,
                              "line": 61,
                            },
                            "name": "r",
                            "start": Position {
                              "character": 46,
                              "line": 61,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 52,
                            "line": 61,
                          },
                          "index": ASTLiteral {
                            "end": Position {
                              "character": 49,
                              "line": 61,
                            },
                            "raw": "2",
                            "start": Position {
                              "character": 48,
                              "line": 61,
                            },
                            "type": "NumericLiteral",
                            "value": 2,
                          },
                          "start": Position {
                            "character": 48,
                            "line": 61,
                          },
                          "type": "IndexExpression",
                        },
                        "start": Position {
                          "character": 44,
                          "line": 61,
                        },
                        "type": "BinaryExpression",
                      },
                      "operator": "+",
                      "right": ASTListConstructorExpression {
                        "end": Position {
                          "character": 65,
                          "line": 61,
                        },
                        "fields": Array [
                          ASTListValue {
                            "end": Position {
                              "character": 64,
                              "line": 61,
                            },
                            "start": Position {
                              "character": 54,
                              "line": 61,
                            },
                            "type": "ListValue",
                            "value": ASTLiteral {
                              "end": Position {
                                "character": 64,
                                "line": 61,
                              },
                              "raw": "\\"</color>\\"",
                              "start": Position {
                                "character": 54,
                                "line": 61,
                              },
                              "type": "StringLiteral",
                              "value": "</color>",
                            },
                          },
                        ],
                        "start": Position {
                          "character": 53,
                          "line": 61,
                        },
                        "type": "ListConstructorExpression",
                      },
                      "start": Position {
                        "character": 44,
                        "line": 61,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 61,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 61,
                        },
                        "name": "r",
                        "start": Position {
                          "character": 9,
                          "line": 61,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 15,
                        "line": 61,
                      },
                      "index": ASTLiteral {
                        "end": Position {
                          "character": 12,
                          "line": 61,
                        },
                        "raw": "2",
                        "start": Position {
                          "character": 11,
                          "line": 61,
                        },
                        "type": "NumericLiteral",
                        "value": 2,
                      },
                      "start": Position {
                        "character": 11,
                        "line": 61,
                      },
                      "type": "IndexExpression",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 36,
                    "line": 58,
                  },
                  "left": ASTCallExpression {
                    "arguments": Array [
                      ASTIdentifier {
                        "end": Position {
                          "character": 22,
                          "line": 58,
                        },
                        "name": "colors",
                        "start": Position {
                          "character": 16,
                          "line": 58,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 58,
                      },
                      "name": "typeof",
                      "start": Position {
                        "character": 9,
                        "line": 58,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 26,
                      "line": 58,
                    },
                    "start": Position {
                      "character": 15,
                      "line": 58,
                    },
                    "type": "CallExpression",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 35,
                      "line": 58,
                    },
                    "raw": "\\"string\\"",
                    "start": Position {
                      "character": 27,
                      "line": 58,
                    },
                    "type": "StringLiteral",
                    "value": "string",
                  },
                  "start": Position {
                    "character": 24,
                    "line": 58,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 12,
                  "line": 62,
                },
                "start": Position {
                  "character": 5,
                  "line": 58,
                },
                "type": "IfClause",
              },
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 68,
                      "line": 63,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 68,
                        "line": 63,
                      },
                      "left": ASTEvaluationExpression {
                        "end": Position {
                          "character": 55,
                          "line": 63,
                        },
                        "left": ASTListConstructorExpression {
                          "end": Position {
                            "character": 47,
                            "line": 63,
                          },
                          "fields": Array [
                            ASTListValue {
                              "end": Position {
                                "character": 46,
                                "line": 63,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 63,
                              },
                              "type": "ListValue",
                              "value": ASTEvaluationExpression {
                                "end": Position {
                                  "character": 46,
                                  "line": 63,
                                },
                                "left": ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 41,
                                    "line": 63,
                                  },
                                  "left": ASTLiteral {
                                    "end": Position {
                                      "character": 27,
                                      "line": 63,
                                    },
                                    "raw": "\\"<color=#\\"",
                                    "start": Position {
                                      "character": 17,
                                      "line": 63,
                                    },
                                    "type": "StringLiteral",
                                    "value": "<color=#",
                                  },
                                  "operator": "+",
                                  "right": ASTIndexExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 36,
                                        "line": 63,
                                      },
                                      "name": "colors",
                                      "start": Position {
                                        "character": 30,
                                        "line": 63,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 41,
                                      "line": 63,
                                    },
                                    "index": ASTLiteral {
                                      "end": Position {
                                        "character": 38,
                                        "line": 63,
                                      },
                                      "raw": "0",
                                      "start": Position {
                                        "character": 37,
                                        "line": 63,
                                      },
                                      "type": "NumericLiteral",
                                      "value": 0,
                                    },
                                    "start": Position {
                                      "character": 37,
                                      "line": 63,
                                    },
                                    "type": "IndexExpression",
                                  },
                                  "start": Position {
                                    "character": 28,
                                    "line": 63,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "operator": "+",
                                "right": ASTLiteral {
                                  "end": Position {
                                    "character": 45,
                                    "line": 63,
                                  },
                                  "raw": "\\">\\"",
                                  "start": Position {
                                    "character": 42,
                                    "line": 63,
                                  },
                                  "type": "StringLiteral",
                                  "value": ">",
                                },
                                "start": Position {
                                  "character": 28,
                                  "line": 63,
                                },
                                "type": "BinaryExpression",
                              },
                            },
                          ],
                          "start": Position {
                            "character": 16,
                            "line": 63,
                          },
                          "type": "ListConstructorExpression",
                        },
                        "operator": "+",
                        "right": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 50,
                              "line": 63,
                            },
                            "name": "r",
                            "start": Position {
                              "character": 49,
                              "line": 63,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 55,
                            "line": 63,
                          },
                          "index": ASTLiteral {
                            "end": Position {
                              "character": 52,
                              "line": 63,
                            },
                            "raw": "0",
                            "start": Position {
                              "character": 51,
                              "line": 63,
                            },
                            "type": "NumericLiteral",
                            "value": 0,
                          },
                          "start": Position {
                            "character": 51,
                            "line": 63,
                          },
                          "type": "IndexExpression",
                        },
                        "start": Position {
                          "character": 47,
                          "line": 63,
                        },
                        "type": "BinaryExpression",
                      },
                      "operator": "+",
                      "right": ASTListConstructorExpression {
                        "end": Position {
                          "character": 68,
                          "line": 63,
                        },
                        "fields": Array [
                          ASTListValue {
                            "end": Position {
                              "character": 67,
                              "line": 63,
                            },
                            "start": Position {
                              "character": 57,
                              "line": 63,
                            },
                            "type": "ListValue",
                            "value": ASTLiteral {
                              "end": Position {
                                "character": 67,
                                "line": 63,
                              },
                              "raw": "\\"</color>\\"",
                              "start": Position {
                                "character": 57,
                                "line": 63,
                              },
                              "type": "StringLiteral",
                              "value": "</color>",
                            },
                          },
                        ],
                        "start": Position {
                          "character": 56,
                          "line": 63,
                        },
                        "type": "ListConstructorExpression",
                      },
                      "start": Position {
                        "character": 47,
                        "line": 63,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 63,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 63,
                        },
                        "name": "r",
                        "start": Position {
                          "character": 9,
                          "line": 63,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 15,
                        "line": 63,
                      },
                      "index": ASTLiteral {
                        "end": Position {
                          "character": 12,
                          "line": 63,
                        },
                        "raw": "0",
                        "start": Position {
                          "character": 11,
                          "line": 63,
                        },
                        "type": "NumericLiteral",
                        "value": 0,
                      },
                      "start": Position {
                        "character": 11,
                        "line": 63,
                      },
                      "type": "IndexExpression",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 68,
                      "line": 64,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 68,
                        "line": 64,
                      },
                      "left": ASTEvaluationExpression {
                        "end": Position {
                          "character": 55,
                          "line": 64,
                        },
                        "left": ASTListConstructorExpression {
                          "end": Position {
                            "character": 47,
                            "line": 64,
                          },
                          "fields": Array [
                            ASTListValue {
                              "end": Position {
                                "character": 46,
                                "line": 64,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 64,
                              },
                              "type": "ListValue",
                              "value": ASTEvaluationExpression {
                                "end": Position {
                                  "character": 46,
                                  "line": 64,
                                },
                                "left": ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 41,
                                    "line": 64,
                                  },
                                  "left": ASTLiteral {
                                    "end": Position {
                                      "character": 27,
                                      "line": 64,
                                    },
                                    "raw": "\\"<color=#\\"",
                                    "start": Position {
                                      "character": 17,
                                      "line": 64,
                                    },
                                    "type": "StringLiteral",
                                    "value": "<color=#",
                                  },
                                  "operator": "+",
                                  "right": ASTIndexExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 36,
                                        "line": 64,
                                      },
                                      "name": "colors",
                                      "start": Position {
                                        "character": 30,
                                        "line": 64,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 41,
                                      "line": 64,
                                    },
                                    "index": ASTLiteral {
                                      "end": Position {
                                        "character": 38,
                                        "line": 64,
                                      },
                                      "raw": "1",
                                      "start": Position {
                                        "character": 37,
                                        "line": 64,
                                      },
                                      "type": "NumericLiteral",
                                      "value": 1,
                                    },
                                    "start": Position {
                                      "character": 37,
                                      "line": 64,
                                    },
                                    "type": "IndexExpression",
                                  },
                                  "start": Position {
                                    "character": 28,
                                    "line": 64,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "operator": "+",
                                "right": ASTLiteral {
                                  "end": Position {
                                    "character": 45,
                                    "line": 64,
                                  },
                                  "raw": "\\">\\"",
                                  "start": Position {
                                    "character": 42,
                                    "line": 64,
                                  },
                                  "type": "StringLiteral",
                                  "value": ">",
                                },
                                "start": Position {
                                  "character": 28,
                                  "line": 64,
                                },
                                "type": "BinaryExpression",
                              },
                            },
                          ],
                          "start": Position {
                            "character": 16,
                            "line": 64,
                          },
                          "type": "ListConstructorExpression",
                        },
                        "operator": "+",
                        "right": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 50,
                              "line": 64,
                            },
                            "name": "r",
                            "start": Position {
                              "character": 49,
                              "line": 64,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 55,
                            "line": 64,
                          },
                          "index": ASTLiteral {
                            "end": Position {
                              "character": 52,
                              "line": 64,
                            },
                            "raw": "1",
                            "start": Position {
                              "character": 51,
                              "line": 64,
                            },
                            "type": "NumericLiteral",
                            "value": 1,
                          },
                          "start": Position {
                            "character": 51,
                            "line": 64,
                          },
                          "type": "IndexExpression",
                        },
                        "start": Position {
                          "character": 47,
                          "line": 64,
                        },
                        "type": "BinaryExpression",
                      },
                      "operator": "+",
                      "right": ASTListConstructorExpression {
                        "end": Position {
                          "character": 68,
                          "line": 64,
                        },
                        "fields": Array [
                          ASTListValue {
                            "end": Position {
                              "character": 67,
                              "line": 64,
                            },
                            "start": Position {
                              "character": 57,
                              "line": 64,
                            },
                            "type": "ListValue",
                            "value": ASTLiteral {
                              "end": Position {
                                "character": 67,
                                "line": 64,
                              },
                              "raw": "\\"</color>\\"",
                              "start": Position {
                                "character": 57,
                                "line": 64,
                              },
                              "type": "StringLiteral",
                              "value": "</color>",
                            },
                          },
                        ],
                        "start": Position {
                          "character": 56,
                          "line": 64,
                        },
                        "type": "ListConstructorExpression",
                      },
                      "start": Position {
                        "character": 47,
                        "line": 64,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 64,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 64,
                        },
                        "name": "r",
                        "start": Position {
                          "character": 9,
                          "line": 64,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 15,
                        "line": 64,
                      },
                      "index": ASTLiteral {
                        "end": Position {
                          "character": 12,
                          "line": 64,
                        },
                        "raw": "1",
                        "start": Position {
                          "character": 11,
                          "line": 64,
                        },
                        "type": "NumericLiteral",
                        "value": 1,
                      },
                      "start": Position {
                        "character": 11,
                        "line": 64,
                      },
                      "type": "IndexExpression",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 68,
                      "line": 65,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 68,
                        "line": 65,
                      },
                      "left": ASTEvaluationExpression {
                        "end": Position {
                          "character": 55,
                          "line": 65,
                        },
                        "left": ASTListConstructorExpression {
                          "end": Position {
                            "character": 47,
                            "line": 65,
                          },
                          "fields": Array [
                            ASTListValue {
                              "end": Position {
                                "character": 46,
                                "line": 65,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 65,
                              },
                              "type": "ListValue",
                              "value": ASTEvaluationExpression {
                                "end": Position {
                                  "character": 46,
                                  "line": 65,
                                },
                                "left": ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 41,
                                    "line": 65,
                                  },
                                  "left": ASTLiteral {
                                    "end": Position {
                                      "character": 27,
                                      "line": 65,
                                    },
                                    "raw": "\\"<color=#\\"",
                                    "start": Position {
                                      "character": 17,
                                      "line": 65,
                                    },
                                    "type": "StringLiteral",
                                    "value": "<color=#",
                                  },
                                  "operator": "+",
                                  "right": ASTIndexExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 36,
                                        "line": 65,
                                      },
                                      "name": "colors",
                                      "start": Position {
                                        "character": 30,
                                        "line": 65,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 41,
                                      "line": 65,
                                    },
                                    "index": ASTLiteral {
                                      "end": Position {
                                        "character": 38,
                                        "line": 65,
                                      },
                                      "raw": "2",
                                      "start": Position {
                                        "character": 37,
                                        "line": 65,
                                      },
                                      "type": "NumericLiteral",
                                      "value": 2,
                                    },
                                    "start": Position {
                                      "character": 37,
                                      "line": 65,
                                    },
                                    "type": "IndexExpression",
                                  },
                                  "start": Position {
                                    "character": 28,
                                    "line": 65,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "operator": "+",
                                "right": ASTLiteral {
                                  "end": Position {
                                    "character": 45,
                                    "line": 65,
                                  },
                                  "raw": "\\">\\"",
                                  "start": Position {
                                    "character": 42,
                                    "line": 65,
                                  },
                                  "type": "StringLiteral",
                                  "value": ">",
                                },
                                "start": Position {
                                  "character": 28,
                                  "line": 65,
                                },
                                "type": "BinaryExpression",
                              },
                            },
                          ],
                          "start": Position {
                            "character": 16,
                            "line": 65,
                          },
                          "type": "ListConstructorExpression",
                        },
                        "operator": "+",
                        "right": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 50,
                              "line": 65,
                            },
                            "name": "r",
                            "start": Position {
                              "character": 49,
                              "line": 65,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 55,
                            "line": 65,
                          },
                          "index": ASTLiteral {
                            "end": Position {
                              "character": 52,
                              "line": 65,
                            },
                            "raw": "2",
                            "start": Position {
                              "character": 51,
                              "line": 65,
                            },
                            "type": "NumericLiteral",
                            "value": 2,
                          },
                          "start": Position {
                            "character": 51,
                            "line": 65,
                          },
                          "type": "IndexExpression",
                        },
                        "start": Position {
                          "character": 47,
                          "line": 65,
                        },
                        "type": "BinaryExpression",
                      },
                      "operator": "+",
                      "right": ASTListConstructorExpression {
                        "end": Position {
                          "character": 68,
                          "line": 65,
                        },
                        "fields": Array [
                          ASTListValue {
                            "end": Position {
                              "character": 67,
                              "line": 65,
                            },
                            "start": Position {
                              "character": 57,
                              "line": 65,
                            },
                            "type": "ListValue",
                            "value": ASTLiteral {
                              "end": Position {
                                "character": 67,
                                "line": 65,
                              },
                              "raw": "\\"</color>\\"",
                              "start": Position {
                                "character": 57,
                                "line": 65,
                              },
                              "type": "StringLiteral",
                              "value": "</color>",
                            },
                          },
                        ],
                        "start": Position {
                          "character": 56,
                          "line": 65,
                        },
                        "type": "ListConstructorExpression",
                      },
                      "start": Position {
                        "character": 47,
                        "line": 65,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 65,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 65,
                        },
                        "name": "r",
                        "start": Position {
                          "character": 9,
                          "line": 65,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 15,
                        "line": 65,
                      },
                      "index": ASTLiteral {
                        "end": Position {
                          "character": 12,
                          "line": 65,
                        },
                        "raw": "2",
                        "start": Position {
                          "character": 11,
                          "line": 65,
                        },
                        "type": "NumericLiteral",
                        "value": 2,
                      },
                      "start": Position {
                        "character": 11,
                        "line": 65,
                      },
                      "type": "IndexExpression",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 39,
                    "line": 62,
                  },
                  "left": ASTCallExpression {
                    "arguments": Array [
                      ASTIdentifier {
                        "end": Position {
                          "character": 27,
                          "line": 62,
                        },
                        "name": "colors",
                        "start": Position {
                          "character": 21,
                          "line": 62,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 62,
                      },
                      "name": "typeof",
                      "start": Position {
                        "character": 14,
                        "line": 62,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 31,
                      "line": 62,
                    },
                    "start": Position {
                      "character": 20,
                      "line": 62,
                    },
                    "type": "CallExpression",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 38,
                      "line": 62,
                    },
                    "raw": "\\"list\\"",
                    "start": Position {
                      "character": 32,
                      "line": 62,
                    },
                    "type": "StringLiteral",
                    "value": "list",
                  },
                  "start": Position {
                    "character": 29,
                    "line": 62,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 11,
                  "line": 66,
                },
                "start": Position {
                  "character": 13,
                  "line": 62,
                },
                "type": "ElseifClause",
              },
            ],
            "end": Position {
              "character": 11,
              "line": 66,
            },
            "start": Position {
              "character": 5,
              "line": 58,
            },
            "type": "IfStatement",
          },
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTLiteral {
                  "end": Position {
                    "character": 67,
                    "line": 68,
                  },
                  "raw": "\\"\\\\n\\"",
                  "start": Position {
                    "character": 63,
                    "line": 68,
                  },
                  "type": "StringLiteral",
                  "value": "\\\\n",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTListConstructorExpression {
                  "end": Position {
                    "character": 57,
                    "line": 68,
                  },
                  "fields": Array [
                    ASTListValue {
                      "end": Position {
                        "character": 27,
                        "line": 68,
                      },
                      "start": Position {
                        "character": 22,
                        "line": 68,
                      },
                      "type": "ListValue",
                      "value": ASTCallExpression {
                        "arguments": Array [
                          ASTLiteral {
                            "end": Position {
                              "character": 25,
                              "line": 68,
                            },
                            "raw": "\\"\\"",
                            "start": Position {
                              "character": 23,
                              "line": 68,
                            },
                            "type": "StringLiteral",
                            "value": "",
                          },
                        ],
                        "base": ASTMemberExpression {
                          "base": ASTIndexExpression {
                            "base": ASTIdentifier {
                              "end": Position {
                                "character": 14,
                                "line": 68,
                              },
                              "name": "r",
                              "start": Position {
                                "character": 13,
                                "line": 68,
                              },
                              "type": "Identifier",
                            },
                            "end": Position {
                              "character": 18,
                              "line": 68,
                            },
                            "index": ASTLiteral {
                              "end": Position {
                                "character": 16,
                                "line": 68,
                              },
                              "raw": "0",
                              "start": Position {
                                "character": 15,
                                "line": 68,
                              },
                              "type": "NumericLiteral",
                              "value": 0,
                            },
                            "start": Position {
                              "character": 15,
                              "line": 68,
                            },
                            "type": "IndexExpression",
                          },
                          "end": Position {
                            "character": 23,
                            "line": 68,
                          },
                          "identifier": ASTIdentifier {
                            "end": Position {
                              "character": 22,
                              "line": 68,
                            },
                            "name": "join",
                            "start": Position {
                              "character": 18,
                              "line": 68,
                            },
                            "type": "Identifier",
                          },
                          "indexer": ".",
                          "start": Position {
                            "character": 17,
                            "line": 68,
                          },
                          "type": "MemberExpression",
                        },
                        "end": Position {
                          "character": 27,
                          "line": 68,
                        },
                        "start": Position {
                          "character": 22,
                          "line": 68,
                        },
                        "type": "CallExpression",
                      },
                    },
                    ASTListValue {
                      "end": Position {
                        "character": 42,
                        "line": 68,
                      },
                      "start": Position {
                        "character": 37,
                        "line": 68,
                      },
                      "type": "ListValue",
                      "value": ASTCallExpression {
                        "arguments": Array [
                          ASTLiteral {
                            "end": Position {
                              "character": 40,
                              "line": 68,
                            },
                            "raw": "\\"\\"",
                            "start": Position {
                              "character": 38,
                              "line": 68,
                            },
                            "type": "StringLiteral",
                            "value": "",
                          },
                        ],
                        "base": ASTMemberExpression {
                          "base": ASTIndexExpression {
                            "base": ASTIdentifier {
                              "end": Position {
                                "character": 29,
                                "line": 68,
                              },
                              "name": "r",
                              "start": Position {
                                "character": 28,
                                "line": 68,
                              },
                              "type": "Identifier",
                            },
                            "end": Position {
                              "character": 33,
                              "line": 68,
                            },
                            "index": ASTLiteral {
                              "end": Position {
                                "character": 31,
                                "line": 68,
                              },
                              "raw": "1",
                              "start": Position {
                                "character": 30,
                                "line": 68,
                              },
                              "type": "NumericLiteral",
                              "value": 1,
                            },
                            "start": Position {
                              "character": 30,
                              "line": 68,
                            },
                            "type": "IndexExpression",
                          },
                          "end": Position {
                            "character": 38,
                            "line": 68,
                          },
                          "identifier": ASTIdentifier {
                            "end": Position {
                              "character": 37,
                              "line": 68,
                            },
                            "name": "join",
                            "start": Position {
                              "character": 33,
                              "line": 68,
                            },
                            "type": "Identifier",
                          },
                          "indexer": ".",
                          "start": Position {
                            "character": 32,
                            "line": 68,
                          },
                          "type": "MemberExpression",
                        },
                        "end": Position {
                          "character": 42,
                          "line": 68,
                        },
                        "start": Position {
                          "character": 37,
                          "line": 68,
                        },
                        "type": "CallExpression",
                      },
                    },
                    ASTListValue {
                      "end": Position {
                        "character": 57,
                        "line": 68,
                      },
                      "start": Position {
                        "character": 52,
                        "line": 68,
                      },
                      "type": "ListValue",
                      "value": ASTCallExpression {
                        "arguments": Array [
                          ASTLiteral {
                            "end": Position {
                              "character": 55,
                              "line": 68,
                            },
                            "raw": "\\"\\"",
                            "start": Position {
                              "character": 53,
                              "line": 68,
                            },
                            "type": "StringLiteral",
                            "value": "",
                          },
                        ],
                        "base": ASTMemberExpression {
                          "base": ASTIndexExpression {
                            "base": ASTIdentifier {
                              "end": Position {
                                "character": 44,
                                "line": 68,
                              },
                              "name": "r",
                              "start": Position {
                                "character": 43,
                                "line": 68,
                              },
                              "type": "Identifier",
                            },
                            "end": Position {
                              "character": 48,
                              "line": 68,
                            },
                            "index": ASTLiteral {
                              "end": Position {
                                "character": 46,
                                "line": 68,
                              },
                              "raw": "2",
                              "start": Position {
                                "character": 45,
                                "line": 68,
                              },
                              "type": "NumericLiteral",
                              "value": 2,
                            },
                            "start": Position {
                              "character": 45,
                              "line": 68,
                            },
                            "type": "IndexExpression",
                          },
                          "end": Position {
                            "character": 53,
                            "line": 68,
                          },
                          "identifier": ASTIdentifier {
                            "end": Position {
                              "character": 52,
                              "line": 68,
                            },
                            "name": "join",
                            "start": Position {
                              "character": 48,
                              "line": 68,
                            },
                            "type": "Identifier",
                          },
                          "indexer": ".",
                          "start": Position {
                            "character": 47,
                            "line": 68,
                          },
                          "type": "MemberExpression",
                        },
                        "end": Position {
                          "character": 57,
                          "line": 68,
                        },
                        "start": Position {
                          "character": 52,
                          "line": 68,
                        },
                        "type": "CallExpression",
                      },
                    },
                  ],
                  "start": Position {
                    "character": 12,
                    "line": 68,
                  },
                  "type": "ListConstructorExpression",
                },
                "end": Position {
                  "character": 63,
                  "line": 68,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 62,
                    "line": 68,
                  },
                  "name": "join",
                  "start": Position {
                    "character": 58,
                    "line": 68,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 57,
                  "line": 68,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 68,
                "line": 68,
              },
              "start": Position {
                "character": 62,
                "line": 68,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 69,
            },
            "start": Position {
              "character": 5,
              "line": 68,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 69,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 28,
              "line": 45,
            },
            "name": "str",
            "start": Position {
              "character": 25,
              "line": 45,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 36,
              "line": 45,
            },
            "name": "colors",
            "start": Position {
              "character": 30,
              "line": 45,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 16,
          "line": 45,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 45,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 9,
            "line": 45,
          },
          "name": "AsciiGen",
          "start": Position {
            "character": 1,
            "line": 45,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 15,
          "line": 45,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 45,
          },
          "name": "gen",
          "start": Position {
            "character": 10,
            "line": 45,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 9,
          "line": 45,
        },
        "type": "MemberExpression",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 29,
        "line": 71,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTCallExpression {
            "arguments": Array [
              ASTLiteral {
                "end": Position {
                  "character": 27,
                  "line": 71,
                },
                "raw": "\\"Hallo\\"",
                "start": Position {
                  "character": 20,
                  "line": 71,
                },
                "type": "StringLiteral",
                "value": "Hallo",
              },
            ],
            "base": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 15,
                  "line": 71,
                },
                "name": "AsciiGen",
                "start": Position {
                  "character": 7,
                  "line": 71,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 20,
                "line": 71,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 19,
                  "line": 71,
                },
                "name": "gen",
                "start": Position {
                  "character": 16,
                  "line": 71,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 15,
                "line": 71,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 29,
              "line": 71,
            },
            "start": Position {
              "character": 19,
              "line": 71,
            },
            "type": "CallExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 71,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 71,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 29,
          "line": 71,
        },
        "start": Position {
          "character": 6,
          "line": 71,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 71,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 29,
    "line": 71,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 5,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 10,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 5,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 20,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 5,
      },
      "raw": "\\"|| || \\"",
      "start": Position {
        "character": 30,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "|| || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 6,
      },
      "raw": "\\"||¯/ \\"",
      "start": Position {
        "character": 10,
        "line": 6,
      },
      "type": "StringLiteral",
      "value": "||¯/ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 6,
      },
      "raw": "\\"|| \\\\ \\"",
      "start": Position {
        "character": 19,
        "line": 6,
      },
      "type": "StringLiteral",
      "value": "|| \\\\ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 35,
        "line": 6,
      },
      "raw": "\\"||_/ \\"",
      "start": Position {
        "character": 28,
        "line": 6,
      },
      "type": "StringLiteral",
      "value": "||_/ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 7,
      },
      "raw": "\\"||¯ \\"",
      "start": Position {
        "character": 10,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "||¯ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 7,
      },
      "raw": "\\"||  \\"",
      "start": Position {
        "character": 18,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 7,
      },
      "raw": "\\"||_ \\"",
      "start": Position {
        "character": 26,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "||_ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 8,
      },
      "raw": "\\"||¯\\\\\\\\ \\"",
      "start": Position {
        "character": 10,
        "line": 8,
      },
      "type": "StringLiteral",
      "value": "||¯\\\\\\\\ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 8,
      },
      "raw": "\\"|| // \\"",
      "start": Position {
        "character": 20,
        "line": 8,
      },
      "type": "StringLiteral",
      "value": "|| // ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 8,
      },
      "raw": "\\"||//  \\"",
      "start": Position {
        "character": 30,
        "line": 8,
      },
      "type": "StringLiteral",
      "value": "||//  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 9,
      },
      "raw": "\\"||¯ \\"",
      "start": Position {
        "character": 10,
        "line": 9,
      },
      "type": "StringLiteral",
      "value": "||¯ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 9,
      },
      "raw": "\\"||- \\"",
      "start": Position {
        "character": 18,
        "line": 9,
      },
      "type": "StringLiteral",
      "value": "||- ",
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 9,
      },
      "raw": "\\"||_ \\"",
      "start": Position {
        "character": 26,
        "line": 9,
      },
      "type": "StringLiteral",
      "value": "||_ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 10,
      },
      "raw": "\\"||¯ \\"",
      "start": Position {
        "character": 10,
        "line": 10,
      },
      "type": "StringLiteral",
      "value": "||¯ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 10,
      },
      "raw": "\\"||_ \\"",
      "start": Position {
        "character": 18,
        "line": 10,
      },
      "type": "StringLiteral",
      "value": "||_ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 10,
      },
      "raw": "\\"||  \\"",
      "start": Position {
        "character": 26,
        "line": 10,
      },
      "type": "StringLiteral",
      "value": "||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 11,
      },
      "raw": "\\"||¯¯  \\"",
      "start": Position {
        "character": 10,
        "line": 11,
      },
      "type": "StringLiteral",
      "value": "||¯¯  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 11,
      },
      "raw": "\\"|| \\\\\\\\ \\"",
      "start": Position {
        "character": 20,
        "line": 11,
      },
      "type": "StringLiteral",
      "value": "|| \\\\\\\\ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 11,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 30,
        "line": 11,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 12,
      },
      "raw": "\\"|| || \\"",
      "start": Position {
        "character": 10,
        "line": 12,
      },
      "type": "StringLiteral",
      "value": "|| || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 12,
      },
      "raw": "\\"||-|| \\"",
      "start": Position {
        "character": 20,
        "line": 12,
      },
      "type": "StringLiteral",
      "value": "||-|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 12,
      },
      "raw": "\\"|| || \\"",
      "start": Position {
        "character": 30,
        "line": 12,
      },
      "type": "StringLiteral",
      "value": "|| || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 15,
        "line": 13,
      },
      "raw": "\\"|| \\"",
      "start": Position {
        "character": 10,
        "line": 13,
      },
      "type": "StringLiteral",
      "value": "|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 22,
        "line": 13,
      },
      "raw": "\\"|| \\"",
      "start": Position {
        "character": 17,
        "line": 13,
      },
      "type": "StringLiteral",
      "value": "|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 13,
      },
      "raw": "\\"|| \\"",
      "start": Position {
        "character": 24,
        "line": 13,
      },
      "type": "StringLiteral",
      "value": "|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 14,
      },
      "raw": "\\" ¯||¯ \\"",
      "start": Position {
        "character": 10,
        "line": 14,
      },
      "type": "StringLiteral",
      "value": " ¯||¯ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 14,
      },
      "raw": "\\"  ||  \\"",
      "start": Position {
        "character": 20,
        "line": 14,
      },
      "type": "StringLiteral",
      "value": "  ||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 14,
      },
      "raw": "\\"|_||  \\"",
      "start": Position {
        "character": 30,
        "line": 14,
      },
      "type": "StringLiteral",
      "value": "|_||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 15,
      },
      "raw": "\\"||  / \\"",
      "start": Position {
        "character": 10,
        "line": 15,
      },
      "type": "StringLiteral",
      "value": "||  / ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 15,
      },
      "raw": "\\"|| /  \\"",
      "start": Position {
        "character": 20,
        "line": 15,
      },
      "type": "StringLiteral",
      "value": "|| /  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 15,
      },
      "raw": "\\"||¯\\\\\\\\ \\"",
      "start": Position {
        "character": 30,
        "line": 15,
      },
      "type": "StringLiteral",
      "value": "||¯\\\\\\\\ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 16,
      },
      "raw": "\\"||  \\"",
      "start": Position {
        "character": 10,
        "line": 16,
      },
      "type": "StringLiteral",
      "value": "||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 16,
      },
      "raw": "\\"||  \\"",
      "start": Position {
        "character": 18,
        "line": 16,
      },
      "type": "StringLiteral",
      "value": "||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 16,
      },
      "raw": "\\"||_ \\"",
      "start": Position {
        "character": 26,
        "line": 16,
      },
      "type": "StringLiteral",
      "value": "||_ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 17,
      },
      "raw": "\\"||\\\\\\\\/|| \\"",
      "start": Position {
        "character": 10,
        "line": 17,
      },
      "type": "StringLiteral",
      "value": "||\\\\\\\\/|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 17,
      },
      "raw": "\\"||   || \\"",
      "start": Position {
        "character": 22,
        "line": 17,
      },
      "type": "StringLiteral",
      "value": "||   || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 44,
        "line": 17,
      },
      "raw": "\\"||   || \\"",
      "start": Position {
        "character": 34,
        "line": 17,
      },
      "type": "StringLiteral",
      "value": "||   || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 18,
      },
      "raw": "\\"||\\\\\\\\ || \\"",
      "start": Position {
        "character": 10,
        "line": 18,
      },
      "type": "StringLiteral",
      "value": "||\\\\\\\\ || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 18,
      },
      "raw": "\\"|| \\\\\\\\|| \\"",
      "start": Position {
        "character": 22,
        "line": 18,
      },
      "type": "StringLiteral",
      "value": "|| \\\\\\\\|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 44,
        "line": 18,
      },
      "raw": "\\"||  \\\\|| \\"",
      "start": Position {
        "character": 34,
        "line": 18,
      },
      "type": "StringLiteral",
      "value": "||  \\\\|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 19,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 10,
        "line": 19,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 19,
      },
      "raw": "\\"|| || \\"",
      "start": Position {
        "character": 20,
        "line": 19,
      },
      "type": "StringLiteral",
      "value": "|| || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 19,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 30,
        "line": 19,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 20,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 10,
        "line": 20,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 20,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 20,
        "line": 20,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 20,
      },
      "raw": "\\"||    \\"",
      "start": Position {
        "character": 30,
        "line": 20,
      },
      "type": "StringLiteral",
      "value": "||    ",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 21,
      },
      "raw": "\\"||¯||  \\"",
      "start": Position {
        "character": 10,
        "line": 21,
      },
      "type": "StringLiteral",
      "value": "||¯||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 30,
        "line": 21,
      },
      "raw": "\\"|| ||  \\"",
      "start": Position {
        "character": 21,
        "line": 21,
      },
      "type": "StringLiteral",
      "value": "|| ||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 21,
      },
      "raw": "\\"||_||¬ \\"",
      "start": Position {
        "character": 32,
        "line": 21,
      },
      "type": "StringLiteral",
      "value": "||_||¬ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 22,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 10,
        "line": 22,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 22,
      },
      "raw": "\\"||¯\\\\\\\\ \\"",
      "start": Position {
        "character": 20,
        "line": 22,
      },
      "type": "StringLiteral",
      "value": "||¯\\\\\\\\ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 22,
      },
      "raw": "\\"|| || \\"",
      "start": Position {
        "character": 30,
        "line": 22,
      },
      "type": "StringLiteral",
      "value": "|| || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 23,
      },
      "raw": "\\"||¯¯ \\"",
      "start": Position {
        "character": 10,
        "line": 23,
      },
      "type": "StringLiteral",
      "value": "||¯¯ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 23,
      },
      "raw": "\\" \\\\\\\\  \\"",
      "start": Position {
        "character": 19,
        "line": 23,
      },
      "type": "StringLiteral",
      "value": " \\\\\\\\  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 35,
        "line": 23,
      },
      "raw": "\\"__|| \\"",
      "start": Position {
        "character": 28,
        "line": 23,
      },
      "type": "StringLiteral",
      "value": "__|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 24,
      },
      "raw": "\\"¯||¯ \\"",
      "start": Position {
        "character": 10,
        "line": 24,
      },
      "type": "StringLiteral",
      "value": "¯||¯ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 24,
      },
      "raw": "\\" ||  \\"",
      "start": Position {
        "character": 19,
        "line": 24,
      },
      "type": "StringLiteral",
      "value": " ||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 35,
        "line": 24,
      },
      "raw": "\\" ||  \\"",
      "start": Position {
        "character": 28,
        "line": 24,
      },
      "type": "StringLiteral",
      "value": " ||  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 25,
      },
      "raw": "\\"|| || \\"",
      "start": Position {
        "character": 10,
        "line": 25,
      },
      "type": "StringLiteral",
      "value": "|| || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 25,
      },
      "raw": "\\"|| || \\"",
      "start": Position {
        "character": 20,
        "line": 25,
      },
      "type": "StringLiteral",
      "value": "|| || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 25,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 30,
        "line": 25,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 26,
      },
      "raw": "\\"\\\\\\\\ || \\"",
      "start": Position {
        "character": 10,
        "line": 26,
      },
      "type": "StringLiteral",
      "value": "\\\\\\\\ || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 26,
      },
      "raw": "\\" \\\\\\\\|| \\"",
      "start": Position {
        "character": 20,
        "line": 26,
      },
      "type": "StringLiteral",
      "value": " \\\\\\\\|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 26,
      },
      "raw": "\\"  \\\\\\\\| \\"",
      "start": Position {
        "character": 30,
        "line": 26,
      },
      "type": "StringLiteral",
      "value": "  \\\\\\\\| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 27,
      },
      "raw": "\\"\\\\\\\\ |\\\\\\\\ | \\"",
      "start": Position {
        "character": 10,
        "line": 27,
      },
      "type": "StringLiteral",
      "value": "\\\\\\\\ |\\\\\\\\ | ",
    },
    ASTLiteral {
      "end": Position {
        "character": 34,
        "line": 27,
      },
      "raw": "\\" \\\\\\\\| \\\\\\\\| \\"",
      "start": Position {
        "character": 23,
        "line": 27,
      },
      "type": "StringLiteral",
      "value": " \\\\\\\\| \\\\\\\\| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 47,
        "line": 27,
      },
      "raw": "\\"  \\\\\\\\  \\\\\\\\ \\"",
      "start": Position {
        "character": 36,
        "line": 27,
      },
      "type": "StringLiteral",
      "value": "  \\\\\\\\  \\\\\\\\ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 28,
      },
      "raw": "\\"\\\\\\\\  / \\"",
      "start": Position {
        "character": 10,
        "line": 28,
      },
      "type": "StringLiteral",
      "value": "\\\\\\\\  / ",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 28,
      },
      "raw": "\\" \\\\\\\\/  \\"",
      "start": Position {
        "character": 20,
        "line": 28,
      },
      "type": "StringLiteral",
      "value": " \\\\\\\\/  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 28,
      },
      "raw": "\\" //\\\\  \\"",
      "start": Position {
        "character": 30,
        "line": 28,
      },
      "type": "StringLiteral",
      "value": " //\\\\  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 29,
      },
      "raw": "\\"\\\\\\\\  // \\"",
      "start": Position {
        "character": 10,
        "line": 29,
      },
      "type": "StringLiteral",
      "value": "\\\\\\\\  // ",
    },
    ASTLiteral {
      "end": Position {
        "character": 30,
        "line": 29,
      },
      "raw": "\\" \\\\\\\\//  \\"",
      "start": Position {
        "character": 21,
        "line": 29,
      },
      "type": "StringLiteral",
      "value": " \\\\\\\\//  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 29,
      },
      "raw": "\\"  ||   \\"",
      "start": Position {
        "character": 32,
        "line": 29,
      },
      "type": "StringLiteral",
      "value": "  ||   ",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 30,
      },
      "raw": "\\"¯// \\"",
      "start": Position {
        "character": 10,
        "line": 30,
      },
      "type": "StringLiteral",
      "value": "¯// ",
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 30,
      },
      "raw": "\\"//  \\"",
      "start": Position {
        "character": 18,
        "line": 30,
      },
      "type": "StringLiteral",
      "value": "//  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 30,
      },
      "raw": "\\"||_ \\"",
      "start": Position {
        "character": 26,
        "line": 30,
      },
      "type": "StringLiteral",
      "value": "||_ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 31,
      },
      "raw": "\\"0\\"",
      "start": Position {
        "character": 5,
        "line": 31,
      },
      "type": "StringLiteral",
      "value": "0",
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 31,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 13,
        "line": 31,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 31,
      },
      "raw": "\\"||x|| \\"",
      "start": Position {
        "character": 23,
        "line": 31,
      },
      "type": "StringLiteral",
      "value": "||x|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 31,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 33,
        "line": 31,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 32,
      },
      "raw": "\\"1\\"",
      "start": Position {
        "character": 5,
        "line": 32,
      },
      "type": "StringLiteral",
      "value": "1",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 32,
      },
      "raw": "\\"'|| \\"",
      "start": Position {
        "character": 13,
        "line": 32,
      },
      "type": "StringLiteral",
      "value": "'|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 32,
      },
      "raw": "\\" || \\"",
      "start": Position {
        "character": 21,
        "line": 32,
      },
      "type": "StringLiteral",
      "value": " || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 35,
        "line": 32,
      },
      "raw": "\\" || \\"",
      "start": Position {
        "character": 29,
        "line": 32,
      },
      "type": "StringLiteral",
      "value": " || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 33,
      },
      "raw": "\\"2\\"",
      "start": Position {
        "character": 5,
        "line": 33,
      },
      "type": "StringLiteral",
      "value": "2",
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 33,
      },
      "raw": "\\"¯¯|| \\"",
      "start": Position {
        "character": 13,
        "line": 33,
      },
      "type": "StringLiteral",
      "value": "¯¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 33,
      },
      "raw": "\\"||¯  \\"",
      "start": Position {
        "character": 22,
        "line": 33,
      },
      "type": "StringLiteral",
      "value": "||¯  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 33,
      },
      "raw": "\\"||_  \\"",
      "start": Position {
        "character": 31,
        "line": 33,
      },
      "type": "StringLiteral",
      "value": "||_  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 34,
      },
      "raw": "\\"3\\"",
      "start": Position {
        "character": 5,
        "line": 34,
      },
      "type": "StringLiteral",
      "value": "3",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 34,
      },
      "raw": "\\"¯|| \\"",
      "start": Position {
        "character": 13,
        "line": 34,
      },
      "type": "StringLiteral",
      "value": "¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 34,
      },
      "raw": "\\"-|| \\"",
      "start": Position {
        "character": 21,
        "line": 34,
      },
      "type": "StringLiteral",
      "value": "-|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 35,
        "line": 34,
      },
      "raw": "\\"_|| \\"",
      "start": Position {
        "character": 29,
        "line": 34,
      },
      "type": "StringLiteral",
      "value": "_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 35,
      },
      "raw": "\\"4\\"",
      "start": Position {
        "character": 5,
        "line": 35,
      },
      "type": "StringLiteral",
      "value": "4",
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 35,
      },
      "raw": "\\" /|| \\"",
      "start": Position {
        "character": 13,
        "line": 35,
      },
      "type": "StringLiteral",
      "value": " /|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 35,
      },
      "raw": "\\"/_|| \\"",
      "start": Position {
        "character": 22,
        "line": 35,
      },
      "type": "StringLiteral",
      "value": "/_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 35,
      },
      "raw": "\\"  || \\"",
      "start": Position {
        "character": 31,
        "line": 35,
      },
      "type": "StringLiteral",
      "value": "  || ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 36,
      },
      "raw": "\\"5\\"",
      "start": Position {
        "character": 5,
        "line": 36,
      },
      "type": "StringLiteral",
      "value": "5",
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 36,
      },
      "raw": "\\"||¯¯ \\"",
      "start": Position {
        "character": 13,
        "line": 36,
      },
      "type": "StringLiteral",
      "value": "||¯¯ ",
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 36,
      },
      "raw": "\\" ¯|| \\"",
      "start": Position {
        "character": 22,
        "line": 36,
      },
      "type": "StringLiteral",
      "value": " ¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 36,
      },
      "raw": "\\" _|| \\"",
      "start": Position {
        "character": 31,
        "line": 36,
      },
      "type": "StringLiteral",
      "value": " _|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 37,
      },
      "raw": "\\"6\\"",
      "start": Position {
        "character": 5,
        "line": 37,
      },
      "type": "StringLiteral",
      "value": "6",
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 37,
      },
      "raw": "\\"||¯¯  \\"",
      "start": Position {
        "character": 13,
        "line": 37,
      },
      "type": "StringLiteral",
      "value": "||¯¯  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 37,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 23,
        "line": 37,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 37,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 33,
        "line": 37,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 38,
      },
      "raw": "\\"7\\"",
      "start": Position {
        "character": 5,
        "line": 38,
      },
      "type": "StringLiteral",
      "value": "7",
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 38,
      },
      "raw": "\\"¯¯// \\"",
      "start": Position {
        "character": 13,
        "line": 38,
      },
      "type": "StringLiteral",
      "value": "¯¯// ",
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 38,
      },
      "raw": "\\" //  \\"",
      "start": Position {
        "character": 22,
        "line": 38,
      },
      "type": "StringLiteral",
      "value": " //  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 38,
      },
      "raw": "\\"//   \\"",
      "start": Position {
        "character": 31,
        "line": 38,
      },
      "type": "StringLiteral",
      "value": "//   ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 39,
      },
      "raw": "\\"8\\"",
      "start": Position {
        "character": 5,
        "line": 39,
      },
      "type": "StringLiteral",
      "value": "8",
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 39,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 13,
        "line": 39,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 39,
      },
      "raw": "\\"||-|| \\"",
      "start": Position {
        "character": 23,
        "line": 39,
      },
      "type": "StringLiteral",
      "value": "||-|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 39,
      },
      "raw": "\\"||_|| \\"",
      "start": Position {
        "character": 33,
        "line": 39,
      },
      "type": "StringLiteral",
      "value": "||_|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 40,
      },
      "raw": "\\"9\\"",
      "start": Position {
        "character": 5,
        "line": 40,
      },
      "type": "StringLiteral",
      "value": "9",
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 40,
      },
      "raw": "\\"||¯|| \\"",
      "start": Position {
        "character": 13,
        "line": 40,
      },
      "type": "StringLiteral",
      "value": "||¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 40,
      },
      "raw": "\\"  ¯|| \\"",
      "start": Position {
        "character": 23,
        "line": 40,
      },
      "type": "StringLiteral",
      "value": "  ¯|| ",
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 40,
      },
      "raw": "\\"  //  \\"",
      "start": Position {
        "character": 33,
        "line": 40,
      },
      "type": "StringLiteral",
      "value": "  //  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 8,
        "line": 41,
      },
      "raw": "\\" \\"",
      "start": Position {
        "character": 5,
        "line": 41,
      },
      "type": "StringLiteral",
      "value": " ",
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 41,
      },
      "raw": "\\"  \\"",
      "start": Position {
        "character": 13,
        "line": 41,
      },
      "type": "StringLiteral",
      "value": "  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 23,
        "line": 41,
      },
      "raw": "\\"  \\"",
      "start": Position {
        "character": 19,
        "line": 41,
      },
      "type": "StringLiteral",
      "value": "  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 41,
      },
      "raw": "\\"  \\"",
      "start": Position {
        "character": 25,
        "line": 41,
      },
      "type": "StringLiteral",
      "value": "  ",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 52,
      },
      "raw": "0",
      "start": Position {
        "character": 15,
        "line": 52,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 36,
        "line": 52,
      },
      "raw": "0",
      "start": Position {
        "character": 35,
        "line": 52,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 53,
      },
      "raw": "1",
      "start": Position {
        "character": 15,
        "line": 53,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 36,
        "line": 53,
      },
      "raw": "1",
      "start": Position {
        "character": 35,
        "line": 53,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 54,
      },
      "raw": "2",
      "start": Position {
        "character": 15,
        "line": 54,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 36,
        "line": 54,
      },
      "raw": "2",
      "start": Position {
        "character": 35,
        "line": 54,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 35,
        "line": 58,
      },
      "raw": "\\"string\\"",
      "start": Position {
        "character": 27,
        "line": 58,
      },
      "type": "StringLiteral",
      "value": "string",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 59,
      },
      "raw": "0",
      "start": Position {
        "character": 11,
        "line": 59,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 59,
      },
      "raw": "\\"<color=#\\"",
      "start": Position {
        "character": 17,
        "line": 59,
      },
      "type": "StringLiteral",
      "value": "<color=#",
    },
    ASTLiteral {
      "end": Position {
        "character": 42,
        "line": 59,
      },
      "raw": "\\">\\"",
      "start": Position {
        "character": 39,
        "line": 59,
      },
      "type": "StringLiteral",
      "value": ">",
    },
    ASTLiteral {
      "end": Position {
        "character": 49,
        "line": 59,
      },
      "raw": "0",
      "start": Position {
        "character": 48,
        "line": 59,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 64,
        "line": 59,
      },
      "raw": "\\"</color>\\"",
      "start": Position {
        "character": 54,
        "line": 59,
      },
      "type": "StringLiteral",
      "value": "</color>",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 60,
      },
      "raw": "1",
      "start": Position {
        "character": 11,
        "line": 60,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 60,
      },
      "raw": "\\"<color=#\\"",
      "start": Position {
        "character": 17,
        "line": 60,
      },
      "type": "StringLiteral",
      "value": "<color=#",
    },
    ASTLiteral {
      "end": Position {
        "character": 42,
        "line": 60,
      },
      "raw": "\\">\\"",
      "start": Position {
        "character": 39,
        "line": 60,
      },
      "type": "StringLiteral",
      "value": ">",
    },
    ASTLiteral {
      "end": Position {
        "character": 49,
        "line": 60,
      },
      "raw": "1",
      "start": Position {
        "character": 48,
        "line": 60,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 64,
        "line": 60,
      },
      "raw": "\\"</color>\\"",
      "start": Position {
        "character": 54,
        "line": 60,
      },
      "type": "StringLiteral",
      "value": "</color>",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 61,
      },
      "raw": "2",
      "start": Position {
        "character": 11,
        "line": 61,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 61,
      },
      "raw": "\\"<color=#\\"",
      "start": Position {
        "character": 17,
        "line": 61,
      },
      "type": "StringLiteral",
      "value": "<color=#",
    },
    ASTLiteral {
      "end": Position {
        "character": 42,
        "line": 61,
      },
      "raw": "\\">\\"",
      "start": Position {
        "character": 39,
        "line": 61,
      },
      "type": "StringLiteral",
      "value": ">",
    },
    ASTLiteral {
      "end": Position {
        "character": 49,
        "line": 61,
      },
      "raw": "2",
      "start": Position {
        "character": 48,
        "line": 61,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 64,
        "line": 61,
      },
      "raw": "\\"</color>\\"",
      "start": Position {
        "character": 54,
        "line": 61,
      },
      "type": "StringLiteral",
      "value": "</color>",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 62,
      },
      "raw": "\\"list\\"",
      "start": Position {
        "character": 32,
        "line": 62,
      },
      "type": "StringLiteral",
      "value": "list",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 63,
      },
      "raw": "0",
      "start": Position {
        "character": 11,
        "line": 63,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 63,
      },
      "raw": "\\"<color=#\\"",
      "start": Position {
        "character": 17,
        "line": 63,
      },
      "type": "StringLiteral",
      "value": "<color=#",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 63,
      },
      "raw": "0",
      "start": Position {
        "character": 37,
        "line": 63,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 63,
      },
      "raw": "\\">\\"",
      "start": Position {
        "character": 42,
        "line": 63,
      },
      "type": "StringLiteral",
      "value": ">",
    },
    ASTLiteral {
      "end": Position {
        "character": 52,
        "line": 63,
      },
      "raw": "0",
      "start": Position {
        "character": 51,
        "line": 63,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 67,
        "line": 63,
      },
      "raw": "\\"</color>\\"",
      "start": Position {
        "character": 57,
        "line": 63,
      },
      "type": "StringLiteral",
      "value": "</color>",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 64,
      },
      "raw": "1",
      "start": Position {
        "character": 11,
        "line": 64,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 64,
      },
      "raw": "\\"<color=#\\"",
      "start": Position {
        "character": 17,
        "line": 64,
      },
      "type": "StringLiteral",
      "value": "<color=#",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 64,
      },
      "raw": "1",
      "start": Position {
        "character": 37,
        "line": 64,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 64,
      },
      "raw": "\\">\\"",
      "start": Position {
        "character": 42,
        "line": 64,
      },
      "type": "StringLiteral",
      "value": ">",
    },
    ASTLiteral {
      "end": Position {
        "character": 52,
        "line": 64,
      },
      "raw": "1",
      "start": Position {
        "character": 51,
        "line": 64,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 67,
        "line": 64,
      },
      "raw": "\\"</color>\\"",
      "start": Position {
        "character": 57,
        "line": 64,
      },
      "type": "StringLiteral",
      "value": "</color>",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 65,
      },
      "raw": "2",
      "start": Position {
        "character": 11,
        "line": 65,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 65,
      },
      "raw": "\\"<color=#\\"",
      "start": Position {
        "character": 17,
        "line": 65,
      },
      "type": "StringLiteral",
      "value": "<color=#",
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 65,
      },
      "raw": "2",
      "start": Position {
        "character": 37,
        "line": 65,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 65,
      },
      "raw": "\\">\\"",
      "start": Position {
        "character": 42,
        "line": 65,
      },
      "type": "StringLiteral",
      "value": ">",
    },
    ASTLiteral {
      "end": Position {
        "character": 52,
        "line": 65,
      },
      "raw": "2",
      "start": Position {
        "character": 51,
        "line": 65,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 67,
        "line": 65,
      },
      "raw": "\\"</color>\\"",
      "start": Position {
        "character": 57,
        "line": 65,
      },
      "type": "StringLiteral",
      "value": "</color>",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 68,
      },
      "raw": "0",
      "start": Position {
        "character": 15,
        "line": 68,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 68,
      },
      "raw": "\\"\\"",
      "start": Position {
        "character": 23,
        "line": 68,
      },
      "type": "StringLiteral",
      "value": "",
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 68,
      },
      "raw": "1",
      "start": Position {
        "character": 30,
        "line": 68,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 40,
        "line": 68,
      },
      "raw": "\\"\\"",
      "start": Position {
        "character": 38,
        "line": 68,
      },
      "type": "StringLiteral",
      "value": "",
    },
    ASTLiteral {
      "end": Position {
        "character": 46,
        "line": 68,
      },
      "raw": "2",
      "start": Position {
        "character": 45,
        "line": 68,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 55,
        "line": 68,
      },
      "raw": "\\"\\"",
      "start": Position {
        "character": 53,
        "line": 68,
      },
      "type": "StringLiteral",
      "value": "",
    },
    ASTLiteral {
      "end": Position {
        "character": 67,
        "line": 68,
      },
      "raw": "\\"\\\\n\\"",
      "start": Position {
        "character": 63,
        "line": 68,
      },
      "type": "StringLiteral",
      "value": "\\\\n",
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 71,
      },
      "raw": "\\"Hallo\\"",
      "start": Position {
        "character": 20,
        "line": 71,
      },
      "type": "StringLiteral",
      "value": "Hallo",
    },
  ],
  "namespaces": Set {
    "AsciiGen",
    "map",
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z",
    "MAP",
    "gen",
    "colors",
    "signs",
    "lower",
    "push",
    "join",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts binary-expressions.src 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTCallStatement {
      "end": Position {
        "character": 7,
        "line": 1,
      },
      "expression": ASTAssignmentStatement {
        "end": Position {
          "character": 7,
          "line": 1,
        },
        "init": ASTEvaluationExpression {
          "end": Position {
            "character": 7,
            "line": 1,
          },
          "left": ASTIdentifier {
            "end": Position {
              "character": 2,
              "line": 1,
            },
            "name": "a",
            "start": Position {
              "character": 1,
              "line": 1,
            },
            "type": "Identifier",
          },
          "operator": "/",
          "right": ASTIdentifier {
            "end": Position {
              "character": 7,
              "line": 1,
            },
            "name": "b",
            "start": Position {
              "character": 6,
              "line": 1,
            },
            "type": "Identifier",
          },
          "start": Position {
            "character": 6,
            "line": 1,
          },
          "type": "BinaryExpression",
        },
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "AssignmentStatement",
        "variable": ASTIdentifier {
          "end": Position {
            "character": 2,
            "line": 1,
          },
          "name": "a",
          "start": Position {
            "character": 1,
            "line": 1,
          },
          "type": "Identifier",
        },
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 7,
        "line": 2,
      },
      "expression": ASTAssignmentStatement {
        "end": Position {
          "character": 7,
          "line": 2,
        },
        "init": ASTEvaluationExpression {
          "end": Position {
            "character": 7,
            "line": 2,
          },
          "left": ASTIdentifier {
            "end": Position {
              "character": 2,
              "line": 2,
            },
            "name": "a",
            "start": Position {
              "character": 1,
              "line": 2,
            },
            "type": "Identifier",
          },
          "operator": "*",
          "right": ASTIdentifier {
            "end": Position {
              "character": 7,
              "line": 2,
            },
            "name": "b",
            "start": Position {
              "character": 6,
              "line": 2,
            },
            "type": "Identifier",
          },
          "start": Position {
            "character": 6,
            "line": 2,
          },
          "type": "BinaryExpression",
        },
        "start": Position {
          "character": 1,
          "line": 2,
        },
        "type": "AssignmentStatement",
        "variable": ASTIdentifier {
          "end": Position {
            "character": 2,
            "line": 2,
          },
          "name": "a",
          "start": Position {
            "character": 1,
            "line": 2,
          },
          "type": "Identifier",
        },
      },
      "start": Position {
        "character": 1,
        "line": 2,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 7,
        "line": 3,
      },
      "expression": ASTAssignmentStatement {
        "end": Position {
          "character": 7,
          "line": 3,
        },
        "init": ASTEvaluationExpression {
          "end": Position {
            "character": 7,
            "line": 3,
          },
          "left": ASTIdentifier {
            "end": Position {
              "character": 2,
              "line": 3,
            },
            "name": "a",
            "start": Position {
              "character": 1,
              "line": 3,
            },
            "type": "Identifier",
          },
          "operator": "-",
          "right": ASTIdentifier {
            "end": Position {
              "character": 7,
              "line": 3,
            },
            "name": "b",
            "start": Position {
              "character": 6,
              "line": 3,
            },
            "type": "Identifier",
          },
          "start": Position {
            "character": 6,
            "line": 3,
          },
          "type": "BinaryExpression",
        },
        "start": Position {
          "character": 1,
          "line": 3,
        },
        "type": "AssignmentStatement",
        "variable": ASTIdentifier {
          "end": Position {
            "character": 2,
            "line": 3,
          },
          "name": "a",
          "start": Position {
            "character": 1,
            "line": 3,
          },
          "type": "Identifier",
        },
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 7,
        "line": 4,
      },
      "expression": ASTAssignmentStatement {
        "end": Position {
          "character": 7,
          "line": 4,
        },
        "init": ASTEvaluationExpression {
          "end": Position {
            "character": 7,
            "line": 4,
          },
          "left": ASTIdentifier {
            "end": Position {
              "character": 2,
              "line": 4,
            },
            "name": "a",
            "start": Position {
              "character": 1,
              "line": 4,
            },
            "type": "Identifier",
          },
          "operator": "+",
          "right": ASTIdentifier {
            "end": Position {
              "character": 7,
              "line": 4,
            },
            "name": "b",
            "start": Position {
              "character": 6,
              "line": 4,
            },
            "type": "Identifier",
          },
          "start": Position {
            "character": 6,
            "line": 4,
          },
          "type": "BinaryExpression",
        },
        "start": Position {
          "character": 1,
          "line": 4,
        },
        "type": "AssignmentStatement",
        "variable": ASTIdentifier {
          "end": Position {
            "character": 2,
            "line": 4,
          },
          "name": "a",
          "start": Position {
            "character": 1,
            "line": 4,
          },
          "type": "Identifier",
        },
      },
      "start": Position {
        "character": 1,
        "line": 4,
      },
      "type": "CallStatement",
    },
    ASTEvaluationExpression {
      "end": Position {
        "character": 7,
        "line": 5,
      },
      "left": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 5,
        },
        "name": "a",
        "start": Position {
          "character": 1,
          "line": 5,
        },
        "type": "Identifier",
      },
      "operator": "<<",
      "right": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 5,
        },
        "name": "b",
        "start": Position {
          "character": 6,
          "line": 5,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 3,
        "line": 5,
      },
      "type": "BinaryExpression",
    },
    ASTEvaluationExpression {
      "end": Position {
        "character": 7,
        "line": 6,
      },
      "left": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 6,
        },
        "name": "a",
        "start": Position {
          "character": 1,
          "line": 6,
        },
        "type": "Identifier",
      },
      "operator": ">>",
      "right": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 6,
        },
        "name": "b",
        "start": Position {
          "character": 6,
          "line": 6,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 3,
        "line": 6,
      },
      "type": "BinaryExpression",
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 24,
        "line": 7,
      },
      "init": ASTEvaluationExpression {
        "end": Position {
          "character": 24,
          "line": 7,
        },
        "left": ASTEvaluationExpression {
          "end": Position {
            "character": 22,
            "line": 7,
          },
          "left": ASTIdentifier {
            "end": Position {
              "character": 6,
              "line": 7,
            },
            "name": "a",
            "start": Position {
              "character": 5,
              "line": 7,
            },
            "type": "Identifier",
          },
          "operator": ">>>",
          "right": ASTEvaluationExpression {
            "end": Position {
              "character": 19,
              "line": 7,
            },
            "left": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 7,
              },
              "name": "b",
              "start": Position {
                "character": 12,
                "line": 7,
              },
              "type": "Identifier",
            },
            "operator": "<<",
            "right": ASTIdentifier {
              "end": Position {
                "character": 18,
                "line": 7,
              },
              "name": "c",
              "start": Position {
                "character": 17,
                "line": 7,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 14,
              "line": 7,
            },
            "type": "BinaryExpression",
          },
          "start": Position {
            "character": 7,
            "line": 7,
          },
          "type": "BinaryExpression",
        },
        "operator": ">>",
        "right": ASTIdentifier {
          "end": Position {
            "character": 24,
            "line": 7,
          },
          "name": "a",
          "start": Position {
            "character": 23,
            "line": 7,
          },
          "type": "Identifier",
        },
        "start": Position {
          "character": 7,
          "line": 7,
        },
        "type": "BinaryExpression",
      },
      "start": Position {
        "character": 1,
        "line": 7,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 7,
        },
        "name": "w",
        "start": Position {
          "character": 1,
          "line": 7,
        },
        "type": "Identifier",
      },
    },
    ASTEvaluationExpression {
      "end": Position {
        "character": 6,
        "line": 8,
      },
      "left": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 8,
        },
        "name": "a",
        "start": Position {
          "character": 1,
          "line": 8,
        },
        "type": "Identifier",
      },
      "operator": "|",
      "right": ASTIdentifier {
        "end": Position {
          "character": 6,
          "line": 8,
        },
        "name": "b",
        "start": Position {
          "character": 5,
          "line": 8,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 3,
        "line": 8,
      },
      "type": "BinaryExpression",
    },
    ASTEvaluationExpression {
      "end": Position {
        "character": 6,
        "line": 9,
      },
      "left": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 9,
        },
        "name": "a",
        "start": Position {
          "character": 1,
          "line": 9,
        },
        "type": "Identifier",
      },
      "operator": "&",
      "right": ASTIdentifier {
        "end": Position {
          "character": 6,
          "line": 9,
        },
        "name": "b",
        "start": Position {
          "character": 5,
          "line": 9,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 3,
        "line": 9,
      },
      "type": "BinaryExpression",
    },
    ASTEvaluationExpression {
      "end": Position {
        "character": 6,
        "line": 10,
      },
      "left": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 10,
        },
        "name": "a",
        "start": Position {
          "character": 1,
          "line": 10,
        },
        "type": "Identifier",
      },
      "operator": "^",
      "right": ASTIdentifier {
        "end": Position {
          "character": 6,
          "line": 10,
        },
        "name": "b",
        "start": Position {
          "character": 5,
          "line": 10,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 3,
        "line": 10,
      },
      "type": "BinaryExpression",
    },
    ASTEvaluationExpression {
      "end": Position {
        "character": 8,
        "line": 11,
      },
      "left": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 11,
        },
        "name": "a",
        "start": Position {
          "character": 1,
          "line": 11,
        },
        "type": "Identifier",
      },
      "operator": "and",
      "right": ASTIdentifier {
        "end": Position {
          "character": 8,
          "line": 11,
        },
        "name": "b",
        "start": Position {
          "character": 7,
          "line": 11,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 3,
        "line": 11,
      },
      "type": "LogicalExpression",
    },
    ASTEvaluationExpression {
      "end": Position {
        "character": 7,
        "line": 12,
      },
      "left": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 12,
        },
        "name": "a",
        "start": Position {
          "character": 1,
          "line": 12,
        },
        "type": "Identifier",
      },
      "operator": "or",
      "right": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 12,
        },
        "name": "b",
        "start": Position {
          "character": 6,
          "line": 12,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 3,
        "line": 12,
      },
      "type": "LogicalExpression",
    },
  ],
  "end": Position {
    "character": 7,
    "line": 12,
  },
  "literals": Array [],
  "namespaces": Set {
    "a",
    "b",
    "w",
    "c",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts binary-expressions.src unsafe 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTCallStatement {
      "end": Position {
        "character": 7,
        "line": 1,
      },
      "expression": ASTAssignmentStatement {
        "end": Position {
          "character": 7,
          "line": 1,
        },
        "init": ASTEvaluationExpression {
          "end": Position {
            "character": 7,
            "line": 1,
          },
          "left": ASTIdentifier {
            "end": Position {
              "character": 2,
              "line": 1,
            },
            "name": "a",
            "start": Position {
              "character": 1,
              "line": 1,
            },
            "type": "Identifier",
          },
          "operator": "/",
          "right": ASTIdentifier {
            "end": Position {
              "character": 7,
              "line": 1,
            },
            "name": "b",
            "start": Position {
              "character": 6,
              "line": 1,
            },
            "type": "Identifier",
          },
          "start": Position {
            "character": 6,
            "line": 1,
          },
          "type": "BinaryExpression",
        },
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "AssignmentStatement",
        "variable": ASTIdentifier {
          "end": Position {
            "character": 2,
            "line": 1,
          },
          "name": "a",
          "start": Position {
            "character": 1,
            "line": 1,
          },
          "type": "Identifier",
        },
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 7,
        "line": 2,
      },
      "expression": ASTAssignmentStatement {
        "end": Position {
          "character": 7,
          "line": 2,
        },
        "init": ASTEvaluationExpression {
          "end": Position {
            "character": 7,
            "line": 2,
          },
          "left": ASTIdentifier {
            "end": Position {
              "character": 2,
              "line": 2,
            },
            "name": "a",
            "start": Position {
              "character": 1,
              "line": 2,
            },
            "type": "Identifier",
          },
          "operator": "*",
          "right": ASTIdentifier {
            "end": Position {
              "character": 7,
              "line": 2,
            },
            "name": "b",
            "start": Position {
              "character": 6,
              "line": 2,
            },
            "type": "Identifier",
          },
          "start": Position {
            "character": 6,
            "line": 2,
          },
          "type": "BinaryExpression",
        },
        "start": Position {
          "character": 1,
          "line": 2,
        },
        "type": "AssignmentStatement",
        "variable": ASTIdentifier {
          "end": Position {
            "character": 2,
            "line": 2,
          },
          "name": "a",
          "start": Position {
            "character": 1,
            "line": 2,
          },
          "type": "Identifier",
        },
      },
      "start": Position {
        "character": 1,
        "line": 2,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 7,
        "line": 3,
      },
      "expression": ASTAssignmentStatement {
        "end": Position {
          "character": 7,
          "line": 3,
        },
        "init": ASTEvaluationExpression {
          "end": Position {
            "character": 7,
            "line": 3,
          },
          "left": ASTIdentifier {
            "end": Position {
              "character": 2,
              "line": 3,
            },
            "name": "a",
            "start": Position {
              "character": 1,
              "line": 3,
            },
            "type": "Identifier",
          },
          "operator": "-",
          "right": ASTIdentifier {
            "end": Position {
              "character": 7,
              "line": 3,
            },
            "name": "b",
            "start": Position {
              "character": 6,
              "line": 3,
            },
            "type": "Identifier",
          },
          "start": Position {
            "character": 6,
            "line": 3,
          },
          "type": "BinaryExpression",
        },
        "start": Position {
          "character": 1,
          "line": 3,
        },
        "type": "AssignmentStatement",
        "variable": ASTIdentifier {
          "end": Position {
            "character": 2,
            "line": 3,
          },
          "name": "a",
          "start": Position {
            "character": 1,
            "line": 3,
          },
          "type": "Identifier",
        },
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 7,
        "line": 4,
      },
      "expression": ASTAssignmentStatement {
        "end": Position {
          "character": 7,
          "line": 4,
        },
        "init": ASTEvaluationExpression {
          "end": Position {
            "character": 7,
            "line": 4,
          },
          "left": ASTIdentifier {
            "end": Position {
              "character": 2,
              "line": 4,
            },
            "name": "a",
            "start": Position {
              "character": 1,
              "line": 4,
            },
            "type": "Identifier",
          },
          "operator": "+",
          "right": ASTIdentifier {
            "end": Position {
              "character": 7,
              "line": 4,
            },
            "name": "b",
            "start": Position {
              "character": 6,
              "line": 4,
            },
            "type": "Identifier",
          },
          "start": Position {
            "character": 6,
            "line": 4,
          },
          "type": "BinaryExpression",
        },
        "start": Position {
          "character": 1,
          "line": 4,
        },
        "type": "AssignmentStatement",
        "variable": ASTIdentifier {
          "end": Position {
            "character": 2,
            "line": 4,
          },
          "name": "a",
          "start": Position {
            "character": 1,
            "line": 4,
          },
          "type": "Identifier",
        },
      },
      "start": Position {
        "character": 1,
        "line": 4,
      },
      "type": "CallStatement",
    },
    ASTEvaluationExpression {
      "end": Position {
        "character": 7,
        "line": 5,
      },
      "left": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 5,
        },
        "name": "a",
        "start": Position {
          "character": 1,
          "line": 5,
        },
        "type": "Identifier",
      },
      "operator": "<<",
      "right": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 5,
        },
        "name": "b",
        "start": Position {
          "character": 6,
          "line": 5,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 3,
        "line": 5,
      },
      "type": "BinaryExpression",
    },
    ASTEvaluationExpression {
      "end": Position {
        "character": 7,
        "line": 6,
      },
      "left": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 6,
        },
        "name": "a",
        "start": Position {
          "character": 1,
          "line": 6,
        },
        "type": "Identifier",
      },
      "operator": ">>",
      "right": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 6,
        },
        "name": "b",
        "start": Position {
          "character": 6,
          "line": 6,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 3,
        "line": 6,
      },
      "type": "BinaryExpression",
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 24,
        "line": 7,
      },
      "init": ASTEvaluationExpression {
        "end": Position {
          "character": 24,
          "line": 7,
        },
        "left": ASTEvaluationExpression {
          "end": Position {
            "character": 22,
            "line": 7,
          },
          "left": ASTIdentifier {
            "end": Position {
              "character": 6,
              "line": 7,
            },
            "name": "a",
            "start": Position {
              "character": 5,
              "line": 7,
            },
            "type": "Identifier",
          },
          "operator": ">>>",
          "right": ASTEvaluationExpression {
            "end": Position {
              "character": 19,
              "line": 7,
            },
            "left": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 7,
              },
              "name": "b",
              "start": Position {
                "character": 12,
                "line": 7,
              },
              "type": "Identifier",
            },
            "operator": "<<",
            "right": ASTIdentifier {
              "end": Position {
                "character": 18,
                "line": 7,
              },
              "name": "c",
              "start": Position {
                "character": 17,
                "line": 7,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 14,
              "line": 7,
            },
            "type": "BinaryExpression",
          },
          "start": Position {
            "character": 7,
            "line": 7,
          },
          "type": "BinaryExpression",
        },
        "operator": ">>",
        "right": ASTIdentifier {
          "end": Position {
            "character": 24,
            "line": 7,
          },
          "name": "a",
          "start": Position {
            "character": 23,
            "line": 7,
          },
          "type": "Identifier",
        },
        "start": Position {
          "character": 7,
          "line": 7,
        },
        "type": "BinaryExpression",
      },
      "start": Position {
        "character": 1,
        "line": 7,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 7,
        },
        "name": "w",
        "start": Position {
          "character": 1,
          "line": 7,
        },
        "type": "Identifier",
      },
    },
    ASTEvaluationExpression {
      "end": Position {
        "character": 6,
        "line": 8,
      },
      "left": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 8,
        },
        "name": "a",
        "start": Position {
          "character": 1,
          "line": 8,
        },
        "type": "Identifier",
      },
      "operator": "|",
      "right": ASTIdentifier {
        "end": Position {
          "character": 6,
          "line": 8,
        },
        "name": "b",
        "start": Position {
          "character": 5,
          "line": 8,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 3,
        "line": 8,
      },
      "type": "BinaryExpression",
    },
    ASTEvaluationExpression {
      "end": Position {
        "character": 6,
        "line": 9,
      },
      "left": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 9,
        },
        "name": "a",
        "start": Position {
          "character": 1,
          "line": 9,
        },
        "type": "Identifier",
      },
      "operator": "&",
      "right": ASTIdentifier {
        "end": Position {
          "character": 6,
          "line": 9,
        },
        "name": "b",
        "start": Position {
          "character": 5,
          "line": 9,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 3,
        "line": 9,
      },
      "type": "BinaryExpression",
    },
    ASTEvaluationExpression {
      "end": Position {
        "character": 6,
        "line": 10,
      },
      "left": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 10,
        },
        "name": "a",
        "start": Position {
          "character": 1,
          "line": 10,
        },
        "type": "Identifier",
      },
      "operator": "^",
      "right": ASTIdentifier {
        "end": Position {
          "character": 6,
          "line": 10,
        },
        "name": "b",
        "start": Position {
          "character": 5,
          "line": 10,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 3,
        "line": 10,
      },
      "type": "BinaryExpression",
    },
    ASTEvaluationExpression {
      "end": Position {
        "character": 8,
        "line": 11,
      },
      "left": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 11,
        },
        "name": "a",
        "start": Position {
          "character": 1,
          "line": 11,
        },
        "type": "Identifier",
      },
      "operator": "and",
      "right": ASTIdentifier {
        "end": Position {
          "character": 8,
          "line": 11,
        },
        "name": "b",
        "start": Position {
          "character": 7,
          "line": 11,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 3,
        "line": 11,
      },
      "type": "LogicalExpression",
    },
    ASTEvaluationExpression {
      "end": Position {
        "character": 7,
        "line": 12,
      },
      "left": ASTIdentifier {
        "end": Position {
          "character": 2,
          "line": 12,
        },
        "name": "a",
        "start": Position {
          "character": 1,
          "line": 12,
        },
        "type": "Identifier",
      },
      "operator": "or",
      "right": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 12,
        },
        "name": "b",
        "start": Position {
          "character": 6,
          "line": 12,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 3,
        "line": 12,
      },
      "type": "LogicalExpression",
    },
  ],
  "end": Position {
    "character": 7,
    "line": 12,
  },
  "literals": Array [],
  "namespaces": Set {
    "a",
    "b",
    "w",
    "c",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts eol.src 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 18,
                "line": 2,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 17,
                      "line": 2,
                    },
                    "raw": "\\"true\\"",
                    "start": Position {
                      "character": 11,
                      "line": 2,
                    },
                    "type": "StringLiteral",
                    "value": "true",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 2,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 5,
                    "line": 2,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 18,
                  "line": 2,
                },
                "start": Position {
                  "character": 10,
                  "line": 2,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 5,
                "line": 2,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 1,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 1,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 5,
            "line": 3,
          },
          "start": Position {
            "character": 1,
            "line": 1,
          },
          "type": "IfClause",
        },
        ASTElseClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 19,
                "line": 4,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 18,
                      "line": 4,
                    },
                    "raw": "\\"false\\"",
                    "start": Position {
                      "character": 11,
                      "line": 4,
                    },
                    "type": "StringLiteral",
                    "value": "false",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 4,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 5,
                    "line": 4,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 19,
                  "line": 4,
                },
                "start": Position {
                  "character": 10,
                  "line": 4,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 5,
                "line": 4,
              },
              "type": "CallStatement",
            },
          ],
          "end": Position {
            "character": 7,
            "line": 5,
          },
          "start": Position {
            "character": 5,
            "line": 3,
          },
          "type": "ElseClause",
        },
      ],
      "end": Position {
        "character": 7,
        "line": 5,
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "IfStatement",
    },
    ASTWhileStatement {
      "body": Array [
        ASTCallStatement {
          "end": Position {
            "character": 17,
            "line": 8,
          },
          "expression": ASTCallExpression {
            "arguments": Array [
              ASTLiteral {
                "end": Position {
                  "character": 16,
                  "line": 8,
                },
                "raw": "\\"foo\\"",
                "start": Position {
                  "character": 11,
                  "line": 8,
                },
                "type": "StringLiteral",
                "value": "foo",
              },
            ],
            "base": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 8,
              },
              "name": "print",
              "start": Position {
                "character": 5,
                "line": 8,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 17,
              "line": 8,
            },
            "start": Position {
              "character": 10,
              "line": 8,
            },
            "type": "CallExpression",
          },
          "start": Position {
            "character": 5,
            "line": 8,
          },
          "type": "CallStatement",
        },
      ],
      "condition": ASTLiteral {
        "end": Position {
          "character": 13,
          "line": 7,
        },
        "raw": "false",
        "start": Position {
          "character": 8,
          "line": 7,
        },
        "type": "BooleanLiteral",
        "value": false,
      },
      "end": Position {
        "character": 10,
        "line": 9,
      },
      "start": Position {
        "character": 1,
        "line": 7,
      },
      "type": "WhileStatement",
    },
    ASTForGenericStatement {
      "body": Array [
        ASTCallStatement {
          "end": Position {
            "character": 17,
            "line": 12,
          },
          "expression": ASTCallExpression {
            "arguments": Array [
              ASTLiteral {
                "end": Position {
                  "character": 16,
                  "line": 12,
                },
                "raw": "\\"foo\\"",
                "start": Position {
                  "character": 11,
                  "line": 12,
                },
                "type": "StringLiteral",
                "value": "foo",
              },
            ],
            "base": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 12,
              },
              "name": "print",
              "start": Position {
                "character": 5,
                "line": 12,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 17,
              "line": 12,
            },
            "start": Position {
              "character": 10,
              "line": 12,
            },
            "type": "CallExpression",
          },
          "start": Position {
            "character": 5,
            "line": 12,
          },
          "type": "CallStatement",
        },
      ],
      "end": Position {
        "character": 8,
        "line": 13,
      },
      "iterator": ASTListConstructorExpression {
        "end": Position {
          "character": 15,
          "line": 11,
        },
        "fields": Array [],
        "start": Position {
          "character": 13,
          "line": 11,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 11,
      },
      "type": "ForGenericStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 9,
          "line": 11,
        },
        "name": "foo",
        "start": Position {
          "character": 6,
          "line": 11,
        },
        "type": "Identifier",
      },
    },
  ],
  "end": Position {
    "character": 9,
    "line": 13,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 1,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 1,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 2,
      },
      "raw": "\\"true\\"",
      "start": Position {
        "character": 11,
        "line": 2,
      },
      "type": "StringLiteral",
      "value": "true",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 4,
      },
      "raw": "\\"false\\"",
      "start": Position {
        "character": 11,
        "line": 4,
      },
      "type": "StringLiteral",
      "value": "false",
    },
    ASTLiteral {
      "end": Position {
        "character": 13,
        "line": 7,
      },
      "raw": "false",
      "start": Position {
        "character": 8,
        "line": 7,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 8,
      },
      "raw": "\\"foo\\"",
      "start": Position {
        "character": 11,
        "line": 8,
      },
      "type": "StringLiteral",
      "value": "foo",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 12,
      },
      "raw": "\\"foo\\"",
      "start": Position {
        "character": 11,
        "line": 12,
      },
      "type": "StringLiteral",
      "value": "foo",
    },
  ],
  "namespaces": Set {
    "foo",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts eol.src unsafe 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 18,
                "line": 2,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 17,
                      "line": 2,
                    },
                    "raw": "\\"true\\"",
                    "start": Position {
                      "character": 11,
                      "line": 2,
                    },
                    "type": "StringLiteral",
                    "value": "true",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 2,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 5,
                    "line": 2,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 18,
                  "line": 2,
                },
                "start": Position {
                  "character": 10,
                  "line": 2,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 5,
                "line": 2,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 1,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 1,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 5,
            "line": 3,
          },
          "start": Position {
            "character": 1,
            "line": 1,
          },
          "type": "IfClause",
        },
        ASTElseClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 19,
                "line": 4,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 18,
                      "line": 4,
                    },
                    "raw": "\\"false\\"",
                    "start": Position {
                      "character": 11,
                      "line": 4,
                    },
                    "type": "StringLiteral",
                    "value": "false",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 4,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 5,
                    "line": 4,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 19,
                  "line": 4,
                },
                "start": Position {
                  "character": 10,
                  "line": 4,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 5,
                "line": 4,
              },
              "type": "CallStatement",
            },
          ],
          "end": Position {
            "character": 7,
            "line": 5,
          },
          "start": Position {
            "character": 5,
            "line": 3,
          },
          "type": "ElseClause",
        },
      ],
      "end": Position {
        "character": 7,
        "line": 5,
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "IfStatement",
    },
    ASTWhileStatement {
      "body": Array [
        ASTCallStatement {
          "end": Position {
            "character": 17,
            "line": 8,
          },
          "expression": ASTCallExpression {
            "arguments": Array [
              ASTLiteral {
                "end": Position {
                  "character": 16,
                  "line": 8,
                },
                "raw": "\\"foo\\"",
                "start": Position {
                  "character": 11,
                  "line": 8,
                },
                "type": "StringLiteral",
                "value": "foo",
              },
            ],
            "base": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 8,
              },
              "name": "print",
              "start": Position {
                "character": 5,
                "line": 8,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 17,
              "line": 8,
            },
            "start": Position {
              "character": 10,
              "line": 8,
            },
            "type": "CallExpression",
          },
          "start": Position {
            "character": 5,
            "line": 8,
          },
          "type": "CallStatement",
        },
      ],
      "condition": ASTLiteral {
        "end": Position {
          "character": 13,
          "line": 7,
        },
        "raw": "false",
        "start": Position {
          "character": 8,
          "line": 7,
        },
        "type": "BooleanLiteral",
        "value": false,
      },
      "end": Position {
        "character": 10,
        "line": 9,
      },
      "start": Position {
        "character": 1,
        "line": 7,
      },
      "type": "WhileStatement",
    },
    ASTForGenericStatement {
      "body": Array [
        ASTCallStatement {
          "end": Position {
            "character": 17,
            "line": 12,
          },
          "expression": ASTCallExpression {
            "arguments": Array [
              ASTLiteral {
                "end": Position {
                  "character": 16,
                  "line": 12,
                },
                "raw": "\\"foo\\"",
                "start": Position {
                  "character": 11,
                  "line": 12,
                },
                "type": "StringLiteral",
                "value": "foo",
              },
            ],
            "base": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 12,
              },
              "name": "print",
              "start": Position {
                "character": 5,
                "line": 12,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 17,
              "line": 12,
            },
            "start": Position {
              "character": 10,
              "line": 12,
            },
            "type": "CallExpression",
          },
          "start": Position {
            "character": 5,
            "line": 12,
          },
          "type": "CallStatement",
        },
      ],
      "end": Position {
        "character": 8,
        "line": 13,
      },
      "iterator": ASTListConstructorExpression {
        "end": Position {
          "character": 15,
          "line": 11,
        },
        "fields": Array [],
        "start": Position {
          "character": 13,
          "line": 11,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 11,
      },
      "type": "ForGenericStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 9,
          "line": 11,
        },
        "name": "foo",
        "start": Position {
          "character": 6,
          "line": 11,
        },
        "type": "Identifier",
      },
    },
  ],
  "end": Position {
    "character": 9,
    "line": 13,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 1,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 1,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 2,
      },
      "raw": "\\"true\\"",
      "start": Position {
        "character": 11,
        "line": 2,
      },
      "type": "StringLiteral",
      "value": "true",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 4,
      },
      "raw": "\\"false\\"",
      "start": Position {
        "character": 11,
        "line": 4,
      },
      "type": "StringLiteral",
      "value": "false",
    },
    ASTLiteral {
      "end": Position {
        "character": 13,
        "line": 7,
      },
      "raw": "false",
      "start": Position {
        "character": 8,
        "line": 7,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 8,
      },
      "raw": "\\"foo\\"",
      "start": Position {
        "character": 11,
        "line": 8,
      },
      "type": "StringLiteral",
      "value": "foo",
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 12,
      },
      "raw": "\\"foo\\"",
      "start": Position {
        "character": 11,
        "line": 12,
      },
      "type": "StringLiteral",
      "value": "foo",
    },
  ],
  "namespaces": Set {
    "foo",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts if-clause.src 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 40,
        "line": 1,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 40,
          "line": 1,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 23,
              "line": 1,
            },
            "start": Position {
              "character": 11,
              "line": 1,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 23,
                "line": 1,
              },
              "raw": "\\"/home/test\\"",
              "start": Position {
                "character": 11,
                "line": 1,
              },
              "type": "StringLiteral",
              "value": "/home/test",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 39,
              "line": 1,
            },
            "start": Position {
              "character": 25,
              "line": 1,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 39,
                "line": 1,
              },
              "raw": "\\"myTestFolder\\"",
              "start": Position {
                "character": 25,
                "line": 1,
              },
              "type": "StringLiteral",
              "value": "myTestFolder",
            },
          },
        ],
        "start": Position {
          "character": 10,
          "line": 1,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 1,
        },
        "name": "params",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 69,
        "line": 3,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTEvaluationExpression {
            "end": Position {
              "character": 69,
              "line": 3,
            },
            "left": ASTEvaluationExpression {
              "end": Position {
                "character": 46,
                "line": 3,
              },
              "left": ASTEvaluationExpression {
                "end": Position {
                  "character": 25,
                  "line": 3,
                },
                "left": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 13,
                      "line": 3,
                    },
                    "name": "params",
                    "start": Position {
                      "character": 7,
                      "line": 3,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 20,
                    "line": 3,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 17,
                      "line": 3,
                    },
                    "name": "len",
                    "start": Position {
                      "character": 14,
                      "line": 3,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 13,
                    "line": 3,
                  },
                  "type": "MemberExpression",
                },
                "operator": "!=",
                "right": ASTLiteral {
                  "end": Position {
                    "character": 22,
                    "line": 3,
                  },
                  "raw": "1",
                  "start": Position {
                    "character": 21,
                    "line": 3,
                  },
                  "type": "NumericLiteral",
                  "value": 1,
                },
                "start": Position {
                  "character": 18,
                  "line": 3,
                },
                "type": "BinaryExpression",
              },
              "operator": "or",
              "right": ASTEvaluationExpression {
                "end": Position {
                  "character": 46,
                  "line": 3,
                },
                "left": ASTIndexExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 32,
                      "line": 3,
                    },
                    "name": "params",
                    "start": Position {
                      "character": 26,
                      "line": 3,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 38,
                    "line": 3,
                  },
                  "index": ASTLiteral {
                    "end": Position {
                      "character": 34,
                      "line": 3,
                    },
                    "raw": "0",
                    "start": Position {
                      "character": 33,
                      "line": 3,
                    },
                    "type": "NumericLiteral",
                    "value": 0,
                  },
                  "start": Position {
                    "character": 33,
                    "line": 3,
                  },
                  "type": "IndexExpression",
                },
                "operator": "==",
                "right": ASTLiteral {
                  "end": Position {
                    "character": 43,
                    "line": 3,
                  },
                  "raw": "\\"-h\\"",
                  "start": Position {
                    "character": 39,
                    "line": 3,
                  },
                  "type": "StringLiteral",
                  "value": "-h",
                },
                "start": Position {
                  "character": 36,
                  "line": 3,
                },
                "type": "BinaryExpression",
              },
              "start": Position {
                "character": 18,
                "line": 3,
              },
              "type": "LogicalExpression",
            },
            "operator": "or",
            "right": ASTEvaluationExpression {
              "end": Position {
                "character": 69,
                "line": 3,
              },
              "left": ASTIndexExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 53,
                    "line": 3,
                  },
                  "name": "params",
                  "start": Position {
                    "character": 47,
                    "line": 3,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 59,
                  "line": 3,
                },
                "index": ASTLiteral {
                  "end": Position {
                    "character": 55,
                    "line": 3,
                  },
                  "raw": "0",
                  "start": Position {
                    "character": 54,
                    "line": 3,
                  },
                  "type": "NumericLiteral",
                  "value": 0,
                },
                "start": Position {
                  "character": 54,
                  "line": 3,
                },
                "type": "IndexExpression",
              },
              "operator": "==",
              "right": ASTLiteral {
                "end": Position {
                  "character": 68,
                  "line": 3,
                },
                "raw": "\\"--help\\"",
                "start": Position {
                  "character": 60,
                  "line": 3,
                },
                "type": "StringLiteral",
                "value": "--help",
              },
              "start": Position {
                "character": 57,
                "line": 3,
              },
              "type": "BinaryExpression",
            },
            "start": Position {
              "character": 18,
              "line": 3,
            },
            "type": "LogicalExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 3,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 3,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 69,
          "line": 3,
        },
        "start": Position {
          "character": 6,
          "line": 3,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 75,
        "line": 4,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTEvaluationExpression {
            "end": Position {
              "character": 75,
              "line": 4,
            },
            "left": ASTEvaluationExpression {
              "end": Position {
                "character": 50,
                "line": 4,
              },
              "left": ASTEvaluationExpression {
                "end": Position {
                  "character": 24,
                  "line": 4,
                },
                "left": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 14,
                      "line": 4,
                    },
                    "name": "params",
                    "start": Position {
                      "character": 8,
                      "line": 4,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 21,
                    "line": 4,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 18,
                      "line": 4,
                    },
                    "name": "len",
                    "start": Position {
                      "character": 15,
                      "line": 4,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 14,
                    "line": 4,
                  },
                  "type": "MemberExpression",
                },
                "operator": "!=",
                "right": ASTLiteral {
                  "end": Position {
                    "character": 23,
                    "line": 4,
                  },
                  "raw": "1",
                  "start": Position {
                    "character": 22,
                    "line": 4,
                  },
                  "type": "NumericLiteral",
                  "value": 1,
                },
                "start": Position {
                  "character": 19,
                  "line": 4,
                },
                "type": "BinaryExpression",
              },
              "operator": "or",
              "right": ASTEvaluationExpression {
                "end": Position {
                  "character": 47,
                  "line": 4,
                },
                "left": ASTIndexExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 35,
                      "line": 4,
                    },
                    "name": "params",
                    "start": Position {
                      "character": 29,
                      "line": 4,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 41,
                    "line": 4,
                  },
                  "index": ASTLiteral {
                    "end": Position {
                      "character": 37,
                      "line": 4,
                    },
                    "raw": "0",
                    "start": Position {
                      "character": 36,
                      "line": 4,
                    },
                    "type": "NumericLiteral",
                    "value": 0,
                  },
                  "start": Position {
                    "character": 36,
                    "line": 4,
                  },
                  "type": "IndexExpression",
                },
                "operator": "==",
                "right": ASTLiteral {
                  "end": Position {
                    "character": 46,
                    "line": 4,
                  },
                  "raw": "\\"-h\\"",
                  "start": Position {
                    "character": 42,
                    "line": 4,
                  },
                  "type": "StringLiteral",
                  "value": "-h",
                },
                "start": Position {
                  "character": 39,
                  "line": 4,
                },
                "type": "BinaryExpression",
              },
              "start": Position {
                "character": 25,
                "line": 4,
              },
              "type": "LogicalExpression",
            },
            "operator": "or",
            "right": ASTEvaluationExpression {
              "end": Position {
                "character": 74,
                "line": 4,
              },
              "left": ASTIndexExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 58,
                    "line": 4,
                  },
                  "name": "params",
                  "start": Position {
                    "character": 52,
                    "line": 4,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 64,
                  "line": 4,
                },
                "index": ASTLiteral {
                  "end": Position {
                    "character": 60,
                    "line": 4,
                  },
                  "raw": "0",
                  "start": Position {
                    "character": 59,
                    "line": 4,
                  },
                  "type": "NumericLiteral",
                  "value": 0,
                },
                "start": Position {
                  "character": 59,
                  "line": 4,
                },
                "type": "IndexExpression",
              },
              "operator": "==",
              "right": ASTLiteral {
                "end": Position {
                  "character": 73,
                  "line": 4,
                },
                "raw": "\\"--help\\"",
                "start": Position {
                  "character": 65,
                  "line": 4,
                },
                "type": "StringLiteral",
                "value": "--help",
              },
              "start": Position {
                "character": 62,
                "line": 4,
              },
              "type": "BinaryExpression",
            },
            "start": Position {
              "character": 25,
              "line": 4,
            },
            "type": "LogicalExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 4,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 4,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 75,
          "line": 4,
        },
        "start": Position {
          "character": 6,
          "line": 4,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 4,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 75,
    "line": 4,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 23,
        "line": 1,
      },
      "raw": "\\"/home/test\\"",
      "start": Position {
        "character": 11,
        "line": 1,
      },
      "type": "StringLiteral",
      "value": "/home/test",
    },
    ASTLiteral {
      "end": Position {
        "character": 39,
        "line": 1,
      },
      "raw": "\\"myTestFolder\\"",
      "start": Position {
        "character": 25,
        "line": 1,
      },
      "type": "StringLiteral",
      "value": "myTestFolder",
    },
    ASTLiteral {
      "end": Position {
        "character": 22,
        "line": 3,
      },
      "raw": "1",
      "start": Position {
        "character": 21,
        "line": 3,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 34,
        "line": 3,
      },
      "raw": "0",
      "start": Position {
        "character": 33,
        "line": 3,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 43,
        "line": 3,
      },
      "raw": "\\"-h\\"",
      "start": Position {
        "character": 39,
        "line": 3,
      },
      "type": "StringLiteral",
      "value": "-h",
    },
    ASTLiteral {
      "end": Position {
        "character": 55,
        "line": 3,
      },
      "raw": "0",
      "start": Position {
        "character": 54,
        "line": 3,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 68,
        "line": 3,
      },
      "raw": "\\"--help\\"",
      "start": Position {
        "character": 60,
        "line": 3,
      },
      "type": "StringLiteral",
      "value": "--help",
    },
    ASTLiteral {
      "end": Position {
        "character": 23,
        "line": 4,
      },
      "raw": "1",
      "start": Position {
        "character": 22,
        "line": 4,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 4,
      },
      "raw": "0",
      "start": Position {
        "character": 36,
        "line": 4,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 46,
        "line": 4,
      },
      "raw": "\\"-h\\"",
      "start": Position {
        "character": 42,
        "line": 4,
      },
      "type": "StringLiteral",
      "value": "-h",
    },
    ASTLiteral {
      "end": Position {
        "character": 60,
        "line": 4,
      },
      "raw": "0",
      "start": Position {
        "character": 59,
        "line": 4,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 73,
        "line": 4,
      },
      "raw": "\\"--help\\"",
      "start": Position {
        "character": 65,
        "line": 4,
      },
      "type": "StringLiteral",
      "value": "--help",
    },
  ],
  "namespaces": Set {
    "len",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts if-clause.src unsafe 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 40,
        "line": 1,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 40,
          "line": 1,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 23,
              "line": 1,
            },
            "start": Position {
              "character": 11,
              "line": 1,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 23,
                "line": 1,
              },
              "raw": "\\"/home/test\\"",
              "start": Position {
                "character": 11,
                "line": 1,
              },
              "type": "StringLiteral",
              "value": "/home/test",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 39,
              "line": 1,
            },
            "start": Position {
              "character": 25,
              "line": 1,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 39,
                "line": 1,
              },
              "raw": "\\"myTestFolder\\"",
              "start": Position {
                "character": 25,
                "line": 1,
              },
              "type": "StringLiteral",
              "value": "myTestFolder",
            },
          },
        ],
        "start": Position {
          "character": 10,
          "line": 1,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 1,
        },
        "name": "params",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 69,
        "line": 3,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTEvaluationExpression {
            "end": Position {
              "character": 69,
              "line": 3,
            },
            "left": ASTEvaluationExpression {
              "end": Position {
                "character": 46,
                "line": 3,
              },
              "left": ASTEvaluationExpression {
                "end": Position {
                  "character": 25,
                  "line": 3,
                },
                "left": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 13,
                      "line": 3,
                    },
                    "name": "params",
                    "start": Position {
                      "character": 7,
                      "line": 3,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 20,
                    "line": 3,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 17,
                      "line": 3,
                    },
                    "name": "len",
                    "start": Position {
                      "character": 14,
                      "line": 3,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 13,
                    "line": 3,
                  },
                  "type": "MemberExpression",
                },
                "operator": "!=",
                "right": ASTLiteral {
                  "end": Position {
                    "character": 22,
                    "line": 3,
                  },
                  "raw": "1",
                  "start": Position {
                    "character": 21,
                    "line": 3,
                  },
                  "type": "NumericLiteral",
                  "value": 1,
                },
                "start": Position {
                  "character": 18,
                  "line": 3,
                },
                "type": "BinaryExpression",
              },
              "operator": "or",
              "right": ASTEvaluationExpression {
                "end": Position {
                  "character": 46,
                  "line": 3,
                },
                "left": ASTIndexExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 32,
                      "line": 3,
                    },
                    "name": "params",
                    "start": Position {
                      "character": 26,
                      "line": 3,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 38,
                    "line": 3,
                  },
                  "index": ASTLiteral {
                    "end": Position {
                      "character": 34,
                      "line": 3,
                    },
                    "raw": "0",
                    "start": Position {
                      "character": 33,
                      "line": 3,
                    },
                    "type": "NumericLiteral",
                    "value": 0,
                  },
                  "start": Position {
                    "character": 33,
                    "line": 3,
                  },
                  "type": "IndexExpression",
                },
                "operator": "==",
                "right": ASTLiteral {
                  "end": Position {
                    "character": 43,
                    "line": 3,
                  },
                  "raw": "\\"-h\\"",
                  "start": Position {
                    "character": 39,
                    "line": 3,
                  },
                  "type": "StringLiteral",
                  "value": "-h",
                },
                "start": Position {
                  "character": 36,
                  "line": 3,
                },
                "type": "BinaryExpression",
              },
              "start": Position {
                "character": 18,
                "line": 3,
              },
              "type": "LogicalExpression",
            },
            "operator": "or",
            "right": ASTEvaluationExpression {
              "end": Position {
                "character": 69,
                "line": 3,
              },
              "left": ASTIndexExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 53,
                    "line": 3,
                  },
                  "name": "params",
                  "start": Position {
                    "character": 47,
                    "line": 3,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 59,
                  "line": 3,
                },
                "index": ASTLiteral {
                  "end": Position {
                    "character": 55,
                    "line": 3,
                  },
                  "raw": "0",
                  "start": Position {
                    "character": 54,
                    "line": 3,
                  },
                  "type": "NumericLiteral",
                  "value": 0,
                },
                "start": Position {
                  "character": 54,
                  "line": 3,
                },
                "type": "IndexExpression",
              },
              "operator": "==",
              "right": ASTLiteral {
                "end": Position {
                  "character": 68,
                  "line": 3,
                },
                "raw": "\\"--help\\"",
                "start": Position {
                  "character": 60,
                  "line": 3,
                },
                "type": "StringLiteral",
                "value": "--help",
              },
              "start": Position {
                "character": 57,
                "line": 3,
              },
              "type": "BinaryExpression",
            },
            "start": Position {
              "character": 18,
              "line": 3,
            },
            "type": "LogicalExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 3,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 3,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 69,
          "line": 3,
        },
        "start": Position {
          "character": 6,
          "line": 3,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 75,
        "line": 4,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTEvaluationExpression {
            "end": Position {
              "character": 75,
              "line": 4,
            },
            "left": ASTEvaluationExpression {
              "end": Position {
                "character": 50,
                "line": 4,
              },
              "left": ASTEvaluationExpression {
                "end": Position {
                  "character": 24,
                  "line": 4,
                },
                "left": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 14,
                      "line": 4,
                    },
                    "name": "params",
                    "start": Position {
                      "character": 8,
                      "line": 4,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 21,
                    "line": 4,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 18,
                      "line": 4,
                    },
                    "name": "len",
                    "start": Position {
                      "character": 15,
                      "line": 4,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 14,
                    "line": 4,
                  },
                  "type": "MemberExpression",
                },
                "operator": "!=",
                "right": ASTLiteral {
                  "end": Position {
                    "character": 23,
                    "line": 4,
                  },
                  "raw": "1",
                  "start": Position {
                    "character": 22,
                    "line": 4,
                  },
                  "type": "NumericLiteral",
                  "value": 1,
                },
                "start": Position {
                  "character": 19,
                  "line": 4,
                },
                "type": "BinaryExpression",
              },
              "operator": "or",
              "right": ASTEvaluationExpression {
                "end": Position {
                  "character": 47,
                  "line": 4,
                },
                "left": ASTIndexExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 35,
                      "line": 4,
                    },
                    "name": "params",
                    "start": Position {
                      "character": 29,
                      "line": 4,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 41,
                    "line": 4,
                  },
                  "index": ASTLiteral {
                    "end": Position {
                      "character": 37,
                      "line": 4,
                    },
                    "raw": "0",
                    "start": Position {
                      "character": 36,
                      "line": 4,
                    },
                    "type": "NumericLiteral",
                    "value": 0,
                  },
                  "start": Position {
                    "character": 36,
                    "line": 4,
                  },
                  "type": "IndexExpression",
                },
                "operator": "==",
                "right": ASTLiteral {
                  "end": Position {
                    "character": 46,
                    "line": 4,
                  },
                  "raw": "\\"-h\\"",
                  "start": Position {
                    "character": 42,
                    "line": 4,
                  },
                  "type": "StringLiteral",
                  "value": "-h",
                },
                "start": Position {
                  "character": 39,
                  "line": 4,
                },
                "type": "BinaryExpression",
              },
              "start": Position {
                "character": 25,
                "line": 4,
              },
              "type": "LogicalExpression",
            },
            "operator": "or",
            "right": ASTEvaluationExpression {
              "end": Position {
                "character": 74,
                "line": 4,
              },
              "left": ASTIndexExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 58,
                    "line": 4,
                  },
                  "name": "params",
                  "start": Position {
                    "character": 52,
                    "line": 4,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 64,
                  "line": 4,
                },
                "index": ASTLiteral {
                  "end": Position {
                    "character": 60,
                    "line": 4,
                  },
                  "raw": "0",
                  "start": Position {
                    "character": 59,
                    "line": 4,
                  },
                  "type": "NumericLiteral",
                  "value": 0,
                },
                "start": Position {
                  "character": 59,
                  "line": 4,
                },
                "type": "IndexExpression",
              },
              "operator": "==",
              "right": ASTLiteral {
                "end": Position {
                  "character": 73,
                  "line": 4,
                },
                "raw": "\\"--help\\"",
                "start": Position {
                  "character": 65,
                  "line": 4,
                },
                "type": "StringLiteral",
                "value": "--help",
              },
              "start": Position {
                "character": 62,
                "line": 4,
              },
              "type": "BinaryExpression",
            },
            "start": Position {
              "character": 25,
              "line": 4,
            },
            "type": "LogicalExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 4,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 4,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 75,
          "line": 4,
        },
        "start": Position {
          "character": 6,
          "line": 4,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 4,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 75,
    "line": 4,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 23,
        "line": 1,
      },
      "raw": "\\"/home/test\\"",
      "start": Position {
        "character": 11,
        "line": 1,
      },
      "type": "StringLiteral",
      "value": "/home/test",
    },
    ASTLiteral {
      "end": Position {
        "character": 39,
        "line": 1,
      },
      "raw": "\\"myTestFolder\\"",
      "start": Position {
        "character": 25,
        "line": 1,
      },
      "type": "StringLiteral",
      "value": "myTestFolder",
    },
    ASTLiteral {
      "end": Position {
        "character": 22,
        "line": 3,
      },
      "raw": "1",
      "start": Position {
        "character": 21,
        "line": 3,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 34,
        "line": 3,
      },
      "raw": "0",
      "start": Position {
        "character": 33,
        "line": 3,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 43,
        "line": 3,
      },
      "raw": "\\"-h\\"",
      "start": Position {
        "character": 39,
        "line": 3,
      },
      "type": "StringLiteral",
      "value": "-h",
    },
    ASTLiteral {
      "end": Position {
        "character": 55,
        "line": 3,
      },
      "raw": "0",
      "start": Position {
        "character": 54,
        "line": 3,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 68,
        "line": 3,
      },
      "raw": "\\"--help\\"",
      "start": Position {
        "character": 60,
        "line": 3,
      },
      "type": "StringLiteral",
      "value": "--help",
    },
    ASTLiteral {
      "end": Position {
        "character": 23,
        "line": 4,
      },
      "raw": "1",
      "start": Position {
        "character": 22,
        "line": 4,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 4,
      },
      "raw": "0",
      "start": Position {
        "character": 36,
        "line": 4,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 46,
        "line": 4,
      },
      "raw": "\\"-h\\"",
      "start": Position {
        "character": 42,
        "line": 4,
      },
      "type": "StringLiteral",
      "value": "-h",
    },
    ASTLiteral {
      "end": Position {
        "character": 60,
        "line": 4,
      },
      "raw": "0",
      "start": Position {
        "character": 59,
        "line": 4,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 73,
        "line": 4,
      },
      "raw": "\\"--help\\"",
      "start": Position {
        "character": 65,
        "line": 4,
      },
      "type": "StringLiteral",
      "value": "--help",
    },
  ],
  "namespaces": Set {
    "len",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts if-shorthand.src 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 29,
                "line": 1,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 28,
                      "line": 1,
                    },
                    "raw": "\\"true\\"",
                    "start": Position {
                      "character": 22,
                      "line": 1,
                    },
                    "type": "StringLiteral",
                    "value": "true",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 1,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 16,
                    "line": 1,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 29,
                  "line": 1,
                },
                "start": Position {
                  "character": 21,
                  "line": 1,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 16,
                "line": 1,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 1,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 1,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 29,
            "line": 1,
          },
          "start": Position {
            "character": 1,
            "line": 1,
          },
          "type": "IfShortcutClause",
        },
      ],
      "end": Position {
        "character": 29,
        "line": 1,
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "IfShortcutStatement",
    },
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 35,
                "line": 2,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 29,
                      "line": 2,
                    },
                    "raw": "\\"true\\"",
                    "start": Position {
                      "character": 23,
                      "line": 2,
                    },
                    "type": "StringLiteral",
                    "value": "true",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 22,
                    "line": 2,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 17,
                    "line": 2,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 35,
                  "line": 2,
                },
                "start": Position {
                  "character": 22,
                  "line": 2,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 17,
                "line": 2,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 10,
              "line": 2,
            },
            "raw": "false",
            "start": Position {
              "character": 5,
              "line": 2,
            },
            "type": "BooleanLiteral",
            "value": false,
          },
          "end": Position {
            "character": 35,
            "line": 2,
          },
          "start": Position {
            "character": 1,
            "line": 2,
          },
          "type": "IfShortcutClause",
        },
        ASTElseClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 49,
                "line": 2,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 48,
                      "line": 2,
                    },
                    "raw": "\\"true\\"",
                    "start": Position {
                      "character": 42,
                      "line": 2,
                    },
                    "type": "StringLiteral",
                    "value": "true",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 41,
                    "line": 2,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 36,
                    "line": 2,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 49,
                  "line": 2,
                },
                "start": Position {
                  "character": 41,
                  "line": 2,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 36,
                "line": 2,
              },
              "type": "CallStatement",
            },
          ],
          "end": Position {
            "character": 49,
            "line": 2,
          },
          "start": Position {
            "character": 36,
            "line": 2,
          },
          "type": "ElseShortcutClause",
        },
      ],
      "end": Position {
        "character": 49,
        "line": 2,
      },
      "start": Position {
        "character": 1,
        "line": 2,
      },
      "type": "IfShortcutStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 13,
        "line": 3,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTLiteral {
            "end": Position {
              "character": 12,
              "line": 3,
            },
            "raw": "\\"was\\"",
            "start": Position {
              "character": 7,
              "line": 3,
            },
            "type": "StringLiteral",
            "value": "was",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 3,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 3,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 13,
          "line": 3,
        },
        "start": Position {
          "character": 6,
          "line": 3,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "CallStatement",
    },
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 17,
                "line": 5,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 16,
                      "line": 5,
                    },
                    "raw": "false",
                    "start": Position {
                      "character": 11,
                      "line": 5,
                    },
                    "type": "BooleanLiteral",
                    "value": false,
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 5,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 5,
                    "line": 5,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 17,
                  "line": 5,
                },
                "start": Position {
                  "character": 10,
                  "line": 5,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 5,
                "line": 5,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 10,
              "line": 4,
            },
            "raw": "false",
            "start": Position {
              "character": 5,
              "line": 4,
            },
            "type": "BooleanLiteral",
            "value": false,
          },
          "end": Position {
            "character": 5,
            "line": 6,
          },
          "start": Position {
            "character": 1,
            "line": 4,
          },
          "type": "IfClause",
        },
        ASTElseClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 16,
                "line": 7,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 15,
                      "line": 7,
                    },
                    "raw": "true",
                    "start": Position {
                      "character": 11,
                      "line": 7,
                    },
                    "type": "BooleanLiteral",
                    "value": true,
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 7,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 5,
                    "line": 7,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 16,
                  "line": 7,
                },
                "start": Position {
                  "character": 10,
                  "line": 7,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 5,
                "line": 7,
              },
              "type": "CallStatement",
            },
          ],
          "end": Position {
            "character": 7,
            "line": 8,
          },
          "start": Position {
            "character": 5,
            "line": 6,
          },
          "type": "ElseClause",
        },
      ],
      "end": Position {
        "character": 7,
        "line": 8,
      },
      "start": Position {
        "character": 1,
        "line": 4,
      },
      "type": "IfStatement",
    },
    ASTForGenericStatement {
      "body": Array [
        ASTCallStatement {
          "end": Position {
            "character": 23,
            "line": 10,
          },
          "expression": ASTCallExpression {
            "arguments": Array [
              ASTIdentifier {
                "end": Position {
                  "character": 22,
                  "line": 10,
                },
                "name": "i",
                "start": Position {
                  "character": 21,
                  "line": 10,
                },
                "type": "Identifier",
              },
            ],
            "base": ASTIdentifier {
              "end": Position {
                "character": 20,
                "line": 10,
              },
              "name": "print",
              "start": Position {
                "character": 15,
                "line": 10,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 23,
              "line": 10,
            },
            "start": Position {
              "character": 20,
              "line": 10,
            },
            "type": "CallExpression",
          },
          "start": Position {
            "character": 15,
            "line": 10,
          },
          "type": "CallStatement",
        },
      ],
      "end": Position {
        "character": 23,
        "line": 10,
      },
      "iterator": ASTListConstructorExpression {
        "end": Position {
          "character": 13,
          "line": 10,
        },
        "fields": Array [],
        "start": Position {
          "character": 11,
          "line": 10,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 10,
      },
      "type": "ForGenericStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 10,
        },
        "name": "i",
        "start": Position {
          "character": 6,
          "line": 10,
        },
        "type": "Identifier",
      },
    },
    ASTForGenericStatement {
      "body": Array [
        ASTCallStatement {
          "end": Position {
            "character": 13,
            "line": 12,
          },
          "expression": ASTCallExpression {
            "arguments": Array [
              ASTIdentifier {
                "end": Position {
                  "character": 12,
                  "line": 12,
                },
                "name": "b",
                "start": Position {
                  "character": 11,
                  "line": 12,
                },
                "type": "Identifier",
              },
            ],
            "base": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 12,
              },
              "name": "print",
              "start": Position {
                "character": 5,
                "line": 12,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 12,
            },
            "start": Position {
              "character": 10,
              "line": 12,
            },
            "type": "CallExpression",
          },
          "start": Position {
            "character": 5,
            "line": 12,
          },
          "type": "CallStatement",
        },
      ],
      "end": Position {
        "character": 8,
        "line": 13,
      },
      "iterator": ASTListConstructorExpression {
        "end": Position {
          "character": 13,
          "line": 11,
        },
        "fields": Array [],
        "start": Position {
          "character": 11,
          "line": 11,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 11,
      },
      "type": "ForGenericStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 11,
        },
        "name": "b",
        "start": Position {
          "character": 6,
          "line": 11,
        },
        "type": "Identifier",
      },
    },
    ASTWhileStatement {
      "body": Array [
        ASTCallStatement {
          "end": Position {
            "character": 21,
            "line": 14,
          },
          "expression": ASTAssignmentStatement {
            "end": Position {
              "character": 21,
              "line": 14,
            },
            "init": ASTEvaluationExpression {
              "end": Position {
                "character": 21,
                "line": 14,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 16,
                  "line": 14,
                },
                "name": "i",
                "start": Position {
                  "character": 15,
                  "line": 14,
                },
                "type": "Identifier",
              },
              "operator": "+",
              "right": ASTLiteral {
                "end": Position {
                  "character": 21,
                  "line": 14,
                },
                "raw": "1",
                "start": Position {
                  "character": 20,
                  "line": 14,
                },
                "type": "NumericLiteral",
                "value": 1,
              },
              "start": Position {
                "character": 20,
                "line": 14,
              },
              "type": "BinaryExpression",
            },
            "start": Position {
              "character": 15,
              "line": 14,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 16,
                "line": 14,
              },
              "name": "i",
              "start": Position {
                "character": 15,
                "line": 14,
              },
              "type": "Identifier",
            },
          },
          "start": Position {
            "character": 15,
            "line": 14,
          },
          "type": "CallStatement",
        },
      ],
      "condition": ASTEvaluationExpression {
        "end": Position {
          "character": 14,
          "line": 14,
        },
        "left": ASTIdentifier {
          "end": Position {
            "character": 9,
            "line": 14,
          },
          "name": "i",
          "start": Position {
            "character": 8,
            "line": 14,
          },
          "type": "Identifier",
        },
        "operator": "<",
        "right": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 14,
          },
          "name": "b",
          "start": Position {
            "character": 12,
            "line": 14,
          },
          "type": "Identifier",
        },
        "start": Position {
          "character": 10,
          "line": 14,
        },
        "type": "BinaryExpression",
      },
      "end": Position {
        "character": 21,
        "line": 14,
      },
      "start": Position {
        "character": 1,
        "line": 14,
      },
      "type": "WhileStatement",
    },
    ASTWhileStatement {
      "body": Array [
        ASTCallStatement {
          "end": Position {
            "character": 11,
            "line": 16,
          },
          "expression": ASTAssignmentStatement {
            "end": Position {
              "character": 11,
              "line": 16,
            },
            "init": ASTEvaluationExpression {
              "end": Position {
                "character": 11,
                "line": 16,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 6,
                  "line": 16,
                },
                "name": "b",
                "start": Position {
                  "character": 5,
                  "line": 16,
                },
                "type": "Identifier",
              },
              "operator": "+",
              "right": ASTLiteral {
                "end": Position {
                  "character": 11,
                  "line": 16,
                },
                "raw": "1",
                "start": Position {
                  "character": 10,
                  "line": 16,
                },
                "type": "NumericLiteral",
                "value": 1,
              },
              "start": Position {
                "character": 10,
                "line": 16,
              },
              "type": "BinaryExpression",
            },
            "start": Position {
              "character": 5,
              "line": 16,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 6,
                "line": 16,
              },
              "name": "b",
              "start": Position {
                "character": 5,
                "line": 16,
              },
              "type": "Identifier",
            },
          },
          "start": Position {
            "character": 5,
            "line": 16,
          },
          "type": "CallStatement",
        },
      ],
      "condition": ASTEvaluationExpression {
        "end": Position {
          "character": 14,
          "line": 15,
        },
        "left": ASTIdentifier {
          "end": Position {
            "character": 9,
            "line": 15,
          },
          "name": "b",
          "start": Position {
            "character": 8,
            "line": 15,
          },
          "type": "Identifier",
        },
        "operator": "<",
        "right": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 15,
          },
          "name": "i",
          "start": Position {
            "character": 12,
            "line": 15,
          },
          "type": "Identifier",
        },
        "start": Position {
          "character": 10,
          "line": 15,
        },
        "type": "BinaryExpression",
      },
      "end": Position {
        "character": 10,
        "line": 17,
      },
      "start": Position {
        "character": 1,
        "line": 15,
      },
      "type": "WhileStatement",
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 14,
        "line": 19,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTCallStatement {
            "end": Position {
              "character": 34,
              "line": 18,
            },
            "expression": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 33,
                    "line": 18,
                  },
                  "name": "v",
                  "start": Position {
                    "character": 32,
                    "line": 18,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTIdentifier {
                "end": Position {
                  "character": 31,
                  "line": 18,
                },
                "name": "print",
                "start": Position {
                  "character": 26,
                  "line": 18,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 34,
                "line": 18,
              },
              "start": Position {
                "character": 31,
                "line": 18,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 26,
              "line": 18,
            },
            "type": "CallStatement",
          },
        ],
        "end": Position {
          "character": 34,
          "line": 18,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 24,
              "line": 18,
            },
            "name": "v",
            "start": Position {
              "character": 23,
              "line": 18,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 14,
          "line": 18,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 18,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 11,
          "line": 18,
        },
        "name": "myFunction",
        "start": Position {
          "character": 1,
          "line": 18,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 21,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTCallStatement {
            "end": Position {
              "character": 13,
              "line": 20,
            },
            "expression": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 12,
                    "line": 20,
                  },
                  "name": "n",
                  "start": Position {
                    "character": 11,
                    "line": 20,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTIdentifier {
                "end": Position {
                  "character": 10,
                  "line": 20,
                },
                "name": "print",
                "start": Position {
                  "character": 5,
                  "line": 20,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 13,
                "line": 20,
              },
              "start": Position {
                "character": 10,
                "line": 20,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 20,
            },
            "type": "CallStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 21,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 27,
              "line": 19,
            },
            "name": "n",
            "start": Position {
              "character": 26,
              "line": 19,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 17,
          "line": 19,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 19,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 14,
          "line": 19,
        },
        "name": "otherFunction",
        "start": Position {
          "character": 1,
          "line": 19,
        },
        "type": "Identifier",
      },
    },
    ASTFunctionStatement {
      "assignments": Array [],
      "body": Array [
        ASTReturnStatement {
          "argument": ASTLiteral {
            "end": Position {
              "character": 25,
              "line": 23,
            },
            "raw": "\\"was\\"",
            "start": Position {
              "character": 20,
              "line": 23,
            },
            "type": "StringLiteral",
            "value": "was",
          },
          "end": Position {
            "character": 25,
            "line": 23,
          },
          "start": Position {
            "character": 13,
            "line": 23,
          },
          "type": "ReturnStatement",
        },
      ],
      "end": Position {
        "character": 25,
        "line": 23,
      },
      "namespaces": Set {},
      "parameters": Array [
        ASTIdentifier {
          "end": Position {
            "character": 11,
            "line": 23,
          },
          "name": "m",
          "start": Position {
            "character": 10,
            "line": 23,
          },
          "type": "Identifier",
        },
      ],
      "start": Position {
        "character": 1,
        "line": 23,
      },
      "type": "FunctionDeclaration",
    },
    ASTFunctionStatement {
      "assignments": Array [],
      "body": Array [
        ASTIfStatement {
          "clauses": Array [
            ASTIfClause {
              "body": Array [
                ASTReturnStatement {
                  "argument": ASTLiteral {
                    "end": Position {
                      "character": 29,
                      "line": 27,
                    },
                    "raw": "\\"foo\\"",
                    "start": Position {
                      "character": 24,
                      "line": 27,
                    },
                    "type": "StringLiteral",
                    "value": "foo",
                  },
                  "end": Position {
                    "character": 29,
                    "line": 27,
                  },
                  "start": Position {
                    "character": 17,
                    "line": 27,
                  },
                  "type": "ReturnStatement",
                },
              ],
              "condition": ASTIdentifier {
                "end": Position {
                  "character": 10,
                  "line": 27,
                },
                "name": "a",
                "start": Position {
                  "character": 9,
                  "line": 27,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 29,
                "line": 27,
              },
              "start": Position {
                "character": 5,
                "line": 27,
              },
              "type": "IfShortcutClause",
            },
          ],
          "end": Position {
            "character": 29,
            "line": 27,
          },
          "start": Position {
            "character": 5,
            "line": 27,
          },
          "type": "IfShortcutStatement",
        },
      ],
      "end": Position {
        "character": 13,
        "line": 28,
      },
      "namespaces": Set {},
      "parameters": Array [
        ASTIdentifier {
          "end": Position {
            "character": 11,
            "line": 26,
          },
          "name": "b",
          "start": Position {
            "character": 10,
            "line": 26,
          },
          "type": "Identifier",
        },
      ],
      "start": Position {
        "character": 1,
        "line": 26,
      },
      "type": "FunctionDeclaration",
    },
  ],
  "end": Position {
    "character": 13,
    "line": 28,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 1,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 1,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 1,
      },
      "raw": "\\"true\\"",
      "start": Position {
        "character": 22,
        "line": 1,
      },
      "type": "StringLiteral",
      "value": "true",
    },
    ASTLiteral {
      "end": Position {
        "character": 10,
        "line": 2,
      },
      "raw": "false",
      "start": Position {
        "character": 5,
        "line": 2,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 2,
      },
      "raw": "\\"true\\"",
      "start": Position {
        "character": 23,
        "line": 2,
      },
      "type": "StringLiteral",
      "value": "true",
    },
    ASTLiteral {
      "end": Position {
        "character": 48,
        "line": 2,
      },
      "raw": "\\"true\\"",
      "start": Position {
        "character": 42,
        "line": 2,
      },
      "type": "StringLiteral",
      "value": "true",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 3,
      },
      "raw": "\\"was\\"",
      "start": Position {
        "character": 7,
        "line": 3,
      },
      "type": "StringLiteral",
      "value": "was",
    },
    ASTLiteral {
      "end": Position {
        "character": 10,
        "line": 4,
      },
      "raw": "false",
      "start": Position {
        "character": 5,
        "line": 4,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 5,
      },
      "raw": "false",
      "start": Position {
        "character": 11,
        "line": 5,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 15,
        "line": 7,
      },
      "raw": "true",
      "start": Position {
        "character": 11,
        "line": 7,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 14,
      },
      "raw": "1",
      "start": Position {
        "character": 20,
        "line": 14,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 11,
        "line": 16,
      },
      "raw": "1",
      "start": Position {
        "character": 10,
        "line": 16,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 23,
      },
      "raw": "\\"was\\"",
      "start": Position {
        "character": 20,
        "line": 23,
      },
      "type": "StringLiteral",
      "value": "was",
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 27,
      },
      "raw": "\\"foo\\"",
      "start": Position {
        "character": 24,
        "line": 27,
      },
      "type": "StringLiteral",
      "value": "foo",
    },
  ],
  "namespaces": Set {
    "i",
    "b",
    "myFunction",
    "v",
    "otherFunction",
    "n",
    "m",
    "a",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts if-shorthand.src unsafe 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 29,
                "line": 1,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 28,
                      "line": 1,
                    },
                    "raw": "\\"true\\"",
                    "start": Position {
                      "character": 22,
                      "line": 1,
                    },
                    "type": "StringLiteral",
                    "value": "true",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 1,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 16,
                    "line": 1,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 29,
                  "line": 1,
                },
                "start": Position {
                  "character": 21,
                  "line": 1,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 16,
                "line": 1,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 1,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 1,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 29,
            "line": 1,
          },
          "start": Position {
            "character": 1,
            "line": 1,
          },
          "type": "IfShortcutClause",
        },
      ],
      "end": Position {
        "character": 29,
        "line": 1,
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "IfShortcutStatement",
    },
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 35,
                "line": 2,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 29,
                      "line": 2,
                    },
                    "raw": "\\"true\\"",
                    "start": Position {
                      "character": 23,
                      "line": 2,
                    },
                    "type": "StringLiteral",
                    "value": "true",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 22,
                    "line": 2,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 17,
                    "line": 2,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 35,
                  "line": 2,
                },
                "start": Position {
                  "character": 22,
                  "line": 2,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 17,
                "line": 2,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 10,
              "line": 2,
            },
            "raw": "false",
            "start": Position {
              "character": 5,
              "line": 2,
            },
            "type": "BooleanLiteral",
            "value": false,
          },
          "end": Position {
            "character": 35,
            "line": 2,
          },
          "start": Position {
            "character": 1,
            "line": 2,
          },
          "type": "IfShortcutClause",
        },
        ASTElseClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 49,
                "line": 2,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 48,
                      "line": 2,
                    },
                    "raw": "\\"true\\"",
                    "start": Position {
                      "character": 42,
                      "line": 2,
                    },
                    "type": "StringLiteral",
                    "value": "true",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 41,
                    "line": 2,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 36,
                    "line": 2,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 49,
                  "line": 2,
                },
                "start": Position {
                  "character": 41,
                  "line": 2,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 36,
                "line": 2,
              },
              "type": "CallStatement",
            },
          ],
          "end": Position {
            "character": 49,
            "line": 2,
          },
          "start": Position {
            "character": 36,
            "line": 2,
          },
          "type": "ElseShortcutClause",
        },
      ],
      "end": Position {
        "character": 49,
        "line": 2,
      },
      "start": Position {
        "character": 1,
        "line": 2,
      },
      "type": "IfShortcutStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 13,
        "line": 3,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTLiteral {
            "end": Position {
              "character": 12,
              "line": 3,
            },
            "raw": "\\"was\\"",
            "start": Position {
              "character": 7,
              "line": 3,
            },
            "type": "StringLiteral",
            "value": "was",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 3,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 3,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 13,
          "line": 3,
        },
        "start": Position {
          "character": 6,
          "line": 3,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "CallStatement",
    },
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 17,
                "line": 5,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 16,
                      "line": 5,
                    },
                    "raw": "false",
                    "start": Position {
                      "character": 11,
                      "line": 5,
                    },
                    "type": "BooleanLiteral",
                    "value": false,
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 5,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 5,
                    "line": 5,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 17,
                  "line": 5,
                },
                "start": Position {
                  "character": 10,
                  "line": 5,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 5,
                "line": 5,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 10,
              "line": 4,
            },
            "raw": "false",
            "start": Position {
              "character": 5,
              "line": 4,
            },
            "type": "BooleanLiteral",
            "value": false,
          },
          "end": Position {
            "character": 5,
            "line": 6,
          },
          "start": Position {
            "character": 1,
            "line": 4,
          },
          "type": "IfClause",
        },
        ASTElseClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 16,
                "line": 7,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 15,
                      "line": 7,
                    },
                    "raw": "true",
                    "start": Position {
                      "character": 11,
                      "line": 7,
                    },
                    "type": "BooleanLiteral",
                    "value": true,
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 7,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 5,
                    "line": 7,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 16,
                  "line": 7,
                },
                "start": Position {
                  "character": 10,
                  "line": 7,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 5,
                "line": 7,
              },
              "type": "CallStatement",
            },
          ],
          "end": Position {
            "character": 7,
            "line": 8,
          },
          "start": Position {
            "character": 5,
            "line": 6,
          },
          "type": "ElseClause",
        },
      ],
      "end": Position {
        "character": 7,
        "line": 8,
      },
      "start": Position {
        "character": 1,
        "line": 4,
      },
      "type": "IfStatement",
    },
    ASTForGenericStatement {
      "body": Array [
        ASTCallStatement {
          "end": Position {
            "character": 23,
            "line": 10,
          },
          "expression": ASTCallExpression {
            "arguments": Array [
              ASTIdentifier {
                "end": Position {
                  "character": 22,
                  "line": 10,
                },
                "name": "i",
                "start": Position {
                  "character": 21,
                  "line": 10,
                },
                "type": "Identifier",
              },
            ],
            "base": ASTIdentifier {
              "end": Position {
                "character": 20,
                "line": 10,
              },
              "name": "print",
              "start": Position {
                "character": 15,
                "line": 10,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 23,
              "line": 10,
            },
            "start": Position {
              "character": 20,
              "line": 10,
            },
            "type": "CallExpression",
          },
          "start": Position {
            "character": 15,
            "line": 10,
          },
          "type": "CallStatement",
        },
      ],
      "end": Position {
        "character": 23,
        "line": 10,
      },
      "iterator": ASTListConstructorExpression {
        "end": Position {
          "character": 13,
          "line": 10,
        },
        "fields": Array [],
        "start": Position {
          "character": 11,
          "line": 10,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 10,
      },
      "type": "ForGenericStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 10,
        },
        "name": "i",
        "start": Position {
          "character": 6,
          "line": 10,
        },
        "type": "Identifier",
      },
    },
    ASTForGenericStatement {
      "body": Array [
        ASTCallStatement {
          "end": Position {
            "character": 13,
            "line": 12,
          },
          "expression": ASTCallExpression {
            "arguments": Array [
              ASTIdentifier {
                "end": Position {
                  "character": 12,
                  "line": 12,
                },
                "name": "b",
                "start": Position {
                  "character": 11,
                  "line": 12,
                },
                "type": "Identifier",
              },
            ],
            "base": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 12,
              },
              "name": "print",
              "start": Position {
                "character": 5,
                "line": 12,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 12,
            },
            "start": Position {
              "character": 10,
              "line": 12,
            },
            "type": "CallExpression",
          },
          "start": Position {
            "character": 5,
            "line": 12,
          },
          "type": "CallStatement",
        },
      ],
      "end": Position {
        "character": 8,
        "line": 13,
      },
      "iterator": ASTListConstructorExpression {
        "end": Position {
          "character": 13,
          "line": 11,
        },
        "fields": Array [],
        "start": Position {
          "character": 11,
          "line": 11,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 11,
      },
      "type": "ForGenericStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 11,
        },
        "name": "b",
        "start": Position {
          "character": 6,
          "line": 11,
        },
        "type": "Identifier",
      },
    },
    ASTWhileStatement {
      "body": Array [
        ASTCallStatement {
          "end": Position {
            "character": 21,
            "line": 14,
          },
          "expression": ASTAssignmentStatement {
            "end": Position {
              "character": 21,
              "line": 14,
            },
            "init": ASTEvaluationExpression {
              "end": Position {
                "character": 21,
                "line": 14,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 16,
                  "line": 14,
                },
                "name": "i",
                "start": Position {
                  "character": 15,
                  "line": 14,
                },
                "type": "Identifier",
              },
              "operator": "+",
              "right": ASTLiteral {
                "end": Position {
                  "character": 21,
                  "line": 14,
                },
                "raw": "1",
                "start": Position {
                  "character": 20,
                  "line": 14,
                },
                "type": "NumericLiteral",
                "value": 1,
              },
              "start": Position {
                "character": 20,
                "line": 14,
              },
              "type": "BinaryExpression",
            },
            "start": Position {
              "character": 15,
              "line": 14,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 16,
                "line": 14,
              },
              "name": "i",
              "start": Position {
                "character": 15,
                "line": 14,
              },
              "type": "Identifier",
            },
          },
          "start": Position {
            "character": 15,
            "line": 14,
          },
          "type": "CallStatement",
        },
      ],
      "condition": ASTEvaluationExpression {
        "end": Position {
          "character": 14,
          "line": 14,
        },
        "left": ASTIdentifier {
          "end": Position {
            "character": 9,
            "line": 14,
          },
          "name": "i",
          "start": Position {
            "character": 8,
            "line": 14,
          },
          "type": "Identifier",
        },
        "operator": "<",
        "right": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 14,
          },
          "name": "b",
          "start": Position {
            "character": 12,
            "line": 14,
          },
          "type": "Identifier",
        },
        "start": Position {
          "character": 10,
          "line": 14,
        },
        "type": "BinaryExpression",
      },
      "end": Position {
        "character": 21,
        "line": 14,
      },
      "start": Position {
        "character": 1,
        "line": 14,
      },
      "type": "WhileStatement",
    },
    ASTWhileStatement {
      "body": Array [
        ASTCallStatement {
          "end": Position {
            "character": 11,
            "line": 16,
          },
          "expression": ASTAssignmentStatement {
            "end": Position {
              "character": 11,
              "line": 16,
            },
            "init": ASTEvaluationExpression {
              "end": Position {
                "character": 11,
                "line": 16,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 6,
                  "line": 16,
                },
                "name": "b",
                "start": Position {
                  "character": 5,
                  "line": 16,
                },
                "type": "Identifier",
              },
              "operator": "+",
              "right": ASTLiteral {
                "end": Position {
                  "character": 11,
                  "line": 16,
                },
                "raw": "1",
                "start": Position {
                  "character": 10,
                  "line": 16,
                },
                "type": "NumericLiteral",
                "value": 1,
              },
              "start": Position {
                "character": 10,
                "line": 16,
              },
              "type": "BinaryExpression",
            },
            "start": Position {
              "character": 5,
              "line": 16,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 6,
                "line": 16,
              },
              "name": "b",
              "start": Position {
                "character": 5,
                "line": 16,
              },
              "type": "Identifier",
            },
          },
          "start": Position {
            "character": 5,
            "line": 16,
          },
          "type": "CallStatement",
        },
      ],
      "condition": ASTEvaluationExpression {
        "end": Position {
          "character": 14,
          "line": 15,
        },
        "left": ASTIdentifier {
          "end": Position {
            "character": 9,
            "line": 15,
          },
          "name": "b",
          "start": Position {
            "character": 8,
            "line": 15,
          },
          "type": "Identifier",
        },
        "operator": "<",
        "right": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 15,
          },
          "name": "i",
          "start": Position {
            "character": 12,
            "line": 15,
          },
          "type": "Identifier",
        },
        "start": Position {
          "character": 10,
          "line": 15,
        },
        "type": "BinaryExpression",
      },
      "end": Position {
        "character": 10,
        "line": 17,
      },
      "start": Position {
        "character": 1,
        "line": 15,
      },
      "type": "WhileStatement",
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 14,
        "line": 19,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTCallStatement {
            "end": Position {
              "character": 34,
              "line": 18,
            },
            "expression": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 33,
                    "line": 18,
                  },
                  "name": "v",
                  "start": Position {
                    "character": 32,
                    "line": 18,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTIdentifier {
                "end": Position {
                  "character": 31,
                  "line": 18,
                },
                "name": "print",
                "start": Position {
                  "character": 26,
                  "line": 18,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 34,
                "line": 18,
              },
              "start": Position {
                "character": 31,
                "line": 18,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 26,
              "line": 18,
            },
            "type": "CallStatement",
          },
        ],
        "end": Position {
          "character": 34,
          "line": 18,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 24,
              "line": 18,
            },
            "name": "v",
            "start": Position {
              "character": 23,
              "line": 18,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 14,
          "line": 18,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 18,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 11,
          "line": 18,
        },
        "name": "myFunction",
        "start": Position {
          "character": 1,
          "line": 18,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 21,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTCallStatement {
            "end": Position {
              "character": 13,
              "line": 20,
            },
            "expression": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 12,
                    "line": 20,
                  },
                  "name": "n",
                  "start": Position {
                    "character": 11,
                    "line": 20,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTIdentifier {
                "end": Position {
                  "character": 10,
                  "line": 20,
                },
                "name": "print",
                "start": Position {
                  "character": 5,
                  "line": 20,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 13,
                "line": 20,
              },
              "start": Position {
                "character": 10,
                "line": 20,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 20,
            },
            "type": "CallStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 21,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 27,
              "line": 19,
            },
            "name": "n",
            "start": Position {
              "character": 26,
              "line": 19,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 17,
          "line": 19,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 19,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 14,
          "line": 19,
        },
        "name": "otherFunction",
        "start": Position {
          "character": 1,
          "line": 19,
        },
        "type": "Identifier",
      },
    },
    ASTFunctionStatement {
      "assignments": Array [],
      "body": Array [
        ASTReturnStatement {
          "argument": ASTLiteral {
            "end": Position {
              "character": 25,
              "line": 23,
            },
            "raw": "\\"was\\"",
            "start": Position {
              "character": 20,
              "line": 23,
            },
            "type": "StringLiteral",
            "value": "was",
          },
          "end": Position {
            "character": 25,
            "line": 23,
          },
          "start": Position {
            "character": 13,
            "line": 23,
          },
          "type": "ReturnStatement",
        },
      ],
      "end": Position {
        "character": 25,
        "line": 23,
      },
      "namespaces": Set {},
      "parameters": Array [
        ASTIdentifier {
          "end": Position {
            "character": 11,
            "line": 23,
          },
          "name": "m",
          "start": Position {
            "character": 10,
            "line": 23,
          },
          "type": "Identifier",
        },
      ],
      "start": Position {
        "character": 1,
        "line": 23,
      },
      "type": "FunctionDeclaration",
    },
    ASTFunctionStatement {
      "assignments": Array [],
      "body": Array [
        ASTIfStatement {
          "clauses": Array [
            ASTIfClause {
              "body": Array [
                ASTReturnStatement {
                  "argument": ASTLiteral {
                    "end": Position {
                      "character": 29,
                      "line": 27,
                    },
                    "raw": "\\"foo\\"",
                    "start": Position {
                      "character": 24,
                      "line": 27,
                    },
                    "type": "StringLiteral",
                    "value": "foo",
                  },
                  "end": Position {
                    "character": 29,
                    "line": 27,
                  },
                  "start": Position {
                    "character": 17,
                    "line": 27,
                  },
                  "type": "ReturnStatement",
                },
              ],
              "condition": ASTIdentifier {
                "end": Position {
                  "character": 10,
                  "line": 27,
                },
                "name": "a",
                "start": Position {
                  "character": 9,
                  "line": 27,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 29,
                "line": 27,
              },
              "start": Position {
                "character": 5,
                "line": 27,
              },
              "type": "IfShortcutClause",
            },
          ],
          "end": Position {
            "character": 29,
            "line": 27,
          },
          "start": Position {
            "character": 5,
            "line": 27,
          },
          "type": "IfShortcutStatement",
        },
      ],
      "end": Position {
        "character": 13,
        "line": 28,
      },
      "namespaces": Set {},
      "parameters": Array [
        ASTIdentifier {
          "end": Position {
            "character": 11,
            "line": 26,
          },
          "name": "b",
          "start": Position {
            "character": 10,
            "line": 26,
          },
          "type": "Identifier",
        },
      ],
      "start": Position {
        "character": 1,
        "line": 26,
      },
      "type": "FunctionDeclaration",
    },
  ],
  "end": Position {
    "character": 13,
    "line": 28,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 1,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 1,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 1,
      },
      "raw": "\\"true\\"",
      "start": Position {
        "character": 22,
        "line": 1,
      },
      "type": "StringLiteral",
      "value": "true",
    },
    ASTLiteral {
      "end": Position {
        "character": 10,
        "line": 2,
      },
      "raw": "false",
      "start": Position {
        "character": 5,
        "line": 2,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 2,
      },
      "raw": "\\"true\\"",
      "start": Position {
        "character": 23,
        "line": 2,
      },
      "type": "StringLiteral",
      "value": "true",
    },
    ASTLiteral {
      "end": Position {
        "character": 48,
        "line": 2,
      },
      "raw": "\\"true\\"",
      "start": Position {
        "character": 42,
        "line": 2,
      },
      "type": "StringLiteral",
      "value": "true",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 3,
      },
      "raw": "\\"was\\"",
      "start": Position {
        "character": 7,
        "line": 3,
      },
      "type": "StringLiteral",
      "value": "was",
    },
    ASTLiteral {
      "end": Position {
        "character": 10,
        "line": 4,
      },
      "raw": "false",
      "start": Position {
        "character": 5,
        "line": 4,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 5,
      },
      "raw": "false",
      "start": Position {
        "character": 11,
        "line": 5,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 15,
        "line": 7,
      },
      "raw": "true",
      "start": Position {
        "character": 11,
        "line": 7,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 14,
      },
      "raw": "1",
      "start": Position {
        "character": 20,
        "line": 14,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 11,
        "line": 16,
      },
      "raw": "1",
      "start": Position {
        "character": 10,
        "line": 16,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 23,
      },
      "raw": "\\"was\\"",
      "start": Position {
        "character": 20,
        "line": 23,
      },
      "type": "StringLiteral",
      "value": "was",
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 27,
      },
      "raw": "\\"foo\\"",
      "start": Position {
        "character": 24,
        "line": 27,
      },
      "type": "StringLiteral",
      "value": "foo",
    },
  ],
  "namespaces": Set {
    "i",
    "b",
    "myFunction",
    "v",
    "otherFunction",
    "n",
    "m",
    "a",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts invalid code 1`] = `Array []`;

exports[`parse default scripts invalid code 2`] = `
Array [
  [Error: Unexpected value ; at line 2. Expected: )],
  [Error: Unexpected value ) at line 4. Expected: =],
  [Error: Unexpected expression at line 4.],
  [Error: Unexpected assignment or call at line 8.],
  [Error: Unexpected end of file at line 9.],
]
`;

exports[`parse default scripts negation.src 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 24,
        "line": 1,
      },
      "init": ASTEvaluationExpression {
        "end": Position {
          "character": 24,
          "line": 1,
        },
        "left": ASTEvaluationExpression {
          "end": Position {
            "character": 21,
            "line": 1,
          },
          "left": ASTEvaluationExpression {
            "end": Position {
              "character": 16,
              "line": 1,
            },
            "left": ASTUnaryExpression {
              "argument": ASTLiteral {
                "end": Position {
                  "character": 10,
                  "line": 1,
                },
                "raw": "1",
                "start": Position {
                  "character": 9,
                  "line": 1,
                },
                "type": "NumericLiteral",
                "value": 1,
              },
              "end": Position {
                "character": 12,
                "line": 1,
              },
              "operator": "-",
              "start": Position {
                "character": 8,
                "line": 1,
              },
              "type": "BinaryNegatedExpression",
            },
            "operator": "+",
            "right": ASTLiteral {
              "end": Position {
                "character": 14,
                "line": 1,
              },
              "raw": "2",
              "start": Position {
                "character": 13,
                "line": 1,
              },
              "type": "NumericLiteral",
              "value": 2,
            },
            "start": Position {
              "character": 11,
              "line": 1,
            },
            "type": "BinaryExpression",
          },
          "operator": "+",
          "right": ASTUnaryExpression {
            "argument": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 1,
              },
              "raw": "2",
              "start": Position {
                "character": 18,
                "line": 1,
              },
              "type": "NumericLiteral",
              "value": 2,
            },
            "end": Position {
              "character": 21,
              "line": 1,
            },
            "operator": "-",
            "start": Position {
              "character": 17,
              "line": 1,
            },
            "type": "BinaryNegatedExpression",
          },
          "start": Position {
            "character": 11,
            "line": 1,
          },
          "type": "BinaryExpression",
        },
        "operator": "+",
        "right": ASTUnaryExpression {
          "argument": ASTLiteral {
            "end": Position {
              "character": 24,
              "line": 1,
            },
            "raw": "3",
            "start": Position {
              "character": 23,
              "line": 1,
            },
            "type": "NumericLiteral",
            "value": 3,
          },
          "end": Position {
            "character": 24,
            "line": 1,
          },
          "operator": "+",
          "start": Position {
            "character": 22,
            "line": 1,
          },
          "type": "BinaryNegatedExpression",
        },
        "start": Position {
          "character": 11,
          "line": 1,
        },
        "type": "BinaryExpression",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 5,
          "line": 1,
        },
        "name": "test",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 35,
        "line": 2,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 35,
          "line": 2,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 11,
              "line": 2,
            },
            "start": Position {
              "character": 8,
              "line": 2,
            },
            "type": "ListValue",
            "value": ASTUnaryExpression {
              "argument": ASTLiteral {
                "end": Position {
                  "character": 10,
                  "line": 2,
                },
                "raw": "1",
                "start": Position {
                  "character": 9,
                  "line": 2,
                },
                "type": "NumericLiteral",
                "value": 1,
              },
              "end": Position {
                "character": 11,
                "line": 2,
              },
              "operator": "-",
              "start": Position {
                "character": 8,
                "line": 2,
              },
              "type": "BinaryNegatedExpression",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 19,
              "line": 2,
            },
            "start": Position {
              "character": 15,
              "line": 2,
            },
            "type": "ListValue",
            "value": ASTEvaluationExpression {
              "end": Position {
                "character": 19,
                "line": 2,
              },
              "left": ASTUnaryExpression {
                "argument": ASTLiteral {
                  "end": Position {
                    "character": 14,
                    "line": 2,
                  },
                  "raw": "2",
                  "start": Position {
                    "character": 13,
                    "line": 2,
                  },
                  "type": "NumericLiteral",
                  "value": 2,
                },
                "end": Position {
                  "character": 16,
                  "line": 2,
                },
                "operator": "-",
                "start": Position {
                  "character": 12,
                  "line": 2,
                },
                "type": "BinaryNegatedExpression",
              },
              "operator": "+",
              "right": ASTLiteral {
                "end": Position {
                  "character": 18,
                  "line": 2,
                },
                "raw": "4",
                "start": Position {
                  "character": 17,
                  "line": 2,
                },
                "type": "NumericLiteral",
                "value": 4,
              },
              "start": Position {
                "character": 15,
                "line": 2,
              },
              "type": "BinaryExpression",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 35,
              "line": 2,
            },
            "start": Position {
              "character": 25,
              "line": 2,
            },
            "type": "ListValue",
            "value": ASTEvaluationExpression {
              "end": Position {
                "character": 35,
                "line": 2,
              },
              "left": ASTEvaluationExpression {
                "end": Position {
                  "character": 31,
                  "line": 2,
                },
                "left": ASTUnaryExpression {
                  "argument": ASTLiteral {
                    "end": Position {
                      "character": 23,
                      "line": 2,
                    },
                    "raw": "2",
                    "start": Position {
                      "character": 22,
                      "line": 2,
                    },
                    "type": "NumericLiteral",
                    "value": 2,
                  },
                  "end": Position {
                    "character": 24,
                    "line": 2,
                  },
                  "operator": "-",
                  "start": Position {
                    "character": 21,
                    "line": 2,
                  },
                  "type": "BinaryNegatedExpression",
                },
                "operator": "+",
                "right": ASTUnaryExpression {
                  "argument": ASTLiteral {
                    "end": Position {
                      "character": 29,
                      "line": 2,
                    },
                    "raw": "4",
                    "start": Position {
                      "character": 28,
                      "line": 2,
                    },
                    "type": "NumericLiteral",
                    "value": 4,
                  },
                  "end": Position {
                    "character": 31,
                    "line": 2,
                  },
                  "operator": "-",
                  "start": Position {
                    "character": 27,
                    "line": 2,
                  },
                  "type": "BinaryNegatedExpression",
                },
                "start": Position {
                  "character": 25,
                  "line": 2,
                },
                "type": "BinaryExpression",
              },
              "operator": "+",
              "right": ASTUnaryExpression {
                "argument": ASTLiteral {
                  "end": Position {
                    "character": 34,
                    "line": 2,
                  },
                  "raw": "6",
                  "start": Position {
                    "character": 33,
                    "line": 2,
                  },
                  "type": "NumericLiteral",
                  "value": 6,
                },
                "end": Position {
                  "character": 35,
                  "line": 2,
                },
                "operator": "+",
                "start": Position {
                  "character": 32,
                  "line": 2,
                },
                "type": "BinaryNegatedExpression",
              },
              "start": Position {
                "character": 25,
                "line": 2,
              },
              "type": "BinaryExpression",
            },
          },
        ],
        "start": Position {
          "character": 7,
          "line": 2,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 2,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 4,
          "line": 2,
        },
        "name": "foo",
        "start": Position {
          "character": 1,
          "line": 2,
        },
        "type": "Identifier",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 12,
        "line": 4,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 11,
              "line": 4,
            },
            "name": "test",
            "start": Position {
              "character": 7,
              "line": 4,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 4,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 4,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 12,
          "line": 4,
        },
        "start": Position {
          "character": 6,
          "line": 4,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 4,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 11,
        "line": 5,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 10,
              "line": 5,
            },
            "name": "foo",
            "start": Position {
              "character": 7,
              "line": 5,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 5,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 5,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 5,
        },
        "start": Position {
          "character": 6,
          "line": 5,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 5,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 11,
    "line": 5,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 10,
        "line": 1,
      },
      "raw": "1",
      "start": Position {
        "character": 9,
        "line": 1,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 1,
      },
      "raw": "2",
      "start": Position {
        "character": 13,
        "line": 1,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 1,
      },
      "raw": "2",
      "start": Position {
        "character": 18,
        "line": 1,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 1,
      },
      "raw": "3",
      "start": Position {
        "character": 23,
        "line": 1,
      },
      "type": "NumericLiteral",
      "value": 3,
    },
    ASTLiteral {
      "end": Position {
        "character": 10,
        "line": 2,
      },
      "raw": "1",
      "start": Position {
        "character": 9,
        "line": 2,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 2,
      },
      "raw": "2",
      "start": Position {
        "character": 13,
        "line": 2,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 2,
      },
      "raw": "4",
      "start": Position {
        "character": 17,
        "line": 2,
      },
      "type": "NumericLiteral",
      "value": 4,
    },
    ASTLiteral {
      "end": Position {
        "character": 23,
        "line": 2,
      },
      "raw": "2",
      "start": Position {
        "character": 22,
        "line": 2,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 2,
      },
      "raw": "4",
      "start": Position {
        "character": 28,
        "line": 2,
      },
      "type": "NumericLiteral",
      "value": 4,
    },
    ASTLiteral {
      "end": Position {
        "character": 34,
        "line": 2,
      },
      "raw": "6",
      "start": Position {
        "character": 33,
        "line": 2,
      },
      "type": "NumericLiteral",
      "value": 6,
    },
  ],
  "namespaces": Set {
    "test",
    "foo",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts negation.src unsafe 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 24,
        "line": 1,
      },
      "init": ASTEvaluationExpression {
        "end": Position {
          "character": 24,
          "line": 1,
        },
        "left": ASTEvaluationExpression {
          "end": Position {
            "character": 21,
            "line": 1,
          },
          "left": ASTEvaluationExpression {
            "end": Position {
              "character": 16,
              "line": 1,
            },
            "left": ASTUnaryExpression {
              "argument": ASTLiteral {
                "end": Position {
                  "character": 10,
                  "line": 1,
                },
                "raw": "1",
                "start": Position {
                  "character": 9,
                  "line": 1,
                },
                "type": "NumericLiteral",
                "value": 1,
              },
              "end": Position {
                "character": 12,
                "line": 1,
              },
              "operator": "-",
              "start": Position {
                "character": 8,
                "line": 1,
              },
              "type": "BinaryNegatedExpression",
            },
            "operator": "+",
            "right": ASTLiteral {
              "end": Position {
                "character": 14,
                "line": 1,
              },
              "raw": "2",
              "start": Position {
                "character": 13,
                "line": 1,
              },
              "type": "NumericLiteral",
              "value": 2,
            },
            "start": Position {
              "character": 11,
              "line": 1,
            },
            "type": "BinaryExpression",
          },
          "operator": "+",
          "right": ASTUnaryExpression {
            "argument": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 1,
              },
              "raw": "2",
              "start": Position {
                "character": 18,
                "line": 1,
              },
              "type": "NumericLiteral",
              "value": 2,
            },
            "end": Position {
              "character": 21,
              "line": 1,
            },
            "operator": "-",
            "start": Position {
              "character": 17,
              "line": 1,
            },
            "type": "BinaryNegatedExpression",
          },
          "start": Position {
            "character": 11,
            "line": 1,
          },
          "type": "BinaryExpression",
        },
        "operator": "+",
        "right": ASTUnaryExpression {
          "argument": ASTLiteral {
            "end": Position {
              "character": 24,
              "line": 1,
            },
            "raw": "3",
            "start": Position {
              "character": 23,
              "line": 1,
            },
            "type": "NumericLiteral",
            "value": 3,
          },
          "end": Position {
            "character": 24,
            "line": 1,
          },
          "operator": "+",
          "start": Position {
            "character": 22,
            "line": 1,
          },
          "type": "BinaryNegatedExpression",
        },
        "start": Position {
          "character": 11,
          "line": 1,
        },
        "type": "BinaryExpression",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 5,
          "line": 1,
        },
        "name": "test",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 35,
        "line": 2,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 35,
          "line": 2,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 11,
              "line": 2,
            },
            "start": Position {
              "character": 8,
              "line": 2,
            },
            "type": "ListValue",
            "value": ASTUnaryExpression {
              "argument": ASTLiteral {
                "end": Position {
                  "character": 10,
                  "line": 2,
                },
                "raw": "1",
                "start": Position {
                  "character": 9,
                  "line": 2,
                },
                "type": "NumericLiteral",
                "value": 1,
              },
              "end": Position {
                "character": 11,
                "line": 2,
              },
              "operator": "-",
              "start": Position {
                "character": 8,
                "line": 2,
              },
              "type": "BinaryNegatedExpression",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 19,
              "line": 2,
            },
            "start": Position {
              "character": 15,
              "line": 2,
            },
            "type": "ListValue",
            "value": ASTEvaluationExpression {
              "end": Position {
                "character": 19,
                "line": 2,
              },
              "left": ASTUnaryExpression {
                "argument": ASTLiteral {
                  "end": Position {
                    "character": 14,
                    "line": 2,
                  },
                  "raw": "2",
                  "start": Position {
                    "character": 13,
                    "line": 2,
                  },
                  "type": "NumericLiteral",
                  "value": 2,
                },
                "end": Position {
                  "character": 16,
                  "line": 2,
                },
                "operator": "-",
                "start": Position {
                  "character": 12,
                  "line": 2,
                },
                "type": "BinaryNegatedExpression",
              },
              "operator": "+",
              "right": ASTLiteral {
                "end": Position {
                  "character": 18,
                  "line": 2,
                },
                "raw": "4",
                "start": Position {
                  "character": 17,
                  "line": 2,
                },
                "type": "NumericLiteral",
                "value": 4,
              },
              "start": Position {
                "character": 15,
                "line": 2,
              },
              "type": "BinaryExpression",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 35,
              "line": 2,
            },
            "start": Position {
              "character": 25,
              "line": 2,
            },
            "type": "ListValue",
            "value": ASTEvaluationExpression {
              "end": Position {
                "character": 35,
                "line": 2,
              },
              "left": ASTEvaluationExpression {
                "end": Position {
                  "character": 31,
                  "line": 2,
                },
                "left": ASTUnaryExpression {
                  "argument": ASTLiteral {
                    "end": Position {
                      "character": 23,
                      "line": 2,
                    },
                    "raw": "2",
                    "start": Position {
                      "character": 22,
                      "line": 2,
                    },
                    "type": "NumericLiteral",
                    "value": 2,
                  },
                  "end": Position {
                    "character": 24,
                    "line": 2,
                  },
                  "operator": "-",
                  "start": Position {
                    "character": 21,
                    "line": 2,
                  },
                  "type": "BinaryNegatedExpression",
                },
                "operator": "+",
                "right": ASTUnaryExpression {
                  "argument": ASTLiteral {
                    "end": Position {
                      "character": 29,
                      "line": 2,
                    },
                    "raw": "4",
                    "start": Position {
                      "character": 28,
                      "line": 2,
                    },
                    "type": "NumericLiteral",
                    "value": 4,
                  },
                  "end": Position {
                    "character": 31,
                    "line": 2,
                  },
                  "operator": "-",
                  "start": Position {
                    "character": 27,
                    "line": 2,
                  },
                  "type": "BinaryNegatedExpression",
                },
                "start": Position {
                  "character": 25,
                  "line": 2,
                },
                "type": "BinaryExpression",
              },
              "operator": "+",
              "right": ASTUnaryExpression {
                "argument": ASTLiteral {
                  "end": Position {
                    "character": 34,
                    "line": 2,
                  },
                  "raw": "6",
                  "start": Position {
                    "character": 33,
                    "line": 2,
                  },
                  "type": "NumericLiteral",
                  "value": 6,
                },
                "end": Position {
                  "character": 35,
                  "line": 2,
                },
                "operator": "+",
                "start": Position {
                  "character": 32,
                  "line": 2,
                },
                "type": "BinaryNegatedExpression",
              },
              "start": Position {
                "character": 25,
                "line": 2,
              },
              "type": "BinaryExpression",
            },
          },
        ],
        "start": Position {
          "character": 7,
          "line": 2,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 2,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 4,
          "line": 2,
        },
        "name": "foo",
        "start": Position {
          "character": 1,
          "line": 2,
        },
        "type": "Identifier",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 12,
        "line": 4,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 11,
              "line": 4,
            },
            "name": "test",
            "start": Position {
              "character": 7,
              "line": 4,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 4,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 4,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 12,
          "line": 4,
        },
        "start": Position {
          "character": 6,
          "line": 4,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 4,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 11,
        "line": 5,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 10,
              "line": 5,
            },
            "name": "foo",
            "start": Position {
              "character": 7,
              "line": 5,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 5,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 5,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 5,
        },
        "start": Position {
          "character": 6,
          "line": 5,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 5,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 11,
    "line": 5,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 10,
        "line": 1,
      },
      "raw": "1",
      "start": Position {
        "character": 9,
        "line": 1,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 1,
      },
      "raw": "2",
      "start": Position {
        "character": 13,
        "line": 1,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 1,
      },
      "raw": "2",
      "start": Position {
        "character": 18,
        "line": 1,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 1,
      },
      "raw": "3",
      "start": Position {
        "character": 23,
        "line": 1,
      },
      "type": "NumericLiteral",
      "value": 3,
    },
    ASTLiteral {
      "end": Position {
        "character": 10,
        "line": 2,
      },
      "raw": "1",
      "start": Position {
        "character": 9,
        "line": 2,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 2,
      },
      "raw": "2",
      "start": Position {
        "character": 13,
        "line": 2,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 2,
      },
      "raw": "4",
      "start": Position {
        "character": 17,
        "line": 2,
      },
      "type": "NumericLiteral",
      "value": 4,
    },
    ASTLiteral {
      "end": Position {
        "character": 23,
        "line": 2,
      },
      "raw": "2",
      "start": Position {
        "character": 22,
        "line": 2,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 2,
      },
      "raw": "4",
      "start": Position {
        "character": 28,
        "line": 2,
      },
      "type": "NumericLiteral",
      "value": 4,
    },
    ASTLiteral {
      "end": Position {
        "character": 34,
        "line": 2,
      },
      "raw": "6",
      "start": Position {
        "character": 33,
        "line": 2,
      },
      "type": "NumericLiteral",
      "value": 6,
    },
  ],
  "namespaces": Set {
    "test",
    "foo",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts obj-init.src 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 26,
        "line": 1,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 26,
          "line": 1,
        },
        "raw": "\\"foo\\"",
        "start": Position {
          "character": 21,
          "line": 1,
        },
        "type": "StringLiteral",
        "value": "foo",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 18,
          "line": 1,
        },
        "name": "valueOfIdentifier",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 2,
        "line": 9,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 2,
          "line": 9,
        },
        "fields": Array [
          ASTMapKeyString {
            "end": Position {
              "character": 6,
              "line": 6,
            },
            "key": ASTLiteral {
              "end": Position {
                "character": 11,
                "line": 4,
              },
              "raw": "\\"test\\"",
              "start": Position {
                "character": 5,
                "line": 4,
              },
              "type": "StringLiteral",
              "value": "test",
            },
            "start": Position {
              "character": 5,
              "line": 4,
            },
            "type": "MapKeyString",
            "value": ASTMapConstructorExpression {
              "end": Position {
                "character": 6,
                "line": 6,
              },
              "fields": Array [
                ASTMapKeyString {
                  "end": Position {
                    "character": 25,
                    "line": 5,
                  },
                  "key": ASTLiteral {
                    "end": Position {
                      "character": 18,
                      "line": 5,
                    },
                    "raw": "\\"another\\"",
                    "start": Position {
                      "character": 9,
                      "line": 5,
                    },
                    "type": "StringLiteral",
                    "value": "another",
                  },
                  "start": Position {
                    "character": 9,
                    "line": 5,
                  },
                  "type": "MapKeyString",
                  "value": ASTLiteral {
                    "end": Position {
                      "character": 25,
                      "line": 5,
                    },
                    "raw": "\\"123\\"",
                    "start": Position {
                      "character": 20,
                      "line": 5,
                    },
                    "type": "StringLiteral",
                    "value": "123",
                  },
                },
              ],
              "start": Position {
                "character": 13,
                "line": 4,
              },
              "type": "MapConstructorExpression",
            },
          },
          ASTMapKeyString {
            "end": Position {
              "character": 19,
              "line": 7,
            },
            "key": ASTLiteral {
              "end": Position {
                "character": 12,
                "line": 7,
              },
              "raw": "\\"value\\"",
              "start": Position {
                "character": 5,
                "line": 7,
              },
              "type": "StringLiteral",
              "value": "value",
            },
            "start": Position {
              "character": 5,
              "line": 7,
            },
            "type": "MapKeyString",
            "value": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 7,
              },
              "raw": "\\"123\\"",
              "start": Position {
                "character": 14,
                "line": 7,
              },
              "type": "StringLiteral",
              "value": "123",
            },
          },
          ASTMapKeyString {
            "end": Position {
              "character": 30,
              "line": 8,
            },
            "key": ASTLiteral {
              "end": Position {
                "character": 11,
                "line": 8,
              },
              "raw": "\\"idtf\\"",
              "start": Position {
                "character": 5,
                "line": 8,
              },
              "type": "StringLiteral",
              "value": "idtf",
            },
            "start": Position {
              "character": 5,
              "line": 8,
            },
            "type": "MapKeyString",
            "value": ASTIdentifier {
              "end": Position {
                "character": 30,
                "line": 8,
              },
              "name": "valueOfIdentifier",
              "start": Position {
                "character": 13,
                "line": 8,
              },
              "type": "Identifier",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 3,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 9,
          "line": 3,
        },
        "name": "myObject",
        "start": Position {
          "character": 1,
          "line": 3,
        },
        "type": "Identifier",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 62,
        "line": 11,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTListConstructorExpression {
            "end": Position {
              "character": 61,
              "line": 11,
            },
            "fields": Array [
              ASTListValue {
                "end": Position {
                  "character": 30,
                  "line": 11,
                },
                "start": Position {
                  "character": 21,
                  "line": 11,
                },
                "type": "ListValue",
                "value": ASTMemberExpression {
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 16,
                        "line": 11,
                      },
                      "name": "myObject",
                      "start": Position {
                        "character": 8,
                        "line": 11,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 22,
                      "line": 11,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 21,
                        "line": 11,
                      },
                      "name": "test",
                      "start": Position {
                        "character": 17,
                        "line": 11,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 16,
                      "line": 11,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 30,
                    "line": 11,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 29,
                      "line": 11,
                    },
                    "name": "another",
                    "start": Position {
                      "character": 22,
                      "line": 11,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 21,
                    "line": 11,
                  },
                  "type": "MemberExpression",
                },
              },
              ASTListValue {
                "end": Position {
                  "character": 46,
                  "line": 11,
                },
                "start": Position {
                  "character": 39,
                  "line": 11,
                },
                "type": "ListValue",
                "value": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 39,
                      "line": 11,
                    },
                    "name": "myObject",
                    "start": Position {
                      "character": 31,
                      "line": 11,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 46,
                    "line": 11,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 45,
                      "line": 11,
                    },
                    "name": "value",
                    "start": Position {
                      "character": 40,
                      "line": 11,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 39,
                    "line": 11,
                  },
                  "type": "MemberExpression",
                },
              },
              ASTListValue {
                "end": Position {
                  "character": 61,
                  "line": 11,
                },
                "start": Position {
                  "character": 55,
                  "line": 11,
                },
                "type": "ListValue",
                "value": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 55,
                      "line": 11,
                    },
                    "name": "myObject",
                    "start": Position {
                      "character": 47,
                      "line": 11,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 61,
                    "line": 11,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 60,
                      "line": 11,
                    },
                    "name": "idtf",
                    "start": Position {
                      "character": 56,
                      "line": 11,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 55,
                    "line": 11,
                  },
                  "type": "MemberExpression",
                },
              },
            ],
            "start": Position {
              "character": 7,
              "line": 11,
            },
            "type": "ListConstructorExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 11,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 11,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 62,
          "line": 11,
        },
        "start": Position {
          "character": 6,
          "line": 11,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 11,
      },
      "type": "CallStatement",
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 2,
        "line": 19,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 2,
          "line": 19,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 6,
              "line": 16,
            },
            "start": Position {
              "character": 5,
              "line": 14,
            },
            "type": "ListValue",
            "value": ASTMapConstructorExpression {
              "end": Position {
                "character": 6,
                "line": 16,
              },
              "fields": Array [
                ASTMapKeyString {
                  "end": Position {
                    "character": 25,
                    "line": 15,
                  },
                  "key": ASTLiteral {
                    "end": Position {
                      "character": 18,
                      "line": 15,
                    },
                    "raw": "\\"another\\"",
                    "start": Position {
                      "character": 9,
                      "line": 15,
                    },
                    "type": "StringLiteral",
                    "value": "another",
                  },
                  "start": Position {
                    "character": 9,
                    "line": 15,
                  },
                  "type": "MapKeyString",
                  "value": ASTLiteral {
                    "end": Position {
                      "character": 25,
                      "line": 15,
                    },
                    "raw": "\\"123\\"",
                    "start": Position {
                      "character": 20,
                      "line": 15,
                    },
                    "type": "StringLiteral",
                    "value": "123",
                  },
                },
              ],
              "start": Position {
                "character": 5,
                "line": 14,
              },
              "type": "MapConstructorExpression",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 10,
              "line": 17,
            },
            "start": Position {
              "character": 5,
              "line": 17,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 10,
                "line": 17,
              },
              "raw": "\\"123\\"",
              "start": Position {
                "character": 5,
                "line": 17,
              },
              "type": "StringLiteral",
              "value": "123",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 22,
              "line": 18,
            },
            "start": Position {
              "character": 5,
              "line": 18,
            },
            "type": "ListValue",
            "value": ASTIdentifier {
              "end": Position {
                "character": 22,
                "line": 18,
              },
              "name": "valueOfIdentifier",
              "start": Position {
                "character": 5,
                "line": 18,
              },
              "type": "Identifier",
            },
          },
        ],
        "start": Position {
          "character": 10,
          "line": 13,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 13,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 13,
        },
        "name": "myList",
        "start": Position {
          "character": 1,
          "line": 13,
        },
        "type": "Identifier",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 14,
        "line": 21,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 13,
              "line": 21,
            },
            "name": "myList",
            "start": Position {
              "character": 7,
              "line": 21,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 21,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 21,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 14,
          "line": 21,
        },
        "start": Position {
          "character": 6,
          "line": 21,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 21,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 14,
    "line": 21,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 1,
      },
      "raw": "\\"foo\\"",
      "start": Position {
        "character": 21,
        "line": 1,
      },
      "type": "StringLiteral",
      "value": "foo",
    },
    ASTLiteral {
      "end": Position {
        "character": 11,
        "line": 4,
      },
      "raw": "\\"test\\"",
      "start": Position {
        "character": 5,
        "line": 4,
      },
      "type": "StringLiteral",
      "value": "test",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 5,
      },
      "raw": "\\"another\\"",
      "start": Position {
        "character": 9,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "another",
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 5,
      },
      "raw": "\\"123\\"",
      "start": Position {
        "character": 20,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "123",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 7,
      },
      "raw": "\\"value\\"",
      "start": Position {
        "character": 5,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "value",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 7,
      },
      "raw": "\\"123\\"",
      "start": Position {
        "character": 14,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "123",
    },
    ASTLiteral {
      "end": Position {
        "character": 11,
        "line": 8,
      },
      "raw": "\\"idtf\\"",
      "start": Position {
        "character": 5,
        "line": 8,
      },
      "type": "StringLiteral",
      "value": "idtf",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 15,
      },
      "raw": "\\"another\\"",
      "start": Position {
        "character": 9,
        "line": 15,
      },
      "type": "StringLiteral",
      "value": "another",
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 15,
      },
      "raw": "\\"123\\"",
      "start": Position {
        "character": 20,
        "line": 15,
      },
      "type": "StringLiteral",
      "value": "123",
    },
    ASTLiteral {
      "end": Position {
        "character": 10,
        "line": 17,
      },
      "raw": "\\"123\\"",
      "start": Position {
        "character": 5,
        "line": 17,
      },
      "type": "StringLiteral",
      "value": "123",
    },
  ],
  "namespaces": Set {
    "valueOfIdentifier",
    "myObject",
    "test",
    "another",
    "value",
    "idtf",
    "myList",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts obj-init.src unsafe 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 26,
        "line": 1,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 26,
          "line": 1,
        },
        "raw": "\\"foo\\"",
        "start": Position {
          "character": 21,
          "line": 1,
        },
        "type": "StringLiteral",
        "value": "foo",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 18,
          "line": 1,
        },
        "name": "valueOfIdentifier",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 2,
        "line": 9,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 2,
          "line": 9,
        },
        "fields": Array [
          ASTMapKeyString {
            "end": Position {
              "character": 6,
              "line": 6,
            },
            "key": ASTLiteral {
              "end": Position {
                "character": 11,
                "line": 4,
              },
              "raw": "\\"test\\"",
              "start": Position {
                "character": 5,
                "line": 4,
              },
              "type": "StringLiteral",
              "value": "test",
            },
            "start": Position {
              "character": 5,
              "line": 4,
            },
            "type": "MapKeyString",
            "value": ASTMapConstructorExpression {
              "end": Position {
                "character": 6,
                "line": 6,
              },
              "fields": Array [
                ASTMapKeyString {
                  "end": Position {
                    "character": 25,
                    "line": 5,
                  },
                  "key": ASTLiteral {
                    "end": Position {
                      "character": 18,
                      "line": 5,
                    },
                    "raw": "\\"another\\"",
                    "start": Position {
                      "character": 9,
                      "line": 5,
                    },
                    "type": "StringLiteral",
                    "value": "another",
                  },
                  "start": Position {
                    "character": 9,
                    "line": 5,
                  },
                  "type": "MapKeyString",
                  "value": ASTLiteral {
                    "end": Position {
                      "character": 25,
                      "line": 5,
                    },
                    "raw": "\\"123\\"",
                    "start": Position {
                      "character": 20,
                      "line": 5,
                    },
                    "type": "StringLiteral",
                    "value": "123",
                  },
                },
              ],
              "start": Position {
                "character": 13,
                "line": 4,
              },
              "type": "MapConstructorExpression",
            },
          },
          ASTMapKeyString {
            "end": Position {
              "character": 19,
              "line": 7,
            },
            "key": ASTLiteral {
              "end": Position {
                "character": 12,
                "line": 7,
              },
              "raw": "\\"value\\"",
              "start": Position {
                "character": 5,
                "line": 7,
              },
              "type": "StringLiteral",
              "value": "value",
            },
            "start": Position {
              "character": 5,
              "line": 7,
            },
            "type": "MapKeyString",
            "value": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 7,
              },
              "raw": "\\"123\\"",
              "start": Position {
                "character": 14,
                "line": 7,
              },
              "type": "StringLiteral",
              "value": "123",
            },
          },
          ASTMapKeyString {
            "end": Position {
              "character": 30,
              "line": 8,
            },
            "key": ASTLiteral {
              "end": Position {
                "character": 11,
                "line": 8,
              },
              "raw": "\\"idtf\\"",
              "start": Position {
                "character": 5,
                "line": 8,
              },
              "type": "StringLiteral",
              "value": "idtf",
            },
            "start": Position {
              "character": 5,
              "line": 8,
            },
            "type": "MapKeyString",
            "value": ASTIdentifier {
              "end": Position {
                "character": 30,
                "line": 8,
              },
              "name": "valueOfIdentifier",
              "start": Position {
                "character": 13,
                "line": 8,
              },
              "type": "Identifier",
            },
          },
        ],
        "start": Position {
          "character": 12,
          "line": 3,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 9,
          "line": 3,
        },
        "name": "myObject",
        "start": Position {
          "character": 1,
          "line": 3,
        },
        "type": "Identifier",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 62,
        "line": 11,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTListConstructorExpression {
            "end": Position {
              "character": 61,
              "line": 11,
            },
            "fields": Array [
              ASTListValue {
                "end": Position {
                  "character": 30,
                  "line": 11,
                },
                "start": Position {
                  "character": 21,
                  "line": 11,
                },
                "type": "ListValue",
                "value": ASTMemberExpression {
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 16,
                        "line": 11,
                      },
                      "name": "myObject",
                      "start": Position {
                        "character": 8,
                        "line": 11,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 22,
                      "line": 11,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 21,
                        "line": 11,
                      },
                      "name": "test",
                      "start": Position {
                        "character": 17,
                        "line": 11,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 16,
                      "line": 11,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 30,
                    "line": 11,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 29,
                      "line": 11,
                    },
                    "name": "another",
                    "start": Position {
                      "character": 22,
                      "line": 11,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 21,
                    "line": 11,
                  },
                  "type": "MemberExpression",
                },
              },
              ASTListValue {
                "end": Position {
                  "character": 46,
                  "line": 11,
                },
                "start": Position {
                  "character": 39,
                  "line": 11,
                },
                "type": "ListValue",
                "value": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 39,
                      "line": 11,
                    },
                    "name": "myObject",
                    "start": Position {
                      "character": 31,
                      "line": 11,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 46,
                    "line": 11,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 45,
                      "line": 11,
                    },
                    "name": "value",
                    "start": Position {
                      "character": 40,
                      "line": 11,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 39,
                    "line": 11,
                  },
                  "type": "MemberExpression",
                },
              },
              ASTListValue {
                "end": Position {
                  "character": 61,
                  "line": 11,
                },
                "start": Position {
                  "character": 55,
                  "line": 11,
                },
                "type": "ListValue",
                "value": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 55,
                      "line": 11,
                    },
                    "name": "myObject",
                    "start": Position {
                      "character": 47,
                      "line": 11,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 61,
                    "line": 11,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 60,
                      "line": 11,
                    },
                    "name": "idtf",
                    "start": Position {
                      "character": 56,
                      "line": 11,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 55,
                    "line": 11,
                  },
                  "type": "MemberExpression",
                },
              },
            ],
            "start": Position {
              "character": 7,
              "line": 11,
            },
            "type": "ListConstructorExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 11,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 11,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 62,
          "line": 11,
        },
        "start": Position {
          "character": 6,
          "line": 11,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 11,
      },
      "type": "CallStatement",
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 2,
        "line": 19,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 2,
          "line": 19,
        },
        "fields": Array [
          ASTListValue {
            "end": Position {
              "character": 6,
              "line": 16,
            },
            "start": Position {
              "character": 5,
              "line": 14,
            },
            "type": "ListValue",
            "value": ASTMapConstructorExpression {
              "end": Position {
                "character": 6,
                "line": 16,
              },
              "fields": Array [
                ASTMapKeyString {
                  "end": Position {
                    "character": 25,
                    "line": 15,
                  },
                  "key": ASTLiteral {
                    "end": Position {
                      "character": 18,
                      "line": 15,
                    },
                    "raw": "\\"another\\"",
                    "start": Position {
                      "character": 9,
                      "line": 15,
                    },
                    "type": "StringLiteral",
                    "value": "another",
                  },
                  "start": Position {
                    "character": 9,
                    "line": 15,
                  },
                  "type": "MapKeyString",
                  "value": ASTLiteral {
                    "end": Position {
                      "character": 25,
                      "line": 15,
                    },
                    "raw": "\\"123\\"",
                    "start": Position {
                      "character": 20,
                      "line": 15,
                    },
                    "type": "StringLiteral",
                    "value": "123",
                  },
                },
              ],
              "start": Position {
                "character": 5,
                "line": 14,
              },
              "type": "MapConstructorExpression",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 10,
              "line": 17,
            },
            "start": Position {
              "character": 5,
              "line": 17,
            },
            "type": "ListValue",
            "value": ASTLiteral {
              "end": Position {
                "character": 10,
                "line": 17,
              },
              "raw": "\\"123\\"",
              "start": Position {
                "character": 5,
                "line": 17,
              },
              "type": "StringLiteral",
              "value": "123",
            },
          },
          ASTListValue {
            "end": Position {
              "character": 22,
              "line": 18,
            },
            "start": Position {
              "character": 5,
              "line": 18,
            },
            "type": "ListValue",
            "value": ASTIdentifier {
              "end": Position {
                "character": 22,
                "line": 18,
              },
              "name": "valueOfIdentifier",
              "start": Position {
                "character": 5,
                "line": 18,
              },
              "type": "Identifier",
            },
          },
        ],
        "start": Position {
          "character": 10,
          "line": 13,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 13,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 13,
        },
        "name": "myList",
        "start": Position {
          "character": 1,
          "line": 13,
        },
        "type": "Identifier",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 14,
        "line": 21,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 13,
              "line": 21,
            },
            "name": "myList",
            "start": Position {
              "character": 7,
              "line": 21,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 21,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 21,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 14,
          "line": 21,
        },
        "start": Position {
          "character": 6,
          "line": 21,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 21,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 14,
    "line": 21,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 1,
      },
      "raw": "\\"foo\\"",
      "start": Position {
        "character": 21,
        "line": 1,
      },
      "type": "StringLiteral",
      "value": "foo",
    },
    ASTLiteral {
      "end": Position {
        "character": 11,
        "line": 4,
      },
      "raw": "\\"test\\"",
      "start": Position {
        "character": 5,
        "line": 4,
      },
      "type": "StringLiteral",
      "value": "test",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 5,
      },
      "raw": "\\"another\\"",
      "start": Position {
        "character": 9,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "another",
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 5,
      },
      "raw": "\\"123\\"",
      "start": Position {
        "character": 20,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "123",
    },
    ASTLiteral {
      "end": Position {
        "character": 12,
        "line": 7,
      },
      "raw": "\\"value\\"",
      "start": Position {
        "character": 5,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "value",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 7,
      },
      "raw": "\\"123\\"",
      "start": Position {
        "character": 14,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "123",
    },
    ASTLiteral {
      "end": Position {
        "character": 11,
        "line": 8,
      },
      "raw": "\\"idtf\\"",
      "start": Position {
        "character": 5,
        "line": 8,
      },
      "type": "StringLiteral",
      "value": "idtf",
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 15,
      },
      "raw": "\\"another\\"",
      "start": Position {
        "character": 9,
        "line": 15,
      },
      "type": "StringLiteral",
      "value": "another",
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 15,
      },
      "raw": "\\"123\\"",
      "start": Position {
        "character": 20,
        "line": 15,
      },
      "type": "StringLiteral",
      "value": "123",
    },
    ASTLiteral {
      "end": Position {
        "character": 10,
        "line": 17,
      },
      "raw": "\\"123\\"",
      "start": Position {
        "character": 5,
        "line": 17,
      },
      "type": "StringLiteral",
      "value": "123",
    },
  ],
  "namespaces": Set {
    "valueOfIdentifier",
    "myObject",
    "test",
    "another",
    "value",
    "idtf",
    "myList",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts password-generator.src 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 23,
        "line": 1,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 23,
          "line": 1,
        },
        "fields": Array [],
        "start": Position {
          "character": 21,
          "line": 1,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 18,
          "line": 1,
        },
        "name": "PasswordGenerator",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 43,
        "line": 3,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 43,
          "line": 3,
        },
        "raw": "15",
        "start": Position {
          "character": 41,
          "line": 3,
        },
        "type": "NumericLiteral",
        "value": 15,
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 3,
          },
          "name": "PasswordGenerator",
          "start": Position {
            "character": 1,
            "line": 3,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 40,
          "line": 3,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 38,
            "line": 3,
          },
          "name": "MAX_PASSWORD_LENGTH",
          "start": Position {
            "character": 19,
            "line": 3,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 18,
          "line": 3,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 71,
        "line": 4,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 71,
          "line": 4,
        },
        "raw": "\\"qwertzuiopasdfghjklyxcvbnm\\"",
        "start": Position {
          "character": 43,
          "line": 4,
        },
        "type": "StringLiteral",
        "value": "qwertzuiopasdfghjklyxcvbnm",
      },
      "start": Position {
        "character": 1,
        "line": 4,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 4,
          },
          "name": "PasswordGenerator",
          "start": Position {
            "character": 1,
            "line": 4,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 42,
          "line": 4,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 40,
            "line": 4,
          },
          "name": "ALPHABETIC_CHARACTERS",
          "start": Position {
            "character": 19,
            "line": 4,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 18,
          "line": 4,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 51,
        "line": 5,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 51,
          "line": 5,
        },
        "raw": "\\"0123456789\\"",
        "start": Position {
          "character": 39,
          "line": 5,
        },
        "type": "StringLiteral",
        "value": "0123456789",
      },
      "start": Position {
        "character": 1,
        "line": 5,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 5,
          },
          "name": "PasswordGenerator",
          "start": Position {
            "character": 1,
            "line": 5,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 38,
          "line": 5,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 36,
            "line": 5,
          },
          "name": "NUMBER_CHARACTERS",
          "start": Position {
            "character": 19,
            "line": 5,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 18,
          "line": 5,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 160,
        "line": 6,
      },
      "init": ASTEvaluationExpression {
        "end": Position {
          "character": 160,
          "line": 6,
        },
        "left": ASTEvaluationExpression {
          "end": Position {
            "character": 124,
            "line": 6,
          },
          "left": ASTMemberExpression {
            "base": ASTIdentifier {
              "end": Position {
                "character": 52,
                "line": 6,
              },
              "name": "PasswordGenerator",
              "start": Position {
                "character": 35,
                "line": 6,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 76,
              "line": 6,
            },
            "identifier": ASTIdentifier {
              "end": Position {
                "character": 74,
                "line": 6,
              },
              "name": "ALPHABETIC_CHARACTERS",
              "start": Position {
                "character": 53,
                "line": 6,
              },
              "type": "Identifier",
            },
            "indexer": ".",
            "start": Position {
              "character": 52,
              "line": 6,
            },
            "type": "MemberExpression",
          },
          "operator": "+",
          "right": ASTMemberExpression {
            "base": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 94,
                  "line": 6,
                },
                "name": "PasswordGenerator",
                "start": Position {
                  "character": 77,
                  "line": 6,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 117,
                "line": 6,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 116,
                  "line": 6,
                },
                "name": "ALPHABETIC_CHARACTERS",
                "start": Position {
                  "character": 95,
                  "line": 6,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 94,
                "line": 6,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 124,
              "line": 6,
            },
            "identifier": ASTIdentifier {
              "end": Position {
                "character": 122,
                "line": 6,
              },
              "name": "upper",
              "start": Position {
                "character": 117,
                "line": 6,
              },
              "type": "Identifier",
            },
            "indexer": ".",
            "start": Position {
              "character": 116,
              "line": 6,
            },
            "type": "MemberExpression",
          },
          "start": Position {
            "character": 75,
            "line": 6,
          },
          "type": "BinaryExpression",
        },
        "operator": "+",
        "right": ASTMemberExpression {
          "base": ASTIdentifier {
            "end": Position {
              "character": 142,
              "line": 6,
            },
            "name": "PasswordGenerator",
            "start": Position {
              "character": 125,
              "line": 6,
            },
            "type": "Identifier",
          },
          "end": Position {
            "character": 160,
            "line": 6,
          },
          "identifier": ASTIdentifier {
            "end": Position {
              "character": 160,
              "line": 6,
            },
            "name": "NUMBER_CHARACTERS",
            "start": Position {
              "character": 143,
              "line": 6,
            },
            "type": "Identifier",
          },
          "indexer": ".",
          "start": Position {
            "character": 142,
            "line": 6,
          },
          "type": "MemberExpression",
        },
        "start": Position {
          "character": 75,
          "line": 6,
        },
        "type": "BinaryExpression",
      },
      "start": Position {
        "character": 1,
        "line": 6,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 6,
          },
          "name": "PasswordGenerator",
          "start": Position {
            "character": 1,
            "line": 6,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 34,
          "line": 6,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 32,
            "line": 6,
          },
          "name": "ALPHA_NUMERIC",
          "start": Position {
            "character": 19,
            "line": 6,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 18,
          "line": 6,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 13,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 9,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 9,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 9,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 9,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 9,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 9,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 20,
              "line": 10,
            },
            "init": ASTListConstructorExpression {
              "end": Position {
                "character": 20,
                "line": 10,
              },
              "fields": Array [
                ASTListValue {
                  "end": Position {
                    "character": 19,
                    "line": 10,
                  },
                  "start": Position {
                    "character": 18,
                    "line": 10,
                  },
                  "type": "ListValue",
                  "value": ASTLiteral {
                    "end": Position {
                      "character": 19,
                      "line": 10,
                    },
                    "raw": "0",
                    "start": Position {
                      "character": 18,
                      "line": 10,
                    },
                    "type": "NumericLiteral",
                    "value": 0,
                  },
                },
              ],
              "start": Position {
                "character": 17,
                "line": 10,
              },
              "type": "ListConstructorExpression",
            },
            "start": Position {
              "character": 5,
              "line": 10,
            },
            "type": "AssignmentStatement",
            "variable": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 7,
                  "line": 10,
                },
                "name": "me",
                "start": Position {
                  "character": 5,
                  "line": 10,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 16,
                "line": 10,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 14,
                  "line": 10,
                },
                "name": "buffer",
                "start": Position {
                  "character": 8,
                  "line": 10,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 7,
                "line": 10,
              },
              "type": "MemberExpression",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 37,
              "line": 11,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 23,
                  "line": 11,
                },
                "name": "me",
                "start": Position {
                  "character": 21,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 37,
                "line": 11,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 37,
                  "line": 11,
                },
                "name": "ALPHA_NUMERIC",
                "start": Position {
                  "character": 24,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 23,
                "line": 11,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 11,
            },
            "type": "AssignmentStatement",
            "variable": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 7,
                  "line": 11,
                },
                "name": "me",
                "start": Position {
                  "character": 5,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 20,
                "line": 11,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 18,
                  "line": 11,
                },
                "name": "characters",
                "start": Position {
                  "character": 8,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 7,
                "line": 11,
              },
              "type": "MemberExpression",
            },
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 12,
              },
              "name": "me",
              "start": Position {
                "character": 12,
                "line": 12,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 13,
            },
            "start": Position {
              "character": 5,
              "line": 12,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 13,
        },
        "namespaces": Set {},
        "parameters": Array [],
        "start": Position {
          "character": 33,
          "line": 8,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 8,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 8,
          },
          "name": "PasswordGenerator",
          "start": Position {
            "character": 1,
            "line": 8,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 32,
          "line": 8,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 30,
            "line": 8,
          },
          "name": "constructor",
          "start": Position {
            "character": 19,
            "line": 8,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 18,
          "line": 8,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 31,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 16,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 16,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 16,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 16,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 16,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 16,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 34,
              "line": 17,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 27,
                  "line": 17,
                },
                "name": "me",
                "start": Position {
                  "character": 25,
                  "line": 17,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 34,
                "line": 17,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 34,
                  "line": 17,
                },
                "name": "buffer",
                "start": Position {
                  "character": 28,
                  "line": 17,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 27,
                "line": 17,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 17,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 22,
                "line": 17,
              },
              "name": "currentCharBuffer",
              "start": Position {
                "character": 5,
                "line": 17,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 38,
              "line": 18,
            },
            "init": ASTMemberExpression {
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 23,
                    "line": 18,
                  },
                  "name": "me",
                  "start": Position {
                    "character": 21,
                    "line": 18,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 35,
                  "line": 18,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 34,
                    "line": 18,
                  },
                  "name": "characters",
                  "start": Position {
                    "character": 24,
                    "line": 18,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 23,
                  "line": 18,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 38,
                "line": 18,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 38,
                  "line": 18,
                },
                "name": "len",
                "start": Position {
                  "character": 35,
                  "line": 18,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 34,
                "line": 18,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 18,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 18,
                "line": 18,
              },
              "name": "maxBufferSize",
              "start": Position {
                "character": 5,
                "line": 18,
              },
              "type": "Identifier",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 54,
                      "line": 19,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 54,
                        "line": 19,
                      },
                      "left": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 46,
                            "line": 19,
                          },
                          "name": "currentCharBuffer",
                          "start": Position {
                            "character": 29,
                            "line": 19,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 52,
                          "line": 19,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 50,
                            "line": 19,
                          },
                          "name": "len",
                          "start": Position {
                            "character": 47,
                            "line": 19,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 46,
                          "line": 19,
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "-",
                      "right": ASTLiteral {
                        "end": Position {
                          "character": 54,
                          "line": 19,
                        },
                        "raw": "1",
                        "start": Position {
                          "character": 53,
                          "line": 19,
                        },
                        "type": "NumericLiteral",
                        "value": 1,
                      },
                      "start": Position {
                        "character": 51,
                        "line": 19,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 25,
                      "line": 19,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 26,
                        "line": 19,
                      },
                      "name": "i",
                      "start": Position {
                        "character": 25,
                        "line": 19,
                      },
                      "type": "Identifier",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 19,
                    "line": 19,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 10,
                      "line": 19,
                    },
                    "name": "i",
                    "start": Position {
                      "character": 9,
                      "line": 19,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 18,
                      "line": 19,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 14,
                      "line": 19,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 11,
                    "line": 19,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 54,
                  "line": 19,
                },
                "start": Position {
                  "character": 5,
                  "line": 19,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 54,
              "line": 19,
            },
            "start": Position {
              "character": 5,
              "line": 19,
            },
            "type": "IfShortcutStatement",
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 29,
              "line": 20,
            },
            "init": ASTIndexExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 26,
                  "line": 20,
                },
                "name": "currentCharBuffer",
                "start": Position {
                  "character": 9,
                  "line": 20,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 29,
                "line": 20,
              },
              "index": ASTIdentifier {
                "end": Position {
                  "character": 28,
                  "line": 20,
                },
                "name": "i",
                "start": Position {
                  "character": 27,
                  "line": 20,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 27,
                "line": 20,
              },
              "type": "IndexExpression",
            },
            "start": Position {
              "character": 5,
              "line": 20,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 6,
                "line": 20,
              },
              "name": "p",
              "start": Position {
                "character": 5,
                "line": 20,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 21,
            },
            "init": ASTEvaluationExpression {
              "end": Position {
                "character": 14,
                "line": 21,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 10,
                  "line": 21,
                },
                "name": "p",
                "start": Position {
                  "character": 9,
                  "line": 21,
                },
                "type": "Identifier",
              },
              "operator": "+",
              "right": ASTLiteral {
                "end": Position {
                  "character": 14,
                  "line": 21,
                },
                "raw": "1",
                "start": Position {
                  "character": 13,
                  "line": 21,
                },
                "type": "NumericLiteral",
                "value": 1,
              },
              "start": Position {
                "character": 11,
                "line": 21,
              },
              "type": "BinaryExpression",
            },
            "start": Position {
              "character": 5,
              "line": 21,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 6,
                "line": 21,
              },
              "name": "p",
              "start": Position {
                "character": 5,
                "line": 21,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 29,
              "line": 22,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 29,
                "line": 22,
              },
              "name": "p",
              "start": Position {
                "character": 28,
                "line": 22,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 22,
            },
            "type": "AssignmentStatement",
            "variable": ASTIndexExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 22,
                  "line": 22,
                },
                "name": "currentCharBuffer",
                "start": Position {
                  "character": 5,
                  "line": 22,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 27,
                "line": 22,
              },
              "index": ASTIdentifier {
                "end": Position {
                  "character": 24,
                  "line": 22,
                },
                "name": "i",
                "start": Position {
                  "character": 23,
                  "line": 22,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 23,
                "line": 22,
              },
              "type": "IndexExpression",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 33,
                      "line": 24,
                    },
                    "init": ASTLiteral {
                      "end": Position {
                        "character": 33,
                        "line": 24,
                      },
                      "raw": "0",
                      "start": Position {
                        "character": 32,
                        "line": 24,
                      },
                      "type": "NumericLiteral",
                      "value": 0,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 24,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 26,
                          "line": 24,
                        },
                        "name": "currentCharBuffer",
                        "start": Position {
                          "character": 9,
                          "line": 24,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 31,
                        "line": 24,
                      },
                      "index": ASTIdentifier {
                        "end": Position {
                          "character": 28,
                          "line": 24,
                        },
                        "name": "i",
                        "start": Position {
                          "character": 27,
                          "line": 24,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 27,
                        "line": 24,
                      },
                      "type": "IndexExpression",
                    },
                  },
                  ASTIfStatement {
                    "clauses": Array [
                      ASTIfClause {
                        "body": Array [
                          ASTCallStatement {
                            "end": Position {
                              "character": 38,
                              "line": 26,
                            },
                            "expression": ASTCallExpression {
                              "arguments": Array [
                                ASTLiteral {
                                  "end": Position {
                                    "character": 37,
                                    "line": 26,
                                  },
                                  "raw": "0",
                                  "start": Position {
                                    "character": 36,
                                    "line": 26,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 0,
                                },
                              ],
                              "base": ASTMemberExpression {
                                "base": ASTIdentifier {
                                  "end": Position {
                                    "character": 30,
                                    "line": 26,
                                  },
                                  "name": "currentCharBuffer",
                                  "start": Position {
                                    "character": 13,
                                    "line": 26,
                                  },
                                  "type": "Identifier",
                                },
                                "end": Position {
                                  "character": 36,
                                  "line": 26,
                                },
                                "identifier": ASTIdentifier {
                                  "end": Position {
                                    "character": 35,
                                    "line": 26,
                                  },
                                  "name": "push",
                                  "start": Position {
                                    "character": 31,
                                    "line": 26,
                                  },
                                  "type": "Identifier",
                                },
                                "indexer": ".",
                                "start": Position {
                                  "character": 30,
                                  "line": 26,
                                },
                                "type": "MemberExpression",
                              },
                              "end": Position {
                                "character": 38,
                                "line": 26,
                              },
                              "start": Position {
                                "character": 35,
                                "line": 26,
                              },
                              "type": "CallExpression",
                            },
                            "start": Position {
                              "character": 13,
                              "line": 26,
                            },
                            "type": "CallStatement",
                          },
                        ],
                        "condition": ASTEvaluationExpression {
                          "end": Position {
                            "character": 20,
                            "line": 25,
                          },
                          "left": ASTIdentifier {
                            "end": Position {
                              "character": 14,
                              "line": 25,
                            },
                            "name": "i",
                            "start": Position {
                              "character": 13,
                              "line": 25,
                            },
                            "type": "Identifier",
                          },
                          "operator": "==",
                          "right": ASTLiteral {
                            "end": Position {
                              "character": 19,
                              "line": 25,
                            },
                            "raw": "0",
                            "start": Position {
                              "character": 18,
                              "line": 25,
                            },
                            "type": "NumericLiteral",
                            "value": 0,
                          },
                          "start": Position {
                            "character": 15,
                            "line": 25,
                          },
                          "type": "BinaryExpression",
                        },
                        "end": Position {
                          "character": 13,
                          "line": 27,
                        },
                        "start": Position {
                          "character": 9,
                          "line": 25,
                        },
                        "type": "IfClause",
                      },
                      ASTElseClause {
                        "body": Array [
                          ASTCallStatement {
                            "end": Position {
                              "character": 37,
                              "line": 28,
                            },
                            "expression": ASTCallExpression {
                              "arguments": Array [
                                ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 37,
                                    "line": 28,
                                  },
                                  "left": ASTIdentifier {
                                    "end": Position {
                                      "character": 32,
                                      "line": 28,
                                    },
                                    "name": "i",
                                    "start": Position {
                                      "character": 31,
                                      "line": 28,
                                    },
                                    "type": "Identifier",
                                  },
                                  "operator": "-",
                                  "right": ASTLiteral {
                                    "end": Position {
                                      "character": 36,
                                      "line": 28,
                                    },
                                    "raw": "1",
                                    "start": Position {
                                      "character": 35,
                                      "line": 28,
                                    },
                                    "type": "NumericLiteral",
                                    "value": 1,
                                  },
                                  "start": Position {
                                    "character": 33,
                                    "line": 28,
                                  },
                                  "type": "BinaryExpression",
                                },
                              ],
                              "base": ASTMemberExpression {
                                "base": ASTIdentifier {
                                  "end": Position {
                                    "character": 15,
                                    "line": 28,
                                  },
                                  "name": "me",
                                  "start": Position {
                                    "character": 13,
                                    "line": 28,
                                  },
                                  "type": "Identifier",
                                },
                                "end": Position {
                                  "character": 31,
                                  "line": 28,
                                },
                                "identifier": ASTIdentifier {
                                  "end": Position {
                                    "character": 30,
                                    "line": 28,
                                  },
                                  "name": "increaseBuffer",
                                  "start": Position {
                                    "character": 16,
                                    "line": 28,
                                  },
                                  "type": "Identifier",
                                },
                                "indexer": ".",
                                "start": Position {
                                  "character": 15,
                                  "line": 28,
                                },
                                "type": "MemberExpression",
                              },
                              "end": Position {
                                "character": 37,
                                "line": 28,
                              },
                              "start": Position {
                                "character": 30,
                                "line": 28,
                              },
                              "type": "CallExpression",
                            },
                            "start": Position {
                              "character": 13,
                              "line": 28,
                            },
                            "type": "CallStatement",
                          },
                        ],
                        "end": Position {
                          "character": 15,
                          "line": 29,
                        },
                        "start": Position {
                          "character": 13,
                          "line": 27,
                        },
                        "type": "ElseClause",
                      },
                    ],
                    "end": Position {
                      "character": 15,
                      "line": 29,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 25,
                    },
                    "type": "IfStatement",
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 28,
                    "line": 23,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 10,
                      "line": 23,
                    },
                    "name": "p",
                    "start": Position {
                      "character": 9,
                      "line": 23,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTIdentifier {
                    "end": Position {
                      "character": 27,
                      "line": 23,
                    },
                    "name": "maxBufferSize",
                    "start": Position {
                      "character": 14,
                      "line": 23,
                    },
                    "type": "Identifier",
                  },
                  "start": Position {
                    "character": 11,
                    "line": 23,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 11,
                  "line": 30,
                },
                "start": Position {
                  "character": 5,
                  "line": 23,
                },
                "type": "IfClause",
              },
            ],
            "end": Position {
              "character": 11,
              "line": 30,
            },
            "start": Position {
              "character": 5,
              "line": 23,
            },
            "type": "IfStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 31,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 46,
              "line": 15,
            },
            "name": "i",
            "start": Position {
              "character": 45,
              "line": 15,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 36,
          "line": 15,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 15,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 15,
          },
          "name": "PasswordGenerator",
          "start": Position {
            "character": 1,
            "line": 15,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 35,
          "line": 15,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 33,
            "line": 15,
          },
          "name": "increaseBuffer",
          "start": Position {
            "character": 19,
            "line": 15,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 18,
          "line": 15,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 52,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 34,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 34,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 34,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 34,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 34,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 34,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 34,
              "line": 35,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 27,
                  "line": 35,
                },
                "name": "me",
                "start": Position {
                  "character": 25,
                  "line": 35,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 34,
                "line": 35,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 34,
                  "line": 35,
                },
                "name": "buffer",
                "start": Position {
                  "character": 28,
                  "line": 35,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 27,
                "line": 35,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 35,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 22,
                "line": 35,
              },
              "name": "currentCharBuffer",
              "start": Position {
                "character": 5,
                "line": 35,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 40,
              "line": 36,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 29,
                  "line": 36,
                },
                "name": "me",
                "start": Position {
                  "character": 27,
                  "line": 36,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 40,
                "line": 36,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 40,
                  "line": 36,
                },
                "name": "characters",
                "start": Position {
                  "character": 30,
                  "line": 36,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 29,
                "line": 36,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 36,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 24,
                "line": 36,
              },
              "name": "generatorCharacters",
              "start": Position {
                "character": 5,
                "line": 36,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 18,
              "line": 37,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 37,
              },
              "raw": "\\"\\"",
              "start": Position {
                "character": 16,
                "line": 37,
              },
              "type": "StringLiteral",
              "value": "",
            },
            "start": Position {
              "character": 5,
              "line": 37,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 37,
              },
              "name": "password",
              "start": Position {
                "character": 5,
                "line": 37,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 38,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 14,
                "line": 38,
              },
              "raw": "0",
              "start": Position {
                "character": 13,
                "line": 38,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 38,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 38,
              },
              "name": "index",
              "start": Position {
                "character": 5,
                "line": 38,
              },
              "type": "Identifier",
            },
          },
          ASTWhileStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 43,
                  "line": 41,
                },
                "init": ASTIndexExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 36,
                      "line": 41,
                    },
                    "name": "currentCharBuffer",
                    "start": Position {
                      "character": 19,
                      "line": 41,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 43,
                    "line": 41,
                  },
                  "index": ASTIdentifier {
                    "end": Position {
                      "character": 42,
                      "line": 41,
                    },
                    "name": "index",
                    "start": Position {
                      "character": 37,
                      "line": 41,
                    },
                    "type": "Identifier",
                  },
                  "start": Position {
                    "character": 37,
                    "line": 41,
                  },
                  "type": "IndexExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 41,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 16,
                    "line": 41,
                  },
                  "name": "pointer",
                  "start": Position {
                    "character": 9,
                    "line": 41,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 59,
                  "line": 42,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 59,
                    "line": 42,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 28,
                      "line": 42,
                    },
                    "name": "password",
                    "start": Position {
                      "character": 20,
                      "line": 42,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTIndexExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 50,
                        "line": 42,
                      },
                      "name": "generatorCharacters",
                      "start": Position {
                        "character": 31,
                        "line": 42,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 59,
                      "line": 42,
                    },
                    "index": ASTIdentifier {
                      "end": Position {
                        "character": 58,
                        "line": 42,
                      },
                      "name": "pointer",
                      "start": Position {
                        "character": 51,
                        "line": 42,
                      },
                      "type": "Identifier",
                    },
                    "start": Position {
                      "character": 51,
                      "line": 42,
                    },
                    "type": "IndexExpression",
                  },
                  "start": Position {
                    "character": 29,
                    "line": 42,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 42,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 17,
                    "line": 42,
                  },
                  "name": "password",
                  "start": Position {
                    "character": 9,
                    "line": 42,
                  },
                  "type": "Identifier",
                },
              },
              ASTIfStatement {
                "clauses": Array [
                  ASTIfClause {
                    "body": Array [
                      ASTCallStatement {
                        "end": Position {
                          "character": 75,
                          "line": 43,
                        },
                        "expression": ASTCallExpression {
                          "arguments": Array [],
                          "base": ASTMemberExpression {
                            "base": ASTIdentifier {
                              "end": Position {
                                "character": 58,
                                "line": 43,
                              },
                              "name": "self",
                              "start": Position {
                                "character": 54,
                                "line": 43,
                              },
                              "type": "Identifier",
                            },
                            "end": Position {
                              "character": 74,
                              "line": 43,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 73,
                                "line": 43,
                              },
                              "name": "increaseBuffer",
                              "start": Position {
                                "character": 59,
                                "line": 43,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 58,
                              "line": 43,
                            },
                            "type": "MemberExpression",
                          },
                          "end": Position {
                            "character": 75,
                            "line": 43,
                          },
                          "start": Position {
                            "character": 73,
                            "line": 43,
                          },
                          "type": "CallExpression",
                        },
                        "start": Position {
                          "character": 54,
                          "line": 43,
                        },
                        "type": "CallStatement",
                      },
                    ],
                    "condition": ASTEvaluationExpression {
                      "end": Position {
                        "character": 48,
                        "line": 43,
                      },
                      "left": ASTIdentifier {
                        "end": Position {
                          "character": 18,
                          "line": 43,
                        },
                        "name": "index",
                        "start": Position {
                          "character": 13,
                          "line": 43,
                        },
                        "type": "Identifier",
                      },
                      "operator": "==",
                      "right": ASTEvaluationExpression {
                        "end": Position {
                          "character": 48,
                          "line": 43,
                        },
                        "left": ASTMemberExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 39,
                              "line": 43,
                            },
                            "name": "currentCharBuffer",
                            "start": Position {
                              "character": 22,
                              "line": 43,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 45,
                            "line": 43,
                          },
                          "identifier": ASTIdentifier {
                            "end": Position {
                              "character": 43,
                              "line": 43,
                            },
                            "name": "len",
                            "start": Position {
                              "character": 40,
                              "line": 43,
                            },
                            "type": "Identifier",
                          },
                          "indexer": ".",
                          "start": Position {
                            "character": 39,
                            "line": 43,
                          },
                          "type": "MemberExpression",
                        },
                        "operator": "-",
                        "right": ASTLiteral {
                          "end": Position {
                            "character": 47,
                            "line": 43,
                          },
                          "raw": "1",
                          "start": Position {
                            "character": 46,
                            "line": 43,
                          },
                          "type": "NumericLiteral",
                          "value": 1,
                        },
                        "start": Position {
                          "character": 44,
                          "line": 43,
                        },
                        "type": "BinaryExpression",
                      },
                      "start": Position {
                        "character": 19,
                        "line": 43,
                      },
                      "type": "BinaryExpression",
                    },
                    "end": Position {
                      "character": 75,
                      "line": 43,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 43,
                    },
                    "type": "IfShortcutClause",
                  },
                ],
                "end": Position {
                  "character": 75,
                  "line": 43,
                },
                "start": Position {
                  "character": 9,
                  "line": 43,
                },
                "type": "IfShortcutStatement",
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 26,
                  "line": 44,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 26,
                    "line": 44,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 22,
                      "line": 44,
                    },
                    "name": "index",
                    "start": Position {
                      "character": 17,
                      "line": 44,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 26,
                      "line": 44,
                    },
                    "raw": "1",
                    "start": Position {
                      "character": 25,
                      "line": 44,
                    },
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                  "start": Position {
                    "character": 23,
                    "line": 44,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 44,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 14,
                    "line": 44,
                  },
                  "name": "index",
                  "start": Position {
                    "character": 9,
                    "line": 44,
                  },
                  "type": "Identifier",
                },
              },
            ],
            "condition": ASTEvaluationExpression {
              "end": Position {
                "character": 40,
                "line": 40,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 16,
                  "line": 40,
                },
                "name": "index",
                "start": Position {
                  "character": 11,
                  "line": 40,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 36,
                    "line": 40,
                  },
                  "name": "currentCharBuffer",
                  "start": Position {
                    "character": 19,
                    "line": 40,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 40,
                  "line": 40,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 40,
                    "line": 40,
                  },
                  "name": "len",
                  "start": Position {
                    "character": 37,
                    "line": 40,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 36,
                  "line": 40,
                },
                "type": "MemberExpression",
              },
              "start": Position {
                "character": 17,
                "line": 40,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 14,
              "line": 45,
            },
            "start": Position {
              "character": 5,
              "line": 40,
            },
            "type": "WhileStatement",
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTReturnStatement {
                    "argument": ASTLiteral {
                      "end": Position {
                        "character": 20,
                        "line": 48,
                      },
                      "raw": "null",
                      "start": Position {
                        "character": 16,
                        "line": 48,
                      },
                      "type": "NilLiteral",
                      "value": null,
                    },
                    "end": Position {
                      "character": 11,
                      "line": 49,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 48,
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 56,
                    "line": 47,
                  },
                  "left": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 26,
                        "line": 47,
                      },
                      "name": "currentCharBuffer",
                      "start": Position {
                        "character": 9,
                        "line": 47,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 32,
                      "line": 47,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 30,
                        "line": 47,
                      },
                      "name": "len",
                      "start": Position {
                        "character": 27,
                        "line": 47,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 26,
                      "line": 47,
                    },
                    "type": "MemberExpression",
                  },
                  "operator": ">",
                  "right": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 35,
                        "line": 47,
                      },
                      "name": "me",
                      "start": Position {
                        "character": 33,
                        "line": 47,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 56,
                      "line": 47,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 55,
                        "line": 47,
                      },
                      "name": "MAX_PASSWORD_LENGTH",
                      "start": Position {
                        "character": 36,
                        "line": 47,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 35,
                      "line": 47,
                    },
                    "type": "MemberExpression",
                  },
                  "start": Position {
                    "character": 31,
                    "line": 47,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 11,
                  "line": 49,
                },
                "start": Position {
                  "character": 5,
                  "line": 47,
                },
                "type": "IfClause",
              },
            ],
            "end": Position {
              "character": 11,
              "line": 49,
            },
            "start": Position {
              "character": 5,
              "line": 47,
            },
            "type": "IfStatement",
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 20,
                "line": 51,
              },
              "name": "password",
              "start": Position {
                "character": 12,
                "line": 51,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 52,
            },
            "start": Position {
              "character": 5,
              "line": 51,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 52,
        },
        "namespaces": Set {},
        "parameters": Array [],
        "start": Position {
          "character": 25,
          "line": 33,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 33,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 33,
          },
          "name": "PasswordGenerator",
          "start": Position {
            "character": 1,
            "line": 33,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 24,
          "line": 33,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 22,
            "line": 33,
          },
          "name": "gen",
          "start": Position {
            "character": 19,
            "line": 33,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 18,
          "line": 33,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 45,
        "line": 54,
      },
      "init": ASTCallExpression {
        "arguments": Array [],
        "base": ASTMemberExpression {
          "base": ASTUnaryExpression {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 30,
                "line": 54,
              },
              "name": "PasswordGenerator",
              "start": Position {
                "character": 13,
                "line": 54,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 31,
              "line": 54,
            },
            "operator": "new",
            "start": Position {
              "character": 9,
              "line": 54,
            },
            "type": "UnaryExpression",
          },
          "end": Position {
            "character": 44,
            "line": 54,
          },
          "identifier": ASTIdentifier {
            "end": Position {
              "character": 43,
              "line": 54,
            },
            "name": "constructor",
            "start": Position {
              "character": 32,
              "line": 54,
            },
            "type": "Identifier",
          },
          "indexer": ".",
          "start": Position {
            "character": 31,
            "line": 54,
          },
          "type": "MemberExpression",
        },
        "end": Position {
          "character": 45,
          "line": 54,
        },
        "start": Position {
          "character": 43,
          "line": 54,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 54,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 5,
          "line": 54,
        },
        "name": "pgen",
        "start": Position {
          "character": 1,
          "line": 54,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 10,
        "line": 56,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 10,
          "line": 56,
        },
        "raw": "0",
        "start": Position {
          "character": 9,
          "line": 56,
        },
        "type": "NumericLiteral",
        "value": 0,
      },
      "start": Position {
        "character": 1,
        "line": 56,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 6,
          "line": 56,
        },
        "name": "index",
        "start": Position {
          "character": 1,
          "line": 56,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 9,
        "line": 57,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 9,
          "line": 57,
        },
        "raw": "10",
        "start": Position {
          "character": 7,
          "line": 57,
        },
        "type": "NumericLiteral",
        "value": 10,
      },
      "start": Position {
        "character": 1,
        "line": 57,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 4,
          "line": 57,
        },
        "name": "max",
        "start": Position {
          "character": 1,
          "line": 57,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 12,
        "line": 58,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 12,
          "line": 58,
        },
        "fields": Array [],
        "start": Position {
          "character": 10,
          "line": 58,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 58,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 58,
        },
        "name": "result",
        "start": Position {
          "character": 1,
          "line": 58,
        },
        "type": "Identifier",
      },
    },
    ASTWhileStatement {
      "body": Array [
        ASTCallStatement {
          "end": Position {
            "character": 28,
            "line": 61,
          },
          "expression": ASTCallExpression {
            "arguments": Array [
              ASTCallExpression {
                "arguments": Array [],
                "base": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 21,
                      "line": 61,
                    },
                    "name": "pgen",
                    "start": Position {
                      "character": 17,
                      "line": 61,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 26,
                    "line": 61,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 25,
                      "line": 61,
                    },
                    "name": "gen",
                    "start": Position {
                      "character": 22,
                      "line": 61,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 21,
                    "line": 61,
                  },
                  "type": "MemberExpression",
                },
                "end": Position {
                  "character": 28,
                  "line": 61,
                },
                "start": Position {
                  "character": 25,
                  "line": 61,
                },
                "type": "CallExpression",
              },
            ],
            "base": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 11,
                  "line": 61,
                },
                "name": "result",
                "start": Position {
                  "character": 5,
                  "line": 61,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 17,
                "line": 61,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 16,
                  "line": 61,
                },
                "name": "push",
                "start": Position {
                  "character": 12,
                  "line": 61,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 11,
                "line": 61,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 28,
              "line": 61,
            },
            "start": Position {
              "character": 16,
              "line": 61,
            },
            "type": "CallExpression",
          },
          "start": Position {
            "character": 5,
            "line": 61,
          },
          "type": "CallStatement",
        },
        ASTAssignmentStatement {
          "end": Position {
            "character": 22,
            "line": 62,
          },
          "init": ASTEvaluationExpression {
            "end": Position {
              "character": 22,
              "line": 62,
            },
            "left": ASTIdentifier {
              "end": Position {
                "character": 18,
                "line": 62,
              },
              "name": "index",
              "start": Position {
                "character": 13,
                "line": 62,
              },
              "type": "Identifier",
            },
            "operator": "+",
            "right": ASTLiteral {
              "end": Position {
                "character": 22,
                "line": 62,
              },
              "raw": "1",
              "start": Position {
                "character": 21,
                "line": 62,
              },
              "type": "NumericLiteral",
              "value": 1,
            },
            "start": Position {
              "character": 19,
              "line": 62,
            },
            "type": "BinaryExpression",
          },
          "start": Position {
            "character": 5,
            "line": 62,
          },
          "type": "AssignmentStatement",
          "variable": ASTIdentifier {
            "end": Position {
              "character": 10,
              "line": 62,
            },
            "name": "index",
            "start": Position {
              "character": 5,
              "line": 62,
            },
            "type": "Identifier",
          },
        },
      ],
      "condition": ASTEvaluationExpression {
        "end": Position {
          "character": 20,
          "line": 60,
        },
        "left": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 60,
          },
          "name": "index",
          "start": Position {
            "character": 8,
            "line": 60,
          },
          "type": "Identifier",
        },
        "operator": "<",
        "right": ASTIdentifier {
          "end": Position {
            "character": 19,
            "line": 60,
          },
          "name": "max",
          "start": Position {
            "character": 16,
            "line": 60,
          },
          "type": "Identifier",
        },
        "start": Position {
          "character": 14,
          "line": 60,
        },
        "type": "BinaryExpression",
      },
      "end": Position {
        "character": 10,
        "line": 63,
      },
      "start": Position {
        "character": 1,
        "line": 60,
      },
      "type": "WhileStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 14,
        "line": 65,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 13,
              "line": 65,
            },
            "name": "result",
            "start": Position {
              "character": 7,
              "line": 65,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 65,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 65,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 14,
          "line": 65,
        },
        "start": Position {
          "character": 6,
          "line": 65,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 65,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 14,
    "line": 65,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 43,
        "line": 3,
      },
      "raw": "15",
      "start": Position {
        "character": 41,
        "line": 3,
      },
      "type": "NumericLiteral",
      "value": 15,
    },
    ASTLiteral {
      "end": Position {
        "character": 71,
        "line": 4,
      },
      "raw": "\\"qwertzuiopasdfghjklyxcvbnm\\"",
      "start": Position {
        "character": 43,
        "line": 4,
      },
      "type": "StringLiteral",
      "value": "qwertzuiopasdfghjklyxcvbnm",
    },
    ASTLiteral {
      "end": Position {
        "character": 51,
        "line": 5,
      },
      "raw": "\\"0123456789\\"",
      "start": Position {
        "character": 39,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "0123456789",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 10,
      },
      "raw": "0",
      "start": Position {
        "character": 18,
        "line": 10,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 19,
      },
      "raw": "null",
      "start": Position {
        "character": 14,
        "line": 19,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 54,
        "line": 19,
      },
      "raw": "1",
      "start": Position {
        "character": 53,
        "line": 19,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 21,
      },
      "raw": "1",
      "start": Position {
        "character": 13,
        "line": 21,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 33,
        "line": 24,
      },
      "raw": "0",
      "start": Position {
        "character": 32,
        "line": 24,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 25,
      },
      "raw": "0",
      "start": Position {
        "character": 18,
        "line": 25,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 26,
      },
      "raw": "0",
      "start": Position {
        "character": 36,
        "line": 26,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 36,
        "line": 28,
      },
      "raw": "1",
      "start": Position {
        "character": 35,
        "line": 28,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 37,
      },
      "raw": "\\"\\"",
      "start": Position {
        "character": 16,
        "line": 37,
      },
      "type": "StringLiteral",
      "value": "",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 38,
      },
      "raw": "0",
      "start": Position {
        "character": 13,
        "line": 38,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 47,
        "line": 43,
      },
      "raw": "1",
      "start": Position {
        "character": 46,
        "line": 43,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 44,
      },
      "raw": "1",
      "start": Position {
        "character": 25,
        "line": 44,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 48,
      },
      "raw": "null",
      "start": Position {
        "character": 16,
        "line": 48,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 10,
        "line": 56,
      },
      "raw": "0",
      "start": Position {
        "character": 9,
        "line": 56,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 57,
      },
      "raw": "10",
      "start": Position {
        "character": 7,
        "line": 57,
      },
      "type": "NumericLiteral",
      "value": 10,
    },
    ASTLiteral {
      "end": Position {
        "character": 22,
        "line": 62,
      },
      "raw": "1",
      "start": Position {
        "character": 21,
        "line": 62,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
  ],
  "namespaces": Set {
    "PasswordGenerator",
    "MAX_PASSWORD_LENGTH",
    "ALPHABETIC_CHARACTERS",
    "NUMBER_CHARACTERS",
    "ALPHA_NUMERIC",
    "upper",
    "constructor",
    "me",
    "buffer",
    "characters",
    "increaseBuffer",
    "i",
    "currentCharBuffer",
    "maxBufferSize",
    "len",
    "p",
    "push",
    "gen",
    "generatorCharacters",
    "password",
    "index",
    "pointer",
    "pgen",
    "max",
    "result",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts password-generator.src unsafe 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 23,
        "line": 1,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 23,
          "line": 1,
        },
        "fields": Array [],
        "start": Position {
          "character": 21,
          "line": 1,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 18,
          "line": 1,
        },
        "name": "PasswordGenerator",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 43,
        "line": 3,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 43,
          "line": 3,
        },
        "raw": "15",
        "start": Position {
          "character": 41,
          "line": 3,
        },
        "type": "NumericLiteral",
        "value": 15,
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 3,
          },
          "name": "PasswordGenerator",
          "start": Position {
            "character": 1,
            "line": 3,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 40,
          "line": 3,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 38,
            "line": 3,
          },
          "name": "MAX_PASSWORD_LENGTH",
          "start": Position {
            "character": 19,
            "line": 3,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 18,
          "line": 3,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 71,
        "line": 4,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 71,
          "line": 4,
        },
        "raw": "\\"qwertzuiopasdfghjklyxcvbnm\\"",
        "start": Position {
          "character": 43,
          "line": 4,
        },
        "type": "StringLiteral",
        "value": "qwertzuiopasdfghjklyxcvbnm",
      },
      "start": Position {
        "character": 1,
        "line": 4,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 4,
          },
          "name": "PasswordGenerator",
          "start": Position {
            "character": 1,
            "line": 4,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 42,
          "line": 4,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 40,
            "line": 4,
          },
          "name": "ALPHABETIC_CHARACTERS",
          "start": Position {
            "character": 19,
            "line": 4,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 18,
          "line": 4,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 51,
        "line": 5,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 51,
          "line": 5,
        },
        "raw": "\\"0123456789\\"",
        "start": Position {
          "character": 39,
          "line": 5,
        },
        "type": "StringLiteral",
        "value": "0123456789",
      },
      "start": Position {
        "character": 1,
        "line": 5,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 5,
          },
          "name": "PasswordGenerator",
          "start": Position {
            "character": 1,
            "line": 5,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 38,
          "line": 5,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 36,
            "line": 5,
          },
          "name": "NUMBER_CHARACTERS",
          "start": Position {
            "character": 19,
            "line": 5,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 18,
          "line": 5,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 160,
        "line": 6,
      },
      "init": ASTEvaluationExpression {
        "end": Position {
          "character": 160,
          "line": 6,
        },
        "left": ASTEvaluationExpression {
          "end": Position {
            "character": 124,
            "line": 6,
          },
          "left": ASTMemberExpression {
            "base": ASTIdentifier {
              "end": Position {
                "character": 52,
                "line": 6,
              },
              "name": "PasswordGenerator",
              "start": Position {
                "character": 35,
                "line": 6,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 76,
              "line": 6,
            },
            "identifier": ASTIdentifier {
              "end": Position {
                "character": 74,
                "line": 6,
              },
              "name": "ALPHABETIC_CHARACTERS",
              "start": Position {
                "character": 53,
                "line": 6,
              },
              "type": "Identifier",
            },
            "indexer": ".",
            "start": Position {
              "character": 52,
              "line": 6,
            },
            "type": "MemberExpression",
          },
          "operator": "+",
          "right": ASTMemberExpression {
            "base": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 94,
                  "line": 6,
                },
                "name": "PasswordGenerator",
                "start": Position {
                  "character": 77,
                  "line": 6,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 117,
                "line": 6,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 116,
                  "line": 6,
                },
                "name": "ALPHABETIC_CHARACTERS",
                "start": Position {
                  "character": 95,
                  "line": 6,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 94,
                "line": 6,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 124,
              "line": 6,
            },
            "identifier": ASTIdentifier {
              "end": Position {
                "character": 122,
                "line": 6,
              },
              "name": "upper",
              "start": Position {
                "character": 117,
                "line": 6,
              },
              "type": "Identifier",
            },
            "indexer": ".",
            "start": Position {
              "character": 116,
              "line": 6,
            },
            "type": "MemberExpression",
          },
          "start": Position {
            "character": 75,
            "line": 6,
          },
          "type": "BinaryExpression",
        },
        "operator": "+",
        "right": ASTMemberExpression {
          "base": ASTIdentifier {
            "end": Position {
              "character": 142,
              "line": 6,
            },
            "name": "PasswordGenerator",
            "start": Position {
              "character": 125,
              "line": 6,
            },
            "type": "Identifier",
          },
          "end": Position {
            "character": 160,
            "line": 6,
          },
          "identifier": ASTIdentifier {
            "end": Position {
              "character": 160,
              "line": 6,
            },
            "name": "NUMBER_CHARACTERS",
            "start": Position {
              "character": 143,
              "line": 6,
            },
            "type": "Identifier",
          },
          "indexer": ".",
          "start": Position {
            "character": 142,
            "line": 6,
          },
          "type": "MemberExpression",
        },
        "start": Position {
          "character": 75,
          "line": 6,
        },
        "type": "BinaryExpression",
      },
      "start": Position {
        "character": 1,
        "line": 6,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 6,
          },
          "name": "PasswordGenerator",
          "start": Position {
            "character": 1,
            "line": 6,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 34,
          "line": 6,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 32,
            "line": 6,
          },
          "name": "ALPHA_NUMERIC",
          "start": Position {
            "character": 19,
            "line": 6,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 18,
          "line": 6,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 13,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 9,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 9,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 9,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 9,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 9,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 9,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 20,
              "line": 10,
            },
            "init": ASTListConstructorExpression {
              "end": Position {
                "character": 20,
                "line": 10,
              },
              "fields": Array [
                ASTListValue {
                  "end": Position {
                    "character": 19,
                    "line": 10,
                  },
                  "start": Position {
                    "character": 18,
                    "line": 10,
                  },
                  "type": "ListValue",
                  "value": ASTLiteral {
                    "end": Position {
                      "character": 19,
                      "line": 10,
                    },
                    "raw": "0",
                    "start": Position {
                      "character": 18,
                      "line": 10,
                    },
                    "type": "NumericLiteral",
                    "value": 0,
                  },
                },
              ],
              "start": Position {
                "character": 17,
                "line": 10,
              },
              "type": "ListConstructorExpression",
            },
            "start": Position {
              "character": 5,
              "line": 10,
            },
            "type": "AssignmentStatement",
            "variable": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 7,
                  "line": 10,
                },
                "name": "me",
                "start": Position {
                  "character": 5,
                  "line": 10,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 16,
                "line": 10,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 14,
                  "line": 10,
                },
                "name": "buffer",
                "start": Position {
                  "character": 8,
                  "line": 10,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 7,
                "line": 10,
              },
              "type": "MemberExpression",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 37,
              "line": 11,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 23,
                  "line": 11,
                },
                "name": "me",
                "start": Position {
                  "character": 21,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 37,
                "line": 11,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 37,
                  "line": 11,
                },
                "name": "ALPHA_NUMERIC",
                "start": Position {
                  "character": 24,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 23,
                "line": 11,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 11,
            },
            "type": "AssignmentStatement",
            "variable": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 7,
                  "line": 11,
                },
                "name": "me",
                "start": Position {
                  "character": 5,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 20,
                "line": 11,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 18,
                  "line": 11,
                },
                "name": "characters",
                "start": Position {
                  "character": 8,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 7,
                "line": 11,
              },
              "type": "MemberExpression",
            },
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 12,
              },
              "name": "me",
              "start": Position {
                "character": 12,
                "line": 12,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 13,
            },
            "start": Position {
              "character": 5,
              "line": 12,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 13,
        },
        "namespaces": Set {},
        "parameters": Array [],
        "start": Position {
          "character": 33,
          "line": 8,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 8,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 8,
          },
          "name": "PasswordGenerator",
          "start": Position {
            "character": 1,
            "line": 8,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 32,
          "line": 8,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 30,
            "line": 8,
          },
          "name": "constructor",
          "start": Position {
            "character": 19,
            "line": 8,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 18,
          "line": 8,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 31,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 16,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 16,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 16,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 16,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 16,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 16,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 34,
              "line": 17,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 27,
                  "line": 17,
                },
                "name": "me",
                "start": Position {
                  "character": 25,
                  "line": 17,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 34,
                "line": 17,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 34,
                  "line": 17,
                },
                "name": "buffer",
                "start": Position {
                  "character": 28,
                  "line": 17,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 27,
                "line": 17,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 17,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 22,
                "line": 17,
              },
              "name": "currentCharBuffer",
              "start": Position {
                "character": 5,
                "line": 17,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 38,
              "line": 18,
            },
            "init": ASTMemberExpression {
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 23,
                    "line": 18,
                  },
                  "name": "me",
                  "start": Position {
                    "character": 21,
                    "line": 18,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 35,
                  "line": 18,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 34,
                    "line": 18,
                  },
                  "name": "characters",
                  "start": Position {
                    "character": 24,
                    "line": 18,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 23,
                  "line": 18,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 38,
                "line": 18,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 38,
                  "line": 18,
                },
                "name": "len",
                "start": Position {
                  "character": 35,
                  "line": 18,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 34,
                "line": 18,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 18,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 18,
                "line": 18,
              },
              "name": "maxBufferSize",
              "start": Position {
                "character": 5,
                "line": 18,
              },
              "type": "Identifier",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 54,
                      "line": 19,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 54,
                        "line": 19,
                      },
                      "left": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 46,
                            "line": 19,
                          },
                          "name": "currentCharBuffer",
                          "start": Position {
                            "character": 29,
                            "line": 19,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 52,
                          "line": 19,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 50,
                            "line": 19,
                          },
                          "name": "len",
                          "start": Position {
                            "character": 47,
                            "line": 19,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 46,
                          "line": 19,
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "-",
                      "right": ASTLiteral {
                        "end": Position {
                          "character": 54,
                          "line": 19,
                        },
                        "raw": "1",
                        "start": Position {
                          "character": 53,
                          "line": 19,
                        },
                        "type": "NumericLiteral",
                        "value": 1,
                      },
                      "start": Position {
                        "character": 51,
                        "line": 19,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 25,
                      "line": 19,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 26,
                        "line": 19,
                      },
                      "name": "i",
                      "start": Position {
                        "character": 25,
                        "line": 19,
                      },
                      "type": "Identifier",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 19,
                    "line": 19,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 10,
                      "line": 19,
                    },
                    "name": "i",
                    "start": Position {
                      "character": 9,
                      "line": 19,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 18,
                      "line": 19,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 14,
                      "line": 19,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 11,
                    "line": 19,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 54,
                  "line": 19,
                },
                "start": Position {
                  "character": 5,
                  "line": 19,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 54,
              "line": 19,
            },
            "start": Position {
              "character": 5,
              "line": 19,
            },
            "type": "IfShortcutStatement",
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 29,
              "line": 20,
            },
            "init": ASTIndexExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 26,
                  "line": 20,
                },
                "name": "currentCharBuffer",
                "start": Position {
                  "character": 9,
                  "line": 20,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 29,
                "line": 20,
              },
              "index": ASTIdentifier {
                "end": Position {
                  "character": 28,
                  "line": 20,
                },
                "name": "i",
                "start": Position {
                  "character": 27,
                  "line": 20,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 27,
                "line": 20,
              },
              "type": "IndexExpression",
            },
            "start": Position {
              "character": 5,
              "line": 20,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 6,
                "line": 20,
              },
              "name": "p",
              "start": Position {
                "character": 5,
                "line": 20,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 21,
            },
            "init": ASTEvaluationExpression {
              "end": Position {
                "character": 14,
                "line": 21,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 10,
                  "line": 21,
                },
                "name": "p",
                "start": Position {
                  "character": 9,
                  "line": 21,
                },
                "type": "Identifier",
              },
              "operator": "+",
              "right": ASTLiteral {
                "end": Position {
                  "character": 14,
                  "line": 21,
                },
                "raw": "1",
                "start": Position {
                  "character": 13,
                  "line": 21,
                },
                "type": "NumericLiteral",
                "value": 1,
              },
              "start": Position {
                "character": 11,
                "line": 21,
              },
              "type": "BinaryExpression",
            },
            "start": Position {
              "character": 5,
              "line": 21,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 6,
                "line": 21,
              },
              "name": "p",
              "start": Position {
                "character": 5,
                "line": 21,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 29,
              "line": 22,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 29,
                "line": 22,
              },
              "name": "p",
              "start": Position {
                "character": 28,
                "line": 22,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 22,
            },
            "type": "AssignmentStatement",
            "variable": ASTIndexExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 22,
                  "line": 22,
                },
                "name": "currentCharBuffer",
                "start": Position {
                  "character": 5,
                  "line": 22,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 27,
                "line": 22,
              },
              "index": ASTIdentifier {
                "end": Position {
                  "character": 24,
                  "line": 22,
                },
                "name": "i",
                "start": Position {
                  "character": 23,
                  "line": 22,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 23,
                "line": 22,
              },
              "type": "IndexExpression",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 33,
                      "line": 24,
                    },
                    "init": ASTLiteral {
                      "end": Position {
                        "character": 33,
                        "line": 24,
                      },
                      "raw": "0",
                      "start": Position {
                        "character": 32,
                        "line": 24,
                      },
                      "type": "NumericLiteral",
                      "value": 0,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 24,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 26,
                          "line": 24,
                        },
                        "name": "currentCharBuffer",
                        "start": Position {
                          "character": 9,
                          "line": 24,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 31,
                        "line": 24,
                      },
                      "index": ASTIdentifier {
                        "end": Position {
                          "character": 28,
                          "line": 24,
                        },
                        "name": "i",
                        "start": Position {
                          "character": 27,
                          "line": 24,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 27,
                        "line": 24,
                      },
                      "type": "IndexExpression",
                    },
                  },
                  ASTIfStatement {
                    "clauses": Array [
                      ASTIfClause {
                        "body": Array [
                          ASTCallStatement {
                            "end": Position {
                              "character": 38,
                              "line": 26,
                            },
                            "expression": ASTCallExpression {
                              "arguments": Array [
                                ASTLiteral {
                                  "end": Position {
                                    "character": 37,
                                    "line": 26,
                                  },
                                  "raw": "0",
                                  "start": Position {
                                    "character": 36,
                                    "line": 26,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 0,
                                },
                              ],
                              "base": ASTMemberExpression {
                                "base": ASTIdentifier {
                                  "end": Position {
                                    "character": 30,
                                    "line": 26,
                                  },
                                  "name": "currentCharBuffer",
                                  "start": Position {
                                    "character": 13,
                                    "line": 26,
                                  },
                                  "type": "Identifier",
                                },
                                "end": Position {
                                  "character": 36,
                                  "line": 26,
                                },
                                "identifier": ASTIdentifier {
                                  "end": Position {
                                    "character": 35,
                                    "line": 26,
                                  },
                                  "name": "push",
                                  "start": Position {
                                    "character": 31,
                                    "line": 26,
                                  },
                                  "type": "Identifier",
                                },
                                "indexer": ".",
                                "start": Position {
                                  "character": 30,
                                  "line": 26,
                                },
                                "type": "MemberExpression",
                              },
                              "end": Position {
                                "character": 38,
                                "line": 26,
                              },
                              "start": Position {
                                "character": 35,
                                "line": 26,
                              },
                              "type": "CallExpression",
                            },
                            "start": Position {
                              "character": 13,
                              "line": 26,
                            },
                            "type": "CallStatement",
                          },
                        ],
                        "condition": ASTEvaluationExpression {
                          "end": Position {
                            "character": 20,
                            "line": 25,
                          },
                          "left": ASTIdentifier {
                            "end": Position {
                              "character": 14,
                              "line": 25,
                            },
                            "name": "i",
                            "start": Position {
                              "character": 13,
                              "line": 25,
                            },
                            "type": "Identifier",
                          },
                          "operator": "==",
                          "right": ASTLiteral {
                            "end": Position {
                              "character": 19,
                              "line": 25,
                            },
                            "raw": "0",
                            "start": Position {
                              "character": 18,
                              "line": 25,
                            },
                            "type": "NumericLiteral",
                            "value": 0,
                          },
                          "start": Position {
                            "character": 15,
                            "line": 25,
                          },
                          "type": "BinaryExpression",
                        },
                        "end": Position {
                          "character": 13,
                          "line": 27,
                        },
                        "start": Position {
                          "character": 9,
                          "line": 25,
                        },
                        "type": "IfClause",
                      },
                      ASTElseClause {
                        "body": Array [
                          ASTCallStatement {
                            "end": Position {
                              "character": 37,
                              "line": 28,
                            },
                            "expression": ASTCallExpression {
                              "arguments": Array [
                                ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 37,
                                    "line": 28,
                                  },
                                  "left": ASTIdentifier {
                                    "end": Position {
                                      "character": 32,
                                      "line": 28,
                                    },
                                    "name": "i",
                                    "start": Position {
                                      "character": 31,
                                      "line": 28,
                                    },
                                    "type": "Identifier",
                                  },
                                  "operator": "-",
                                  "right": ASTLiteral {
                                    "end": Position {
                                      "character": 36,
                                      "line": 28,
                                    },
                                    "raw": "1",
                                    "start": Position {
                                      "character": 35,
                                      "line": 28,
                                    },
                                    "type": "NumericLiteral",
                                    "value": 1,
                                  },
                                  "start": Position {
                                    "character": 33,
                                    "line": 28,
                                  },
                                  "type": "BinaryExpression",
                                },
                              ],
                              "base": ASTMemberExpression {
                                "base": ASTIdentifier {
                                  "end": Position {
                                    "character": 15,
                                    "line": 28,
                                  },
                                  "name": "me",
                                  "start": Position {
                                    "character": 13,
                                    "line": 28,
                                  },
                                  "type": "Identifier",
                                },
                                "end": Position {
                                  "character": 31,
                                  "line": 28,
                                },
                                "identifier": ASTIdentifier {
                                  "end": Position {
                                    "character": 30,
                                    "line": 28,
                                  },
                                  "name": "increaseBuffer",
                                  "start": Position {
                                    "character": 16,
                                    "line": 28,
                                  },
                                  "type": "Identifier",
                                },
                                "indexer": ".",
                                "start": Position {
                                  "character": 15,
                                  "line": 28,
                                },
                                "type": "MemberExpression",
                              },
                              "end": Position {
                                "character": 37,
                                "line": 28,
                              },
                              "start": Position {
                                "character": 30,
                                "line": 28,
                              },
                              "type": "CallExpression",
                            },
                            "start": Position {
                              "character": 13,
                              "line": 28,
                            },
                            "type": "CallStatement",
                          },
                        ],
                        "end": Position {
                          "character": 15,
                          "line": 29,
                        },
                        "start": Position {
                          "character": 13,
                          "line": 27,
                        },
                        "type": "ElseClause",
                      },
                    ],
                    "end": Position {
                      "character": 15,
                      "line": 29,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 25,
                    },
                    "type": "IfStatement",
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 28,
                    "line": 23,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 10,
                      "line": 23,
                    },
                    "name": "p",
                    "start": Position {
                      "character": 9,
                      "line": 23,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTIdentifier {
                    "end": Position {
                      "character": 27,
                      "line": 23,
                    },
                    "name": "maxBufferSize",
                    "start": Position {
                      "character": 14,
                      "line": 23,
                    },
                    "type": "Identifier",
                  },
                  "start": Position {
                    "character": 11,
                    "line": 23,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 11,
                  "line": 30,
                },
                "start": Position {
                  "character": 5,
                  "line": 23,
                },
                "type": "IfClause",
              },
            ],
            "end": Position {
              "character": 11,
              "line": 30,
            },
            "start": Position {
              "character": 5,
              "line": 23,
            },
            "type": "IfStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 31,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 46,
              "line": 15,
            },
            "name": "i",
            "start": Position {
              "character": 45,
              "line": 15,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 36,
          "line": 15,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 15,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 15,
          },
          "name": "PasswordGenerator",
          "start": Position {
            "character": 1,
            "line": 15,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 35,
          "line": 15,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 33,
            "line": 15,
          },
          "name": "increaseBuffer",
          "start": Position {
            "character": 19,
            "line": 15,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 18,
          "line": 15,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 52,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 34,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 34,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 34,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 34,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 34,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 34,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 34,
              "line": 35,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 27,
                  "line": 35,
                },
                "name": "me",
                "start": Position {
                  "character": 25,
                  "line": 35,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 34,
                "line": 35,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 34,
                  "line": 35,
                },
                "name": "buffer",
                "start": Position {
                  "character": 28,
                  "line": 35,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 27,
                "line": 35,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 35,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 22,
                "line": 35,
              },
              "name": "currentCharBuffer",
              "start": Position {
                "character": 5,
                "line": 35,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 40,
              "line": 36,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 29,
                  "line": 36,
                },
                "name": "me",
                "start": Position {
                  "character": 27,
                  "line": 36,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 40,
                "line": 36,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 40,
                  "line": 36,
                },
                "name": "characters",
                "start": Position {
                  "character": 30,
                  "line": 36,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 29,
                "line": 36,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 36,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 24,
                "line": 36,
              },
              "name": "generatorCharacters",
              "start": Position {
                "character": 5,
                "line": 36,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 18,
              "line": 37,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 18,
                "line": 37,
              },
              "raw": "\\"\\"",
              "start": Position {
                "character": 16,
                "line": 37,
              },
              "type": "StringLiteral",
              "value": "",
            },
            "start": Position {
              "character": 5,
              "line": 37,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 37,
              },
              "name": "password",
              "start": Position {
                "character": 5,
                "line": 37,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 38,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 14,
                "line": 38,
              },
              "raw": "0",
              "start": Position {
                "character": 13,
                "line": 38,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 38,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 38,
              },
              "name": "index",
              "start": Position {
                "character": 5,
                "line": 38,
              },
              "type": "Identifier",
            },
          },
          ASTWhileStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 43,
                  "line": 41,
                },
                "init": ASTIndexExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 36,
                      "line": 41,
                    },
                    "name": "currentCharBuffer",
                    "start": Position {
                      "character": 19,
                      "line": 41,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 43,
                    "line": 41,
                  },
                  "index": ASTIdentifier {
                    "end": Position {
                      "character": 42,
                      "line": 41,
                    },
                    "name": "index",
                    "start": Position {
                      "character": 37,
                      "line": 41,
                    },
                    "type": "Identifier",
                  },
                  "start": Position {
                    "character": 37,
                    "line": 41,
                  },
                  "type": "IndexExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 41,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 16,
                    "line": 41,
                  },
                  "name": "pointer",
                  "start": Position {
                    "character": 9,
                    "line": 41,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 59,
                  "line": 42,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 59,
                    "line": 42,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 28,
                      "line": 42,
                    },
                    "name": "password",
                    "start": Position {
                      "character": 20,
                      "line": 42,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTIndexExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 50,
                        "line": 42,
                      },
                      "name": "generatorCharacters",
                      "start": Position {
                        "character": 31,
                        "line": 42,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 59,
                      "line": 42,
                    },
                    "index": ASTIdentifier {
                      "end": Position {
                        "character": 58,
                        "line": 42,
                      },
                      "name": "pointer",
                      "start": Position {
                        "character": 51,
                        "line": 42,
                      },
                      "type": "Identifier",
                    },
                    "start": Position {
                      "character": 51,
                      "line": 42,
                    },
                    "type": "IndexExpression",
                  },
                  "start": Position {
                    "character": 29,
                    "line": 42,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 42,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 17,
                    "line": 42,
                  },
                  "name": "password",
                  "start": Position {
                    "character": 9,
                    "line": 42,
                  },
                  "type": "Identifier",
                },
              },
              ASTIfStatement {
                "clauses": Array [
                  ASTIfClause {
                    "body": Array [
                      ASTCallStatement {
                        "end": Position {
                          "character": 75,
                          "line": 43,
                        },
                        "expression": ASTCallExpression {
                          "arguments": Array [],
                          "base": ASTMemberExpression {
                            "base": ASTIdentifier {
                              "end": Position {
                                "character": 58,
                                "line": 43,
                              },
                              "name": "self",
                              "start": Position {
                                "character": 54,
                                "line": 43,
                              },
                              "type": "Identifier",
                            },
                            "end": Position {
                              "character": 74,
                              "line": 43,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 73,
                                "line": 43,
                              },
                              "name": "increaseBuffer",
                              "start": Position {
                                "character": 59,
                                "line": 43,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 58,
                              "line": 43,
                            },
                            "type": "MemberExpression",
                          },
                          "end": Position {
                            "character": 75,
                            "line": 43,
                          },
                          "start": Position {
                            "character": 73,
                            "line": 43,
                          },
                          "type": "CallExpression",
                        },
                        "start": Position {
                          "character": 54,
                          "line": 43,
                        },
                        "type": "CallStatement",
                      },
                    ],
                    "condition": ASTEvaluationExpression {
                      "end": Position {
                        "character": 48,
                        "line": 43,
                      },
                      "left": ASTIdentifier {
                        "end": Position {
                          "character": 18,
                          "line": 43,
                        },
                        "name": "index",
                        "start": Position {
                          "character": 13,
                          "line": 43,
                        },
                        "type": "Identifier",
                      },
                      "operator": "==",
                      "right": ASTEvaluationExpression {
                        "end": Position {
                          "character": 48,
                          "line": 43,
                        },
                        "left": ASTMemberExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 39,
                              "line": 43,
                            },
                            "name": "currentCharBuffer",
                            "start": Position {
                              "character": 22,
                              "line": 43,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 45,
                            "line": 43,
                          },
                          "identifier": ASTIdentifier {
                            "end": Position {
                              "character": 43,
                              "line": 43,
                            },
                            "name": "len",
                            "start": Position {
                              "character": 40,
                              "line": 43,
                            },
                            "type": "Identifier",
                          },
                          "indexer": ".",
                          "start": Position {
                            "character": 39,
                            "line": 43,
                          },
                          "type": "MemberExpression",
                        },
                        "operator": "-",
                        "right": ASTLiteral {
                          "end": Position {
                            "character": 47,
                            "line": 43,
                          },
                          "raw": "1",
                          "start": Position {
                            "character": 46,
                            "line": 43,
                          },
                          "type": "NumericLiteral",
                          "value": 1,
                        },
                        "start": Position {
                          "character": 44,
                          "line": 43,
                        },
                        "type": "BinaryExpression",
                      },
                      "start": Position {
                        "character": 19,
                        "line": 43,
                      },
                      "type": "BinaryExpression",
                    },
                    "end": Position {
                      "character": 75,
                      "line": 43,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 43,
                    },
                    "type": "IfShortcutClause",
                  },
                ],
                "end": Position {
                  "character": 75,
                  "line": 43,
                },
                "start": Position {
                  "character": 9,
                  "line": 43,
                },
                "type": "IfShortcutStatement",
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 26,
                  "line": 44,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 26,
                    "line": 44,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 22,
                      "line": 44,
                    },
                    "name": "index",
                    "start": Position {
                      "character": 17,
                      "line": 44,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 26,
                      "line": 44,
                    },
                    "raw": "1",
                    "start": Position {
                      "character": 25,
                      "line": 44,
                    },
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                  "start": Position {
                    "character": 23,
                    "line": 44,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 44,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 14,
                    "line": 44,
                  },
                  "name": "index",
                  "start": Position {
                    "character": 9,
                    "line": 44,
                  },
                  "type": "Identifier",
                },
              },
            ],
            "condition": ASTEvaluationExpression {
              "end": Position {
                "character": 40,
                "line": 40,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 16,
                  "line": 40,
                },
                "name": "index",
                "start": Position {
                  "character": 11,
                  "line": 40,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 36,
                    "line": 40,
                  },
                  "name": "currentCharBuffer",
                  "start": Position {
                    "character": 19,
                    "line": 40,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 40,
                  "line": 40,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 40,
                    "line": 40,
                  },
                  "name": "len",
                  "start": Position {
                    "character": 37,
                    "line": 40,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 36,
                  "line": 40,
                },
                "type": "MemberExpression",
              },
              "start": Position {
                "character": 17,
                "line": 40,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 14,
              "line": 45,
            },
            "start": Position {
              "character": 5,
              "line": 40,
            },
            "type": "WhileStatement",
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTReturnStatement {
                    "argument": ASTLiteral {
                      "end": Position {
                        "character": 20,
                        "line": 48,
                      },
                      "raw": "null",
                      "start": Position {
                        "character": 16,
                        "line": 48,
                      },
                      "type": "NilLiteral",
                      "value": null,
                    },
                    "end": Position {
                      "character": 11,
                      "line": 49,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 48,
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 56,
                    "line": 47,
                  },
                  "left": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 26,
                        "line": 47,
                      },
                      "name": "currentCharBuffer",
                      "start": Position {
                        "character": 9,
                        "line": 47,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 32,
                      "line": 47,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 30,
                        "line": 47,
                      },
                      "name": "len",
                      "start": Position {
                        "character": 27,
                        "line": 47,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 26,
                      "line": 47,
                    },
                    "type": "MemberExpression",
                  },
                  "operator": ">",
                  "right": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 35,
                        "line": 47,
                      },
                      "name": "me",
                      "start": Position {
                        "character": 33,
                        "line": 47,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 56,
                      "line": 47,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 55,
                        "line": 47,
                      },
                      "name": "MAX_PASSWORD_LENGTH",
                      "start": Position {
                        "character": 36,
                        "line": 47,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 35,
                      "line": 47,
                    },
                    "type": "MemberExpression",
                  },
                  "start": Position {
                    "character": 31,
                    "line": 47,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 11,
                  "line": 49,
                },
                "start": Position {
                  "character": 5,
                  "line": 47,
                },
                "type": "IfClause",
              },
            ],
            "end": Position {
              "character": 11,
              "line": 49,
            },
            "start": Position {
              "character": 5,
              "line": 47,
            },
            "type": "IfStatement",
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 20,
                "line": 51,
              },
              "name": "password",
              "start": Position {
                "character": 12,
                "line": 51,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 52,
            },
            "start": Position {
              "character": 5,
              "line": 51,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 52,
        },
        "namespaces": Set {},
        "parameters": Array [],
        "start": Position {
          "character": 25,
          "line": 33,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 33,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 33,
          },
          "name": "PasswordGenerator",
          "start": Position {
            "character": 1,
            "line": 33,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 24,
          "line": 33,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 22,
            "line": 33,
          },
          "name": "gen",
          "start": Position {
            "character": 19,
            "line": 33,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 18,
          "line": 33,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 45,
        "line": 54,
      },
      "init": ASTCallExpression {
        "arguments": Array [],
        "base": ASTMemberExpression {
          "base": ASTUnaryExpression {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 30,
                "line": 54,
              },
              "name": "PasswordGenerator",
              "start": Position {
                "character": 13,
                "line": 54,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 31,
              "line": 54,
            },
            "operator": "new",
            "start": Position {
              "character": 9,
              "line": 54,
            },
            "type": "UnaryExpression",
          },
          "end": Position {
            "character": 44,
            "line": 54,
          },
          "identifier": ASTIdentifier {
            "end": Position {
              "character": 43,
              "line": 54,
            },
            "name": "constructor",
            "start": Position {
              "character": 32,
              "line": 54,
            },
            "type": "Identifier",
          },
          "indexer": ".",
          "start": Position {
            "character": 31,
            "line": 54,
          },
          "type": "MemberExpression",
        },
        "end": Position {
          "character": 45,
          "line": 54,
        },
        "start": Position {
          "character": 43,
          "line": 54,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 54,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 5,
          "line": 54,
        },
        "name": "pgen",
        "start": Position {
          "character": 1,
          "line": 54,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 10,
        "line": 56,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 10,
          "line": 56,
        },
        "raw": "0",
        "start": Position {
          "character": 9,
          "line": 56,
        },
        "type": "NumericLiteral",
        "value": 0,
      },
      "start": Position {
        "character": 1,
        "line": 56,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 6,
          "line": 56,
        },
        "name": "index",
        "start": Position {
          "character": 1,
          "line": 56,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 9,
        "line": 57,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 9,
          "line": 57,
        },
        "raw": "10",
        "start": Position {
          "character": 7,
          "line": 57,
        },
        "type": "NumericLiteral",
        "value": 10,
      },
      "start": Position {
        "character": 1,
        "line": 57,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 4,
          "line": 57,
        },
        "name": "max",
        "start": Position {
          "character": 1,
          "line": 57,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 12,
        "line": 58,
      },
      "init": ASTListConstructorExpression {
        "end": Position {
          "character": 12,
          "line": 58,
        },
        "fields": Array [],
        "start": Position {
          "character": 10,
          "line": 58,
        },
        "type": "ListConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 58,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 58,
        },
        "name": "result",
        "start": Position {
          "character": 1,
          "line": 58,
        },
        "type": "Identifier",
      },
    },
    ASTWhileStatement {
      "body": Array [
        ASTCallStatement {
          "end": Position {
            "character": 28,
            "line": 61,
          },
          "expression": ASTCallExpression {
            "arguments": Array [
              ASTCallExpression {
                "arguments": Array [],
                "base": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 21,
                      "line": 61,
                    },
                    "name": "pgen",
                    "start": Position {
                      "character": 17,
                      "line": 61,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 26,
                    "line": 61,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 25,
                      "line": 61,
                    },
                    "name": "gen",
                    "start": Position {
                      "character": 22,
                      "line": 61,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 21,
                    "line": 61,
                  },
                  "type": "MemberExpression",
                },
                "end": Position {
                  "character": 28,
                  "line": 61,
                },
                "start": Position {
                  "character": 25,
                  "line": 61,
                },
                "type": "CallExpression",
              },
            ],
            "base": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 11,
                  "line": 61,
                },
                "name": "result",
                "start": Position {
                  "character": 5,
                  "line": 61,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 17,
                "line": 61,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 16,
                  "line": 61,
                },
                "name": "push",
                "start": Position {
                  "character": 12,
                  "line": 61,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 11,
                "line": 61,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 28,
              "line": 61,
            },
            "start": Position {
              "character": 16,
              "line": 61,
            },
            "type": "CallExpression",
          },
          "start": Position {
            "character": 5,
            "line": 61,
          },
          "type": "CallStatement",
        },
        ASTAssignmentStatement {
          "end": Position {
            "character": 22,
            "line": 62,
          },
          "init": ASTEvaluationExpression {
            "end": Position {
              "character": 22,
              "line": 62,
            },
            "left": ASTIdentifier {
              "end": Position {
                "character": 18,
                "line": 62,
              },
              "name": "index",
              "start": Position {
                "character": 13,
                "line": 62,
              },
              "type": "Identifier",
            },
            "operator": "+",
            "right": ASTLiteral {
              "end": Position {
                "character": 22,
                "line": 62,
              },
              "raw": "1",
              "start": Position {
                "character": 21,
                "line": 62,
              },
              "type": "NumericLiteral",
              "value": 1,
            },
            "start": Position {
              "character": 19,
              "line": 62,
            },
            "type": "BinaryExpression",
          },
          "start": Position {
            "character": 5,
            "line": 62,
          },
          "type": "AssignmentStatement",
          "variable": ASTIdentifier {
            "end": Position {
              "character": 10,
              "line": 62,
            },
            "name": "index",
            "start": Position {
              "character": 5,
              "line": 62,
            },
            "type": "Identifier",
          },
        },
      ],
      "condition": ASTEvaluationExpression {
        "end": Position {
          "character": 20,
          "line": 60,
        },
        "left": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 60,
          },
          "name": "index",
          "start": Position {
            "character": 8,
            "line": 60,
          },
          "type": "Identifier",
        },
        "operator": "<",
        "right": ASTIdentifier {
          "end": Position {
            "character": 19,
            "line": 60,
          },
          "name": "max",
          "start": Position {
            "character": 16,
            "line": 60,
          },
          "type": "Identifier",
        },
        "start": Position {
          "character": 14,
          "line": 60,
        },
        "type": "BinaryExpression",
      },
      "end": Position {
        "character": 10,
        "line": 63,
      },
      "start": Position {
        "character": 1,
        "line": 60,
      },
      "type": "WhileStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 14,
        "line": 65,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 13,
              "line": 65,
            },
            "name": "result",
            "start": Position {
              "character": 7,
              "line": 65,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 65,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 65,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 14,
          "line": 65,
        },
        "start": Position {
          "character": 6,
          "line": 65,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 65,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 14,
    "line": 65,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 43,
        "line": 3,
      },
      "raw": "15",
      "start": Position {
        "character": 41,
        "line": 3,
      },
      "type": "NumericLiteral",
      "value": 15,
    },
    ASTLiteral {
      "end": Position {
        "character": 71,
        "line": 4,
      },
      "raw": "\\"qwertzuiopasdfghjklyxcvbnm\\"",
      "start": Position {
        "character": 43,
        "line": 4,
      },
      "type": "StringLiteral",
      "value": "qwertzuiopasdfghjklyxcvbnm",
    },
    ASTLiteral {
      "end": Position {
        "character": 51,
        "line": 5,
      },
      "raw": "\\"0123456789\\"",
      "start": Position {
        "character": 39,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "0123456789",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 10,
      },
      "raw": "0",
      "start": Position {
        "character": 18,
        "line": 10,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 19,
      },
      "raw": "null",
      "start": Position {
        "character": 14,
        "line": 19,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 54,
        "line": 19,
      },
      "raw": "1",
      "start": Position {
        "character": 53,
        "line": 19,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 21,
      },
      "raw": "1",
      "start": Position {
        "character": 13,
        "line": 21,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 33,
        "line": 24,
      },
      "raw": "0",
      "start": Position {
        "character": 32,
        "line": 24,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 25,
      },
      "raw": "0",
      "start": Position {
        "character": 18,
        "line": 25,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 26,
      },
      "raw": "0",
      "start": Position {
        "character": 36,
        "line": 26,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 36,
        "line": 28,
      },
      "raw": "1",
      "start": Position {
        "character": 35,
        "line": 28,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 37,
      },
      "raw": "\\"\\"",
      "start": Position {
        "character": 16,
        "line": 37,
      },
      "type": "StringLiteral",
      "value": "",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 38,
      },
      "raw": "0",
      "start": Position {
        "character": 13,
        "line": 38,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 47,
        "line": 43,
      },
      "raw": "1",
      "start": Position {
        "character": 46,
        "line": 43,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 44,
      },
      "raw": "1",
      "start": Position {
        "character": 25,
        "line": 44,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 48,
      },
      "raw": "null",
      "start": Position {
        "character": 16,
        "line": 48,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 10,
        "line": 56,
      },
      "raw": "0",
      "start": Position {
        "character": 9,
        "line": 56,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 57,
      },
      "raw": "10",
      "start": Position {
        "character": 7,
        "line": 57,
      },
      "type": "NumericLiteral",
      "value": 10,
    },
    ASTLiteral {
      "end": Position {
        "character": 22,
        "line": 62,
      },
      "raw": "1",
      "start": Position {
        "character": 21,
        "line": 62,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
  ],
  "namespaces": Set {
    "PasswordGenerator",
    "MAX_PASSWORD_LENGTH",
    "ALPHABETIC_CHARACTERS",
    "NUMBER_CHARACTERS",
    "ALPHA_NUMERIC",
    "upper",
    "constructor",
    "me",
    "buffer",
    "characters",
    "increaseBuffer",
    "i",
    "currentCharBuffer",
    "maxBufferSize",
    "len",
    "p",
    "push",
    "gen",
    "generatorCharacters",
    "password",
    "index",
    "pointer",
    "pgen",
    "max",
    "result",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts pseudo-crypto.src 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 12,
        "line": 1,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 12,
          "line": 1,
        },
        "fields": Array [],
        "start": Position {
          "character": 10,
          "line": 1,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 1,
        },
        "name": "String",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 6,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 19,
              "line": 4,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 19,
                "line": 4,
              },
              "name": "str",
              "start": Position {
                "character": 16,
                "line": 4,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 4,
            },
            "type": "AssignmentStatement",
            "variable": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 9,
                  "line": 4,
                },
                "name": "self",
                "start": Position {
                  "character": 5,
                  "line": 4,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 15,
                "line": 4,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 13,
                  "line": 4,
                },
                "name": "str",
                "start": Position {
                  "character": 10,
                  "line": 4,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 9,
                "line": 4,
              },
              "type": "MemberExpression",
            },
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 16,
                "line": 5,
              },
              "name": "self",
              "start": Position {
                "character": 12,
                "line": 5,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 6,
            },
            "start": Position {
              "character": 5,
              "line": 5,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 6,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 34,
              "line": 3,
            },
            "name": "str",
            "start": Position {
              "character": 31,
              "line": 3,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 22,
          "line": 3,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 3,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 3,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 21,
          "line": 3,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 19,
            "line": 3,
          },
          "name": "constructor",
          "start": Position {
            "character": 8,
            "line": 3,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 3,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 19,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 22,
              "line": 9,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 18,
                  "line": 9,
                },
                "name": "self",
                "start": Position {
                  "character": 14,
                  "line": 9,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 22,
                "line": 9,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 22,
                  "line": 9,
                },
                "name": "str",
                "start": Position {
                  "character": 19,
                  "line": 9,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 18,
                "line": 9,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 9,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 9,
              },
              "name": "result",
              "start": Position {
                "character": 5,
                "line": 9,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 10,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 14,
                "line": 10,
              },
              "raw": "0",
              "start": Position {
                "character": 13,
                "line": 10,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 10,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 10,
              },
              "name": "index",
              "start": Position {
                "character": 5,
                "line": 10,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 26,
              "line": 11,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 22,
                  "line": 11,
                },
                "name": "values",
                "start": Position {
                  "character": 16,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 26,
                "line": 11,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 26,
                  "line": 11,
                },
                "name": "len",
                "start": Position {
                  "character": 23,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 22,
                "line": 11,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 11,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 11,
              },
              "name": "maxIndex",
              "start": Position {
                "character": 5,
                "line": 11,
              },
              "type": "Identifier",
            },
          },
          ASTWhileStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 58,
                  "line": 14,
                },
                "init": ASTCallExpression {
                  "arguments": Array [
                    ASTEvaluationExpression {
                      "end": Position {
                        "character": 43,
                        "line": 14,
                      },
                      "left": ASTLiteral {
                        "end": Position {
                          "character": 36,
                          "line": 14,
                        },
                        "raw": "\\"$\\"",
                        "start": Position {
                          "character": 33,
                          "line": 14,
                        },
                        "type": "StringLiteral",
                        "value": "$",
                      },
                      "operator": "+",
                      "right": ASTIdentifier {
                        "end": Position {
                          "character": 42,
                          "line": 14,
                        },
                        "name": "index",
                        "start": Position {
                          "character": 37,
                          "line": 14,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 36,
                        "line": 14,
                      },
                      "type": "BinaryExpression",
                    },
                    ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 50,
                          "line": 14,
                        },
                        "name": "values",
                        "start": Position {
                          "character": 44,
                          "line": 14,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 58,
                        "line": 14,
                      },
                      "index": ASTIdentifier {
                        "end": Position {
                          "character": 56,
                          "line": 14,
                        },
                        "name": "index",
                        "start": Position {
                          "character": 51,
                          "line": 14,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 51,
                        "line": 14,
                      },
                      "type": "IndexExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 24,
                        "line": 14,
                      },
                      "name": "result",
                      "start": Position {
                        "character": 18,
                        "line": 14,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 33,
                      "line": 14,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 32,
                        "line": 14,
                      },
                      "name": "replace",
                      "start": Position {
                        "character": 25,
                        "line": 14,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 24,
                      "line": 14,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 58,
                    "line": 14,
                  },
                  "start": Position {
                    "character": 32,
                    "line": 14,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 14,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 15,
                    "line": 14,
                  },
                  "name": "result",
                  "start": Position {
                    "character": 9,
                    "line": 14,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 26,
                  "line": 15,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 26,
                    "line": 15,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 22,
                      "line": 15,
                    },
                    "name": "index",
                    "start": Position {
                      "character": 17,
                      "line": 15,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 26,
                      "line": 15,
                    },
                    "raw": "1",
                    "start": Position {
                      "character": 25,
                      "line": 15,
                    },
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                  "start": Position {
                    "character": 23,
                    "line": 15,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 15,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 14,
                    "line": 15,
                  },
                  "name": "index",
                  "start": Position {
                    "character": 9,
                    "line": 15,
                  },
                  "type": "Identifier",
                },
              },
            ],
            "condition": ASTEvaluationExpression {
              "end": Position {
                "character": 27,
                "line": 13,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 16,
                  "line": 13,
                },
                "name": "index",
                "start": Position {
                  "character": 11,
                  "line": 13,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": ASTIdentifier {
                "end": Position {
                  "character": 27,
                  "line": 13,
                },
                "name": "maxIndex",
                "start": Position {
                  "character": 19,
                  "line": 13,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 17,
                "line": 13,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 14,
              "line": 16,
            },
            "start": Position {
              "character": 5,
              "line": 13,
            },
            "type": "WhileStatement",
          },
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 41,
                    "line": 18,
                  },
                  "name": "result",
                  "start": Position {
                    "character": 35,
                    "line": 18,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTUnaryExpression {
                  "argument": ASTIdentifier {
                    "end": Position {
                      "character": 21,
                      "line": 18,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 17,
                      "line": 18,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 22,
                    "line": 18,
                  },
                  "operator": "new",
                  "start": Position {
                    "character": 13,
                    "line": 18,
                  },
                  "type": "UnaryExpression",
                },
                "end": Position {
                  "character": 35,
                  "line": 18,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 34,
                    "line": 18,
                  },
                  "name": "constructor",
                  "start": Position {
                    "character": 23,
                    "line": 18,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 22,
                  "line": 18,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 42,
                "line": 18,
              },
              "start": Position {
                "character": 34,
                "line": 18,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 19,
            },
            "start": Position {
              "character": 5,
              "line": 18,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 19,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 31,
              "line": 8,
            },
            "name": "values",
            "start": Position {
              "character": 25,
              "line": 8,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 16,
          "line": 8,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 8,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 8,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 8,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 15,
          "line": 8,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 8,
          },
          "name": "parse",
          "start": Position {
            "character": 8,
            "line": 8,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 8,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 23,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTEvaluationExpression {
              "end": Position {
                "character": 38,
                "line": 22,
              },
              "left": ASTCallExpression {
                "arguments": Array [
                  ASTIdentifier {
                    "end": Position {
                      "character": 32,
                      "line": 22,
                    },
                    "name": "str",
                    "start": Position {
                      "character": 29,
                      "line": 22,
                    },
                    "type": "Identifier",
                  },
                ],
                "base": ASTMemberExpression {
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 16,
                        "line": 22,
                      },
                      "name": "self",
                      "start": Position {
                        "character": 12,
                        "line": 22,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 21,
                      "line": 22,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 22,
                      },
                      "name": "str",
                      "start": Position {
                        "character": 17,
                        "line": 22,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 16,
                      "line": 22,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 29,
                    "line": 22,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 28,
                      "line": 22,
                    },
                    "name": "indexOf",
                    "start": Position {
                      "character": 21,
                      "line": 22,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 20,
                    "line": 22,
                  },
                  "type": "MemberExpression",
                },
                "end": Position {
                  "character": 36,
                  "line": 22,
                },
                "start": Position {
                  "character": 28,
                  "line": 22,
                },
                "type": "CallExpression",
              },
              "operator": "==",
              "right": ASTLiteral {
                "end": Position {
                  "character": 38,
                  "line": 22,
                },
                "raw": "0",
                "start": Position {
                  "character": 37,
                  "line": 22,
                },
                "type": "NumericLiteral",
                "value": 0,
              },
              "start": Position {
                "character": 34,
                "line": 22,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 13,
              "line": 23,
            },
            "start": Position {
              "character": 5,
              "line": 22,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 23,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 33,
              "line": 21,
            },
            "name": "str",
            "start": Position {
              "character": 30,
              "line": 21,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 21,
          "line": 21,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 21,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 21,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 21,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 20,
          "line": 21,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 21,
          },
          "name": "startsWith",
          "start": Position {
            "character": 8,
            "line": 21,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 21,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 27,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTCallExpression {
                  "arguments": Array [
                    ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 45,
                          "line": 26,
                        },
                        "name": "self",
                        "start": Position {
                          "character": 41,
                          "line": 26,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 50,
                        "line": 26,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 49,
                          "line": 26,
                        },
                        "name": "str",
                        "start": Position {
                          "character": 46,
                          "line": 26,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 45,
                        "line": 26,
                      },
                      "type": "MemberExpression",
                    },
                    ASTIdentifier {
                      "end": Position {
                        "character": 61,
                        "line": 26,
                      },
                      "name": "startIndex",
                      "start": Position {
                        "character": 51,
                        "line": 26,
                      },
                      "type": "Identifier",
                    },
                    ASTIdentifier {
                      "end": Position {
                        "character": 71,
                        "line": 26,
                      },
                      "name": "endIndex",
                      "start": Position {
                        "character": 63,
                        "line": 26,
                      },
                      "type": "Identifier",
                    },
                  ],
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 40,
                      "line": 26,
                    },
                    "name": "slice",
                    "start": Position {
                      "character": 35,
                      "line": 26,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 73,
                    "line": 26,
                  },
                  "start": Position {
                    "character": 40,
                    "line": 26,
                  },
                  "type": "CallExpression",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTUnaryExpression {
                  "argument": ASTIdentifier {
                    "end": Position {
                      "character": 21,
                      "line": 26,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 17,
                      "line": 26,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 22,
                    "line": 26,
                  },
                  "operator": "new",
                  "start": Position {
                    "character": 13,
                    "line": 26,
                  },
                  "type": "UnaryExpression",
                },
                "end": Position {
                  "character": 35,
                  "line": 26,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 34,
                    "line": 26,
                  },
                  "name": "constructor",
                  "start": Position {
                    "character": 23,
                    "line": 26,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 22,
                  "line": 26,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 73,
                "line": 26,
              },
              "start": Position {
                "character": 34,
                "line": 26,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 27,
            },
            "start": Position {
              "character": 5,
              "line": 26,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 27,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 36,
              "line": 25,
            },
            "name": "startIndex",
            "start": Position {
              "character": 26,
              "line": 25,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 46,
              "line": 25,
            },
            "name": "endIndex",
            "start": Position {
              "character": 38,
              "line": 25,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 17,
          "line": 25,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 25,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 25,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 25,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 16,
          "line": 25,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 14,
            "line": 25,
          },
          "name": "substr",
          "start": Position {
            "character": 8,
            "line": 25,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 25,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 31,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 32,
                    "line": 30,
                  },
                  "name": "str",
                  "start": Position {
                    "character": 29,
                    "line": 30,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 16,
                      "line": 30,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 12,
                      "line": 30,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 21,
                    "line": 30,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 20,
                      "line": 30,
                    },
                    "name": "str",
                    "start": Position {
                      "character": 17,
                      "line": 30,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 16,
                    "line": 30,
                  },
                  "type": "MemberExpression",
                },
                "end": Position {
                  "character": 29,
                  "line": 30,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 28,
                    "line": 30,
                  },
                  "name": "indexOf",
                  "start": Position {
                    "character": 21,
                    "line": 30,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 20,
                  "line": 30,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 33,
                "line": 30,
              },
              "start": Position {
                "character": 28,
                "line": 30,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 31,
            },
            "start": Position {
              "character": 5,
              "line": 30,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 31,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 30,
              "line": 29,
            },
            "name": "str",
            "start": Position {
              "character": 27,
              "line": 29,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 18,
          "line": 29,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 29,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 29,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 29,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 17,
          "line": 29,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 15,
            "line": 29,
          },
          "name": "indexOf",
          "start": Position {
            "character": 8,
            "line": 29,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 29,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 35,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTCallExpression {
                  "arguments": Array [
                    ASTIdentifier {
                      "end": Position {
                        "character": 55,
                        "line": 34,
                      },
                      "name": "str",
                      "start": Position {
                        "character": 52,
                        "line": 34,
                      },
                      "type": "Identifier",
                    },
                    ASTIdentifier {
                      "end": Position {
                        "character": 63,
                        "line": 34,
                      },
                      "name": "newStr",
                      "start": Position {
                        "character": 57,
                        "line": 34,
                      },
                      "type": "Identifier",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 39,
                          "line": 34,
                        },
                        "name": "self",
                        "start": Position {
                          "character": 35,
                          "line": 34,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 44,
                        "line": 34,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 43,
                          "line": 34,
                        },
                        "name": "str",
                        "start": Position {
                          "character": 40,
                          "line": 34,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 39,
                        "line": 34,
                      },
                      "type": "MemberExpression",
                    },
                    "end": Position {
                      "character": 52,
                      "line": 34,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 51,
                        "line": 34,
                      },
                      "name": "replace",
                      "start": Position {
                        "character": 44,
                        "line": 34,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 43,
                      "line": 34,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 65,
                    "line": 34,
                  },
                  "start": Position {
                    "character": 51,
                    "line": 34,
                  },
                  "type": "CallExpression",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTUnaryExpression {
                  "argument": ASTIdentifier {
                    "end": Position {
                      "character": 21,
                      "line": 34,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 17,
                      "line": 34,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 22,
                    "line": 34,
                  },
                  "operator": "new",
                  "start": Position {
                    "character": 13,
                    "line": 34,
                  },
                  "type": "UnaryExpression",
                },
                "end": Position {
                  "character": 35,
                  "line": 34,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 34,
                    "line": 34,
                  },
                  "name": "constructor",
                  "start": Position {
                    "character": 23,
                    "line": 34,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 22,
                  "line": 34,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 65,
                "line": 34,
              },
              "start": Position {
                "character": 34,
                "line": 34,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 35,
            },
            "start": Position {
              "character": 5,
              "line": 34,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 35,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 30,
              "line": 33,
            },
            "name": "str",
            "start": Position {
              "character": 27,
              "line": 33,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 38,
              "line": 33,
            },
            "name": "newStr",
            "start": Position {
              "character": 32,
              "line": 33,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 18,
          "line": 33,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 33,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 33,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 33,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 17,
          "line": 33,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 15,
            "line": 33,
          },
          "name": "replace",
          "start": Position {
            "character": 8,
            "line": 33,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 33,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 39,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTCallExpression {
                  "arguments": Array [
                    ASTIdentifier {
                      "end": Position {
                        "character": 54,
                        "line": 38,
                      },
                      "name": "str",
                      "start": Position {
                        "character": 51,
                        "line": 38,
                      },
                      "type": "Identifier",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 39,
                          "line": 38,
                        },
                        "name": "self",
                        "start": Position {
                          "character": 35,
                          "line": 38,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 44,
                        "line": 38,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 43,
                          "line": 38,
                        },
                        "name": "str",
                        "start": Position {
                          "character": 40,
                          "line": 38,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 39,
                        "line": 38,
                      },
                      "type": "MemberExpression",
                    },
                    "end": Position {
                      "character": 51,
                      "line": 38,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 50,
                        "line": 38,
                      },
                      "name": "remove",
                      "start": Position {
                        "character": 44,
                        "line": 38,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 43,
                      "line": 38,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 56,
                    "line": 38,
                  },
                  "start": Position {
                    "character": 50,
                    "line": 38,
                  },
                  "type": "CallExpression",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTUnaryExpression {
                  "argument": ASTIdentifier {
                    "end": Position {
                      "character": 21,
                      "line": 38,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 17,
                      "line": 38,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 22,
                    "line": 38,
                  },
                  "operator": "new",
                  "start": Position {
                    "character": 13,
                    "line": 38,
                  },
                  "type": "UnaryExpression",
                },
                "end": Position {
                  "character": 35,
                  "line": 38,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 34,
                    "line": 38,
                  },
                  "name": "constructor",
                  "start": Position {
                    "character": 23,
                    "line": 38,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 22,
                  "line": 38,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 56,
                "line": 38,
              },
              "start": Position {
                "character": 34,
                "line": 38,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 39,
            },
            "start": Position {
              "character": 5,
              "line": 38,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 39,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 29,
              "line": 37,
            },
            "name": "str",
            "start": Position {
              "character": 26,
              "line": 37,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 17,
          "line": 37,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 37,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 37,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 37,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 16,
          "line": 37,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 14,
            "line": 37,
          },
          "name": "remove",
          "start": Position {
            "character": 8,
            "line": 37,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 37,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 43,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 16,
                  "line": 42,
                },
                "name": "self",
                "start": Position {
                  "character": 12,
                  "line": 42,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 20,
                "line": 42,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 20,
                  "line": 42,
                },
                "name": "str",
                "start": Position {
                  "character": 17,
                  "line": 42,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 16,
                "line": 42,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 13,
              "line": 43,
            },
            "start": Position {
              "character": 5,
              "line": 42,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 43,
        },
        "namespaces": Set {},
        "parameters": Array [],
        "start": Position {
          "character": 19,
          "line": 41,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 41,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 41,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 41,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 18,
          "line": 41,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 16,
            "line": 41,
          },
          "name": "toString",
          "start": Position {
            "character": 8,
            "line": 41,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 41,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 47,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTMemberExpression {
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 16,
                    "line": 46,
                  },
                  "name": "self",
                  "start": Position {
                    "character": 12,
                    "line": 46,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 21,
                  "line": 46,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 20,
                    "line": 46,
                  },
                  "name": "str",
                  "start": Position {
                    "character": 17,
                    "line": 46,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 16,
                  "line": 46,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 24,
                "line": 46,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 24,
                  "line": 46,
                },
                "name": "len",
                "start": Position {
                  "character": 21,
                  "line": 46,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 20,
                "line": 46,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 13,
              "line": 47,
            },
            "start": Position {
              "character": 5,
              "line": 46,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 47,
        },
        "namespaces": Set {},
        "parameters": Array [],
        "start": Position {
          "character": 17,
          "line": 45,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 45,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 45,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 45,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 16,
          "line": 45,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 14,
            "line": 45,
          },
          "name": "length",
          "start": Position {
            "character": 8,
            "line": 45,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 45,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 51,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 36,
                    "line": 50,
                  },
                  "name": "seperator",
                  "start": Position {
                    "character": 27,
                    "line": 50,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 16,
                      "line": 50,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 12,
                      "line": 50,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 21,
                    "line": 50,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 20,
                      "line": 50,
                    },
                    "name": "str",
                    "start": Position {
                      "character": 17,
                      "line": 50,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 16,
                    "line": 50,
                  },
                  "type": "MemberExpression",
                },
                "end": Position {
                  "character": 27,
                  "line": 50,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 50,
                  },
                  "name": "split",
                  "start": Position {
                    "character": 21,
                    "line": 50,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 20,
                  "line": 50,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 37,
                "line": 50,
              },
              "start": Position {
                "character": 26,
                "line": 50,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 51,
            },
            "start": Position {
              "character": 5,
              "line": 50,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 51,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 34,
              "line": 49,
            },
            "name": "seperator",
            "start": Position {
              "character": 25,
              "line": 49,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 16,
          "line": 49,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 49,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 49,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 49,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 15,
          "line": 49,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 49,
          },
          "name": "split",
          "start": Position {
            "character": 8,
            "line": 49,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 49,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 55,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTCallExpression {
                  "arguments": Array [],
                  "base": ASTMemberExpression {
                    "base": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 39,
                          "line": 54,
                        },
                        "name": "self",
                        "start": Position {
                          "character": 35,
                          "line": 54,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 44,
                        "line": 54,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 43,
                          "line": 54,
                        },
                        "name": "str",
                        "start": Position {
                          "character": 40,
                          "line": 54,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 39,
                        "line": 54,
                      },
                      "type": "MemberExpression",
                    },
                    "end": Position {
                      "character": 49,
                      "line": 54,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 48,
                        "line": 54,
                      },
                      "name": "trim",
                      "start": Position {
                        "character": 44,
                        "line": 54,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 43,
                      "line": 54,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 51,
                    "line": 54,
                  },
                  "start": Position {
                    "character": 48,
                    "line": 54,
                  },
                  "type": "CallExpression",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTUnaryExpression {
                  "argument": ASTIdentifier {
                    "end": Position {
                      "character": 21,
                      "line": 54,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 17,
                      "line": 54,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 22,
                    "line": 54,
                  },
                  "operator": "new",
                  "start": Position {
                    "character": 13,
                    "line": 54,
                  },
                  "type": "UnaryExpression",
                },
                "end": Position {
                  "character": 35,
                  "line": 54,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 34,
                    "line": 54,
                  },
                  "name": "constructor",
                  "start": Position {
                    "character": 23,
                    "line": 54,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 22,
                  "line": 54,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 51,
                "line": 54,
              },
              "start": Position {
                "character": 34,
                "line": 54,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 55,
            },
            "start": Position {
              "character": 5,
              "line": 54,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 55,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 33,
              "line": 53,
            },
            "name": "seperator",
            "start": Position {
              "character": 24,
              "line": 53,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 15,
          "line": 53,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 53,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 53,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 53,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 14,
          "line": 53,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 12,
            "line": 53,
          },
          "name": "trim",
          "start": Position {
            "character": 8,
            "line": 53,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 53,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 11,
        "line": 57,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 11,
          "line": 57,
        },
        "fields": Array [],
        "start": Position {
          "character": 9,
          "line": 57,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 57,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 6,
          "line": 57,
        },
        "name": "Error",
        "start": Position {
          "character": 1,
          "line": 57,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 22,
        "line": 59,
      },
      "init": ASTIdentifier {
        "end": Position {
          "character": 22,
          "line": 59,
        },
        "name": "String",
        "start": Position {
          "character": 16,
          "line": 59,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 1,
        "line": 59,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 59,
          },
          "name": "Error",
          "start": Position {
            "character": 1,
            "line": 59,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 15,
          "line": 59,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 59,
          },
          "name": "String",
          "start": Position {
            "character": 7,
            "line": 59,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 6,
          "line": 59,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 68,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 13,
              "line": 62,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 62,
              },
              "name": "self",
              "start": Position {
                "character": 9,
                "line": 62,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 62,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 6,
                "line": 62,
              },
              "name": "m",
              "start": Position {
                "character": 5,
                "line": 62,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 24,
              "line": 63,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 24,
                "line": 63,
              },
              "name": "message",
              "start": Position {
                "character": 17,
                "line": 63,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 63,
            },
            "type": "AssignmentStatement",
            "variable": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 6,
                  "line": 63,
                },
                "name": "m",
                "start": Position {
                  "character": 5,
                  "line": 63,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 16,
                "line": 63,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 14,
                  "line": 63,
                },
                "name": "message",
                "start": Position {
                  "character": 7,
                  "line": 63,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 6,
                "line": 63,
              },
              "type": "MemberExpression",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 81,
                      "line": 65,
                    },
                    "init": ASTCallExpression {
                      "arguments": Array [],
                      "base": ASTMemberExpression {
                        "base": ASTCallExpression {
                          "arguments": Array [
                            ASTIdentifier {
                              "end": Position {
                                "character": 69,
                                "line": 65,
                              },
                              "name": "values",
                              "start": Position {
                                "character": 63,
                                "line": 65,
                              },
                              "type": "Identifier",
                            },
                          ],
                          "base": ASTMemberExpression {
                            "base": ASTCallExpression {
                              "arguments": Array [
                                ASTIdentifier {
                                  "end": Position {
                                    "character": 55,
                                    "line": 65,
                                  },
                                  "name": "message",
                                  "start": Position {
                                    "character": 48,
                                    "line": 65,
                                  },
                                  "type": "Identifier",
                                },
                              ],
                              "base": ASTMemberExpression {
                                "base": ASTUnaryExpression {
                                  "argument": ASTMemberExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 27,
                                        "line": 65,
                                      },
                                      "name": "m",
                                      "start": Position {
                                        "character": 26,
                                        "line": 65,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 35,
                                      "line": 65,
                                    },
                                    "identifier": ASTIdentifier {
                                      "end": Position {
                                        "character": 34,
                                        "line": 65,
                                      },
                                      "name": "String",
                                      "start": Position {
                                        "character": 28,
                                        "line": 65,
                                      },
                                      "type": "Identifier",
                                    },
                                    "indexer": ".",
                                    "start": Position {
                                      "character": 27,
                                      "line": 65,
                                    },
                                    "type": "MemberExpression",
                                  },
                                  "end": Position {
                                    "character": 35,
                                    "line": 65,
                                  },
                                  "operator": "new",
                                  "start": Position {
                                    "character": 22,
                                    "line": 65,
                                  },
                                  "type": "UnaryExpression",
                                },
                                "end": Position {
                                  "character": 48,
                                  "line": 65,
                                },
                                "identifier": ASTIdentifier {
                                  "end": Position {
                                    "character": 47,
                                    "line": 65,
                                  },
                                  "name": "constructor",
                                  "start": Position {
                                    "character": 36,
                                    "line": 65,
                                  },
                                  "type": "Identifier",
                                },
                                "indexer": ".",
                                "start": Position {
                                  "character": 35,
                                  "line": 65,
                                },
                                "type": "MemberExpression",
                              },
                              "end": Position {
                                "character": 57,
                                "line": 65,
                              },
                              "start": Position {
                                "character": 47,
                                "line": 65,
                              },
                              "type": "CallExpression",
                            },
                            "end": Position {
                              "character": 63,
                              "line": 65,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 62,
                                "line": 65,
                              },
                              "name": "parse",
                              "start": Position {
                                "character": 57,
                                "line": 65,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 56,
                              "line": 65,
                            },
                            "type": "MemberExpression",
                          },
                          "end": Position {
                            "character": 71,
                            "line": 65,
                          },
                          "start": Position {
                            "character": 62,
                            "line": 65,
                          },
                          "type": "CallExpression",
                        },
                        "end": Position {
                          "character": 80,
                          "line": 65,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 79,
                            "line": 65,
                          },
                          "name": "toString",
                          "start": Position {
                            "character": 71,
                            "line": 65,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 70,
                          "line": 65,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 81,
                        "line": 65,
                      },
                      "start": Position {
                        "character": 79,
                        "line": 65,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 65,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 65,
                        },
                        "name": "m",
                        "start": Position {
                          "character": 9,
                          "line": 65,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 20,
                        "line": 65,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 18,
                          "line": 65,
                        },
                        "name": "message",
                        "start": Position {
                          "character": 11,
                          "line": 65,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 10,
                        "line": 65,
                      },
                      "type": "MemberExpression",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 24,
                    "line": 64,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 15,
                      "line": 64,
                    },
                    "name": "values",
                    "start": Position {
                      "character": 9,
                      "line": 64,
                    },
                    "type": "Identifier",
                  },
                  "operator": "!=",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 23,
                      "line": 64,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 19,
                      "line": 64,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 16,
                    "line": 64,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 11,
                  "line": 66,
                },
                "start": Position {
                  "character": 5,
                  "line": 64,
                },
                "type": "IfClause",
              },
            ],
            "end": Position {
              "character": 11,
              "line": 66,
            },
            "start": Position {
              "character": 5,
              "line": 64,
            },
            "type": "IfStatement",
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 67,
              },
              "name": "m",
              "start": Position {
                "character": 12,
                "line": 67,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 68,
            },
            "start": Position {
              "character": 5,
              "line": 67,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 68,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 37,
              "line": 61,
            },
            "name": "message",
            "start": Position {
              "character": 30,
              "line": 61,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 45,
              "line": 61,
            },
            "name": "values",
            "start": Position {
              "character": 39,
              "line": 61,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 21,
          "line": 61,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 61,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 61,
          },
          "name": "Error",
          "start": Position {
            "character": 1,
            "line": 61,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 20,
          "line": 61,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 61,
          },
          "name": "constructor",
          "start": Position {
            "character": 7,
            "line": 61,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 6,
          "line": 61,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 72,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTCallStatement {
            "end": Position {
              "character": 56,
              "line": 71,
            },
            "expression": ASTCallExpression {
              "arguments": Array [
                ASTEvaluationExpression {
                  "end": Position {
                    "character": 56,
                    "line": 71,
                  },
                  "left": ASTEvaluationExpression {
                    "end": Position {
                      "character": 44,
                      "line": 71,
                    },
                    "left": ASTLiteral {
                      "end": Position {
                        "character": 27,
                        "line": 71,
                      },
                      "raw": "\\"<color=#ff0000>\\"",
                      "start": Position {
                        "character": 10,
                        "line": 71,
                      },
                      "type": "StringLiteral",
                      "value": "<color=#ff0000>",
                    },
                    "operator": "+",
                    "right": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 34,
                          "line": 71,
                        },
                        "name": "self",
                        "start": Position {
                          "character": 30,
                          "line": 71,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 44,
                        "line": 71,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 42,
                          "line": 71,
                        },
                        "name": "message",
                        "start": Position {
                          "character": 35,
                          "line": 71,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 34,
                        "line": 71,
                      },
                      "type": "MemberExpression",
                    },
                    "start": Position {
                      "character": 28,
                      "line": 71,
                    },
                    "type": "BinaryExpression",
                  },
                  "operator": "+",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 55,
                      "line": 71,
                    },
                    "raw": "\\"</color>\\"",
                    "start": Position {
                      "character": 45,
                      "line": 71,
                    },
                    "type": "StringLiteral",
                    "value": "</color>",
                  },
                  "start": Position {
                    "character": 28,
                    "line": 71,
                  },
                  "type": "BinaryExpression",
                },
              ],
              "base": ASTIdentifier {
                "end": Position {
                  "character": 9,
                  "line": 71,
                },
                "name": "exit",
                "start": Position {
                  "character": 5,
                  "line": 71,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 56,
                "line": 71,
              },
              "start": Position {
                "character": 9,
                "line": 71,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 71,
            },
            "type": "CallStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 72,
        },
        "namespaces": Set {},
        "parameters": Array [],
        "start": Position {
          "character": 15,
          "line": 70,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 70,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 70,
          },
          "name": "Error",
          "start": Position {
            "character": 1,
            "line": 70,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 14,
          "line": 70,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 12,
            "line": 70,
          },
          "name": "throw",
          "start": Position {
            "character": 7,
            "line": 70,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 6,
          "line": 70,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 12,
        "line": 74,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 12,
          "line": 74,
        },
        "fields": Array [],
        "start": Position {
          "character": 10,
          "line": 74,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 74,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 74,
        },
        "name": "Crypto",
        "start": Position {
          "character": 1,
          "line": 74,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 91,
        "line": 76,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 91,
          "line": 76,
        },
        "raw": "\\"QWERTZUIOPASDFGHJKLYXCVBNMqwertzuiopasdfghjklyxcvbnm1234567890+-\\"",
        "start": Position {
          "character": 25,
          "line": 76,
        },
        "type": "StringLiteral",
        "value": "QWERTZUIOPASDFGHJKLYXCVBNMqwertzuiopasdfghjklyxcvbnm1234567890+-",
      },
      "start": Position {
        "character": 1,
        "line": 76,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 76,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 76,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 24,
          "line": 76,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 22,
            "line": 76,
          },
          "name": "defaultCharset",
          "start": Position {
            "character": 8,
            "line": 76,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 76,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 33,
        "line": 77,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 33,
          "line": 77,
        },
        "raw": "\\"test123\\"",
        "start": Position {
          "character": 24,
          "line": 77,
        },
        "type": "StringLiteral",
        "value": "test123",
      },
      "start": Position {
        "character": 1,
        "line": 77,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 77,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 77,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 23,
          "line": 77,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 21,
            "line": 77,
          },
          "name": "defaultSecret",
          "start": Position {
            "character": 8,
            "line": 77,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 77,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 27,
        "line": 78,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 27,
          "line": 78,
        },
        "raw": "55295",
        "start": Position {
          "character": 22,
          "line": 78,
        },
        "type": "NumericLiteral",
        "value": 55295,
      },
      "start": Position {
        "character": 1,
        "line": 78,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 78,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 78,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 21,
          "line": 78,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 19,
            "line": 78,
          },
          "name": "maxCharCode",
          "start": Position {
            "character": 8,
            "line": 78,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 78,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 21,
        "line": 79,
      },
      "init": ASTIdentifier {
        "end": Position {
          "character": 21,
          "line": 79,
        },
        "name": "Error",
        "start": Position {
          "character": 16,
          "line": 79,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 1,
        "line": 79,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 79,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 79,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 15,
          "line": 79,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 79,
          },
          "name": "Error",
          "start": Position {
            "character": 8,
            "line": 79,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 79,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 90,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 82,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 82,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 82,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 82,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 82,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 82,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 37,
              "line": 83,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 37,
                "line": 83,
              },
              "name": "defaultSecret",
              "start": Position {
                "character": 24,
                "line": 83,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 83,
            },
            "type": "AssignmentStatement",
            "variable": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 7,
                  "line": 83,
                },
                "name": "me",
                "start": Position {
                  "character": 5,
                  "line": 83,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 23,
                "line": 83,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 21,
                  "line": 83,
                },
                "name": "defaultSecret",
                "start": Position {
                  "character": 8,
                  "line": 83,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 7,
                "line": 83,
              },
              "type": "MemberExpression",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 23,
              "line": 84,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 23,
                "line": 84,
              },
              "name": "charset",
              "start": Position {
                "character": 16,
                "line": 84,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 84,
            },
            "type": "AssignmentStatement",
            "variable": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 7,
                  "line": 84,
                },
                "name": "me",
                "start": Position {
                  "character": 5,
                  "line": 84,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 15,
                "line": 84,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 13,
                  "line": 84,
                },
                "name": "table",
                "start": Position {
                  "character": 8,
                  "line": 84,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 7,
                "line": 84,
              },
              "type": "MemberExpression",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 24,
              "line": 85,
            },
            "init": ASTUnaryExpression {
              "argument": ASTIdentifier {
                "end": Position {
                  "character": 24,
                  "line": 85,
                },
                "name": "hashFn",
                "start": Position {
                  "character": 18,
                  "line": 85,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 24,
                "line": 85,
              },
              "operator": "@",
              "start": Position {
                "character": 17,
                "line": 85,
              },
              "type": "UnaryExpression",
            },
            "start": Position {
              "character": 5,
              "line": 85,
            },
            "type": "AssignmentStatement",
            "variable": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 7,
                  "line": 85,
                },
                "name": "me",
                "start": Position {
                  "character": 5,
                  "line": 85,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 16,
                "line": 85,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 14,
                  "line": 85,
                },
                "name": "hashFn",
                "start": Position {
                  "character": 8,
                  "line": 85,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 7,
                "line": 85,
              },
              "type": "MemberExpression",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 47,
                      "line": 86,
                    },
                    "init": ASTUnaryExpression {
                      "argument": ASTIdentifier {
                        "end": Position {
                          "character": 47,
                          "line": 86,
                        },
                        "name": "md5",
                        "start": Position {
                          "character": 44,
                          "line": 86,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 47,
                        "line": 86,
                      },
                      "operator": "@",
                      "start": Position {
                        "character": 43,
                        "line": 86,
                      },
                      "type": "UnaryExpression",
                    },
                    "start": Position {
                      "character": 31,
                      "line": 86,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 33,
                          "line": 86,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 31,
                          "line": 86,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 42,
                        "line": 86,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 40,
                          "line": 86,
                        },
                        "name": "hashFn",
                        "start": Position {
                          "character": 34,
                          "line": 86,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 33,
                        "line": 86,
                      },
                      "type": "MemberExpression",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 25,
                    "line": 86,
                  },
                  "left": ASTUnaryExpression {
                    "argument": ASTIdentifier {
                      "end": Position {
                        "character": 16,
                        "line": 86,
                      },
                      "name": "hashFn",
                      "start": Position {
                        "character": 10,
                        "line": 86,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 19,
                      "line": 86,
                    },
                    "operator": "@",
                    "start": Position {
                      "character": 9,
                      "line": 86,
                    },
                    "type": "UnaryExpression",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 24,
                      "line": 86,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 20,
                      "line": 86,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 17,
                    "line": 86,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 47,
                  "line": 86,
                },
                "start": Position {
                  "character": 5,
                  "line": 86,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 47,
              "line": 86,
            },
            "start": Position {
              "character": 5,
              "line": 86,
            },
            "type": "IfShortcutStatement",
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 57,
                      "line": 87,
                    },
                    "init": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 42,
                          "line": 87,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 40,
                          "line": 87,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 57,
                        "line": 87,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 57,
                          "line": 87,
                        },
                        "name": "defaultCharset",
                        "start": Position {
                          "character": 43,
                          "line": 87,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 42,
                        "line": 87,
                      },
                      "type": "MemberExpression",
                    },
                    "start": Position {
                      "character": 29,
                      "line": 87,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 31,
                          "line": 87,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 29,
                          "line": 87,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 39,
                        "line": 87,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 37,
                          "line": 87,
                        },
                        "name": "table",
                        "start": Position {
                          "character": 32,
                          "line": 87,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 31,
                        "line": 87,
                      },
                      "type": "MemberExpression",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 28,
                    "line": 87,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 15,
                      "line": 87,
                    },
                    "name": "charset",
                    "start": Position {
                      "character": 8,
                      "line": 87,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 23,
                      "line": 87,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 19,
                      "line": 87,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 16,
                    "line": 87,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 57,
                  "line": 87,
                },
                "start": Position {
                  "character": 5,
                  "line": 87,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 57,
              "line": 87,
            },
            "start": Position {
              "character": 5,
              "line": 87,
            },
            "type": "IfShortcutStatement",
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTCallStatement {
                    "end": Position {
                      "character": 103,
                      "line": 88,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [],
                      "base": ASTMemberExpression {
                        "base": ASTCallExpression {
                          "arguments": Array [
                            ASTLiteral {
                              "end": Position {
                                "character": 82,
                                "line": 88,
                              },
                              "raw": "\\"Invalid charset $0...\\"",
                              "start": Position {
                                "character": 59,
                                "line": 88,
                              },
                              "type": "StringLiteral",
                              "value": "Invalid charset $0...",
                            },
                            ASTListConstructorExpression {
                              "end": Position {
                                "character": 94,
                                "line": 88,
                              },
                              "fields": Array [
                                ASTListValue {
                                  "end": Position {
                                    "character": 94,
                                    "line": 88,
                                  },
                                  "start": Position {
                                    "character": 87,
                                    "line": 88,
                                  },
                                  "type": "ListValue",
                                  "value": ASTMemberExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 87,
                                        "line": 88,
                                      },
                                      "name": "me",
                                      "start": Position {
                                        "character": 85,
                                        "line": 88,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 94,
                                      "line": 88,
                                    },
                                    "identifier": ASTIdentifier {
                                      "end": Position {
                                        "character": 93,
                                        "line": 88,
                                      },
                                      "name": "table",
                                      "start": Position {
                                        "character": 88,
                                        "line": 88,
                                      },
                                      "type": "Identifier",
                                    },
                                    "indexer": ".",
                                    "start": Position {
                                      "character": 87,
                                      "line": 88,
                                    },
                                    "type": "MemberExpression",
                                  },
                                },
                              ],
                              "start": Position {
                                "character": 84,
                                "line": 88,
                              },
                              "type": "ListConstructorExpression",
                            },
                          ],
                          "base": ASTMemberExpression {
                            "base": ASTUnaryExpression {
                              "argument": ASTMemberExpression {
                                "base": ASTIdentifier {
                                  "end": Position {
                                    "character": 39,
                                    "line": 88,
                                  },
                                  "name": "me",
                                  "start": Position {
                                    "character": 37,
                                    "line": 88,
                                  },
                                  "type": "Identifier",
                                },
                                "end": Position {
                                  "character": 46,
                                  "line": 88,
                                },
                                "identifier": ASTIdentifier {
                                  "end": Position {
                                    "character": 45,
                                    "line": 88,
                                  },
                                  "name": "Error",
                                  "start": Position {
                                    "character": 40,
                                    "line": 88,
                                  },
                                  "type": "Identifier",
                                },
                                "indexer": ".",
                                "start": Position {
                                  "character": 39,
                                  "line": 88,
                                },
                                "type": "MemberExpression",
                              },
                              "end": Position {
                                "character": 46,
                                "line": 88,
                              },
                              "operator": "new",
                              "start": Position {
                                "character": 33,
                                "line": 88,
                              },
                              "type": "UnaryExpression",
                            },
                            "end": Position {
                              "character": 59,
                              "line": 88,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 58,
                                "line": 88,
                              },
                              "name": "constructor",
                              "start": Position {
                                "character": 47,
                                "line": 88,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 46,
                              "line": 88,
                            },
                            "type": "MemberExpression",
                          },
                          "end": Position {
                            "character": 96,
                            "line": 88,
                          },
                          "start": Position {
                            "character": 58,
                            "line": 88,
                          },
                          "type": "CallExpression",
                        },
                        "end": Position {
                          "character": 102,
                          "line": 88,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 101,
                            "line": 88,
                          },
                          "name": "throw",
                          "start": Position {
                            "character": 96,
                            "line": 88,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 95,
                          "line": 88,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 103,
                        "line": 88,
                      },
                      "start": Position {
                        "character": 101,
                        "line": 88,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 32,
                      "line": 88,
                    },
                    "type": "CallStatement",
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 31,
                    "line": 88,
                  },
                  "left": ASTMemberExpression {
                    "base": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 88,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 8,
                          "line": 88,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 17,
                        "line": 88,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 16,
                          "line": 88,
                        },
                        "name": "table",
                        "start": Position {
                          "character": 11,
                          "line": 88,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 10,
                        "line": 88,
                      },
                      "type": "MemberExpression",
                    },
                    "end": Position {
                      "character": 23,
                      "line": 88,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 88,
                      },
                      "name": "len",
                      "start": Position {
                        "character": 17,
                        "line": 88,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 16,
                      "line": 88,
                    },
                    "type": "MemberExpression",
                  },
                  "operator": "!=",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 26,
                      "line": 88,
                    },
                    "raw": "64",
                    "start": Position {
                      "character": 24,
                      "line": 88,
                    },
                    "type": "NumericLiteral",
                    "value": 64,
                  },
                  "start": Position {
                    "character": 21,
                    "line": 88,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 103,
                  "line": 88,
                },
                "start": Position {
                  "character": 5,
                  "line": 88,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 103,
              "line": 88,
            },
            "start": Position {
              "character": 5,
              "line": 88,
            },
            "type": "IfShortcutStatement",
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 89,
              },
              "name": "me",
              "start": Position {
                "character": 12,
                "line": 89,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 90,
            },
            "start": Position {
              "character": 5,
              "line": 89,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 90,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 44,
              "line": 81,
            },
            "name": "defaultSecret",
            "start": Position {
              "character": 31,
              "line": 81,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 52,
              "line": 81,
            },
            "name": "hashFn",
            "start": Position {
              "character": 46,
              "line": 81,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 61,
              "line": 81,
            },
            "name": "charset",
            "start": Position {
              "character": 54,
              "line": 81,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 22,
          "line": 81,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 81,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 81,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 81,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 21,
          "line": 81,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 19,
            "line": 81,
          },
          "name": "constructor",
          "start": Position {
            "character": 8,
            "line": 81,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 81,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 101,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 93,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 93,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 93,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 93,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 93,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 93,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 94,
            },
            "init": ASTListConstructorExpression {
              "end": Position {
                "character": 14,
                "line": 94,
              },
              "fields": Array [],
              "start": Position {
                "character": 12,
                "line": 94,
              },
              "type": "ListConstructorExpression",
            },
            "start": Position {
              "character": 5,
              "line": 94,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 9,
                "line": 94,
              },
              "name": "hash",
              "start": Position {
                "character": 5,
                "line": 94,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 22,
              "line": 95,
            },
            "init": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 95,
                  },
                  "name": "pw",
                  "start": Position {
                    "character": 19,
                    "line": 95,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 11,
                    "line": 95,
                  },
                  "name": "me",
                  "start": Position {
                    "character": 9,
                    "line": 95,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 19,
                  "line": 95,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 18,
                    "line": 95,
                  },
                  "name": "hashFn",
                  "start": Position {
                    "character": 12,
                    "line": 95,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 11,
                  "line": 95,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 22,
                "line": 95,
              },
              "start": Position {
                "character": 18,
                "line": 95,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 95,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 6,
                "line": 95,
              },
              "name": "x",
              "start": Position {
                "character": 5,
                "line": 95,
              },
              "type": "Identifier",
            },
          },
          ASTForGenericStatement {
            "body": Array [
              ASTCallStatement {
                "end": Position {
                  "character": 29,
                  "line": 97,
                },
                "expression": ASTCallExpression {
                  "arguments": Array [
                    ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 23,
                          "line": 97,
                        },
                        "name": "char",
                        "start": Position {
                          "character": 19,
                          "line": 97,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 29,
                        "line": 97,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 28,
                          "line": 97,
                        },
                        "name": "code",
                        "start": Position {
                          "character": 24,
                          "line": 97,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 23,
                        "line": 97,
                      },
                      "type": "MemberExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 13,
                        "line": 97,
                      },
                      "name": "hash",
                      "start": Position {
                        "character": 9,
                        "line": 97,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 19,
                      "line": 97,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 18,
                        "line": 97,
                      },
                      "name": "push",
                      "start": Position {
                        "character": 14,
                        "line": 97,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 13,
                      "line": 97,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 29,
                    "line": 97,
                  },
                  "start": Position {
                    "character": 18,
                    "line": 97,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 97,
                },
                "type": "CallStatement",
              },
            ],
            "end": Position {
              "character": 12,
              "line": 98,
            },
            "iterator": ASTIdentifier {
              "end": Position {
                "character": 18,
                "line": 96,
              },
              "name": "x",
              "start": Position {
                "character": 17,
                "line": 96,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 96,
            },
            "type": "ForGenericStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 96,
              },
              "name": "char",
              "start": Position {
                "character": 9,
                "line": 96,
              },
              "type": "Identifier",
            },
          },
          ASTCallStatement {
            "end": Position {
              "character": 17,
              "line": 99,
            },
            "expression": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 9,
                  "line": 99,
                },
                "name": "hash",
                "start": Position {
                  "character": 5,
                  "line": 99,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 17,
                "line": 99,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 17,
                  "line": 99,
                },
                "name": "reverse",
                "start": Position {
                  "character": 10,
                  "line": 99,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 9,
                "line": 99,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 99,
            },
            "type": "CallStatement",
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 16,
                "line": 100,
              },
              "name": "hash",
              "start": Position {
                "character": 12,
                "line": 100,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 101,
            },
            "start": Position {
              "character": 5,
              "line": 100,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 101,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 29,
              "line": 92,
            },
            "name": "pw",
            "start": Position {
              "character": 27,
              "line": 92,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 18,
          "line": 92,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 92,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 92,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 92,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 17,
          "line": 92,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 15,
            "line": 92,
          },
          "name": "getHash",
          "start": Position {
            "character": 8,
            "line": 92,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 92,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 156,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 104,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 104,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 104,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 104,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 104,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 104,
              },
              "type": "Identifier",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 47,
                      "line": 105,
                    },
                    "init": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 33,
                          "line": 105,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 31,
                          "line": 105,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 47,
                        "line": 105,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 47,
                          "line": 105,
                        },
                        "name": "defaultSecret",
                        "start": Position {
                          "character": 34,
                          "line": 105,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 33,
                        "line": 105,
                      },
                      "type": "MemberExpression",
                    },
                    "start": Position {
                      "character": 26,
                      "line": 105,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 28,
                        "line": 105,
                      },
                      "name": "pw",
                      "start": Position {
                        "character": 26,
                        "line": 105,
                      },
                      "type": "Identifier",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 20,
                    "line": 105,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 11,
                      "line": 105,
                    },
                    "name": "pw",
                    "start": Position {
                      "character": 9,
                      "line": 105,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 19,
                      "line": 105,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 15,
                      "line": 105,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 12,
                    "line": 105,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 47,
                  "line": 105,
                },
                "start": Position {
                  "character": 5,
                  "line": 105,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 47,
              "line": 105,
            },
            "start": Position {
              "character": 5,
              "line": 105,
            },
            "type": "IfShortcutStatement",
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 26,
              "line": 106,
            },
            "init": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 25,
                    "line": 106,
                  },
                  "name": "pw",
                  "start": Position {
                    "character": 23,
                    "line": 106,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 14,
                    "line": 106,
                  },
                  "name": "me",
                  "start": Position {
                    "character": 12,
                    "line": 106,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 23,
                  "line": 106,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 22,
                    "line": 106,
                  },
                  "name": "getHash",
                  "start": Position {
                    "character": 15,
                    "line": 106,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 14,
                  "line": 106,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 26,
                "line": 106,
              },
              "start": Position {
                "character": 22,
                "line": 106,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 106,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 9,
                "line": 106,
              },
              "name": "hash",
              "start": Position {
                "character": 5,
                "line": 106,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 20,
              "line": 107,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 107,
              },
              "raw": "0",
              "start": Position {
                "character": 19,
                "line": 107,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 107,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 16,
                "line": 107,
              },
              "name": "hashPointer",
              "start": Position {
                "character": 5,
                "line": 107,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 16,
              "line": 108,
            },
            "init": ASTListConstructorExpression {
              "end": Position {
                "character": 16,
                "line": 108,
              },
              "fields": Array [],
              "start": Position {
                "character": 14,
                "line": 108,
              },
              "type": "ListConstructorExpression",
            },
            "start": Position {
              "character": 5,
              "line": 108,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 108,
              },
              "name": "output",
              "start": Position {
                "character": 5,
                "line": 108,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 109,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 17,
                "line": 109,
              },
              "raw": "0",
              "start": Position {
                "character": 16,
                "line": 109,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 109,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 109,
              },
              "name": "position",
              "start": Position {
                "character": 5,
                "line": 109,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 26,
              "line": 110,
            },
            "init": ASTEvaluationExpression {
              "end": Position {
                "character": 26,
                "line": 110,
              },
              "left": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 18,
                    "line": 110,
                  },
                  "name": "str",
                  "start": Position {
                    "character": 15,
                    "line": 110,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 24,
                  "line": 110,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 22,
                    "line": 110,
                  },
                  "name": "len",
                  "start": Position {
                    "character": 19,
                    "line": 110,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 18,
                  "line": 110,
                },
                "type": "MemberExpression",
              },
              "operator": "%",
              "right": ASTLiteral {
                "end": Position {
                  "character": 26,
                  "line": 110,
                },
                "raw": "3",
                "start": Position {
                  "character": 25,
                  "line": 110,
                },
                "type": "NumericLiteral",
                "value": 3,
              },
              "start": Position {
                "character": 23,
                "line": 110,
              },
              "type": "BinaryExpression",
            },
            "start": Position {
              "character": 5,
              "line": 110,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 12,
                "line": 110,
              },
              "name": "padding",
              "start": Position {
                "character": 5,
                "line": 110,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 28,
              "line": 111,
            },
            "init": ASTEvaluationExpression {
              "end": Position {
                "character": 28,
                "line": 111,
              },
              "left": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 14,
                    "line": 111,
                  },
                  "name": "str",
                  "start": Position {
                    "character": 11,
                    "line": 111,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 20,
                  "line": 111,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 18,
                    "line": 111,
                  },
                  "name": "len",
                  "start": Position {
                    "character": 15,
                    "line": 111,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 14,
                  "line": 111,
                },
                "type": "MemberExpression",
              },
              "operator": "-",
              "right": ASTIdentifier {
                "end": Position {
                  "character": 28,
                  "line": 111,
                },
                "name": "padding",
                "start": Position {
                  "character": 21,
                  "line": 111,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 19,
                "line": 111,
              },
              "type": "BinaryExpression",
            },
            "start": Position {
              "character": 5,
              "line": 111,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 8,
                "line": 111,
              },
              "name": "max",
              "start": Position {
                "character": 5,
                "line": 111,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 117,
            },
            "init": ASTFunctionStatement {
              "assignments": Array [],
              "body": Array [
                ASTIfStatement {
                  "clauses": Array [
                    ASTIfClause {
                      "body": Array [
                        ASTCallStatement {
                          "end": Position {
                            "character": 75,
                            "line": 114,
                          },
                          "expression": ASTCallExpression {
                            "arguments": Array [],
                            "base": ASTMemberExpression {
                              "base": ASTCallExpression {
                                "arguments": Array [
                                  ASTLiteral {
                                    "end": Position {
                                      "character": 61,
                                      "line": 114,
                                    },
                                    "raw": "\\"Invalid index $0...\\"",
                                    "start": Position {
                                      "character": 40,
                                      "line": 114,
                                    },
                                    "type": "StringLiteral",
                                    "value": "Invalid index $0...",
                                  },
                                  ASTListConstructorExpression {
                                    "end": Position {
                                      "character": 66,
                                      "line": 114,
                                    },
                                    "fields": Array [
                                      ASTListValue {
                                        "end": Position {
                                          "character": 65,
                                          "line": 114,
                                        },
                                        "start": Position {
                                          "character": 64,
                                          "line": 114,
                                        },
                                        "type": "ListValue",
                                        "value": ASTIdentifier {
                                          "end": Position {
                                            "character": 65,
                                            "line": 114,
                                          },
                                          "name": "v",
                                          "start": Position {
                                            "character": 64,
                                            "line": 114,
                                          },
                                          "type": "Identifier",
                                        },
                                      },
                                    ],
                                    "start": Position {
                                      "character": 63,
                                      "line": 114,
                                    },
                                    "type": "ListConstructorExpression",
                                  },
                                ],
                                "base": ASTMemberExpression {
                                  "base": ASTUnaryExpression {
                                    "argument": ASTMemberExpression {
                                      "base": ASTIdentifier {
                                        "end": Position {
                                          "character": 20,
                                          "line": 114,
                                        },
                                        "name": "me",
                                        "start": Position {
                                          "character": 18,
                                          "line": 114,
                                        },
                                        "type": "Identifier",
                                      },
                                      "end": Position {
                                        "character": 27,
                                        "line": 114,
                                      },
                                      "identifier": ASTIdentifier {
                                        "end": Position {
                                          "character": 26,
                                          "line": 114,
                                        },
                                        "name": "Error",
                                        "start": Position {
                                          "character": 21,
                                          "line": 114,
                                        },
                                        "type": "Identifier",
                                      },
                                      "indexer": ".",
                                      "start": Position {
                                        "character": 20,
                                        "line": 114,
                                      },
                                      "type": "MemberExpression",
                                    },
                                    "end": Position {
                                      "character": 27,
                                      "line": 114,
                                    },
                                    "operator": "new",
                                    "start": Position {
                                      "character": 14,
                                      "line": 114,
                                    },
                                    "type": "UnaryExpression",
                                  },
                                  "end": Position {
                                    "character": 40,
                                    "line": 114,
                                  },
                                  "identifier": ASTIdentifier {
                                    "end": Position {
                                      "character": 39,
                                      "line": 114,
                                    },
                                    "name": "constructor",
                                    "start": Position {
                                      "character": 28,
                                      "line": 114,
                                    },
                                    "type": "Identifier",
                                  },
                                  "indexer": ".",
                                  "start": Position {
                                    "character": 27,
                                    "line": 114,
                                  },
                                  "type": "MemberExpression",
                                },
                                "end": Position {
                                  "character": 68,
                                  "line": 114,
                                },
                                "start": Position {
                                  "character": 39,
                                  "line": 114,
                                },
                                "type": "CallExpression",
                              },
                              "end": Position {
                                "character": 74,
                                "line": 114,
                              },
                              "identifier": ASTIdentifier {
                                "end": Position {
                                  "character": 73,
                                  "line": 114,
                                },
                                "name": "throw",
                                "start": Position {
                                  "character": 68,
                                  "line": 114,
                                },
                                "type": "Identifier",
                              },
                              "indexer": ".",
                              "start": Position {
                                "character": 67,
                                "line": 114,
                              },
                              "type": "MemberExpression",
                            },
                            "end": Position {
                              "character": 75,
                              "line": 114,
                            },
                            "start": Position {
                              "character": 73,
                              "line": 114,
                            },
                            "type": "CallExpression",
                          },
                          "start": Position {
                            "character": 13,
                            "line": 114,
                          },
                          "type": "CallStatement",
                        },
                      ],
                      "condition": ASTUnaryExpression {
                        "argument": ASTCallExpression {
                          "arguments": Array [
                            ASTIdentifier {
                              "end": Position {
                                "character": 36,
                                "line": 113,
                              },
                              "name": "v",
                              "start": Position {
                                "character": 35,
                                "line": 113,
                              },
                              "type": "Identifier",
                            },
                          ],
                          "base": ASTMemberExpression {
                            "base": ASTMemberExpression {
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 19,
                                  "line": 113,
                                },
                                "name": "me",
                                "start": Position {
                                  "character": 17,
                                  "line": 113,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 26,
                                "line": 113,
                              },
                              "identifier": ASTIdentifier {
                                "end": Position {
                                  "character": 25,
                                  "line": 113,
                                },
                                "name": "table",
                                "start": Position {
                                  "character": 20,
                                  "line": 113,
                                },
                                "type": "Identifier",
                              },
                              "indexer": ".",
                              "start": Position {
                                "character": 19,
                                "line": 113,
                              },
                              "type": "MemberExpression",
                            },
                            "end": Position {
                              "character": 35,
                              "line": 113,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 34,
                                "line": 113,
                              },
                              "name": "hasIndex",
                              "start": Position {
                                "character": 26,
                                "line": 113,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 25,
                              "line": 113,
                            },
                            "type": "MemberExpression",
                          },
                          "end": Position {
                            "character": 38,
                            "line": 113,
                          },
                          "start": Position {
                            "character": 34,
                            "line": 113,
                          },
                          "type": "CallExpression",
                        },
                        "end": Position {
                          "character": 38,
                          "line": 113,
                        },
                        "operator": "not",
                        "start": Position {
                          "character": 13,
                          "line": 113,
                        },
                        "type": "NegationExpression",
                      },
                      "end": Position {
                        "character": 15,
                        "line": 115,
                      },
                      "start": Position {
                        "character": 9,
                        "line": 113,
                      },
                      "type": "IfClause",
                    },
                  ],
                  "end": Position {
                    "character": 15,
                    "line": 115,
                  },
                  "start": Position {
                    "character": 9,
                    "line": 113,
                  },
                  "type": "IfStatement",
                },
                ASTReturnStatement {
                  "argument": ASTIndexExpression {
                    "base": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 18,
                          "line": 116,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 16,
                          "line": 116,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 25,
                        "line": 116,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 24,
                          "line": 116,
                        },
                        "name": "table",
                        "start": Position {
                          "character": 19,
                          "line": 116,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 18,
                        "line": 116,
                      },
                      "type": "MemberExpression",
                    },
                    "end": Position {
                      "character": 27,
                      "line": 116,
                    },
                    "index": ASTIdentifier {
                      "end": Position {
                        "character": 26,
                        "line": 116,
                      },
                      "name": "v",
                      "start": Position {
                        "character": 25,
                        "line": 116,
                      },
                      "type": "Identifier",
                    },
                    "start": Position {
                      "character": 25,
                      "line": 116,
                    },
                    "type": "IndexExpression",
                  },
                  "end": Position {
                    "character": 17,
                    "line": 117,
                  },
                  "start": Position {
                    "character": 9,
                    "line": 116,
                  },
                  "type": "ReturnStatement",
                },
              ],
              "end": Position {
                "character": 17,
                "line": 117,
              },
              "namespaces": Set {},
              "parameters": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 112,
                  },
                  "name": "v",
                  "start": Position {
                    "character": 20,
                    "line": 112,
                  },
                  "type": "Identifier",
                },
              ],
              "start": Position {
                "character": 11,
                "line": 112,
              },
              "type": "FunctionDeclaration",
            },
            "start": Position {
              "character": 5,
              "line": 112,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 8,
                "line": 112,
              },
              "name": "get",
              "start": Position {
                "character": 5,
                "line": 112,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 120,
            },
            "init": ASTFunctionStatement {
              "assignments": Array [],
              "body": Array [
                ASTReturnStatement {
                  "argument": ASTCallExpression {
                    "arguments": Array [
                      ASTLiteral {
                        "end": Position {
                          "character": 27,
                          "line": 119,
                        },
                        "raw": "\\"&\\"",
                        "start": Position {
                          "character": 24,
                          "line": 119,
                        },
                        "type": "StringLiteral",
                        "value": "&",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 30,
                          "line": 119,
                        },
                        "name": "a",
                        "start": Position {
                          "character": 29,
                          "line": 119,
                        },
                        "type": "Identifier",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 33,
                          "line": 119,
                        },
                        "name": "b",
                        "start": Position {
                          "character": 32,
                          "line": 119,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 23,
                        "line": 119,
                      },
                      "name": "bitwise",
                      "start": Position {
                        "character": 16,
                        "line": 119,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 34,
                      "line": 119,
                    },
                    "start": Position {
                      "character": 23,
                      "line": 119,
                    },
                    "type": "CallExpression",
                  },
                  "end": Position {
                    "character": 17,
                    "line": 120,
                  },
                  "start": Position {
                    "character": 9,
                    "line": 119,
                  },
                  "type": "ReturnStatement",
                },
              ],
              "end": Position {
                "character": 17,
                "line": 120,
              },
              "namespaces": Set {},
              "parameters": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 118,
                  },
                  "name": "a",
                  "start": Position {
                    "character": 20,
                    "line": 118,
                  },
                  "type": "Identifier",
                },
                ASTIdentifier {
                  "end": Position {
                    "character": 24,
                    "line": 118,
                  },
                  "name": "b",
                  "start": Position {
                    "character": 23,
                    "line": 118,
                  },
                  "type": "Identifier",
                },
              ],
              "start": Position {
                "character": 11,
                "line": 118,
              },
              "type": "FunctionDeclaration",
            },
            "start": Position {
              "character": 5,
              "line": 118,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 8,
                "line": 118,
              },
              "name": "AND",
              "start": Position {
                "character": 5,
                "line": 118,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 123,
            },
            "init": ASTFunctionStatement {
              "assignments": Array [],
              "body": Array [
                ASTReturnStatement {
                  "argument": ASTCallExpression {
                    "arguments": Array [
                      ASTLiteral {
                        "end": Position {
                          "character": 28,
                          "line": 122,
                        },
                        "raw": "\\"<<\\"",
                        "start": Position {
                          "character": 24,
                          "line": 122,
                        },
                        "type": "StringLiteral",
                        "value": "<<",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 31,
                          "line": 122,
                        },
                        "name": "a",
                        "start": Position {
                          "character": 30,
                          "line": 122,
                        },
                        "type": "Identifier",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 34,
                          "line": 122,
                        },
                        "name": "b",
                        "start": Position {
                          "character": 33,
                          "line": 122,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 23,
                        "line": 122,
                      },
                      "name": "bitwise",
                      "start": Position {
                        "character": 16,
                        "line": 122,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 35,
                      "line": 122,
                    },
                    "start": Position {
                      "character": 23,
                      "line": 122,
                    },
                    "type": "CallExpression",
                  },
                  "end": Position {
                    "character": 17,
                    "line": 123,
                  },
                  "start": Position {
                    "character": 9,
                    "line": 122,
                  },
                  "type": "ReturnStatement",
                },
              ],
              "end": Position {
                "character": 17,
                "line": 123,
              },
              "namespaces": Set {},
              "parameters": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 24,
                    "line": 121,
                  },
                  "name": "a",
                  "start": Position {
                    "character": 23,
                    "line": 121,
                  },
                  "type": "Identifier",
                },
                ASTIdentifier {
                  "end": Position {
                    "character": 27,
                    "line": 121,
                  },
                  "name": "b",
                  "start": Position {
                    "character": 26,
                    "line": 121,
                  },
                  "type": "Identifier",
                },
              ],
              "start": Position {
                "character": 14,
                "line": 121,
              },
              "type": "FunctionDeclaration",
            },
            "start": Position {
              "character": 5,
              "line": 121,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 121,
              },
              "name": "LSHIFT",
              "start": Position {
                "character": 5,
                "line": 121,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 126,
            },
            "init": ASTFunctionStatement {
              "assignments": Array [],
              "body": Array [
                ASTReturnStatement {
                  "argument": ASTCallExpression {
                    "arguments": Array [
                      ASTLiteral {
                        "end": Position {
                          "character": 28,
                          "line": 125,
                        },
                        "raw": "\\">>\\"",
                        "start": Position {
                          "character": 24,
                          "line": 125,
                        },
                        "type": "StringLiteral",
                        "value": ">>",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 31,
                          "line": 125,
                        },
                        "name": "a",
                        "start": Position {
                          "character": 30,
                          "line": 125,
                        },
                        "type": "Identifier",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 34,
                          "line": 125,
                        },
                        "name": "b",
                        "start": Position {
                          "character": 33,
                          "line": 125,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 23,
                        "line": 125,
                      },
                      "name": "bitwise",
                      "start": Position {
                        "character": 16,
                        "line": 125,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 35,
                      "line": 125,
                    },
                    "start": Position {
                      "character": 23,
                      "line": 125,
                    },
                    "type": "CallExpression",
                  },
                  "end": Position {
                    "character": 17,
                    "line": 126,
                  },
                  "start": Position {
                    "character": 9,
                    "line": 125,
                  },
                  "type": "ReturnStatement",
                },
              ],
              "end": Position {
                "character": 17,
                "line": 126,
              },
              "namespaces": Set {},
              "parameters": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 24,
                    "line": 124,
                  },
                  "name": "a",
                  "start": Position {
                    "character": 23,
                    "line": 124,
                  },
                  "type": "Identifier",
                },
                ASTIdentifier {
                  "end": Position {
                    "character": 27,
                    "line": 124,
                  },
                  "name": "b",
                  "start": Position {
                    "character": 26,
                    "line": 124,
                  },
                  "type": "Identifier",
                },
              ],
              "start": Position {
                "character": 14,
                "line": 124,
              },
              "type": "FunctionDeclaration",
            },
            "start": Position {
              "character": 5,
              "line": 124,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 124,
              },
              "name": "RSHIFT",
              "start": Position {
                "character": 5,
                "line": 124,
              },
              "type": "Identifier",
            },
          },
          ASTWhileStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 42,
                  "line": 128,
                },
                "init": ASTIndexExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 17,
                      "line": 128,
                    },
                    "name": "hash",
                    "start": Position {
                      "character": 13,
                      "line": 128,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 42,
                    "line": 128,
                  },
                  "index": ASTEvaluationExpression {
                    "end": Position {
                      "character": 42,
                      "line": 128,
                    },
                    "left": ASTEvaluationExpression {
                      "end": Position {
                        "character": 39,
                        "line": 128,
                      },
                      "left": ASTIdentifier {
                        "end": Position {
                          "character": 26,
                          "line": 128,
                        },
                        "name": "position",
                        "start": Position {
                          "character": 18,
                          "line": 128,
                        },
                        "type": "Identifier",
                      },
                      "operator": "%",
                      "right": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 33,
                            "line": 128,
                          },
                          "name": "hash",
                          "start": Position {
                            "character": 29,
                            "line": 128,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 39,
                          "line": 128,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 37,
                            "line": 128,
                          },
                          "name": "len",
                          "start": Position {
                            "character": 34,
                            "line": 128,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 33,
                          "line": 128,
                        },
                        "type": "MemberExpression",
                      },
                      "start": Position {
                        "character": 27,
                        "line": 128,
                      },
                      "type": "BinaryExpression",
                    },
                    "operator": "-",
                    "right": ASTLiteral {
                      "end": Position {
                        "character": 41,
                        "line": 128,
                      },
                      "raw": "1",
                      "start": Position {
                        "character": 40,
                        "line": 128,
                      },
                      "type": "NumericLiteral",
                      "value": 1,
                    },
                    "start": Position {
                      "character": 27,
                      "line": 128,
                    },
                    "type": "BinaryExpression",
                  },
                  "start": Position {
                    "character": 18,
                    "line": 128,
                  },
                  "type": "IndexExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 128,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 128,
                  },
                  "name": "m",
                  "start": Position {
                    "character": 9,
                    "line": 128,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 47,
                  "line": 129,
                },
                "init": ASTCallExpression {
                  "arguments": Array [
                    ASTEvaluationExpression {
                      "end": Position {
                        "character": 43,
                        "line": 129,
                      },
                      "left": ASTMemberExpression {
                        "base": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 23,
                              "line": 129,
                            },
                            "name": "str",
                            "start": Position {
                              "character": 20,
                              "line": 129,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 34,
                            "line": 129,
                          },
                          "index": ASTIdentifier {
                            "end": Position {
                              "character": 32,
                              "line": 129,
                            },
                            "name": "position",
                            "start": Position {
                              "character": 24,
                              "line": 129,
                            },
                            "type": "Identifier",
                          },
                          "start": Position {
                            "character": 24,
                            "line": 129,
                          },
                          "type": "IndexExpression",
                        },
                        "end": Position {
                          "character": 40,
                          "line": 129,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 38,
                            "line": 129,
                          },
                          "name": "code",
                          "start": Position {
                            "character": 34,
                            "line": 129,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 33,
                          "line": 129,
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "+",
                      "right": ASTIdentifier {
                        "end": Position {
                          "character": 42,
                          "line": 129,
                        },
                        "name": "m",
                        "start": Position {
                          "character": 41,
                          "line": 129,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 39,
                        "line": 129,
                      },
                      "type": "BinaryExpression",
                    },
                    ASTLiteral {
                      "end": Position {
                        "character": 46,
                        "line": 129,
                      },
                      "raw": "16",
                      "start": Position {
                        "character": 44,
                        "line": 129,
                      },
                      "type": "NumericLiteral",
                      "value": 16,
                    },
                  ],
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 19,
                      "line": 129,
                    },
                    "name": "LSHIFT",
                    "start": Position {
                      "character": 13,
                      "line": 129,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 47,
                    "line": 129,
                  },
                  "start": Position {
                    "character": 19,
                    "line": 129,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 129,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 129,
                  },
                  "name": "a",
                  "start": Position {
                    "character": 9,
                    "line": 129,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 50,
                  "line": 130,
                },
                "init": ASTCallExpression {
                  "arguments": Array [
                    ASTEvaluationExpression {
                      "end": Position {
                        "character": 47,
                        "line": 130,
                      },
                      "left": ASTMemberExpression {
                        "base": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 23,
                              "line": 130,
                            },
                            "name": "str",
                            "start": Position {
                              "character": 20,
                              "line": 130,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 38,
                            "line": 130,
                          },
                          "index": ASTEvaluationExpression {
                            "end": Position {
                              "character": 37,
                              "line": 130,
                            },
                            "left": ASTIdentifier {
                              "end": Position {
                                "character": 32,
                                "line": 130,
                              },
                              "name": "position",
                              "start": Position {
                                "character": 24,
                                "line": 130,
                              },
                              "type": "Identifier",
                            },
                            "operator": "+",
                            "right": ASTLiteral {
                              "end": Position {
                                "character": 36,
                                "line": 130,
                              },
                              "raw": "1",
                              "start": Position {
                                "character": 35,
                                "line": 130,
                              },
                              "type": "NumericLiteral",
                              "value": 1,
                            },
                            "start": Position {
                              "character": 33,
                              "line": 130,
                            },
                            "type": "BinaryExpression",
                          },
                          "start": Position {
                            "character": 24,
                            "line": 130,
                          },
                          "type": "IndexExpression",
                        },
                        "end": Position {
                          "character": 44,
                          "line": 130,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 42,
                            "line": 130,
                          },
                          "name": "code",
                          "start": Position {
                            "character": 38,
                            "line": 130,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 37,
                          "line": 130,
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "+",
                      "right": ASTIdentifier {
                        "end": Position {
                          "character": 46,
                          "line": 130,
                        },
                        "name": "m",
                        "start": Position {
                          "character": 45,
                          "line": 130,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 43,
                        "line": 130,
                      },
                      "type": "BinaryExpression",
                    },
                    ASTLiteral {
                      "end": Position {
                        "character": 49,
                        "line": 130,
                      },
                      "raw": "8",
                      "start": Position {
                        "character": 48,
                        "line": 130,
                      },
                      "type": "NumericLiteral",
                      "value": 8,
                    },
                  ],
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 19,
                      "line": 130,
                    },
                    "name": "LSHIFT",
                    "start": Position {
                      "character": 13,
                      "line": 130,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 50,
                    "line": 130,
                  },
                  "start": Position {
                    "character": 19,
                    "line": 130,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 130,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 130,
                  },
                  "name": "b",
                  "start": Position {
                    "character": 9,
                    "line": 130,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 39,
                  "line": 131,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 39,
                    "line": 131,
                  },
                  "left": ASTMemberExpression {
                    "base": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 16,
                          "line": 131,
                        },
                        "name": "str",
                        "start": Position {
                          "character": 13,
                          "line": 131,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 31,
                        "line": 131,
                      },
                      "index": ASTEvaluationExpression {
                        "end": Position {
                          "character": 30,
                          "line": 131,
                        },
                        "left": ASTIdentifier {
                          "end": Position {
                            "character": 25,
                            "line": 131,
                          },
                          "name": "position",
                          "start": Position {
                            "character": 17,
                            "line": 131,
                          },
                          "type": "Identifier",
                        },
                        "operator": "+",
                        "right": ASTLiteral {
                          "end": Position {
                            "character": 29,
                            "line": 131,
                          },
                          "raw": "2",
                          "start": Position {
                            "character": 28,
                            "line": 131,
                          },
                          "type": "NumericLiteral",
                          "value": 2,
                        },
                        "start": Position {
                          "character": 26,
                          "line": 131,
                        },
                        "type": "BinaryExpression",
                      },
                      "start": Position {
                        "character": 17,
                        "line": 131,
                      },
                      "type": "IndexExpression",
                    },
                    "end": Position {
                      "character": 37,
                      "line": 131,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 35,
                        "line": 131,
                      },
                      "name": "code",
                      "start": Position {
                        "character": 31,
                        "line": 131,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 30,
                      "line": 131,
                    },
                    "type": "MemberExpression",
                  },
                  "operator": "+",
                  "right": ASTIdentifier {
                    "end": Position {
                      "character": 39,
                      "line": 131,
                    },
                    "name": "m",
                    "start": Position {
                      "character": 38,
                      "line": 131,
                    },
                    "type": "Identifier",
                  },
                  "start": Position {
                    "character": 36,
                    "line": 131,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 131,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 131,
                  },
                  "name": "c",
                  "start": Position {
                    "character": 9,
                    "line": 131,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 27,
                  "line": 132,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 27,
                    "line": 132,
                  },
                  "left": ASTEvaluationExpression {
                    "end": Position {
                      "character": 25,
                      "line": 132,
                    },
                    "left": ASTIdentifier {
                      "end": Position {
                        "character": 19,
                        "line": 132,
                      },
                      "name": "a",
                      "start": Position {
                        "character": 18,
                        "line": 132,
                      },
                      "type": "Identifier",
                    },
                    "operator": "+",
                    "right": ASTIdentifier {
                      "end": Position {
                        "character": 23,
                        "line": 132,
                      },
                      "name": "b",
                      "start": Position {
                        "character": 22,
                        "line": 132,
                      },
                      "type": "Identifier",
                    },
                    "start": Position {
                      "character": 20,
                      "line": 132,
                    },
                    "type": "BinaryExpression",
                  },
                  "operator": "+",
                  "right": ASTIdentifier {
                    "end": Position {
                      "character": 27,
                      "line": 132,
                    },
                    "name": "c",
                    "start": Position {
                      "character": 26,
                      "line": 132,
                    },
                    "type": "Identifier",
                  },
                  "start": Position {
                    "character": 20,
                    "line": 132,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 132,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 15,
                    "line": 132,
                  },
                  "name": "buffer",
                  "start": Position {
                    "character": 9,
                    "line": 132,
                  },
                  "type": "Identifier",
                },
              },
              ASTCallStatement {
                "end": Position {
                  "character": 54,
                  "line": 133,
                },
                "expression": ASTCallExpression {
                  "arguments": Array [
                    ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTIdentifier {
                                  "end": Position {
                                    "character": 42,
                                    "line": 133,
                                  },
                                  "name": "buffer",
                                  "start": Position {
                                    "character": 36,
                                    "line": 133,
                                  },
                                  "type": "Identifier",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 46,
                                    "line": 133,
                                  },
                                  "raw": "18",
                                  "start": Position {
                                    "character": 44,
                                    "line": 133,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 18,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 35,
                                  "line": 133,
                                },
                                "name": "RSHIFT",
                                "start": Position {
                                  "character": 29,
                                  "line": 133,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 48,
                                "line": 133,
                              },
                              "start": Position {
                                "character": 35,
                                "line": 133,
                              },
                              "type": "CallExpression",
                            },
                            ASTLiteral {
                              "end": Position {
                                "character": 51,
                                "line": 133,
                              },
                              "raw": "63",
                              "start": Position {
                                "character": 49,
                                "line": 133,
                              },
                              "type": "NumericLiteral",
                              "value": 63,
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 28,
                              "line": 133,
                            },
                            "name": "AND",
                            "start": Position {
                              "character": 25,
                              "line": 133,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 53,
                            "line": 133,
                          },
                          "start": Position {
                            "character": 28,
                            "line": 133,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 24,
                          "line": 133,
                        },
                        "name": "get",
                        "start": Position {
                          "character": 21,
                          "line": 133,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 54,
                        "line": 133,
                      },
                      "start": Position {
                        "character": 24,
                        "line": 133,
                      },
                      "type": "CallExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 133,
                      },
                      "name": "output",
                      "start": Position {
                        "character": 9,
                        "line": 133,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 21,
                      "line": 133,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 133,
                      },
                      "name": "push",
                      "start": Position {
                        "character": 16,
                        "line": 133,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 15,
                      "line": 133,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 54,
                    "line": 133,
                  },
                  "start": Position {
                    "character": 20,
                    "line": 133,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 133,
                },
                "type": "CallStatement",
              },
              ASTCallStatement {
                "end": Position {
                  "character": 54,
                  "line": 134,
                },
                "expression": ASTCallExpression {
                  "arguments": Array [
                    ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTIdentifier {
                                  "end": Position {
                                    "character": 42,
                                    "line": 134,
                                  },
                                  "name": "buffer",
                                  "start": Position {
                                    "character": 36,
                                    "line": 134,
                                  },
                                  "type": "Identifier",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 46,
                                    "line": 134,
                                  },
                                  "raw": "12",
                                  "start": Position {
                                    "character": 44,
                                    "line": 134,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 12,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 35,
                                  "line": 134,
                                },
                                "name": "RSHIFT",
                                "start": Position {
                                  "character": 29,
                                  "line": 134,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 48,
                                "line": 134,
                              },
                              "start": Position {
                                "character": 35,
                                "line": 134,
                              },
                              "type": "CallExpression",
                            },
                            ASTLiteral {
                              "end": Position {
                                "character": 51,
                                "line": 134,
                              },
                              "raw": "63",
                              "start": Position {
                                "character": 49,
                                "line": 134,
                              },
                              "type": "NumericLiteral",
                              "value": 63,
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 28,
                              "line": 134,
                            },
                            "name": "AND",
                            "start": Position {
                              "character": 25,
                              "line": 134,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 53,
                            "line": 134,
                          },
                          "start": Position {
                            "character": 28,
                            "line": 134,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 24,
                          "line": 134,
                        },
                        "name": "get",
                        "start": Position {
                          "character": 21,
                          "line": 134,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 54,
                        "line": 134,
                      },
                      "start": Position {
                        "character": 24,
                        "line": 134,
                      },
                      "type": "CallExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 134,
                      },
                      "name": "output",
                      "start": Position {
                        "character": 9,
                        "line": 134,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 21,
                      "line": 134,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 134,
                      },
                      "name": "push",
                      "start": Position {
                        "character": 16,
                        "line": 134,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 15,
                      "line": 134,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 54,
                    "line": 134,
                  },
                  "start": Position {
                    "character": 20,
                    "line": 134,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 134,
                },
                "type": "CallStatement",
              },
              ASTCallStatement {
                "end": Position {
                  "character": 53,
                  "line": 135,
                },
                "expression": ASTCallExpression {
                  "arguments": Array [
                    ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTIdentifier {
                                  "end": Position {
                                    "character": 42,
                                    "line": 135,
                                  },
                                  "name": "buffer",
                                  "start": Position {
                                    "character": 36,
                                    "line": 135,
                                  },
                                  "type": "Identifier",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 45,
                                    "line": 135,
                                  },
                                  "raw": "6",
                                  "start": Position {
                                    "character": 44,
                                    "line": 135,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 6,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 35,
                                  "line": 135,
                                },
                                "name": "RSHIFT",
                                "start": Position {
                                  "character": 29,
                                  "line": 135,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 47,
                                "line": 135,
                              },
                              "start": Position {
                                "character": 35,
                                "line": 135,
                              },
                              "type": "CallExpression",
                            },
                            ASTLiteral {
                              "end": Position {
                                "character": 50,
                                "line": 135,
                              },
                              "raw": "63",
                              "start": Position {
                                "character": 48,
                                "line": 135,
                              },
                              "type": "NumericLiteral",
                              "value": 63,
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 28,
                              "line": 135,
                            },
                            "name": "AND",
                            "start": Position {
                              "character": 25,
                              "line": 135,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 52,
                            "line": 135,
                          },
                          "start": Position {
                            "character": 28,
                            "line": 135,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 24,
                          "line": 135,
                        },
                        "name": "get",
                        "start": Position {
                          "character": 21,
                          "line": 135,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 53,
                        "line": 135,
                      },
                      "start": Position {
                        "character": 24,
                        "line": 135,
                      },
                      "type": "CallExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 135,
                      },
                      "name": "output",
                      "start": Position {
                        "character": 9,
                        "line": 135,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 21,
                      "line": 135,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 135,
                      },
                      "name": "push",
                      "start": Position {
                        "character": 16,
                        "line": 135,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 15,
                      "line": 135,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 53,
                    "line": 135,
                  },
                  "start": Position {
                    "character": 20,
                    "line": 135,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 135,
                },
                "type": "CallStatement",
              },
              ASTCallStatement {
                "end": Position {
                  "character": 42,
                  "line": 136,
                },
                "expression": ASTCallExpression {
                  "arguments": Array [
                    ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTIdentifier {
                              "end": Position {
                                "character": 35,
                                "line": 136,
                              },
                              "name": "buffer",
                              "start": Position {
                                "character": 29,
                                "line": 136,
                              },
                              "type": "Identifier",
                            },
                            ASTLiteral {
                              "end": Position {
                                "character": 39,
                                "line": 136,
                              },
                              "raw": "63",
                              "start": Position {
                                "character": 37,
                                "line": 136,
                              },
                              "type": "NumericLiteral",
                              "value": 63,
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 28,
                              "line": 136,
                            },
                            "name": "AND",
                            "start": Position {
                              "character": 25,
                              "line": 136,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 41,
                            "line": 136,
                          },
                          "start": Position {
                            "character": 28,
                            "line": 136,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 24,
                          "line": 136,
                        },
                        "name": "get",
                        "start": Position {
                          "character": 21,
                          "line": 136,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 42,
                        "line": 136,
                      },
                      "start": Position {
                        "character": 24,
                        "line": 136,
                      },
                      "type": "CallExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 136,
                      },
                      "name": "output",
                      "start": Position {
                        "character": 9,
                        "line": 136,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 21,
                      "line": 136,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 136,
                      },
                      "name": "push",
                      "start": Position {
                        "character": 16,
                        "line": 136,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 15,
                      "line": 136,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 42,
                    "line": 136,
                  },
                  "start": Position {
                    "character": 20,
                    "line": 136,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 136,
                },
                "type": "CallStatement",
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 32,
                  "line": 137,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 32,
                    "line": 137,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 28,
                      "line": 137,
                    },
                    "name": "position",
                    "start": Position {
                      "character": 20,
                      "line": 137,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 137,
                    },
                    "raw": "3",
                    "start": Position {
                      "character": 31,
                      "line": 137,
                    },
                    "type": "NumericLiteral",
                    "value": 3,
                  },
                  "start": Position {
                    "character": 29,
                    "line": 137,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 137,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 17,
                    "line": 137,
                  },
                  "name": "position",
                  "start": Position {
                    "character": 9,
                    "line": 137,
                  },
                  "type": "Identifier",
                },
              },
            ],
            "condition": ASTEvaluationExpression {
              "end": Position {
                "character": 25,
                "line": 127,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 19,
                  "line": 127,
                },
                "name": "position",
                "start": Position {
                  "character": 11,
                  "line": 127,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": ASTIdentifier {
                "end": Position {
                  "character": 25,
                  "line": 127,
                },
                "name": "max",
                "start": Position {
                  "character": 22,
                  "line": 127,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 20,
                "line": 127,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 14,
              "line": 138,
            },
            "start": Position {
              "character": 5,
              "line": 127,
            },
            "type": "WhileStatement",
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 42,
                      "line": 140,
                    },
                    "init": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 17,
                          "line": 140,
                        },
                        "name": "hash",
                        "start": Position {
                          "character": 13,
                          "line": 140,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 42,
                        "line": 140,
                      },
                      "index": ASTEvaluationExpression {
                        "end": Position {
                          "character": 42,
                          "line": 140,
                        },
                        "left": ASTEvaluationExpression {
                          "end": Position {
                            "character": 39,
                            "line": 140,
                          },
                          "left": ASTIdentifier {
                            "end": Position {
                              "character": 26,
                              "line": 140,
                            },
                            "name": "position",
                            "start": Position {
                              "character": 18,
                              "line": 140,
                            },
                            "type": "Identifier",
                          },
                          "operator": "%",
                          "right": ASTMemberExpression {
                            "base": ASTIdentifier {
                              "end": Position {
                                "character": 33,
                                "line": 140,
                              },
                              "name": "hash",
                              "start": Position {
                                "character": 29,
                                "line": 140,
                              },
                              "type": "Identifier",
                            },
                            "end": Position {
                              "character": 39,
                              "line": 140,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 37,
                                "line": 140,
                              },
                              "name": "len",
                              "start": Position {
                                "character": 34,
                                "line": 140,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 33,
                              "line": 140,
                            },
                            "type": "MemberExpression",
                          },
                          "start": Position {
                            "character": 27,
                            "line": 140,
                          },
                          "type": "BinaryExpression",
                        },
                        "operator": "-",
                        "right": ASTLiteral {
                          "end": Position {
                            "character": 41,
                            "line": 140,
                          },
                          "raw": "1",
                          "start": Position {
                            "character": 40,
                            "line": 140,
                          },
                          "type": "NumericLiteral",
                          "value": 1,
                        },
                        "start": Position {
                          "character": 27,
                          "line": 140,
                        },
                        "type": "BinaryExpression",
                      },
                      "start": Position {
                        "character": 18,
                        "line": 140,
                      },
                      "type": "IndexExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 140,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 10,
                        "line": 140,
                      },
                      "name": "m",
                      "start": Position {
                        "character": 9,
                        "line": 140,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 46,
                      "line": 141,
                    },
                    "init": ASTCallExpression {
                      "arguments": Array [
                        ASTEvaluationExpression {
                          "end": Position {
                            "character": 43,
                            "line": 141,
                          },
                          "left": ASTMemberExpression {
                            "base": ASTIndexExpression {
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 23,
                                  "line": 141,
                                },
                                "name": "str",
                                "start": Position {
                                  "character": 20,
                                  "line": 141,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 34,
                                "line": 141,
                              },
                              "index": ASTIdentifier {
                                "end": Position {
                                  "character": 32,
                                  "line": 141,
                                },
                                "name": "position",
                                "start": Position {
                                  "character": 24,
                                  "line": 141,
                                },
                                "type": "Identifier",
                              },
                              "start": Position {
                                "character": 24,
                                "line": 141,
                              },
                              "type": "IndexExpression",
                            },
                            "end": Position {
                              "character": 40,
                              "line": 141,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 38,
                                "line": 141,
                              },
                              "name": "code",
                              "start": Position {
                                "character": 34,
                                "line": 141,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 33,
                              "line": 141,
                            },
                            "type": "MemberExpression",
                          },
                          "operator": "+",
                          "right": ASTIdentifier {
                            "end": Position {
                              "character": 42,
                              "line": 141,
                            },
                            "name": "m",
                            "start": Position {
                              "character": 41,
                              "line": 141,
                            },
                            "type": "Identifier",
                          },
                          "start": Position {
                            "character": 39,
                            "line": 141,
                          },
                          "type": "BinaryExpression",
                        },
                        ASTLiteral {
                          "end": Position {
                            "character": 45,
                            "line": 141,
                          },
                          "raw": "8",
                          "start": Position {
                            "character": 44,
                            "line": 141,
                          },
                          "type": "NumericLiteral",
                          "value": 8,
                        },
                      ],
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 19,
                          "line": 141,
                        },
                        "name": "LSHIFT",
                        "start": Position {
                          "character": 13,
                          "line": 141,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 46,
                        "line": 141,
                      },
                      "start": Position {
                        "character": 19,
                        "line": 141,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 141,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 10,
                        "line": 141,
                      },
                      "name": "a",
                      "start": Position {
                        "character": 9,
                        "line": 141,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 39,
                      "line": 142,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 39,
                        "line": 142,
                      },
                      "left": ASTMemberExpression {
                        "base": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 16,
                              "line": 142,
                            },
                            "name": "str",
                            "start": Position {
                              "character": 13,
                              "line": 142,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 31,
                            "line": 142,
                          },
                          "index": ASTEvaluationExpression {
                            "end": Position {
                              "character": 30,
                              "line": 142,
                            },
                            "left": ASTIdentifier {
                              "end": Position {
                                "character": 25,
                                "line": 142,
                              },
                              "name": "position",
                              "start": Position {
                                "character": 17,
                                "line": 142,
                              },
                              "type": "Identifier",
                            },
                            "operator": "+",
                            "right": ASTLiteral {
                              "end": Position {
                                "character": 29,
                                "line": 142,
                              },
                              "raw": "1",
                              "start": Position {
                                "character": 28,
                                "line": 142,
                              },
                              "type": "NumericLiteral",
                              "value": 1,
                            },
                            "start": Position {
                              "character": 26,
                              "line": 142,
                            },
                            "type": "BinaryExpression",
                          },
                          "start": Position {
                            "character": 17,
                            "line": 142,
                          },
                          "type": "IndexExpression",
                        },
                        "end": Position {
                          "character": 37,
                          "line": 142,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 35,
                            "line": 142,
                          },
                          "name": "code",
                          "start": Position {
                            "character": 31,
                            "line": 142,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 30,
                          "line": 142,
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "+",
                      "right": ASTIdentifier {
                        "end": Position {
                          "character": 39,
                          "line": 142,
                        },
                        "name": "m",
                        "start": Position {
                          "character": 38,
                          "line": 142,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 36,
                        "line": 142,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 142,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 10,
                        "line": 142,
                      },
                      "name": "b",
                      "start": Position {
                        "character": 9,
                        "line": 142,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 23,
                      "line": 143,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 23,
                        "line": 143,
                      },
                      "left": ASTIdentifier {
                        "end": Position {
                          "character": 19,
                          "line": 143,
                        },
                        "name": "a",
                        "start": Position {
                          "character": 18,
                          "line": 143,
                        },
                        "type": "Identifier",
                      },
                      "operator": "+",
                      "right": ASTIdentifier {
                        "end": Position {
                          "character": 23,
                          "line": 143,
                        },
                        "name": "b",
                        "start": Position {
                          "character": 22,
                          "line": 143,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 20,
                        "line": 143,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 143,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 143,
                      },
                      "name": "buffer",
                      "start": Position {
                        "character": 9,
                        "line": 143,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTCallStatement {
                    "end": Position {
                      "character": 45,
                      "line": 144,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTIdentifier {
                                  "end": Position {
                                    "character": 38,
                                    "line": 144,
                                  },
                                  "name": "buffer",
                                  "start": Position {
                                    "character": 32,
                                    "line": 144,
                                  },
                                  "type": "Identifier",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 42,
                                    "line": 144,
                                  },
                                  "raw": "10",
                                  "start": Position {
                                    "character": 40,
                                    "line": 144,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 10,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 31,
                                  "line": 144,
                                },
                                "name": "RSHIFT",
                                "start": Position {
                                  "character": 25,
                                  "line": 144,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 44,
                                "line": 144,
                              },
                              "start": Position {
                                "character": 31,
                                "line": 144,
                              },
                              "type": "CallExpression",
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 24,
                              "line": 144,
                            },
                            "name": "get",
                            "start": Position {
                              "character": 21,
                              "line": 144,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 45,
                            "line": 144,
                          },
                          "start": Position {
                            "character": 24,
                            "line": 144,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 15,
                            "line": 144,
                          },
                          "name": "output",
                          "start": Position {
                            "character": 9,
                            "line": 144,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 21,
                          "line": 144,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 20,
                            "line": 144,
                          },
                          "name": "push",
                          "start": Position {
                            "character": 16,
                            "line": 144,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 15,
                          "line": 144,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 45,
                        "line": 144,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 144,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 144,
                    },
                    "type": "CallStatement",
                  },
                  ASTCallStatement {
                    "end": Position {
                      "character": 53,
                      "line": 145,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTCallExpression {
                                  "arguments": Array [
                                    ASTIdentifier {
                                      "end": Position {
                                        "character": 42,
                                        "line": 145,
                                      },
                                      "name": "buffer",
                                      "start": Position {
                                        "character": 36,
                                        "line": 145,
                                      },
                                      "type": "Identifier",
                                    },
                                    ASTLiteral {
                                      "end": Position {
                                        "character": 45,
                                        "line": 145,
                                      },
                                      "raw": "4",
                                      "start": Position {
                                        "character": 44,
                                        "line": 145,
                                      },
                                      "type": "NumericLiteral",
                                      "value": 4,
                                    },
                                  ],
                                  "base": ASTIdentifier {
                                    "end": Position {
                                      "character": 35,
                                      "line": 145,
                                    },
                                    "name": "RSHIFT",
                                    "start": Position {
                                      "character": 29,
                                      "line": 145,
                                    },
                                    "type": "Identifier",
                                  },
                                  "end": Position {
                                    "character": 47,
                                    "line": 145,
                                  },
                                  "start": Position {
                                    "character": 35,
                                    "line": 145,
                                  },
                                  "type": "CallExpression",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 50,
                                    "line": 145,
                                  },
                                  "raw": "63",
                                  "start": Position {
                                    "character": 48,
                                    "line": 145,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 63,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 28,
                                  "line": 145,
                                },
                                "name": "AND",
                                "start": Position {
                                  "character": 25,
                                  "line": 145,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 52,
                                "line": 145,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 145,
                              },
                              "type": "CallExpression",
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 24,
                              "line": 145,
                            },
                            "name": "get",
                            "start": Position {
                              "character": 21,
                              "line": 145,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 53,
                            "line": 145,
                          },
                          "start": Position {
                            "character": 24,
                            "line": 145,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 15,
                            "line": 145,
                          },
                          "name": "output",
                          "start": Position {
                            "character": 9,
                            "line": 145,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 21,
                          "line": 145,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 20,
                            "line": 145,
                          },
                          "name": "push",
                          "start": Position {
                            "character": 16,
                            "line": 145,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 15,
                          "line": 145,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 53,
                        "line": 145,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 145,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 145,
                    },
                    "type": "CallStatement",
                  },
                  ASTCallStatement {
                    "end": Position {
                      "character": 53,
                      "line": 146,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTCallExpression {
                                  "arguments": Array [
                                    ASTIdentifier {
                                      "end": Position {
                                        "character": 42,
                                        "line": 146,
                                      },
                                      "name": "buffer",
                                      "start": Position {
                                        "character": 36,
                                        "line": 146,
                                      },
                                      "type": "Identifier",
                                    },
                                    ASTLiteral {
                                      "end": Position {
                                        "character": 45,
                                        "line": 146,
                                      },
                                      "raw": "2",
                                      "start": Position {
                                        "character": 44,
                                        "line": 146,
                                      },
                                      "type": "NumericLiteral",
                                      "value": 2,
                                    },
                                  ],
                                  "base": ASTIdentifier {
                                    "end": Position {
                                      "character": 35,
                                      "line": 146,
                                    },
                                    "name": "LSHIFT",
                                    "start": Position {
                                      "character": 29,
                                      "line": 146,
                                    },
                                    "type": "Identifier",
                                  },
                                  "end": Position {
                                    "character": 47,
                                    "line": 146,
                                  },
                                  "start": Position {
                                    "character": 35,
                                    "line": 146,
                                  },
                                  "type": "CallExpression",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 50,
                                    "line": 146,
                                  },
                                  "raw": "63",
                                  "start": Position {
                                    "character": 48,
                                    "line": 146,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 63,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 28,
                                  "line": 146,
                                },
                                "name": "AND",
                                "start": Position {
                                  "character": 25,
                                  "line": 146,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 52,
                                "line": 146,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 146,
                              },
                              "type": "CallExpression",
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 24,
                              "line": 146,
                            },
                            "name": "get",
                            "start": Position {
                              "character": 21,
                              "line": 146,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 53,
                            "line": 146,
                          },
                          "start": Position {
                            "character": 24,
                            "line": 146,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 15,
                            "line": 146,
                          },
                          "name": "output",
                          "start": Position {
                            "character": 9,
                            "line": 146,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 21,
                          "line": 146,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 20,
                            "line": 146,
                          },
                          "name": "push",
                          "start": Position {
                            "character": 16,
                            "line": 146,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 15,
                          "line": 146,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 53,
                        "line": 146,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 146,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 146,
                    },
                    "type": "CallStatement",
                  },
                  ASTCallStatement {
                    "end": Position {
                      "character": 25,
                      "line": 147,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTLiteral {
                          "end": Position {
                            "character": 24,
                            "line": 147,
                          },
                          "raw": "\\"=\\"",
                          "start": Position {
                            "character": 21,
                            "line": 147,
                          },
                          "type": "StringLiteral",
                          "value": "=",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 15,
                            "line": 147,
                          },
                          "name": "output",
                          "start": Position {
                            "character": 9,
                            "line": 147,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 21,
                          "line": 147,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 20,
                            "line": 147,
                          },
                          "name": "push",
                          "start": Position {
                            "character": 16,
                            "line": 147,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 15,
                          "line": 147,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 25,
                        "line": 147,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 147,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 147,
                    },
                    "type": "CallStatement",
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 22,
                    "line": 139,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 16,
                      "line": 139,
                    },
                    "name": "padding",
                    "start": Position {
                      "character": 9,
                      "line": 139,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 21,
                      "line": 139,
                    },
                    "raw": "2",
                    "start": Position {
                      "character": 20,
                      "line": 139,
                    },
                    "type": "NumericLiteral",
                    "value": 2,
                  },
                  "start": Position {
                    "character": 17,
                    "line": 139,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 12,
                  "line": 148,
                },
                "start": Position {
                  "character": 5,
                  "line": 139,
                },
                "type": "IfClause",
              },
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 42,
                      "line": 149,
                    },
                    "init": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 17,
                          "line": 149,
                        },
                        "name": "hash",
                        "start": Position {
                          "character": 13,
                          "line": 149,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 42,
                        "line": 149,
                      },
                      "index": ASTEvaluationExpression {
                        "end": Position {
                          "character": 42,
                          "line": 149,
                        },
                        "left": ASTEvaluationExpression {
                          "end": Position {
                            "character": 39,
                            "line": 149,
                          },
                          "left": ASTIdentifier {
                            "end": Position {
                              "character": 26,
                              "line": 149,
                            },
                            "name": "position",
                            "start": Position {
                              "character": 18,
                              "line": 149,
                            },
                            "type": "Identifier",
                          },
                          "operator": "%",
                          "right": ASTMemberExpression {
                            "base": ASTIdentifier {
                              "end": Position {
                                "character": 33,
                                "line": 149,
                              },
                              "name": "hash",
                              "start": Position {
                                "character": 29,
                                "line": 149,
                              },
                              "type": "Identifier",
                            },
                            "end": Position {
                              "character": 39,
                              "line": 149,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 37,
                                "line": 149,
                              },
                              "name": "len",
                              "start": Position {
                                "character": 34,
                                "line": 149,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 33,
                              "line": 149,
                            },
                            "type": "MemberExpression",
                          },
                          "start": Position {
                            "character": 27,
                            "line": 149,
                          },
                          "type": "BinaryExpression",
                        },
                        "operator": "-",
                        "right": ASTLiteral {
                          "end": Position {
                            "character": 41,
                            "line": 149,
                          },
                          "raw": "1",
                          "start": Position {
                            "character": 40,
                            "line": 149,
                          },
                          "type": "NumericLiteral",
                          "value": 1,
                        },
                        "start": Position {
                          "character": 27,
                          "line": 149,
                        },
                        "type": "BinaryExpression",
                      },
                      "start": Position {
                        "character": 18,
                        "line": 149,
                      },
                      "type": "IndexExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 149,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 10,
                        "line": 149,
                      },
                      "name": "m",
                      "start": Position {
                        "character": 9,
                        "line": 149,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 40,
                      "line": 150,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 40,
                        "line": 150,
                      },
                      "left": ASTMemberExpression {
                        "base": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 21,
                              "line": 150,
                            },
                            "name": "str",
                            "start": Position {
                              "character": 18,
                              "line": 150,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 32,
                            "line": 150,
                          },
                          "index": ASTIdentifier {
                            "end": Position {
                              "character": 30,
                              "line": 150,
                            },
                            "name": "position",
                            "start": Position {
                              "character": 22,
                              "line": 150,
                            },
                            "type": "Identifier",
                          },
                          "start": Position {
                            "character": 22,
                            "line": 150,
                          },
                          "type": "IndexExpression",
                        },
                        "end": Position {
                          "character": 38,
                          "line": 150,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 36,
                            "line": 150,
                          },
                          "name": "code",
                          "start": Position {
                            "character": 32,
                            "line": 150,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 31,
                          "line": 150,
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "+",
                      "right": ASTIdentifier {
                        "end": Position {
                          "character": 40,
                          "line": 150,
                        },
                        "name": "m",
                        "start": Position {
                          "character": 39,
                          "line": 150,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 37,
                        "line": 150,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 150,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 150,
                      },
                      "name": "buffer",
                      "start": Position {
                        "character": 9,
                        "line": 150,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTCallStatement {
                    "end": Position {
                      "character": 44,
                      "line": 151,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTIdentifier {
                                  "end": Position {
                                    "character": 38,
                                    "line": 151,
                                  },
                                  "name": "buffer",
                                  "start": Position {
                                    "character": 32,
                                    "line": 151,
                                  },
                                  "type": "Identifier",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 41,
                                    "line": 151,
                                  },
                                  "raw": "2",
                                  "start": Position {
                                    "character": 40,
                                    "line": 151,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 2,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 31,
                                  "line": 151,
                                },
                                "name": "RSHIFT",
                                "start": Position {
                                  "character": 25,
                                  "line": 151,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 43,
                                "line": 151,
                              },
                              "start": Position {
                                "character": 31,
                                "line": 151,
                              },
                              "type": "CallExpression",
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 24,
                              "line": 151,
                            },
                            "name": "get",
                            "start": Position {
                              "character": 21,
                              "line": 151,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 44,
                            "line": 151,
                          },
                          "start": Position {
                            "character": 24,
                            "line": 151,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 15,
                            "line": 151,
                          },
                          "name": "output",
                          "start": Position {
                            "character": 9,
                            "line": 151,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 21,
                          "line": 151,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 20,
                            "line": 151,
                          },
                          "name": "push",
                          "start": Position {
                            "character": 16,
                            "line": 151,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 15,
                          "line": 151,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 44,
                        "line": 151,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 151,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 151,
                    },
                    "type": "CallStatement",
                  },
                  ASTCallStatement {
                    "end": Position {
                      "character": 53,
                      "line": 152,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTCallExpression {
                                  "arguments": Array [
                                    ASTIdentifier {
                                      "end": Position {
                                        "character": 42,
                                        "line": 152,
                                      },
                                      "name": "buffer",
                                      "start": Position {
                                        "character": 36,
                                        "line": 152,
                                      },
                                      "type": "Identifier",
                                    },
                                    ASTLiteral {
                                      "end": Position {
                                        "character": 45,
                                        "line": 152,
                                      },
                                      "raw": "4",
                                      "start": Position {
                                        "character": 44,
                                        "line": 152,
                                      },
                                      "type": "NumericLiteral",
                                      "value": 4,
                                    },
                                  ],
                                  "base": ASTIdentifier {
                                    "end": Position {
                                      "character": 35,
                                      "line": 152,
                                    },
                                    "name": "LSHIFT",
                                    "start": Position {
                                      "character": 29,
                                      "line": 152,
                                    },
                                    "type": "Identifier",
                                  },
                                  "end": Position {
                                    "character": 47,
                                    "line": 152,
                                  },
                                  "start": Position {
                                    "character": 35,
                                    "line": 152,
                                  },
                                  "type": "CallExpression",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 50,
                                    "line": 152,
                                  },
                                  "raw": "63",
                                  "start": Position {
                                    "character": 48,
                                    "line": 152,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 63,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 28,
                                  "line": 152,
                                },
                                "name": "AND",
                                "start": Position {
                                  "character": 25,
                                  "line": 152,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 52,
                                "line": 152,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 152,
                              },
                              "type": "CallExpression",
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 24,
                              "line": 152,
                            },
                            "name": "get",
                            "start": Position {
                              "character": 21,
                              "line": 152,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 53,
                            "line": 152,
                          },
                          "start": Position {
                            "character": 24,
                            "line": 152,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 15,
                            "line": 152,
                          },
                          "name": "output",
                          "start": Position {
                            "character": 9,
                            "line": 152,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 21,
                          "line": 152,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 20,
                            "line": 152,
                          },
                          "name": "push",
                          "start": Position {
                            "character": 16,
                            "line": 152,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 15,
                          "line": 152,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 53,
                        "line": 152,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 152,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 152,
                    },
                    "type": "CallStatement",
                  },
                  ASTCallStatement {
                    "end": Position {
                      "character": 26,
                      "line": 153,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTLiteral {
                          "end": Position {
                            "character": 25,
                            "line": 153,
                          },
                          "raw": "\\"==\\"",
                          "start": Position {
                            "character": 21,
                            "line": 153,
                          },
                          "type": "StringLiteral",
                          "value": "==",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 15,
                            "line": 153,
                          },
                          "name": "output",
                          "start": Position {
                            "character": 9,
                            "line": 153,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 21,
                          "line": 153,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 20,
                            "line": 153,
                          },
                          "name": "push",
                          "start": Position {
                            "character": 16,
                            "line": 153,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 15,
                          "line": 153,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 26,
                        "line": 153,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 153,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 153,
                    },
                    "type": "CallStatement",
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 27,
                    "line": 148,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 21,
                      "line": 148,
                    },
                    "name": "padding",
                    "start": Position {
                      "character": 14,
                      "line": 148,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 26,
                      "line": 148,
                    },
                    "raw": "1",
                    "start": Position {
                      "character": 25,
                      "line": 148,
                    },
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                  "start": Position {
                    "character": 22,
                    "line": 148,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 11,
                  "line": 154,
                },
                "start": Position {
                  "character": 13,
                  "line": 148,
                },
                "type": "ElseifClause",
              },
            ],
            "end": Position {
              "character": 11,
              "line": 154,
            },
            "start": Position {
              "character": 5,
              "line": 139,
            },
            "type": "IfStatement",
          },
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTLiteral {
                  "end": Position {
                    "character": 26,
                    "line": 155,
                  },
                  "raw": "\\"\\"",
                  "start": Position {
                    "character": 24,
                    "line": 155,
                  },
                  "type": "StringLiteral",
                  "value": "",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 18,
                    "line": 155,
                  },
                  "name": "output",
                  "start": Position {
                    "character": 12,
                    "line": 155,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 24,
                  "line": 155,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 23,
                    "line": 155,
                  },
                  "name": "join",
                  "start": Position {
                    "character": 19,
                    "line": 155,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 18,
                  "line": 155,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 27,
                "line": 155,
              },
              "start": Position {
                "character": 23,
                "line": 155,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 156,
            },
            "start": Position {
              "character": 5,
              "line": 155,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 156,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 30,
              "line": 103,
            },
            "name": "str",
            "start": Position {
              "character": 27,
              "line": 103,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 34,
              "line": 103,
            },
            "name": "pw",
            "start": Position {
              "character": 32,
              "line": 103,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 18,
          "line": 103,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 103,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 103,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 103,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 17,
          "line": 103,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 15,
            "line": 103,
          },
          "name": "encrypt",
          "start": Position {
            "character": 8,
            "line": 103,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 103,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 202,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 159,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 159,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 159,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 159,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 159,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 159,
              },
              "type": "Identifier",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 47,
                      "line": 160,
                    },
                    "init": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 33,
                          "line": 160,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 31,
                          "line": 160,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 47,
                        "line": 160,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 47,
                          "line": 160,
                        },
                        "name": "defaultSecret",
                        "start": Position {
                          "character": 34,
                          "line": 160,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 33,
                        "line": 160,
                      },
                      "type": "MemberExpression",
                    },
                    "start": Position {
                      "character": 26,
                      "line": 160,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 28,
                        "line": 160,
                      },
                      "name": "pw",
                      "start": Position {
                        "character": 26,
                        "line": 160,
                      },
                      "type": "Identifier",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 20,
                    "line": 160,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 11,
                      "line": 160,
                    },
                    "name": "pw",
                    "start": Position {
                      "character": 9,
                      "line": 160,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 19,
                      "line": 160,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 15,
                      "line": 160,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 12,
                    "line": 160,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 47,
                  "line": 160,
                },
                "start": Position {
                  "character": 5,
                  "line": 160,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 47,
              "line": 160,
            },
            "start": Position {
              "character": 5,
              "line": 160,
            },
            "type": "IfShortcutStatement",
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 26,
              "line": 161,
            },
            "init": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 25,
                    "line": 161,
                  },
                  "name": "pw",
                  "start": Position {
                    "character": 23,
                    "line": 161,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 14,
                    "line": 161,
                  },
                  "name": "me",
                  "start": Position {
                    "character": 12,
                    "line": 161,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 23,
                  "line": 161,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 22,
                    "line": 161,
                  },
                  "name": "getHash",
                  "start": Position {
                    "character": 15,
                    "line": 161,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 14,
                  "line": 161,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 26,
                "line": 161,
              },
              "start": Position {
                "character": 22,
                "line": 161,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 161,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 9,
                "line": 161,
              },
              "name": "hash",
              "start": Position {
                "character": 5,
                "line": 161,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 20,
              "line": 162,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 162,
              },
              "raw": "0",
              "start": Position {
                "character": 19,
                "line": 162,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 162,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 16,
                "line": 162,
              },
              "name": "hashPointer",
              "start": Position {
                "character": 5,
                "line": 162,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 26,
              "line": 163,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 22,
                  "line": 163,
                },
                "name": "hash",
                "start": Position {
                  "character": 18,
                  "line": 163,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 26,
                "line": 163,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 26,
                  "line": 163,
                },
                "name": "len",
                "start": Position {
                  "character": 23,
                  "line": 163,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 22,
                "line": 163,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 163,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 15,
                "line": 163,
              },
              "name": "hashLength",
              "start": Position {
                "character": 5,
                "line": 163,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 16,
              "line": 164,
            },
            "init": ASTListConstructorExpression {
              "end": Position {
                "character": 16,
                "line": 164,
              },
              "fields": Array [],
              "start": Position {
                "character": 14,
                "line": 164,
              },
              "type": "ListConstructorExpression",
            },
            "start": Position {
              "character": 5,
              "line": 164,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 164,
              },
              "name": "output",
              "start": Position {
                "character": 5,
                "line": 164,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 19,
              "line": 165,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 165,
              },
              "raw": "0",
              "start": Position {
                "character": 18,
                "line": 165,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 165,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 15,
                "line": 165,
              },
              "name": "bitCounter",
              "start": Position {
                "character": 5,
                "line": 165,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 19,
              "line": 166,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 166,
              },
              "raw": "0",
              "start": Position {
                "character": 18,
                "line": 166,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 166,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 15,
                "line": 166,
              },
              "name": "bitStorage",
              "start": Position {
                "character": 5,
                "line": 166,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 167,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 17,
                "line": 167,
              },
              "raw": "0",
              "start": Position {
                "character": 16,
                "line": 167,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 167,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 167,
              },
              "name": "position",
              "start": Position {
                "character": 5,
                "line": 167,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 20,
              "line": 168,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 168,
              },
              "raw": "0",
              "start": Position {
                "character": 19,
                "line": 168,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 168,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 16,
                "line": 168,
              },
              "name": "hashPointer",
              "start": Position {
                "character": 5,
                "line": 168,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 18,
              "line": 169,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 14,
                  "line": 169,
                },
                "name": "str",
                "start": Position {
                  "character": 11,
                  "line": 169,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 18,
                "line": 169,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 18,
                  "line": 169,
                },
                "name": "len",
                "start": Position {
                  "character": 15,
                  "line": 169,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 14,
                "line": 169,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 169,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 8,
                "line": 169,
              },
              "name": "max",
              "start": Position {
                "character": 5,
                "line": 169,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 172,
            },
            "init": ASTFunctionStatement {
              "assignments": Array [],
              "body": Array [
                ASTReturnStatement {
                  "argument": ASTCallExpression {
                    "arguments": Array [
                      ASTLiteral {
                        "end": Position {
                          "character": 27,
                          "line": 171,
                        },
                        "raw": "\\"&\\"",
                        "start": Position {
                          "character": 24,
                          "line": 171,
                        },
                        "type": "StringLiteral",
                        "value": "&",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 30,
                          "line": 171,
                        },
                        "name": "a",
                        "start": Position {
                          "character": 29,
                          "line": 171,
                        },
                        "type": "Identifier",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 33,
                          "line": 171,
                        },
                        "name": "b",
                        "start": Position {
                          "character": 32,
                          "line": 171,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 23,
                        "line": 171,
                      },
                      "name": "bitwise",
                      "start": Position {
                        "character": 16,
                        "line": 171,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 34,
                      "line": 171,
                    },
                    "start": Position {
                      "character": 23,
                      "line": 171,
                    },
                    "type": "CallExpression",
                  },
                  "end": Position {
                    "character": 17,
                    "line": 172,
                  },
                  "start": Position {
                    "character": 9,
                    "line": 171,
                  },
                  "type": "ReturnStatement",
                },
              ],
              "end": Position {
                "character": 17,
                "line": 172,
              },
              "namespaces": Set {},
              "parameters": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 170,
                  },
                  "name": "a",
                  "start": Position {
                    "character": 20,
                    "line": 170,
                  },
                  "type": "Identifier",
                },
                ASTIdentifier {
                  "end": Position {
                    "character": 24,
                    "line": 170,
                  },
                  "name": "b",
                  "start": Position {
                    "character": 23,
                    "line": 170,
                  },
                  "type": "Identifier",
                },
              ],
              "start": Position {
                "character": 11,
                "line": 170,
              },
              "type": "FunctionDeclaration",
            },
            "start": Position {
              "character": 5,
              "line": 170,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 8,
                "line": 170,
              },
              "name": "AND",
              "start": Position {
                "character": 5,
                "line": 170,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 175,
            },
            "init": ASTFunctionStatement {
              "assignments": Array [],
              "body": Array [
                ASTReturnStatement {
                  "argument": ASTCallExpression {
                    "arguments": Array [
                      ASTLiteral {
                        "end": Position {
                          "character": 28,
                          "line": 174,
                        },
                        "raw": "\\">>\\"",
                        "start": Position {
                          "character": 24,
                          "line": 174,
                        },
                        "type": "StringLiteral",
                        "value": ">>",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 31,
                          "line": 174,
                        },
                        "name": "a",
                        "start": Position {
                          "character": 30,
                          "line": 174,
                        },
                        "type": "Identifier",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 34,
                          "line": 174,
                        },
                        "name": "b",
                        "start": Position {
                          "character": 33,
                          "line": 174,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 23,
                        "line": 174,
                      },
                      "name": "bitwise",
                      "start": Position {
                        "character": 16,
                        "line": 174,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 35,
                      "line": 174,
                    },
                    "start": Position {
                      "character": 23,
                      "line": 174,
                    },
                    "type": "CallExpression",
                  },
                  "end": Position {
                    "character": 17,
                    "line": 175,
                  },
                  "start": Position {
                    "character": 9,
                    "line": 174,
                  },
                  "type": "ReturnStatement",
                },
              ],
              "end": Position {
                "character": 17,
                "line": 175,
              },
              "namespaces": Set {},
              "parameters": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 24,
                    "line": 173,
                  },
                  "name": "a",
                  "start": Position {
                    "character": 23,
                    "line": 173,
                  },
                  "type": "Identifier",
                },
                ASTIdentifier {
                  "end": Position {
                    "character": 27,
                    "line": 173,
                  },
                  "name": "b",
                  "start": Position {
                    "character": 26,
                    "line": 173,
                  },
                  "type": "Identifier",
                },
              ],
              "start": Position {
                "character": 14,
                "line": 173,
              },
              "type": "FunctionDeclaration",
            },
            "start": Position {
              "character": 5,
              "line": 173,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 173,
              },
              "name": "RSHIFT",
              "start": Position {
                "character": 5,
                "line": 173,
              },
              "type": "Identifier",
            },
          },
          ASTWhileStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 49,
                  "line": 177,
                },
                "init": ASTCallExpression {
                  "arguments": Array [
                    ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 38,
                          "line": 177,
                        },
                        "name": "str",
                        "start": Position {
                          "character": 35,
                          "line": 177,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 49,
                        "line": 177,
                      },
                      "index": ASTIdentifier {
                        "end": Position {
                          "character": 47,
                          "line": 177,
                        },
                        "name": "position",
                        "start": Position {
                          "character": 39,
                          "line": 177,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 39,
                        "line": 177,
                      },
                      "type": "IndexExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 20,
                          "line": 177,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 18,
                          "line": 177,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 27,
                        "line": 177,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 26,
                          "line": 177,
                        },
                        "name": "table",
                        "start": Position {
                          "character": 21,
                          "line": 177,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 20,
                        "line": 177,
                      },
                      "type": "MemberExpression",
                    },
                    "end": Position {
                      "character": 35,
                      "line": 177,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 34,
                        "line": 177,
                      },
                      "name": "indexOf",
                      "start": Position {
                        "character": 27,
                        "line": 177,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 26,
                      "line": 177,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 49,
                    "line": 177,
                  },
                  "start": Position {
                    "character": 34,
                    "line": 177,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 177,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 15,
                    "line": 177,
                  },
                  "name": "buffer",
                  "start": Position {
                    "character": 9,
                    "line": 177,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 32,
                  "line": 178,
                },
                "init": ASTIdentifier {
                  "end": Position {
                    "character": 32,
                    "line": 178,
                  },
                  "name": "bitCounter",
                  "start": Position {
                    "character": 22,
                    "line": 178,
                  },
                  "type": "Identifier",
                },
                "start": Position {
                  "character": 9,
                  "line": 178,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 19,
                    "line": 178,
                  },
                  "name": "currentBit",
                  "start": Position {
                    "character": 9,
                    "line": 178,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 36,
                  "line": 179,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 36,
                    "line": 179,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 32,
                      "line": 179,
                    },
                    "name": "bitCounter",
                    "start": Position {
                      "character": 22,
                      "line": 179,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 36,
                      "line": 179,
                    },
                    "raw": "1",
                    "start": Position {
                      "character": 35,
                      "line": 179,
                    },
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                  "start": Position {
                    "character": 33,
                    "line": 179,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 179,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 19,
                    "line": 179,
                  },
                  "name": "bitCounter",
                  "start": Position {
                    "character": 9,
                    "line": 179,
                  },
                  "type": "Identifier",
                },
              },
              ASTIfStatement {
                "clauses": Array [
                  ASTIfClause {
                    "body": Array [
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 50,
                          "line": 181,
                        },
                        "init": ASTEvaluationExpression {
                          "end": Position {
                            "character": 50,
                            "line": 181,
                          },
                          "left": ASTEvaluationExpression {
                            "end": Position {
                              "character": 43,
                              "line": 181,
                            },
                            "left": ASTIdentifier {
                              "end": Position {
                                "character": 36,
                                "line": 181,
                              },
                              "name": "bitStorage",
                              "start": Position {
                                "character": 26,
                                "line": 181,
                              },
                              "type": "Identifier",
                            },
                            "operator": "*",
                            "right": ASTLiteral {
                              "end": Position {
                                "character": 41,
                                "line": 181,
                              },
                              "raw": "64",
                              "start": Position {
                                "character": 39,
                                "line": 181,
                              },
                              "type": "NumericLiteral",
                              "value": 64,
                            },
                            "start": Position {
                              "character": 37,
                              "line": 181,
                            },
                            "type": "BinaryExpression",
                          },
                          "operator": "+",
                          "right": ASTIdentifier {
                            "end": Position {
                              "character": 50,
                              "line": 181,
                            },
                            "name": "buffer",
                            "start": Position {
                              "character": 44,
                              "line": 181,
                            },
                            "type": "Identifier",
                          },
                          "start": Position {
                            "character": 37,
                            "line": 181,
                          },
                          "type": "BinaryExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 181,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 23,
                            "line": 181,
                          },
                          "name": "bitStorage",
                          "start": Position {
                            "character": 13,
                            "line": 181,
                          },
                          "type": "Identifier",
                        },
                      },
                    ],
                    "condition": ASTEvaluationExpression {
                      "end": Position {
                        "character": 28,
                        "line": 180,
                      },
                      "left": ASTIdentifier {
                        "end": Position {
                          "character": 23,
                          "line": 180,
                        },
                        "name": "currentBit",
                        "start": Position {
                          "character": 13,
                          "line": 180,
                        },
                        "type": "Identifier",
                      },
                      "operator": "%",
                      "right": ASTLiteral {
                        "end": Position {
                          "character": 27,
                          "line": 180,
                        },
                        "raw": "4",
                        "start": Position {
                          "character": 26,
                          "line": 180,
                        },
                        "type": "NumericLiteral",
                        "value": 4,
                      },
                      "start": Position {
                        "character": 24,
                        "line": 180,
                      },
                      "type": "BinaryExpression",
                    },
                    "end": Position {
                      "character": 13,
                      "line": 182,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 180,
                    },
                    "type": "IfClause",
                  },
                  ASTElseClause {
                    "body": Array [
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 32,
                          "line": 183,
                        },
                        "init": ASTIdentifier {
                          "end": Position {
                            "character": 32,
                            "line": 183,
                          },
                          "name": "buffer",
                          "start": Position {
                            "character": 26,
                            "line": 183,
                          },
                          "type": "Identifier",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 183,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 23,
                            "line": 183,
                          },
                          "name": "bitStorage",
                          "start": Position {
                            "character": 13,
                            "line": 183,
                          },
                          "type": "Identifier",
                        },
                      },
                    ],
                    "end": Position {
                      "character": 15,
                      "line": 184,
                    },
                    "start": Position {
                      "character": 13,
                      "line": 182,
                    },
                    "type": "ElseClause",
                  },
                ],
                "end": Position {
                  "character": 15,
                  "line": 184,
                },
                "start": Position {
                  "character": 9,
                  "line": 180,
                },
                "type": "IfStatement",
              },
              ASTIfStatement {
                "clauses": Array [
                  ASTIfClause {
                    "body": Array [
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 78,
                          "line": 186,
                        },
                        "init": ASTEvaluationExpression {
                          "end": Position {
                            "character": 78,
                            "line": 186,
                          },
                          "left": ASTEvaluationExpression {
                            "end": Position {
                              "character": 76,
                              "line": 186,
                            },
                            "left": ASTEvaluationExpression {
                              "end": Position {
                                "character": 61,
                                "line": 186,
                              },
                              "left": ASTCallExpression {
                                "arguments": Array [
                                  ASTEvaluationExpression {
                                    "end": Position {
                                      "character": 56,
                                      "line": 186,
                                    },
                                    "left": ASTIdentifier {
                                      "end": Position {
                                        "character": 51,
                                        "line": 186,
                                      },
                                      "name": "hashPointer",
                                      "start": Position {
                                        "character": 40,
                                        "line": 186,
                                      },
                                      "type": "Identifier",
                                    },
                                    "operator": "/",
                                    "right": ASTLiteral {
                                      "end": Position {
                                        "character": 55,
                                        "line": 186,
                                      },
                                      "raw": "3",
                                      "start": Position {
                                        "character": 54,
                                        "line": 186,
                                      },
                                      "type": "NumericLiteral",
                                      "value": 3,
                                    },
                                    "start": Position {
                                      "character": 52,
                                      "line": 186,
                                    },
                                    "type": "BinaryExpression",
                                  },
                                ],
                                "base": ASTIdentifier {
                                  "end": Position {
                                    "character": 39,
                                    "line": 186,
                                  },
                                  "name": "floor",
                                  "start": Position {
                                    "character": 34,
                                    "line": 186,
                                  },
                                  "type": "Identifier",
                                },
                                "end": Position {
                                  "character": 58,
                                  "line": 186,
                                },
                                "start": Position {
                                  "character": 39,
                                  "line": 186,
                                },
                                "type": "CallExpression",
                              },
                              "operator": "*",
                              "right": ASTLiteral {
                                "end": Position {
                                  "character": 60,
                                  "line": 186,
                                },
                                "raw": "3",
                                "start": Position {
                                  "character": 59,
                                  "line": 186,
                                },
                                "type": "NumericLiteral",
                                "value": 3,
                              },
                              "start": Position {
                                "character": 57,
                                "line": 186,
                              },
                              "type": "BinaryExpression",
                            },
                            "operator": "%",
                            "right": ASTIdentifier {
                              "end": Position {
                                "character": 74,
                                "line": 186,
                              },
                              "name": "hashLength",
                              "start": Position {
                                "character": 64,
                                "line": 186,
                              },
                              "type": "Identifier",
                            },
                            "start": Position {
                              "character": 62,
                              "line": 186,
                            },
                            "type": "BinaryExpression",
                          },
                          "operator": "-",
                          "right": ASTLiteral {
                            "end": Position {
                              "character": 78,
                              "line": 186,
                            },
                            "raw": "1",
                            "start": Position {
                              "character": 77,
                              "line": 186,
                            },
                            "type": "NumericLiteral",
                            "value": 1,
                          },
                          "start": Position {
                            "character": 62,
                            "line": 186,
                          },
                          "type": "BinaryExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 186,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 30,
                            "line": 186,
                          },
                          "name": "expectedHashIndex",
                          "start": Position {
                            "character": 13,
                            "line": 186,
                          },
                          "type": "Identifier",
                        },
                      },
                      ASTIfStatement {
                        "clauses": Array [
                          ASTIfClause {
                            "body": Array [
                              ASTBase {
                                "end": Position {
                                  "character": 65,
                                  "line": 187,
                                },
                                "start": Position {
                                  "character": 60,
                                  "line": 187,
                                },
                                "type": "BreakStatement",
                              },
                            ],
                            "condition": ASTUnaryExpression {
                              "argument": ASTCallExpression {
                                "arguments": Array [
                                  ASTIdentifier {
                                    "end": Position {
                                      "character": 52,
                                      "line": 187,
                                    },
                                    "name": "expectedHashIndex",
                                    "start": Position {
                                      "character": 35,
                                      "line": 187,
                                    },
                                    "type": "Identifier",
                                  },
                                ],
                                "base": ASTMemberExpression {
                                  "base": ASTIdentifier {
                                    "end": Position {
                                      "character": 25,
                                      "line": 187,
                                    },
                                    "name": "hash",
                                    "start": Position {
                                      "character": 21,
                                      "line": 187,
                                    },
                                    "type": "Identifier",
                                  },
                                  "end": Position {
                                    "character": 35,
                                    "line": 187,
                                  },
                                  "identifier": ASTIdentifier {
                                    "end": Position {
                                      "character": 34,
                                      "line": 187,
                                    },
                                    "name": "hasIndex",
                                    "start": Position {
                                      "character": 26,
                                      "line": 187,
                                    },
                                    "type": "Identifier",
                                  },
                                  "indexer": ".",
                                  "start": Position {
                                    "character": 25,
                                    "line": 187,
                                  },
                                  "type": "MemberExpression",
                                },
                                "end": Position {
                                  "character": 54,
                                  "line": 187,
                                },
                                "start": Position {
                                  "character": 34,
                                  "line": 187,
                                },
                                "type": "CallExpression",
                              },
                              "end": Position {
                                "character": 54,
                                "line": 187,
                              },
                              "operator": "not",
                              "start": Position {
                                "character": 17,
                                "line": 187,
                              },
                              "type": "NegationExpression",
                            },
                            "end": Position {
                              "character": 65,
                              "line": 187,
                            },
                            "start": Position {
                              "character": 13,
                              "line": 187,
                            },
                            "type": "IfShortcutClause",
                          },
                        ],
                        "end": Position {
                          "character": 65,
                          "line": 187,
                        },
                        "start": Position {
                          "character": 13,
                          "line": 187,
                        },
                        "type": "IfShortcutStatement",
                      },
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 40,
                          "line": 188,
                        },
                        "init": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 21,
                              "line": 188,
                            },
                            "name": "hash",
                            "start": Position {
                              "character": 17,
                              "line": 188,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 40,
                            "line": 188,
                          },
                          "index": ASTIdentifier {
                            "end": Position {
                              "character": 39,
                              "line": 188,
                            },
                            "name": "expectedHashIndex",
                            "start": Position {
                              "character": 22,
                              "line": 188,
                            },
                            "type": "Identifier",
                          },
                          "start": Position {
                            "character": 22,
                            "line": 188,
                          },
                          "type": "IndexExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 188,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 14,
                            "line": 188,
                          },
                          "name": "m",
                          "start": Position {
                            "character": 13,
                            "line": 188,
                          },
                          "type": "Identifier",
                        },
                      },
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 48,
                          "line": 189,
                        },
                        "init": ASTCallExpression {
                          "arguments": Array [
                            ASTEvaluationExpression {
                              "end": Position {
                                "character": 45,
                                "line": 189,
                              },
                              "left": ASTUnaryExpression {
                                "argument": ASTLiteral {
                                  "end": Position {
                                    "character": 31,
                                    "line": 189,
                                  },
                                  "raw": "2",
                                  "start": Position {
                                    "character": 30,
                                    "line": 189,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 2,
                                },
                                "end": Position {
                                  "character": 33,
                                  "line": 189,
                                },
                                "operator": "-",
                                "start": Position {
                                  "character": 29,
                                  "line": 189,
                                },
                                "type": "BinaryNegatedExpression",
                              },
                              "operator": "*",
                              "right": ASTIdentifier {
                                "end": Position {
                                  "character": 44,
                                  "line": 189,
                                },
                                "name": "bitCounter",
                                "start": Position {
                                  "character": 34,
                                  "line": 189,
                                },
                                "type": "Identifier",
                              },
                              "start": Position {
                                "character": 32,
                                "line": 189,
                              },
                              "type": "BinaryExpression",
                            },
                            ASTLiteral {
                              "end": Position {
                                "character": 47,
                                "line": 189,
                              },
                              "raw": "6",
                              "start": Position {
                                "character": 46,
                                "line": 189,
                              },
                              "type": "NumericLiteral",
                              "value": 6,
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 28,
                              "line": 189,
                            },
                            "name": "AND",
                            "start": Position {
                              "character": 25,
                              "line": 189,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 48,
                            "line": 189,
                          },
                          "start": Position {
                            "character": 28,
                            "line": 189,
                          },
                          "type": "CallExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 189,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 22,
                            "line": 189,
                          },
                          "name": "operation",
                          "start": Position {
                            "character": 13,
                            "line": 189,
                          },
                          "type": "Identifier",
                        },
                      },
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 54,
                          "line": 190,
                        },
                        "init": ASTCallExpression {
                          "arguments": Array [
                            ASTIdentifier {
                              "end": Position {
                                "character": 42,
                                "line": 190,
                              },
                              "name": "bitStorage",
                              "start": Position {
                                "character": 32,
                                "line": 190,
                              },
                              "type": "Identifier",
                            },
                            ASTIdentifier {
                              "end": Position {
                                "character": 53,
                                "line": 190,
                              },
                              "name": "operation",
                              "start": Position {
                                "character": 44,
                                "line": 190,
                              },
                              "type": "Identifier",
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 31,
                              "line": 190,
                            },
                            "name": "RSHIFT",
                            "start": Position {
                              "character": 25,
                              "line": 190,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 54,
                            "line": 190,
                          },
                          "start": Position {
                            "character": 31,
                            "line": 190,
                          },
                          "type": "CallExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 190,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 22,
                            "line": 190,
                          },
                          "name": "operation",
                          "start": Position {
                            "character": 13,
                            "line": 190,
                          },
                          "type": "Identifier",
                        },
                      },
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 44,
                          "line": 191,
                        },
                        "init": ASTCallExpression {
                          "arguments": Array [
                            ASTLiteral {
                              "end": Position {
                                "character": 32,
                                "line": 191,
                              },
                              "raw": "255",
                              "start": Position {
                                "character": 29,
                                "line": 191,
                              },
                              "type": "NumericLiteral",
                              "value": 255,
                            },
                            ASTIdentifier {
                              "end": Position {
                                "character": 43,
                                "line": 191,
                              },
                              "name": "operation",
                              "start": Position {
                                "character": 34,
                                "line": 191,
                              },
                              "type": "Identifier",
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 28,
                              "line": 191,
                            },
                            "name": "AND",
                            "start": Position {
                              "character": 25,
                              "line": 191,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 44,
                            "line": 191,
                          },
                          "start": Position {
                            "character": 28,
                            "line": 191,
                          },
                          "type": "CallExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 191,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 22,
                            "line": 191,
                          },
                          "name": "operation",
                          "start": Position {
                            "character": 13,
                            "line": 191,
                          },
                          "type": "Identifier",
                        },
                      },
                      ASTIfStatement {
                        "clauses": Array [
                          ASTIfClause {
                            "body": Array [
                              ASTAssignmentStatement {
                                "end": Position {
                                  "character": 41,
                                  "line": 193,
                                },
                                "init": ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 41,
                                    "line": 193,
                                  },
                                  "left": ASTIdentifier {
                                    "end": Position {
                                      "character": 37,
                                      "line": 193,
                                    },
                                    "name": "operation",
                                    "start": Position {
                                      "character": 28,
                                      "line": 193,
                                    },
                                    "type": "Identifier",
                                  },
                                  "operator": "-",
                                  "right": ASTIdentifier {
                                    "end": Position {
                                      "character": 41,
                                      "line": 193,
                                    },
                                    "name": "m",
                                    "start": Position {
                                      "character": 40,
                                      "line": 193,
                                    },
                                    "type": "Identifier",
                                  },
                                  "start": Position {
                                    "character": 38,
                                    "line": 193,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "start": Position {
                                  "character": 17,
                                  "line": 193,
                                },
                                "type": "AssignmentStatement",
                                "variable": ASTIdentifier {
                                  "end": Position {
                                    "character": 25,
                                    "line": 193,
                                  },
                                  "name": "charCode",
                                  "start": Position {
                                    "character": 17,
                                    "line": 193,
                                  },
                                  "type": "Identifier",
                                },
                              },
                              ASTIfStatement {
                                "clauses": Array [
                                  ASTIfClause {
                                    "body": Array [
                                      ASTBase {
                                        "end": Position {
                                          "character": 58,
                                          "line": 194,
                                        },
                                        "start": Position {
                                          "character": 53,
                                          "line": 194,
                                        },
                                        "type": "BreakStatement",
                                      },
                                    ],
                                    "condition": ASTEvaluationExpression {
                                      "end": Position {
                                        "character": 47,
                                        "line": 194,
                                      },
                                      "left": ASTIdentifier {
                                        "end": Position {
                                          "character": 29,
                                          "line": 194,
                                        },
                                        "name": "charCode",
                                        "start": Position {
                                          "character": 21,
                                          "line": 194,
                                        },
                                        "type": "Identifier",
                                      },
                                      "operator": ">",
                                      "right": ASTMemberExpression {
                                        "base": ASTIdentifier {
                                          "end": Position {
                                            "character": 34,
                                            "line": 194,
                                          },
                                          "name": "me",
                                          "start": Position {
                                            "character": 32,
                                            "line": 194,
                                          },
                                          "type": "Identifier",
                                        },
                                        "end": Position {
                                          "character": 47,
                                          "line": 194,
                                        },
                                        "identifier": ASTIdentifier {
                                          "end": Position {
                                            "character": 46,
                                            "line": 194,
                                          },
                                          "name": "maxCharCode",
                                          "start": Position {
                                            "character": 35,
                                            "line": 194,
                                          },
                                          "type": "Identifier",
                                        },
                                        "indexer": ".",
                                        "start": Position {
                                          "character": 34,
                                          "line": 194,
                                        },
                                        "type": "MemberExpression",
                                      },
                                      "start": Position {
                                        "character": 30,
                                        "line": 194,
                                      },
                                      "type": "BinaryExpression",
                                    },
                                    "end": Position {
                                      "character": 58,
                                      "line": 194,
                                    },
                                    "start": Position {
                                      "character": 17,
                                      "line": 194,
                                    },
                                    "type": "IfShortcutClause",
                                  },
                                ],
                                "end": Position {
                                  "character": 58,
                                  "line": 194,
                                },
                                "start": Position {
                                  "character": 17,
                                  "line": 194,
                                },
                                "type": "IfShortcutStatement",
                              },
                              ASTCallStatement {
                                "end": Position {
                                  "character": 44,
                                  "line": 195,
                                },
                                "expression": ASTCallExpression {
                                  "arguments": Array [
                                    ASTCallExpression {
                                      "arguments": Array [
                                        ASTIdentifier {
                                          "end": Position {
                                            "character": 42,
                                            "line": 195,
                                          },
                                          "name": "charCode",
                                          "start": Position {
                                            "character": 34,
                                            "line": 195,
                                          },
                                          "type": "Identifier",
                                        },
                                      ],
                                      "base": ASTIdentifier {
                                        "end": Position {
                                          "character": 33,
                                          "line": 195,
                                        },
                                        "name": "char",
                                        "start": Position {
                                          "character": 29,
                                          "line": 195,
                                        },
                                        "type": "Identifier",
                                      },
                                      "end": Position {
                                        "character": 44,
                                        "line": 195,
                                      },
                                      "start": Position {
                                        "character": 33,
                                        "line": 195,
                                      },
                                      "type": "CallExpression",
                                    },
                                  ],
                                  "base": ASTMemberExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 23,
                                        "line": 195,
                                      },
                                      "name": "output",
                                      "start": Position {
                                        "character": 17,
                                        "line": 195,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 29,
                                      "line": 195,
                                    },
                                    "identifier": ASTIdentifier {
                                      "end": Position {
                                        "character": 28,
                                        "line": 195,
                                      },
                                      "name": "push",
                                      "start": Position {
                                        "character": 24,
                                        "line": 195,
                                      },
                                      "type": "Identifier",
                                    },
                                    "indexer": ".",
                                    "start": Position {
                                      "character": 23,
                                      "line": 195,
                                    },
                                    "type": "MemberExpression",
                                  },
                                  "end": Position {
                                    "character": 44,
                                    "line": 195,
                                  },
                                  "start": Position {
                                    "character": 28,
                                    "line": 195,
                                  },
                                  "type": "CallExpression",
                                },
                                "start": Position {
                                  "character": 17,
                                  "line": 195,
                                },
                                "type": "CallStatement",
                              },
                            ],
                            "condition": ASTEvaluationExpression {
                              "end": Position {
                                "character": 32,
                                "line": 192,
                              },
                              "left": ASTIdentifier {
                                "end": Position {
                                  "character": 26,
                                  "line": 192,
                                },
                                "name": "operation",
                                "start": Position {
                                  "character": 17,
                                  "line": 192,
                                },
                                "type": "Identifier",
                              },
                              "operator": "!=",
                              "right": ASTLiteral {
                                "end": Position {
                                  "character": 31,
                                  "line": 192,
                                },
                                "raw": "0",
                                "start": Position {
                                  "character": 30,
                                  "line": 192,
                                },
                                "type": "NumericLiteral",
                                "value": 0,
                              },
                              "start": Position {
                                "character": 27,
                                "line": 192,
                              },
                              "type": "BinaryExpression",
                            },
                            "end": Position {
                              "character": 19,
                              "line": 196,
                            },
                            "start": Position {
                              "character": 13,
                              "line": 192,
                            },
                            "type": "IfClause",
                          },
                        ],
                        "end": Position {
                          "character": 19,
                          "line": 196,
                        },
                        "start": Position {
                          "character": 13,
                          "line": 192,
                        },
                        "type": "IfStatement",
                      },
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 42,
                          "line": 197,
                        },
                        "init": ASTEvaluationExpression {
                          "end": Position {
                            "character": 42,
                            "line": 197,
                          },
                          "left": ASTIdentifier {
                            "end": Position {
                              "character": 38,
                              "line": 197,
                            },
                            "name": "hashPointer",
                            "start": Position {
                              "character": 27,
                              "line": 197,
                            },
                            "type": "Identifier",
                          },
                          "operator": "+",
                          "right": ASTLiteral {
                            "end": Position {
                              "character": 42,
                              "line": 197,
                            },
                            "raw": "1",
                            "start": Position {
                              "character": 41,
                              "line": 197,
                            },
                            "type": "NumericLiteral",
                            "value": 1,
                          },
                          "start": Position {
                            "character": 39,
                            "line": 197,
                          },
                          "type": "BinaryExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 197,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 24,
                            "line": 197,
                          },
                          "name": "hashPointer",
                          "start": Position {
                            "character": 13,
                            "line": 197,
                          },
                          "type": "Identifier",
                        },
                      },
                    ],
                    "condition": ASTEvaluationExpression {
                      "end": Position {
                        "character": 28,
                        "line": 185,
                      },
                      "left": ASTIdentifier {
                        "end": Position {
                          "character": 23,
                          "line": 185,
                        },
                        "name": "currentBit",
                        "start": Position {
                          "character": 13,
                          "line": 185,
                        },
                        "type": "Identifier",
                      },
                      "operator": "%",
                      "right": ASTLiteral {
                        "end": Position {
                          "character": 27,
                          "line": 185,
                        },
                        "raw": "4",
                        "start": Position {
                          "character": 26,
                          "line": 185,
                        },
                        "type": "NumericLiteral",
                        "value": 4,
                      },
                      "start": Position {
                        "character": 24,
                        "line": 185,
                      },
                      "type": "BinaryExpression",
                    },
                    "end": Position {
                      "character": 15,
                      "line": 198,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 185,
                    },
                    "type": "IfClause",
                  },
                ],
                "end": Position {
                  "character": 15,
                  "line": 198,
                },
                "start": Position {
                  "character": 9,
                  "line": 185,
                },
                "type": "IfStatement",
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 32,
                  "line": 199,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 32,
                    "line": 199,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 28,
                      "line": 199,
                    },
                    "name": "position",
                    "start": Position {
                      "character": 20,
                      "line": 199,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 199,
                    },
                    "raw": "1",
                    "start": Position {
                      "character": 31,
                      "line": 199,
                    },
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                  "start": Position {
                    "character": 29,
                    "line": 199,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 199,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 17,
                    "line": 199,
                  },
                  "name": "position",
                  "start": Position {
                    "character": 9,
                    "line": 199,
                  },
                  "type": "Identifier",
                },
              },
            ],
            "condition": ASTEvaluationExpression {
              "end": Position {
                "character": 25,
                "line": 176,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 19,
                  "line": 176,
                },
                "name": "position",
                "start": Position {
                  "character": 11,
                  "line": 176,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": ASTIdentifier {
                "end": Position {
                  "character": 25,
                  "line": 176,
                },
                "name": "max",
                "start": Position {
                  "character": 22,
                  "line": 176,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 20,
                "line": 176,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 14,
              "line": 200,
            },
            "start": Position {
              "character": 5,
              "line": 176,
            },
            "type": "WhileStatement",
          },
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTLiteral {
                  "end": Position {
                    "character": 26,
                    "line": 201,
                  },
                  "raw": "\\"\\"",
                  "start": Position {
                    "character": 24,
                    "line": 201,
                  },
                  "type": "StringLiteral",
                  "value": "",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 18,
                    "line": 201,
                  },
                  "name": "output",
                  "start": Position {
                    "character": 12,
                    "line": 201,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 24,
                  "line": 201,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 23,
                    "line": 201,
                  },
                  "name": "join",
                  "start": Position {
                    "character": 19,
                    "line": 201,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 18,
                  "line": 201,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 27,
                "line": 201,
              },
              "start": Position {
                "character": 23,
                "line": 201,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 202,
            },
            "start": Position {
              "character": 5,
              "line": 201,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 202,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 30,
              "line": 158,
            },
            "name": "str",
            "start": Position {
              "character": 27,
              "line": 158,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 34,
              "line": 158,
            },
            "name": "pw",
            "start": Position {
              "character": 32,
              "line": 158,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 18,
          "line": 158,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 158,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 158,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 158,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 17,
          "line": 158,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 15,
            "line": 158,
          },
          "name": "decrypt",
          "start": Position {
            "character": 8,
            "line": 158,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 158,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 40,
        "line": 204,
      },
      "init": ASTCallExpression {
        "arguments": Array [
          ASTLiteral {
            "end": Position {
              "character": 39,
              "line": 204,
            },
            "raw": "\\"test\\"",
            "start": Position {
              "character": 33,
              "line": 204,
            },
            "type": "StringLiteral",
            "value": "test",
          },
        ],
        "base": ASTMemberExpression {
          "base": ASTUnaryExpression {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 19,
                "line": 204,
              },
              "name": "Crypto",
              "start": Position {
                "character": 13,
                "line": 204,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 20,
              "line": 204,
            },
            "operator": "new",
            "start": Position {
              "character": 9,
              "line": 204,
            },
            "type": "UnaryExpression",
          },
          "end": Position {
            "character": 33,
            "line": 204,
          },
          "identifier": ASTIdentifier {
            "end": Position {
              "character": 32,
              "line": 204,
            },
            "name": "constructor",
            "start": Position {
              "character": 21,
              "line": 204,
            },
            "type": "Identifier",
          },
          "indexer": ".",
          "start": Position {
            "character": 20,
            "line": 204,
          },
          "type": "MemberExpression",
        },
        "end": Position {
          "character": 40,
          "line": 204,
        },
        "start": Position {
          "character": 32,
          "line": 204,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 204,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 5,
          "line": 204,
        },
        "name": "test",
        "start": Position {
          "character": 1,
          "line": 204,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 14,
        "line": 206,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 14,
          "line": 206,
        },
        "raw": "\\"abcde\\"",
        "start": Position {
          "character": 7,
          "line": 206,
        },
        "type": "StringLiteral",
        "value": "abcde",
      },
      "start": Position {
        "character": 1,
        "line": 206,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 4,
          "line": 206,
        },
        "name": "pwd",
        "start": Position {
          "character": 1,
          "line": 206,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 24,
        "line": 208,
      },
      "init": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 23,
              "line": 208,
            },
            "name": "pwd",
            "start": Position {
              "character": 20,
              "line": 208,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTMemberExpression {
          "base": ASTIdentifier {
            "end": Position {
              "character": 11,
              "line": 208,
            },
            "name": "test",
            "start": Position {
              "character": 7,
              "line": 208,
            },
            "type": "Identifier",
          },
          "end": Position {
            "character": 20,
            "line": 208,
          },
          "identifier": ASTIdentifier {
            "end": Position {
              "character": 19,
              "line": 208,
            },
            "name": "encrypt",
            "start": Position {
              "character": 12,
              "line": 208,
            },
            "type": "Identifier",
          },
          "indexer": ".",
          "start": Position {
            "character": 11,
            "line": 208,
          },
          "type": "MemberExpression",
        },
        "end": Position {
          "character": 24,
          "line": 208,
        },
        "start": Position {
          "character": 19,
          "line": 208,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 208,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 4,
          "line": 208,
        },
        "name": "foo",
        "start": Position {
          "character": 1,
          "line": 208,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 30,
        "line": 209,
      },
      "init": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 29,
              "line": 209,
            },
            "name": "foo",
            "start": Position {
              "character": 26,
              "line": 209,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTMemberExpression {
          "base": ASTIdentifier {
            "end": Position {
              "character": 17,
              "line": 209,
            },
            "name": "test",
            "start": Position {
              "character": 13,
              "line": 209,
            },
            "type": "Identifier",
          },
          "end": Position {
            "character": 26,
            "line": 209,
          },
          "identifier": ASTIdentifier {
            "end": Position {
              "character": 25,
              "line": 209,
            },
            "name": "decrypt",
            "start": Position {
              "character": 18,
              "line": 209,
            },
            "type": "Identifier",
          },
          "indexer": ".",
          "start": Position {
            "character": 17,
            "line": 209,
          },
          "type": "MemberExpression",
        },
        "end": Position {
          "character": 30,
          "line": 209,
        },
        "start": Position {
          "character": 25,
          "line": 209,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 209,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 10,
          "line": 209,
        },
        "name": "decrypted",
        "start": Position {
          "character": 1,
          "line": 209,
        },
        "type": "Identifier",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 11,
        "line": 211,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 10,
              "line": 211,
            },
            "name": "foo",
            "start": Position {
              "character": 7,
              "line": 211,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 211,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 211,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 211,
        },
        "start": Position {
          "character": 6,
          "line": 211,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 211,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 17,
        "line": 212,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 16,
              "line": 212,
            },
            "name": "decrypted",
            "start": Position {
              "character": 7,
              "line": 212,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 212,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 212,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 17,
          "line": 212,
        },
        "start": Position {
          "character": 6,
          "line": 212,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 212,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 1,
    "line": 213,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 10,
      },
      "raw": "0",
      "start": Position {
        "character": 13,
        "line": 10,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 36,
        "line": 14,
      },
      "raw": "\\"$\\"",
      "start": Position {
        "character": 33,
        "line": 14,
      },
      "type": "StringLiteral",
      "value": "$",
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 15,
      },
      "raw": "1",
      "start": Position {
        "character": 25,
        "line": 15,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 22,
      },
      "raw": "0",
      "start": Position {
        "character": 37,
        "line": 22,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 23,
        "line": 64,
      },
      "raw": "null",
      "start": Position {
        "character": 19,
        "line": 64,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 71,
      },
      "raw": "\\"<color=#ff0000>\\"",
      "start": Position {
        "character": 10,
        "line": 71,
      },
      "type": "StringLiteral",
      "value": "<color=#ff0000>",
    },
    ASTLiteral {
      "end": Position {
        "character": 55,
        "line": 71,
      },
      "raw": "\\"</color>\\"",
      "start": Position {
        "character": 45,
        "line": 71,
      },
      "type": "StringLiteral",
      "value": "</color>",
    },
    ASTLiteral {
      "end": Position {
        "character": 91,
        "line": 76,
      },
      "raw": "\\"QWERTZUIOPASDFGHJKLYXCVBNMqwertzuiopasdfghjklyxcvbnm1234567890+-\\"",
      "start": Position {
        "character": 25,
        "line": 76,
      },
      "type": "StringLiteral",
      "value": "QWERTZUIOPASDFGHJKLYXCVBNMqwertzuiopasdfghjklyxcvbnm1234567890+-",
    },
    ASTLiteral {
      "end": Position {
        "character": 33,
        "line": 77,
      },
      "raw": "\\"test123\\"",
      "start": Position {
        "character": 24,
        "line": 77,
      },
      "type": "StringLiteral",
      "value": "test123",
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 78,
      },
      "raw": "55295",
      "start": Position {
        "character": 22,
        "line": 78,
      },
      "type": "NumericLiteral",
      "value": 55295,
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 86,
      },
      "raw": "null",
      "start": Position {
        "character": 20,
        "line": 86,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 23,
        "line": 87,
      },
      "raw": "null",
      "start": Position {
        "character": 19,
        "line": 87,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 88,
      },
      "raw": "64",
      "start": Position {
        "character": 24,
        "line": 88,
      },
      "type": "NumericLiteral",
      "value": 64,
    },
    ASTLiteral {
      "end": Position {
        "character": 82,
        "line": 88,
      },
      "raw": "\\"Invalid charset $0...\\"",
      "start": Position {
        "character": 59,
        "line": 88,
      },
      "type": "StringLiteral",
      "value": "Invalid charset $0...",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 105,
      },
      "raw": "null",
      "start": Position {
        "character": 15,
        "line": 105,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 107,
      },
      "raw": "0",
      "start": Position {
        "character": 19,
        "line": 107,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 109,
      },
      "raw": "0",
      "start": Position {
        "character": 16,
        "line": 109,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 110,
      },
      "raw": "3",
      "start": Position {
        "character": 25,
        "line": 110,
      },
      "type": "NumericLiteral",
      "value": 3,
    },
    ASTLiteral {
      "end": Position {
        "character": 61,
        "line": 114,
      },
      "raw": "\\"Invalid index $0...\\"",
      "start": Position {
        "character": 40,
        "line": 114,
      },
      "type": "StringLiteral",
      "value": "Invalid index $0...",
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 119,
      },
      "raw": "\\"&\\"",
      "start": Position {
        "character": 24,
        "line": 119,
      },
      "type": "StringLiteral",
      "value": "&",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 122,
      },
      "raw": "\\"<<\\"",
      "start": Position {
        "character": 24,
        "line": 122,
      },
      "type": "StringLiteral",
      "value": "<<",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 125,
      },
      "raw": "\\">>\\"",
      "start": Position {
        "character": 24,
        "line": 125,
      },
      "type": "StringLiteral",
      "value": ">>",
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 128,
      },
      "raw": "1",
      "start": Position {
        "character": 40,
        "line": 128,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 46,
        "line": 129,
      },
      "raw": "16",
      "start": Position {
        "character": 44,
        "line": 129,
      },
      "type": "NumericLiteral",
      "value": 16,
    },
    ASTLiteral {
      "end": Position {
        "character": 36,
        "line": 130,
      },
      "raw": "1",
      "start": Position {
        "character": 35,
        "line": 130,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 49,
        "line": 130,
      },
      "raw": "8",
      "start": Position {
        "character": 48,
        "line": 130,
      },
      "type": "NumericLiteral",
      "value": 8,
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 131,
      },
      "raw": "2",
      "start": Position {
        "character": 28,
        "line": 131,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 46,
        "line": 133,
      },
      "raw": "18",
      "start": Position {
        "character": 44,
        "line": 133,
      },
      "type": "NumericLiteral",
      "value": 18,
    },
    ASTLiteral {
      "end": Position {
        "character": 51,
        "line": 133,
      },
      "raw": "63",
      "start": Position {
        "character": 49,
        "line": 133,
      },
      "type": "NumericLiteral",
      "value": 63,
    },
    ASTLiteral {
      "end": Position {
        "character": 46,
        "line": 134,
      },
      "raw": "12",
      "start": Position {
        "character": 44,
        "line": 134,
      },
      "type": "NumericLiteral",
      "value": 12,
    },
    ASTLiteral {
      "end": Position {
        "character": 51,
        "line": 134,
      },
      "raw": "63",
      "start": Position {
        "character": 49,
        "line": 134,
      },
      "type": "NumericLiteral",
      "value": 63,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 135,
      },
      "raw": "6",
      "start": Position {
        "character": 44,
        "line": 135,
      },
      "type": "NumericLiteral",
      "value": 6,
    },
    ASTLiteral {
      "end": Position {
        "character": 50,
        "line": 135,
      },
      "raw": "63",
      "start": Position {
        "character": 48,
        "line": 135,
      },
      "type": "NumericLiteral",
      "value": 63,
    },
    ASTLiteral {
      "end": Position {
        "character": 39,
        "line": 136,
      },
      "raw": "63",
      "start": Position {
        "character": 37,
        "line": 136,
      },
      "type": "NumericLiteral",
      "value": 63,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 137,
      },
      "raw": "3",
      "start": Position {
        "character": 31,
        "line": 137,
      },
      "type": "NumericLiteral",
      "value": 3,
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 139,
      },
      "raw": "2",
      "start": Position {
        "character": 20,
        "line": 139,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 140,
      },
      "raw": "1",
      "start": Position {
        "character": 40,
        "line": 140,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 141,
      },
      "raw": "8",
      "start": Position {
        "character": 44,
        "line": 141,
      },
      "type": "NumericLiteral",
      "value": 8,
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 142,
      },
      "raw": "1",
      "start": Position {
        "character": 28,
        "line": 142,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 42,
        "line": 144,
      },
      "raw": "10",
      "start": Position {
        "character": 40,
        "line": 144,
      },
      "type": "NumericLiteral",
      "value": 10,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 145,
      },
      "raw": "4",
      "start": Position {
        "character": 44,
        "line": 145,
      },
      "type": "NumericLiteral",
      "value": 4,
    },
    ASTLiteral {
      "end": Position {
        "character": 50,
        "line": 145,
      },
      "raw": "63",
      "start": Position {
        "character": 48,
        "line": 145,
      },
      "type": "NumericLiteral",
      "value": 63,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 146,
      },
      "raw": "2",
      "start": Position {
        "character": 44,
        "line": 146,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 50,
        "line": 146,
      },
      "raw": "63",
      "start": Position {
        "character": 48,
        "line": 146,
      },
      "type": "NumericLiteral",
      "value": 63,
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 147,
      },
      "raw": "\\"=\\"",
      "start": Position {
        "character": 21,
        "line": 147,
      },
      "type": "StringLiteral",
      "value": "=",
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 148,
      },
      "raw": "1",
      "start": Position {
        "character": 25,
        "line": 148,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 149,
      },
      "raw": "1",
      "start": Position {
        "character": 40,
        "line": 149,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 151,
      },
      "raw": "2",
      "start": Position {
        "character": 40,
        "line": 151,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 152,
      },
      "raw": "4",
      "start": Position {
        "character": 44,
        "line": 152,
      },
      "type": "NumericLiteral",
      "value": 4,
    },
    ASTLiteral {
      "end": Position {
        "character": 50,
        "line": 152,
      },
      "raw": "63",
      "start": Position {
        "character": 48,
        "line": 152,
      },
      "type": "NumericLiteral",
      "value": 63,
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 153,
      },
      "raw": "\\"==\\"",
      "start": Position {
        "character": 21,
        "line": 153,
      },
      "type": "StringLiteral",
      "value": "==",
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 155,
      },
      "raw": "\\"\\"",
      "start": Position {
        "character": 24,
        "line": 155,
      },
      "type": "StringLiteral",
      "value": "",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 160,
      },
      "raw": "null",
      "start": Position {
        "character": 15,
        "line": 160,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 162,
      },
      "raw": "0",
      "start": Position {
        "character": 19,
        "line": 162,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 165,
      },
      "raw": "0",
      "start": Position {
        "character": 18,
        "line": 165,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 166,
      },
      "raw": "0",
      "start": Position {
        "character": 18,
        "line": 166,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 167,
      },
      "raw": "0",
      "start": Position {
        "character": 16,
        "line": 167,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 168,
      },
      "raw": "0",
      "start": Position {
        "character": 19,
        "line": 168,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 171,
      },
      "raw": "\\"&\\"",
      "start": Position {
        "character": 24,
        "line": 171,
      },
      "type": "StringLiteral",
      "value": "&",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 174,
      },
      "raw": "\\">>\\"",
      "start": Position {
        "character": 24,
        "line": 174,
      },
      "type": "StringLiteral",
      "value": ">>",
    },
    ASTLiteral {
      "end": Position {
        "character": 36,
        "line": 179,
      },
      "raw": "1",
      "start": Position {
        "character": 35,
        "line": 179,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 180,
      },
      "raw": "4",
      "start": Position {
        "character": 26,
        "line": 180,
      },
      "type": "NumericLiteral",
      "value": 4,
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 181,
      },
      "raw": "64",
      "start": Position {
        "character": 39,
        "line": 181,
      },
      "type": "NumericLiteral",
      "value": 64,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 185,
      },
      "raw": "4",
      "start": Position {
        "character": 26,
        "line": 185,
      },
      "type": "NumericLiteral",
      "value": 4,
    },
    ASTLiteral {
      "end": Position {
        "character": 55,
        "line": 186,
      },
      "raw": "3",
      "start": Position {
        "character": 54,
        "line": 186,
      },
      "type": "NumericLiteral",
      "value": 3,
    },
    ASTLiteral {
      "end": Position {
        "character": 60,
        "line": 186,
      },
      "raw": "3",
      "start": Position {
        "character": 59,
        "line": 186,
      },
      "type": "NumericLiteral",
      "value": 3,
    },
    ASTLiteral {
      "end": Position {
        "character": 78,
        "line": 186,
      },
      "raw": "1",
      "start": Position {
        "character": 77,
        "line": 186,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 189,
      },
      "raw": "2",
      "start": Position {
        "character": 30,
        "line": 189,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 47,
        "line": 189,
      },
      "raw": "6",
      "start": Position {
        "character": 46,
        "line": 189,
      },
      "type": "NumericLiteral",
      "value": 6,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 191,
      },
      "raw": "255",
      "start": Position {
        "character": 29,
        "line": 191,
      },
      "type": "NumericLiteral",
      "value": 255,
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 192,
      },
      "raw": "0",
      "start": Position {
        "character": 30,
        "line": 192,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 42,
        "line": 197,
      },
      "raw": "1",
      "start": Position {
        "character": 41,
        "line": 197,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 199,
      },
      "raw": "1",
      "start": Position {
        "character": 31,
        "line": 199,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 201,
      },
      "raw": "\\"\\"",
      "start": Position {
        "character": 24,
        "line": 201,
      },
      "type": "StringLiteral",
      "value": "",
    },
    ASTLiteral {
      "end": Position {
        "character": 39,
        "line": 204,
      },
      "raw": "\\"test\\"",
      "start": Position {
        "character": 33,
        "line": 204,
      },
      "type": "StringLiteral",
      "value": "test",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 206,
      },
      "raw": "\\"abcde\\"",
      "start": Position {
        "character": 7,
        "line": 206,
      },
      "type": "StringLiteral",
      "value": "abcde",
    },
  ],
  "namespaces": Set {
    "String",
    "constructor",
    "parse",
    "values",
    "result",
    "index",
    "maxIndex",
    "len",
    "replace",
    "startsWith",
    "indexOf",
    "substr",
    "startIndex",
    "endIndex",
    "newStr",
    "remove",
    "toString",
    "length",
    "split",
    "seperator",
    "trim",
    "Error",
    "message",
    "m",
    "throw",
    "Crypto",
    "defaultCharset",
    "defaultSecret",
    "maxCharCode",
    "hashFn",
    "charset",
    "me",
    "table",
    "getHash",
    "pw",
    "x",
    "push",
    "code",
    "reverse",
    "encrypt",
    "hashPointer",
    "output",
    "position",
    "padding",
    "max",
    "get",
    "v",
    "AND",
    "a",
    "b",
    "LSHIFT",
    "RSHIFT",
    "c",
    "buffer",
    "join",
    "decrypt",
    "hashLength",
    "bitCounter",
    "bitStorage",
    "currentBit",
    "expectedHashIndex",
    "operation",
    "charCode",
    "test",
    "pwd",
    "foo",
    "decrypted",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts pseudo-crypto.src unsafe 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 12,
        "line": 1,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 12,
          "line": 1,
        },
        "fields": Array [],
        "start": Position {
          "character": 10,
          "line": 1,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 1,
        },
        "name": "String",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 6,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 19,
              "line": 4,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 19,
                "line": 4,
              },
              "name": "str",
              "start": Position {
                "character": 16,
                "line": 4,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 4,
            },
            "type": "AssignmentStatement",
            "variable": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 9,
                  "line": 4,
                },
                "name": "self",
                "start": Position {
                  "character": 5,
                  "line": 4,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 15,
                "line": 4,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 13,
                  "line": 4,
                },
                "name": "str",
                "start": Position {
                  "character": 10,
                  "line": 4,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 9,
                "line": 4,
              },
              "type": "MemberExpression",
            },
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 16,
                "line": 5,
              },
              "name": "self",
              "start": Position {
                "character": 12,
                "line": 5,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 6,
            },
            "start": Position {
              "character": 5,
              "line": 5,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 6,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 34,
              "line": 3,
            },
            "name": "str",
            "start": Position {
              "character": 31,
              "line": 3,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 22,
          "line": 3,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 3,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 3,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 21,
          "line": 3,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 19,
            "line": 3,
          },
          "name": "constructor",
          "start": Position {
            "character": 8,
            "line": 3,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 3,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 19,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 22,
              "line": 9,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 18,
                  "line": 9,
                },
                "name": "self",
                "start": Position {
                  "character": 14,
                  "line": 9,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 22,
                "line": 9,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 22,
                  "line": 9,
                },
                "name": "str",
                "start": Position {
                  "character": 19,
                  "line": 9,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 18,
                "line": 9,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 9,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 9,
              },
              "name": "result",
              "start": Position {
                "character": 5,
                "line": 9,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 10,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 14,
                "line": 10,
              },
              "raw": "0",
              "start": Position {
                "character": 13,
                "line": 10,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 10,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 10,
              },
              "name": "index",
              "start": Position {
                "character": 5,
                "line": 10,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 26,
              "line": 11,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 22,
                  "line": 11,
                },
                "name": "values",
                "start": Position {
                  "character": 16,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 26,
                "line": 11,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 26,
                  "line": 11,
                },
                "name": "len",
                "start": Position {
                  "character": 23,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 22,
                "line": 11,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 11,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 11,
              },
              "name": "maxIndex",
              "start": Position {
                "character": 5,
                "line": 11,
              },
              "type": "Identifier",
            },
          },
          ASTWhileStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 58,
                  "line": 14,
                },
                "init": ASTCallExpression {
                  "arguments": Array [
                    ASTEvaluationExpression {
                      "end": Position {
                        "character": 43,
                        "line": 14,
                      },
                      "left": ASTLiteral {
                        "end": Position {
                          "character": 36,
                          "line": 14,
                        },
                        "raw": "\\"$\\"",
                        "start": Position {
                          "character": 33,
                          "line": 14,
                        },
                        "type": "StringLiteral",
                        "value": "$",
                      },
                      "operator": "+",
                      "right": ASTIdentifier {
                        "end": Position {
                          "character": 42,
                          "line": 14,
                        },
                        "name": "index",
                        "start": Position {
                          "character": 37,
                          "line": 14,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 36,
                        "line": 14,
                      },
                      "type": "BinaryExpression",
                    },
                    ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 50,
                          "line": 14,
                        },
                        "name": "values",
                        "start": Position {
                          "character": 44,
                          "line": 14,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 58,
                        "line": 14,
                      },
                      "index": ASTIdentifier {
                        "end": Position {
                          "character": 56,
                          "line": 14,
                        },
                        "name": "index",
                        "start": Position {
                          "character": 51,
                          "line": 14,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 51,
                        "line": 14,
                      },
                      "type": "IndexExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 24,
                        "line": 14,
                      },
                      "name": "result",
                      "start": Position {
                        "character": 18,
                        "line": 14,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 33,
                      "line": 14,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 32,
                        "line": 14,
                      },
                      "name": "replace",
                      "start": Position {
                        "character": 25,
                        "line": 14,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 24,
                      "line": 14,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 58,
                    "line": 14,
                  },
                  "start": Position {
                    "character": 32,
                    "line": 14,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 14,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 15,
                    "line": 14,
                  },
                  "name": "result",
                  "start": Position {
                    "character": 9,
                    "line": 14,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 26,
                  "line": 15,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 26,
                    "line": 15,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 22,
                      "line": 15,
                    },
                    "name": "index",
                    "start": Position {
                      "character": 17,
                      "line": 15,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 26,
                      "line": 15,
                    },
                    "raw": "1",
                    "start": Position {
                      "character": 25,
                      "line": 15,
                    },
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                  "start": Position {
                    "character": 23,
                    "line": 15,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 15,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 14,
                    "line": 15,
                  },
                  "name": "index",
                  "start": Position {
                    "character": 9,
                    "line": 15,
                  },
                  "type": "Identifier",
                },
              },
            ],
            "condition": ASTEvaluationExpression {
              "end": Position {
                "character": 27,
                "line": 13,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 16,
                  "line": 13,
                },
                "name": "index",
                "start": Position {
                  "character": 11,
                  "line": 13,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": ASTIdentifier {
                "end": Position {
                  "character": 27,
                  "line": 13,
                },
                "name": "maxIndex",
                "start": Position {
                  "character": 19,
                  "line": 13,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 17,
                "line": 13,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 14,
              "line": 16,
            },
            "start": Position {
              "character": 5,
              "line": 13,
            },
            "type": "WhileStatement",
          },
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 41,
                    "line": 18,
                  },
                  "name": "result",
                  "start": Position {
                    "character": 35,
                    "line": 18,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTUnaryExpression {
                  "argument": ASTIdentifier {
                    "end": Position {
                      "character": 21,
                      "line": 18,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 17,
                      "line": 18,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 22,
                    "line": 18,
                  },
                  "operator": "new",
                  "start": Position {
                    "character": 13,
                    "line": 18,
                  },
                  "type": "UnaryExpression",
                },
                "end": Position {
                  "character": 35,
                  "line": 18,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 34,
                    "line": 18,
                  },
                  "name": "constructor",
                  "start": Position {
                    "character": 23,
                    "line": 18,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 22,
                  "line": 18,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 42,
                "line": 18,
              },
              "start": Position {
                "character": 34,
                "line": 18,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 19,
            },
            "start": Position {
              "character": 5,
              "line": 18,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 19,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 31,
              "line": 8,
            },
            "name": "values",
            "start": Position {
              "character": 25,
              "line": 8,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 16,
          "line": 8,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 8,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 8,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 8,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 15,
          "line": 8,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 8,
          },
          "name": "parse",
          "start": Position {
            "character": 8,
            "line": 8,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 8,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 23,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTEvaluationExpression {
              "end": Position {
                "character": 38,
                "line": 22,
              },
              "left": ASTCallExpression {
                "arguments": Array [
                  ASTIdentifier {
                    "end": Position {
                      "character": 32,
                      "line": 22,
                    },
                    "name": "str",
                    "start": Position {
                      "character": 29,
                      "line": 22,
                    },
                    "type": "Identifier",
                  },
                ],
                "base": ASTMemberExpression {
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 16,
                        "line": 22,
                      },
                      "name": "self",
                      "start": Position {
                        "character": 12,
                        "line": 22,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 21,
                      "line": 22,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 22,
                      },
                      "name": "str",
                      "start": Position {
                        "character": 17,
                        "line": 22,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 16,
                      "line": 22,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 29,
                    "line": 22,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 28,
                      "line": 22,
                    },
                    "name": "indexOf",
                    "start": Position {
                      "character": 21,
                      "line": 22,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 20,
                    "line": 22,
                  },
                  "type": "MemberExpression",
                },
                "end": Position {
                  "character": 36,
                  "line": 22,
                },
                "start": Position {
                  "character": 28,
                  "line": 22,
                },
                "type": "CallExpression",
              },
              "operator": "==",
              "right": ASTLiteral {
                "end": Position {
                  "character": 38,
                  "line": 22,
                },
                "raw": "0",
                "start": Position {
                  "character": 37,
                  "line": 22,
                },
                "type": "NumericLiteral",
                "value": 0,
              },
              "start": Position {
                "character": 34,
                "line": 22,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 13,
              "line": 23,
            },
            "start": Position {
              "character": 5,
              "line": 22,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 23,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 33,
              "line": 21,
            },
            "name": "str",
            "start": Position {
              "character": 30,
              "line": 21,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 21,
          "line": 21,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 21,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 21,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 21,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 20,
          "line": 21,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 21,
          },
          "name": "startsWith",
          "start": Position {
            "character": 8,
            "line": 21,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 21,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 27,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTCallExpression {
                  "arguments": Array [
                    ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 45,
                          "line": 26,
                        },
                        "name": "self",
                        "start": Position {
                          "character": 41,
                          "line": 26,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 50,
                        "line": 26,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 49,
                          "line": 26,
                        },
                        "name": "str",
                        "start": Position {
                          "character": 46,
                          "line": 26,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 45,
                        "line": 26,
                      },
                      "type": "MemberExpression",
                    },
                    ASTIdentifier {
                      "end": Position {
                        "character": 61,
                        "line": 26,
                      },
                      "name": "startIndex",
                      "start": Position {
                        "character": 51,
                        "line": 26,
                      },
                      "type": "Identifier",
                    },
                    ASTIdentifier {
                      "end": Position {
                        "character": 71,
                        "line": 26,
                      },
                      "name": "endIndex",
                      "start": Position {
                        "character": 63,
                        "line": 26,
                      },
                      "type": "Identifier",
                    },
                  ],
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 40,
                      "line": 26,
                    },
                    "name": "slice",
                    "start": Position {
                      "character": 35,
                      "line": 26,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 73,
                    "line": 26,
                  },
                  "start": Position {
                    "character": 40,
                    "line": 26,
                  },
                  "type": "CallExpression",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTUnaryExpression {
                  "argument": ASTIdentifier {
                    "end": Position {
                      "character": 21,
                      "line": 26,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 17,
                      "line": 26,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 22,
                    "line": 26,
                  },
                  "operator": "new",
                  "start": Position {
                    "character": 13,
                    "line": 26,
                  },
                  "type": "UnaryExpression",
                },
                "end": Position {
                  "character": 35,
                  "line": 26,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 34,
                    "line": 26,
                  },
                  "name": "constructor",
                  "start": Position {
                    "character": 23,
                    "line": 26,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 22,
                  "line": 26,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 73,
                "line": 26,
              },
              "start": Position {
                "character": 34,
                "line": 26,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 27,
            },
            "start": Position {
              "character": 5,
              "line": 26,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 27,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 36,
              "line": 25,
            },
            "name": "startIndex",
            "start": Position {
              "character": 26,
              "line": 25,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 46,
              "line": 25,
            },
            "name": "endIndex",
            "start": Position {
              "character": 38,
              "line": 25,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 17,
          "line": 25,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 25,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 25,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 25,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 16,
          "line": 25,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 14,
            "line": 25,
          },
          "name": "substr",
          "start": Position {
            "character": 8,
            "line": 25,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 25,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 31,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 32,
                    "line": 30,
                  },
                  "name": "str",
                  "start": Position {
                    "character": 29,
                    "line": 30,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 16,
                      "line": 30,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 12,
                      "line": 30,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 21,
                    "line": 30,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 20,
                      "line": 30,
                    },
                    "name": "str",
                    "start": Position {
                      "character": 17,
                      "line": 30,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 16,
                    "line": 30,
                  },
                  "type": "MemberExpression",
                },
                "end": Position {
                  "character": 29,
                  "line": 30,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 28,
                    "line": 30,
                  },
                  "name": "indexOf",
                  "start": Position {
                    "character": 21,
                    "line": 30,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 20,
                  "line": 30,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 33,
                "line": 30,
              },
              "start": Position {
                "character": 28,
                "line": 30,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 31,
            },
            "start": Position {
              "character": 5,
              "line": 30,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 31,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 30,
              "line": 29,
            },
            "name": "str",
            "start": Position {
              "character": 27,
              "line": 29,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 18,
          "line": 29,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 29,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 29,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 29,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 17,
          "line": 29,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 15,
            "line": 29,
          },
          "name": "indexOf",
          "start": Position {
            "character": 8,
            "line": 29,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 29,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 35,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTCallExpression {
                  "arguments": Array [
                    ASTIdentifier {
                      "end": Position {
                        "character": 55,
                        "line": 34,
                      },
                      "name": "str",
                      "start": Position {
                        "character": 52,
                        "line": 34,
                      },
                      "type": "Identifier",
                    },
                    ASTIdentifier {
                      "end": Position {
                        "character": 63,
                        "line": 34,
                      },
                      "name": "newStr",
                      "start": Position {
                        "character": 57,
                        "line": 34,
                      },
                      "type": "Identifier",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 39,
                          "line": 34,
                        },
                        "name": "self",
                        "start": Position {
                          "character": 35,
                          "line": 34,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 44,
                        "line": 34,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 43,
                          "line": 34,
                        },
                        "name": "str",
                        "start": Position {
                          "character": 40,
                          "line": 34,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 39,
                        "line": 34,
                      },
                      "type": "MemberExpression",
                    },
                    "end": Position {
                      "character": 52,
                      "line": 34,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 51,
                        "line": 34,
                      },
                      "name": "replace",
                      "start": Position {
                        "character": 44,
                        "line": 34,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 43,
                      "line": 34,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 65,
                    "line": 34,
                  },
                  "start": Position {
                    "character": 51,
                    "line": 34,
                  },
                  "type": "CallExpression",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTUnaryExpression {
                  "argument": ASTIdentifier {
                    "end": Position {
                      "character": 21,
                      "line": 34,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 17,
                      "line": 34,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 22,
                    "line": 34,
                  },
                  "operator": "new",
                  "start": Position {
                    "character": 13,
                    "line": 34,
                  },
                  "type": "UnaryExpression",
                },
                "end": Position {
                  "character": 35,
                  "line": 34,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 34,
                    "line": 34,
                  },
                  "name": "constructor",
                  "start": Position {
                    "character": 23,
                    "line": 34,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 22,
                  "line": 34,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 65,
                "line": 34,
              },
              "start": Position {
                "character": 34,
                "line": 34,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 35,
            },
            "start": Position {
              "character": 5,
              "line": 34,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 35,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 30,
              "line": 33,
            },
            "name": "str",
            "start": Position {
              "character": 27,
              "line": 33,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 38,
              "line": 33,
            },
            "name": "newStr",
            "start": Position {
              "character": 32,
              "line": 33,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 18,
          "line": 33,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 33,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 33,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 33,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 17,
          "line": 33,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 15,
            "line": 33,
          },
          "name": "replace",
          "start": Position {
            "character": 8,
            "line": 33,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 33,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 39,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTCallExpression {
                  "arguments": Array [
                    ASTIdentifier {
                      "end": Position {
                        "character": 54,
                        "line": 38,
                      },
                      "name": "str",
                      "start": Position {
                        "character": 51,
                        "line": 38,
                      },
                      "type": "Identifier",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 39,
                          "line": 38,
                        },
                        "name": "self",
                        "start": Position {
                          "character": 35,
                          "line": 38,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 44,
                        "line": 38,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 43,
                          "line": 38,
                        },
                        "name": "str",
                        "start": Position {
                          "character": 40,
                          "line": 38,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 39,
                        "line": 38,
                      },
                      "type": "MemberExpression",
                    },
                    "end": Position {
                      "character": 51,
                      "line": 38,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 50,
                        "line": 38,
                      },
                      "name": "remove",
                      "start": Position {
                        "character": 44,
                        "line": 38,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 43,
                      "line": 38,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 56,
                    "line": 38,
                  },
                  "start": Position {
                    "character": 50,
                    "line": 38,
                  },
                  "type": "CallExpression",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTUnaryExpression {
                  "argument": ASTIdentifier {
                    "end": Position {
                      "character": 21,
                      "line": 38,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 17,
                      "line": 38,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 22,
                    "line": 38,
                  },
                  "operator": "new",
                  "start": Position {
                    "character": 13,
                    "line": 38,
                  },
                  "type": "UnaryExpression",
                },
                "end": Position {
                  "character": 35,
                  "line": 38,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 34,
                    "line": 38,
                  },
                  "name": "constructor",
                  "start": Position {
                    "character": 23,
                    "line": 38,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 22,
                  "line": 38,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 56,
                "line": 38,
              },
              "start": Position {
                "character": 34,
                "line": 38,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 39,
            },
            "start": Position {
              "character": 5,
              "line": 38,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 39,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 29,
              "line": 37,
            },
            "name": "str",
            "start": Position {
              "character": 26,
              "line": 37,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 17,
          "line": 37,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 37,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 37,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 37,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 16,
          "line": 37,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 14,
            "line": 37,
          },
          "name": "remove",
          "start": Position {
            "character": 8,
            "line": 37,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 37,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 43,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 16,
                  "line": 42,
                },
                "name": "self",
                "start": Position {
                  "character": 12,
                  "line": 42,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 20,
                "line": 42,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 20,
                  "line": 42,
                },
                "name": "str",
                "start": Position {
                  "character": 17,
                  "line": 42,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 16,
                "line": 42,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 13,
              "line": 43,
            },
            "start": Position {
              "character": 5,
              "line": 42,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 43,
        },
        "namespaces": Set {},
        "parameters": Array [],
        "start": Position {
          "character": 19,
          "line": 41,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 41,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 41,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 41,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 18,
          "line": 41,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 16,
            "line": 41,
          },
          "name": "toString",
          "start": Position {
            "character": 8,
            "line": 41,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 41,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 47,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTMemberExpression {
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 16,
                    "line": 46,
                  },
                  "name": "self",
                  "start": Position {
                    "character": 12,
                    "line": 46,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 21,
                  "line": 46,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 20,
                    "line": 46,
                  },
                  "name": "str",
                  "start": Position {
                    "character": 17,
                    "line": 46,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 16,
                  "line": 46,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 24,
                "line": 46,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 24,
                  "line": 46,
                },
                "name": "len",
                "start": Position {
                  "character": 21,
                  "line": 46,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 20,
                "line": 46,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 13,
              "line": 47,
            },
            "start": Position {
              "character": 5,
              "line": 46,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 47,
        },
        "namespaces": Set {},
        "parameters": Array [],
        "start": Position {
          "character": 17,
          "line": 45,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 45,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 45,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 45,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 16,
          "line": 45,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 14,
            "line": 45,
          },
          "name": "length",
          "start": Position {
            "character": 8,
            "line": 45,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 45,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 51,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 36,
                    "line": 50,
                  },
                  "name": "seperator",
                  "start": Position {
                    "character": 27,
                    "line": 50,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 16,
                      "line": 50,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 12,
                      "line": 50,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 21,
                    "line": 50,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 20,
                      "line": 50,
                    },
                    "name": "str",
                    "start": Position {
                      "character": 17,
                      "line": 50,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 16,
                    "line": 50,
                  },
                  "type": "MemberExpression",
                },
                "end": Position {
                  "character": 27,
                  "line": 50,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 50,
                  },
                  "name": "split",
                  "start": Position {
                    "character": 21,
                    "line": 50,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 20,
                  "line": 50,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 37,
                "line": 50,
              },
              "start": Position {
                "character": 26,
                "line": 50,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 51,
            },
            "start": Position {
              "character": 5,
              "line": 50,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 51,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 34,
              "line": 49,
            },
            "name": "seperator",
            "start": Position {
              "character": 25,
              "line": 49,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 16,
          "line": 49,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 49,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 49,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 49,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 15,
          "line": 49,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 49,
          },
          "name": "split",
          "start": Position {
            "character": 8,
            "line": 49,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 49,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 55,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTCallExpression {
                  "arguments": Array [],
                  "base": ASTMemberExpression {
                    "base": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 39,
                          "line": 54,
                        },
                        "name": "self",
                        "start": Position {
                          "character": 35,
                          "line": 54,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 44,
                        "line": 54,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 43,
                          "line": 54,
                        },
                        "name": "str",
                        "start": Position {
                          "character": 40,
                          "line": 54,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 39,
                        "line": 54,
                      },
                      "type": "MemberExpression",
                    },
                    "end": Position {
                      "character": 49,
                      "line": 54,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 48,
                        "line": 54,
                      },
                      "name": "trim",
                      "start": Position {
                        "character": 44,
                        "line": 54,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 43,
                      "line": 54,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 51,
                    "line": 54,
                  },
                  "start": Position {
                    "character": 48,
                    "line": 54,
                  },
                  "type": "CallExpression",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTUnaryExpression {
                  "argument": ASTIdentifier {
                    "end": Position {
                      "character": 21,
                      "line": 54,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 17,
                      "line": 54,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 22,
                    "line": 54,
                  },
                  "operator": "new",
                  "start": Position {
                    "character": 13,
                    "line": 54,
                  },
                  "type": "UnaryExpression",
                },
                "end": Position {
                  "character": 35,
                  "line": 54,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 34,
                    "line": 54,
                  },
                  "name": "constructor",
                  "start": Position {
                    "character": 23,
                    "line": 54,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 22,
                  "line": 54,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 51,
                "line": 54,
              },
              "start": Position {
                "character": 34,
                "line": 54,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 55,
            },
            "start": Position {
              "character": 5,
              "line": 54,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 55,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 33,
              "line": 53,
            },
            "name": "seperator",
            "start": Position {
              "character": 24,
              "line": 53,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 15,
          "line": 53,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 53,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 53,
          },
          "name": "String",
          "start": Position {
            "character": 1,
            "line": 53,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 14,
          "line": 53,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 12,
            "line": 53,
          },
          "name": "trim",
          "start": Position {
            "character": 8,
            "line": 53,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 53,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 11,
        "line": 57,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 11,
          "line": 57,
        },
        "fields": Array [],
        "start": Position {
          "character": 9,
          "line": 57,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 57,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 6,
          "line": 57,
        },
        "name": "Error",
        "start": Position {
          "character": 1,
          "line": 57,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 22,
        "line": 59,
      },
      "init": ASTIdentifier {
        "end": Position {
          "character": 22,
          "line": 59,
        },
        "name": "String",
        "start": Position {
          "character": 16,
          "line": 59,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 1,
        "line": 59,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 59,
          },
          "name": "Error",
          "start": Position {
            "character": 1,
            "line": 59,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 15,
          "line": 59,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 59,
          },
          "name": "String",
          "start": Position {
            "character": 7,
            "line": 59,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 6,
          "line": 59,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 68,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 13,
              "line": 62,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 62,
              },
              "name": "self",
              "start": Position {
                "character": 9,
                "line": 62,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 62,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 6,
                "line": 62,
              },
              "name": "m",
              "start": Position {
                "character": 5,
                "line": 62,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 24,
              "line": 63,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 24,
                "line": 63,
              },
              "name": "message",
              "start": Position {
                "character": 17,
                "line": 63,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 63,
            },
            "type": "AssignmentStatement",
            "variable": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 6,
                  "line": 63,
                },
                "name": "m",
                "start": Position {
                  "character": 5,
                  "line": 63,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 16,
                "line": 63,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 14,
                  "line": 63,
                },
                "name": "message",
                "start": Position {
                  "character": 7,
                  "line": 63,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 6,
                "line": 63,
              },
              "type": "MemberExpression",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 81,
                      "line": 65,
                    },
                    "init": ASTCallExpression {
                      "arguments": Array [],
                      "base": ASTMemberExpression {
                        "base": ASTCallExpression {
                          "arguments": Array [
                            ASTIdentifier {
                              "end": Position {
                                "character": 69,
                                "line": 65,
                              },
                              "name": "values",
                              "start": Position {
                                "character": 63,
                                "line": 65,
                              },
                              "type": "Identifier",
                            },
                          ],
                          "base": ASTMemberExpression {
                            "base": ASTCallExpression {
                              "arguments": Array [
                                ASTIdentifier {
                                  "end": Position {
                                    "character": 55,
                                    "line": 65,
                                  },
                                  "name": "message",
                                  "start": Position {
                                    "character": 48,
                                    "line": 65,
                                  },
                                  "type": "Identifier",
                                },
                              ],
                              "base": ASTMemberExpression {
                                "base": ASTUnaryExpression {
                                  "argument": ASTMemberExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 27,
                                        "line": 65,
                                      },
                                      "name": "m",
                                      "start": Position {
                                        "character": 26,
                                        "line": 65,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 35,
                                      "line": 65,
                                    },
                                    "identifier": ASTIdentifier {
                                      "end": Position {
                                        "character": 34,
                                        "line": 65,
                                      },
                                      "name": "String",
                                      "start": Position {
                                        "character": 28,
                                        "line": 65,
                                      },
                                      "type": "Identifier",
                                    },
                                    "indexer": ".",
                                    "start": Position {
                                      "character": 27,
                                      "line": 65,
                                    },
                                    "type": "MemberExpression",
                                  },
                                  "end": Position {
                                    "character": 35,
                                    "line": 65,
                                  },
                                  "operator": "new",
                                  "start": Position {
                                    "character": 22,
                                    "line": 65,
                                  },
                                  "type": "UnaryExpression",
                                },
                                "end": Position {
                                  "character": 48,
                                  "line": 65,
                                },
                                "identifier": ASTIdentifier {
                                  "end": Position {
                                    "character": 47,
                                    "line": 65,
                                  },
                                  "name": "constructor",
                                  "start": Position {
                                    "character": 36,
                                    "line": 65,
                                  },
                                  "type": "Identifier",
                                },
                                "indexer": ".",
                                "start": Position {
                                  "character": 35,
                                  "line": 65,
                                },
                                "type": "MemberExpression",
                              },
                              "end": Position {
                                "character": 57,
                                "line": 65,
                              },
                              "start": Position {
                                "character": 47,
                                "line": 65,
                              },
                              "type": "CallExpression",
                            },
                            "end": Position {
                              "character": 63,
                              "line": 65,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 62,
                                "line": 65,
                              },
                              "name": "parse",
                              "start": Position {
                                "character": 57,
                                "line": 65,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 56,
                              "line": 65,
                            },
                            "type": "MemberExpression",
                          },
                          "end": Position {
                            "character": 71,
                            "line": 65,
                          },
                          "start": Position {
                            "character": 62,
                            "line": 65,
                          },
                          "type": "CallExpression",
                        },
                        "end": Position {
                          "character": 80,
                          "line": 65,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 79,
                            "line": 65,
                          },
                          "name": "toString",
                          "start": Position {
                            "character": 71,
                            "line": 65,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 70,
                          "line": 65,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 81,
                        "line": 65,
                      },
                      "start": Position {
                        "character": 79,
                        "line": 65,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 65,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 65,
                        },
                        "name": "m",
                        "start": Position {
                          "character": 9,
                          "line": 65,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 20,
                        "line": 65,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 18,
                          "line": 65,
                        },
                        "name": "message",
                        "start": Position {
                          "character": 11,
                          "line": 65,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 10,
                        "line": 65,
                      },
                      "type": "MemberExpression",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 24,
                    "line": 64,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 15,
                      "line": 64,
                    },
                    "name": "values",
                    "start": Position {
                      "character": 9,
                      "line": 64,
                    },
                    "type": "Identifier",
                  },
                  "operator": "!=",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 23,
                      "line": 64,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 19,
                      "line": 64,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 16,
                    "line": 64,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 11,
                  "line": 66,
                },
                "start": Position {
                  "character": 5,
                  "line": 64,
                },
                "type": "IfClause",
              },
            ],
            "end": Position {
              "character": 11,
              "line": 66,
            },
            "start": Position {
              "character": 5,
              "line": 64,
            },
            "type": "IfStatement",
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 67,
              },
              "name": "m",
              "start": Position {
                "character": 12,
                "line": 67,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 68,
            },
            "start": Position {
              "character": 5,
              "line": 67,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 68,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 37,
              "line": 61,
            },
            "name": "message",
            "start": Position {
              "character": 30,
              "line": 61,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 45,
              "line": 61,
            },
            "name": "values",
            "start": Position {
              "character": 39,
              "line": 61,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 21,
          "line": 61,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 61,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 61,
          },
          "name": "Error",
          "start": Position {
            "character": 1,
            "line": 61,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 20,
          "line": 61,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 61,
          },
          "name": "constructor",
          "start": Position {
            "character": 7,
            "line": 61,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 6,
          "line": 61,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 72,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTCallStatement {
            "end": Position {
              "character": 56,
              "line": 71,
            },
            "expression": ASTCallExpression {
              "arguments": Array [
                ASTEvaluationExpression {
                  "end": Position {
                    "character": 56,
                    "line": 71,
                  },
                  "left": ASTEvaluationExpression {
                    "end": Position {
                      "character": 44,
                      "line": 71,
                    },
                    "left": ASTLiteral {
                      "end": Position {
                        "character": 27,
                        "line": 71,
                      },
                      "raw": "\\"<color=#ff0000>\\"",
                      "start": Position {
                        "character": 10,
                        "line": 71,
                      },
                      "type": "StringLiteral",
                      "value": "<color=#ff0000>",
                    },
                    "operator": "+",
                    "right": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 34,
                          "line": 71,
                        },
                        "name": "self",
                        "start": Position {
                          "character": 30,
                          "line": 71,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 44,
                        "line": 71,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 42,
                          "line": 71,
                        },
                        "name": "message",
                        "start": Position {
                          "character": 35,
                          "line": 71,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 34,
                        "line": 71,
                      },
                      "type": "MemberExpression",
                    },
                    "start": Position {
                      "character": 28,
                      "line": 71,
                    },
                    "type": "BinaryExpression",
                  },
                  "operator": "+",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 55,
                      "line": 71,
                    },
                    "raw": "\\"</color>\\"",
                    "start": Position {
                      "character": 45,
                      "line": 71,
                    },
                    "type": "StringLiteral",
                    "value": "</color>",
                  },
                  "start": Position {
                    "character": 28,
                    "line": 71,
                  },
                  "type": "BinaryExpression",
                },
              ],
              "base": ASTIdentifier {
                "end": Position {
                  "character": 9,
                  "line": 71,
                },
                "name": "exit",
                "start": Position {
                  "character": 5,
                  "line": 71,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 56,
                "line": 71,
              },
              "start": Position {
                "character": 9,
                "line": 71,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 71,
            },
            "type": "CallStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 72,
        },
        "namespaces": Set {},
        "parameters": Array [],
        "start": Position {
          "character": 15,
          "line": 70,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 70,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 70,
          },
          "name": "Error",
          "start": Position {
            "character": 1,
            "line": 70,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 14,
          "line": 70,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 12,
            "line": 70,
          },
          "name": "throw",
          "start": Position {
            "character": 7,
            "line": 70,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 6,
          "line": 70,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 12,
        "line": 74,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 12,
          "line": 74,
        },
        "fields": Array [],
        "start": Position {
          "character": 10,
          "line": 74,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 74,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 74,
        },
        "name": "Crypto",
        "start": Position {
          "character": 1,
          "line": 74,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 91,
        "line": 76,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 91,
          "line": 76,
        },
        "raw": "\\"QWERTZUIOPASDFGHJKLYXCVBNMqwertzuiopasdfghjklyxcvbnm1234567890+-\\"",
        "start": Position {
          "character": 25,
          "line": 76,
        },
        "type": "StringLiteral",
        "value": "QWERTZUIOPASDFGHJKLYXCVBNMqwertzuiopasdfghjklyxcvbnm1234567890+-",
      },
      "start": Position {
        "character": 1,
        "line": 76,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 76,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 76,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 24,
          "line": 76,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 22,
            "line": 76,
          },
          "name": "defaultCharset",
          "start": Position {
            "character": 8,
            "line": 76,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 76,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 33,
        "line": 77,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 33,
          "line": 77,
        },
        "raw": "\\"test123\\"",
        "start": Position {
          "character": 24,
          "line": 77,
        },
        "type": "StringLiteral",
        "value": "test123",
      },
      "start": Position {
        "character": 1,
        "line": 77,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 77,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 77,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 23,
          "line": 77,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 21,
            "line": 77,
          },
          "name": "defaultSecret",
          "start": Position {
            "character": 8,
            "line": 77,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 77,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 27,
        "line": 78,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 27,
          "line": 78,
        },
        "raw": "55295",
        "start": Position {
          "character": 22,
          "line": 78,
        },
        "type": "NumericLiteral",
        "value": 55295,
      },
      "start": Position {
        "character": 1,
        "line": 78,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 78,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 78,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 21,
          "line": 78,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 19,
            "line": 78,
          },
          "name": "maxCharCode",
          "start": Position {
            "character": 8,
            "line": 78,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 78,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 21,
        "line": 79,
      },
      "init": ASTIdentifier {
        "end": Position {
          "character": 21,
          "line": 79,
        },
        "name": "Error",
        "start": Position {
          "character": 16,
          "line": 79,
        },
        "type": "Identifier",
      },
      "start": Position {
        "character": 1,
        "line": 79,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 79,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 79,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 15,
          "line": 79,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 13,
            "line": 79,
          },
          "name": "Error",
          "start": Position {
            "character": 8,
            "line": 79,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 79,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 90,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 82,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 82,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 82,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 82,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 82,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 82,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 37,
              "line": 83,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 37,
                "line": 83,
              },
              "name": "defaultSecret",
              "start": Position {
                "character": 24,
                "line": 83,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 83,
            },
            "type": "AssignmentStatement",
            "variable": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 7,
                  "line": 83,
                },
                "name": "me",
                "start": Position {
                  "character": 5,
                  "line": 83,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 23,
                "line": 83,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 21,
                  "line": 83,
                },
                "name": "defaultSecret",
                "start": Position {
                  "character": 8,
                  "line": 83,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 7,
                "line": 83,
              },
              "type": "MemberExpression",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 23,
              "line": 84,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 23,
                "line": 84,
              },
              "name": "charset",
              "start": Position {
                "character": 16,
                "line": 84,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 84,
            },
            "type": "AssignmentStatement",
            "variable": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 7,
                  "line": 84,
                },
                "name": "me",
                "start": Position {
                  "character": 5,
                  "line": 84,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 15,
                "line": 84,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 13,
                  "line": 84,
                },
                "name": "table",
                "start": Position {
                  "character": 8,
                  "line": 84,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 7,
                "line": 84,
              },
              "type": "MemberExpression",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 24,
              "line": 85,
            },
            "init": ASTUnaryExpression {
              "argument": ASTIdentifier {
                "end": Position {
                  "character": 24,
                  "line": 85,
                },
                "name": "hashFn",
                "start": Position {
                  "character": 18,
                  "line": 85,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 24,
                "line": 85,
              },
              "operator": "@",
              "start": Position {
                "character": 17,
                "line": 85,
              },
              "type": "UnaryExpression",
            },
            "start": Position {
              "character": 5,
              "line": 85,
            },
            "type": "AssignmentStatement",
            "variable": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 7,
                  "line": 85,
                },
                "name": "me",
                "start": Position {
                  "character": 5,
                  "line": 85,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 16,
                "line": 85,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 14,
                  "line": 85,
                },
                "name": "hashFn",
                "start": Position {
                  "character": 8,
                  "line": 85,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 7,
                "line": 85,
              },
              "type": "MemberExpression",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 47,
                      "line": 86,
                    },
                    "init": ASTUnaryExpression {
                      "argument": ASTIdentifier {
                        "end": Position {
                          "character": 47,
                          "line": 86,
                        },
                        "name": "md5",
                        "start": Position {
                          "character": 44,
                          "line": 86,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 47,
                        "line": 86,
                      },
                      "operator": "@",
                      "start": Position {
                        "character": 43,
                        "line": 86,
                      },
                      "type": "UnaryExpression",
                    },
                    "start": Position {
                      "character": 31,
                      "line": 86,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 33,
                          "line": 86,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 31,
                          "line": 86,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 42,
                        "line": 86,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 40,
                          "line": 86,
                        },
                        "name": "hashFn",
                        "start": Position {
                          "character": 34,
                          "line": 86,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 33,
                        "line": 86,
                      },
                      "type": "MemberExpression",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 25,
                    "line": 86,
                  },
                  "left": ASTUnaryExpression {
                    "argument": ASTIdentifier {
                      "end": Position {
                        "character": 16,
                        "line": 86,
                      },
                      "name": "hashFn",
                      "start": Position {
                        "character": 10,
                        "line": 86,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 19,
                      "line": 86,
                    },
                    "operator": "@",
                    "start": Position {
                      "character": 9,
                      "line": 86,
                    },
                    "type": "UnaryExpression",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 24,
                      "line": 86,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 20,
                      "line": 86,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 17,
                    "line": 86,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 47,
                  "line": 86,
                },
                "start": Position {
                  "character": 5,
                  "line": 86,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 47,
              "line": 86,
            },
            "start": Position {
              "character": 5,
              "line": 86,
            },
            "type": "IfShortcutStatement",
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 57,
                      "line": 87,
                    },
                    "init": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 42,
                          "line": 87,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 40,
                          "line": 87,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 57,
                        "line": 87,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 57,
                          "line": 87,
                        },
                        "name": "defaultCharset",
                        "start": Position {
                          "character": 43,
                          "line": 87,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 42,
                        "line": 87,
                      },
                      "type": "MemberExpression",
                    },
                    "start": Position {
                      "character": 29,
                      "line": 87,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 31,
                          "line": 87,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 29,
                          "line": 87,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 39,
                        "line": 87,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 37,
                          "line": 87,
                        },
                        "name": "table",
                        "start": Position {
                          "character": 32,
                          "line": 87,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 31,
                        "line": 87,
                      },
                      "type": "MemberExpression",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 28,
                    "line": 87,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 15,
                      "line": 87,
                    },
                    "name": "charset",
                    "start": Position {
                      "character": 8,
                      "line": 87,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 23,
                      "line": 87,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 19,
                      "line": 87,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 16,
                    "line": 87,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 57,
                  "line": 87,
                },
                "start": Position {
                  "character": 5,
                  "line": 87,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 57,
              "line": 87,
            },
            "start": Position {
              "character": 5,
              "line": 87,
            },
            "type": "IfShortcutStatement",
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTCallStatement {
                    "end": Position {
                      "character": 103,
                      "line": 88,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [],
                      "base": ASTMemberExpression {
                        "base": ASTCallExpression {
                          "arguments": Array [
                            ASTLiteral {
                              "end": Position {
                                "character": 82,
                                "line": 88,
                              },
                              "raw": "\\"Invalid charset $0...\\"",
                              "start": Position {
                                "character": 59,
                                "line": 88,
                              },
                              "type": "StringLiteral",
                              "value": "Invalid charset $0...",
                            },
                            ASTListConstructorExpression {
                              "end": Position {
                                "character": 94,
                                "line": 88,
                              },
                              "fields": Array [
                                ASTListValue {
                                  "end": Position {
                                    "character": 94,
                                    "line": 88,
                                  },
                                  "start": Position {
                                    "character": 87,
                                    "line": 88,
                                  },
                                  "type": "ListValue",
                                  "value": ASTMemberExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 87,
                                        "line": 88,
                                      },
                                      "name": "me",
                                      "start": Position {
                                        "character": 85,
                                        "line": 88,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 94,
                                      "line": 88,
                                    },
                                    "identifier": ASTIdentifier {
                                      "end": Position {
                                        "character": 93,
                                        "line": 88,
                                      },
                                      "name": "table",
                                      "start": Position {
                                        "character": 88,
                                        "line": 88,
                                      },
                                      "type": "Identifier",
                                    },
                                    "indexer": ".",
                                    "start": Position {
                                      "character": 87,
                                      "line": 88,
                                    },
                                    "type": "MemberExpression",
                                  },
                                },
                              ],
                              "start": Position {
                                "character": 84,
                                "line": 88,
                              },
                              "type": "ListConstructorExpression",
                            },
                          ],
                          "base": ASTMemberExpression {
                            "base": ASTUnaryExpression {
                              "argument": ASTMemberExpression {
                                "base": ASTIdentifier {
                                  "end": Position {
                                    "character": 39,
                                    "line": 88,
                                  },
                                  "name": "me",
                                  "start": Position {
                                    "character": 37,
                                    "line": 88,
                                  },
                                  "type": "Identifier",
                                },
                                "end": Position {
                                  "character": 46,
                                  "line": 88,
                                },
                                "identifier": ASTIdentifier {
                                  "end": Position {
                                    "character": 45,
                                    "line": 88,
                                  },
                                  "name": "Error",
                                  "start": Position {
                                    "character": 40,
                                    "line": 88,
                                  },
                                  "type": "Identifier",
                                },
                                "indexer": ".",
                                "start": Position {
                                  "character": 39,
                                  "line": 88,
                                },
                                "type": "MemberExpression",
                              },
                              "end": Position {
                                "character": 46,
                                "line": 88,
                              },
                              "operator": "new",
                              "start": Position {
                                "character": 33,
                                "line": 88,
                              },
                              "type": "UnaryExpression",
                            },
                            "end": Position {
                              "character": 59,
                              "line": 88,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 58,
                                "line": 88,
                              },
                              "name": "constructor",
                              "start": Position {
                                "character": 47,
                                "line": 88,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 46,
                              "line": 88,
                            },
                            "type": "MemberExpression",
                          },
                          "end": Position {
                            "character": 96,
                            "line": 88,
                          },
                          "start": Position {
                            "character": 58,
                            "line": 88,
                          },
                          "type": "CallExpression",
                        },
                        "end": Position {
                          "character": 102,
                          "line": 88,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 101,
                            "line": 88,
                          },
                          "name": "throw",
                          "start": Position {
                            "character": 96,
                            "line": 88,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 95,
                          "line": 88,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 103,
                        "line": 88,
                      },
                      "start": Position {
                        "character": 101,
                        "line": 88,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 32,
                      "line": 88,
                    },
                    "type": "CallStatement",
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 31,
                    "line": 88,
                  },
                  "left": ASTMemberExpression {
                    "base": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 10,
                          "line": 88,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 8,
                          "line": 88,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 17,
                        "line": 88,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 16,
                          "line": 88,
                        },
                        "name": "table",
                        "start": Position {
                          "character": 11,
                          "line": 88,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 10,
                        "line": 88,
                      },
                      "type": "MemberExpression",
                    },
                    "end": Position {
                      "character": 23,
                      "line": 88,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 88,
                      },
                      "name": "len",
                      "start": Position {
                        "character": 17,
                        "line": 88,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 16,
                      "line": 88,
                    },
                    "type": "MemberExpression",
                  },
                  "operator": "!=",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 26,
                      "line": 88,
                    },
                    "raw": "64",
                    "start": Position {
                      "character": 24,
                      "line": 88,
                    },
                    "type": "NumericLiteral",
                    "value": 64,
                  },
                  "start": Position {
                    "character": 21,
                    "line": 88,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 103,
                  "line": 88,
                },
                "start": Position {
                  "character": 5,
                  "line": 88,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 103,
              "line": 88,
            },
            "start": Position {
              "character": 5,
              "line": 88,
            },
            "type": "IfShortcutStatement",
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 89,
              },
              "name": "me",
              "start": Position {
                "character": 12,
                "line": 89,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 90,
            },
            "start": Position {
              "character": 5,
              "line": 89,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 90,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 44,
              "line": 81,
            },
            "name": "defaultSecret",
            "start": Position {
              "character": 31,
              "line": 81,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 52,
              "line": 81,
            },
            "name": "hashFn",
            "start": Position {
              "character": 46,
              "line": 81,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 61,
              "line": 81,
            },
            "name": "charset",
            "start": Position {
              "character": 54,
              "line": 81,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 22,
          "line": 81,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 81,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 81,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 81,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 21,
          "line": 81,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 19,
            "line": 81,
          },
          "name": "constructor",
          "start": Position {
            "character": 8,
            "line": 81,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 81,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 101,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 93,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 93,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 93,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 93,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 93,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 93,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 94,
            },
            "init": ASTListConstructorExpression {
              "end": Position {
                "character": 14,
                "line": 94,
              },
              "fields": Array [],
              "start": Position {
                "character": 12,
                "line": 94,
              },
              "type": "ListConstructorExpression",
            },
            "start": Position {
              "character": 5,
              "line": 94,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 9,
                "line": 94,
              },
              "name": "hash",
              "start": Position {
                "character": 5,
                "line": 94,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 22,
              "line": 95,
            },
            "init": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 95,
                  },
                  "name": "pw",
                  "start": Position {
                    "character": 19,
                    "line": 95,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 11,
                    "line": 95,
                  },
                  "name": "me",
                  "start": Position {
                    "character": 9,
                    "line": 95,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 19,
                  "line": 95,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 18,
                    "line": 95,
                  },
                  "name": "hashFn",
                  "start": Position {
                    "character": 12,
                    "line": 95,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 11,
                  "line": 95,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 22,
                "line": 95,
              },
              "start": Position {
                "character": 18,
                "line": 95,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 95,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 6,
                "line": 95,
              },
              "name": "x",
              "start": Position {
                "character": 5,
                "line": 95,
              },
              "type": "Identifier",
            },
          },
          ASTForGenericStatement {
            "body": Array [
              ASTCallStatement {
                "end": Position {
                  "character": 29,
                  "line": 97,
                },
                "expression": ASTCallExpression {
                  "arguments": Array [
                    ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 23,
                          "line": 97,
                        },
                        "name": "char",
                        "start": Position {
                          "character": 19,
                          "line": 97,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 29,
                        "line": 97,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 28,
                          "line": 97,
                        },
                        "name": "code",
                        "start": Position {
                          "character": 24,
                          "line": 97,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 23,
                        "line": 97,
                      },
                      "type": "MemberExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 13,
                        "line": 97,
                      },
                      "name": "hash",
                      "start": Position {
                        "character": 9,
                        "line": 97,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 19,
                      "line": 97,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 18,
                        "line": 97,
                      },
                      "name": "push",
                      "start": Position {
                        "character": 14,
                        "line": 97,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 13,
                      "line": 97,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 29,
                    "line": 97,
                  },
                  "start": Position {
                    "character": 18,
                    "line": 97,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 97,
                },
                "type": "CallStatement",
              },
            ],
            "end": Position {
              "character": 12,
              "line": 98,
            },
            "iterator": ASTIdentifier {
              "end": Position {
                "character": 18,
                "line": 96,
              },
              "name": "x",
              "start": Position {
                "character": 17,
                "line": 96,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 96,
            },
            "type": "ForGenericStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 96,
              },
              "name": "char",
              "start": Position {
                "character": 9,
                "line": 96,
              },
              "type": "Identifier",
            },
          },
          ASTCallStatement {
            "end": Position {
              "character": 17,
              "line": 99,
            },
            "expression": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 9,
                  "line": 99,
                },
                "name": "hash",
                "start": Position {
                  "character": 5,
                  "line": 99,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 17,
                "line": 99,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 17,
                  "line": 99,
                },
                "name": "reverse",
                "start": Position {
                  "character": 10,
                  "line": 99,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 9,
                "line": 99,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 99,
            },
            "type": "CallStatement",
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 16,
                "line": 100,
              },
              "name": "hash",
              "start": Position {
                "character": 12,
                "line": 100,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 101,
            },
            "start": Position {
              "character": 5,
              "line": 100,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 101,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 29,
              "line": 92,
            },
            "name": "pw",
            "start": Position {
              "character": 27,
              "line": 92,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 18,
          "line": 92,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 92,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 92,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 92,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 17,
          "line": 92,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 15,
            "line": 92,
          },
          "name": "getHash",
          "start": Position {
            "character": 8,
            "line": 92,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 92,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 156,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 104,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 104,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 104,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 104,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 104,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 104,
              },
              "type": "Identifier",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 47,
                      "line": 105,
                    },
                    "init": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 33,
                          "line": 105,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 31,
                          "line": 105,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 47,
                        "line": 105,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 47,
                          "line": 105,
                        },
                        "name": "defaultSecret",
                        "start": Position {
                          "character": 34,
                          "line": 105,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 33,
                        "line": 105,
                      },
                      "type": "MemberExpression",
                    },
                    "start": Position {
                      "character": 26,
                      "line": 105,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 28,
                        "line": 105,
                      },
                      "name": "pw",
                      "start": Position {
                        "character": 26,
                        "line": 105,
                      },
                      "type": "Identifier",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 20,
                    "line": 105,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 11,
                      "line": 105,
                    },
                    "name": "pw",
                    "start": Position {
                      "character": 9,
                      "line": 105,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 19,
                      "line": 105,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 15,
                      "line": 105,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 12,
                    "line": 105,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 47,
                  "line": 105,
                },
                "start": Position {
                  "character": 5,
                  "line": 105,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 47,
              "line": 105,
            },
            "start": Position {
              "character": 5,
              "line": 105,
            },
            "type": "IfShortcutStatement",
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 26,
              "line": 106,
            },
            "init": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 25,
                    "line": 106,
                  },
                  "name": "pw",
                  "start": Position {
                    "character": 23,
                    "line": 106,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 14,
                    "line": 106,
                  },
                  "name": "me",
                  "start": Position {
                    "character": 12,
                    "line": 106,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 23,
                  "line": 106,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 22,
                    "line": 106,
                  },
                  "name": "getHash",
                  "start": Position {
                    "character": 15,
                    "line": 106,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 14,
                  "line": 106,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 26,
                "line": 106,
              },
              "start": Position {
                "character": 22,
                "line": 106,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 106,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 9,
                "line": 106,
              },
              "name": "hash",
              "start": Position {
                "character": 5,
                "line": 106,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 20,
              "line": 107,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 107,
              },
              "raw": "0",
              "start": Position {
                "character": 19,
                "line": 107,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 107,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 16,
                "line": 107,
              },
              "name": "hashPointer",
              "start": Position {
                "character": 5,
                "line": 107,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 16,
              "line": 108,
            },
            "init": ASTListConstructorExpression {
              "end": Position {
                "character": 16,
                "line": 108,
              },
              "fields": Array [],
              "start": Position {
                "character": 14,
                "line": 108,
              },
              "type": "ListConstructorExpression",
            },
            "start": Position {
              "character": 5,
              "line": 108,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 108,
              },
              "name": "output",
              "start": Position {
                "character": 5,
                "line": 108,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 109,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 17,
                "line": 109,
              },
              "raw": "0",
              "start": Position {
                "character": 16,
                "line": 109,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 109,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 109,
              },
              "name": "position",
              "start": Position {
                "character": 5,
                "line": 109,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 26,
              "line": 110,
            },
            "init": ASTEvaluationExpression {
              "end": Position {
                "character": 26,
                "line": 110,
              },
              "left": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 18,
                    "line": 110,
                  },
                  "name": "str",
                  "start": Position {
                    "character": 15,
                    "line": 110,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 24,
                  "line": 110,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 22,
                    "line": 110,
                  },
                  "name": "len",
                  "start": Position {
                    "character": 19,
                    "line": 110,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 18,
                  "line": 110,
                },
                "type": "MemberExpression",
              },
              "operator": "%",
              "right": ASTLiteral {
                "end": Position {
                  "character": 26,
                  "line": 110,
                },
                "raw": "3",
                "start": Position {
                  "character": 25,
                  "line": 110,
                },
                "type": "NumericLiteral",
                "value": 3,
              },
              "start": Position {
                "character": 23,
                "line": 110,
              },
              "type": "BinaryExpression",
            },
            "start": Position {
              "character": 5,
              "line": 110,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 12,
                "line": 110,
              },
              "name": "padding",
              "start": Position {
                "character": 5,
                "line": 110,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 28,
              "line": 111,
            },
            "init": ASTEvaluationExpression {
              "end": Position {
                "character": 28,
                "line": 111,
              },
              "left": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 14,
                    "line": 111,
                  },
                  "name": "str",
                  "start": Position {
                    "character": 11,
                    "line": 111,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 20,
                  "line": 111,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 18,
                    "line": 111,
                  },
                  "name": "len",
                  "start": Position {
                    "character": 15,
                    "line": 111,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 14,
                  "line": 111,
                },
                "type": "MemberExpression",
              },
              "operator": "-",
              "right": ASTIdentifier {
                "end": Position {
                  "character": 28,
                  "line": 111,
                },
                "name": "padding",
                "start": Position {
                  "character": 21,
                  "line": 111,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 19,
                "line": 111,
              },
              "type": "BinaryExpression",
            },
            "start": Position {
              "character": 5,
              "line": 111,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 8,
                "line": 111,
              },
              "name": "max",
              "start": Position {
                "character": 5,
                "line": 111,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 117,
            },
            "init": ASTFunctionStatement {
              "assignments": Array [],
              "body": Array [
                ASTIfStatement {
                  "clauses": Array [
                    ASTIfClause {
                      "body": Array [
                        ASTCallStatement {
                          "end": Position {
                            "character": 75,
                            "line": 114,
                          },
                          "expression": ASTCallExpression {
                            "arguments": Array [],
                            "base": ASTMemberExpression {
                              "base": ASTCallExpression {
                                "arguments": Array [
                                  ASTLiteral {
                                    "end": Position {
                                      "character": 61,
                                      "line": 114,
                                    },
                                    "raw": "\\"Invalid index $0...\\"",
                                    "start": Position {
                                      "character": 40,
                                      "line": 114,
                                    },
                                    "type": "StringLiteral",
                                    "value": "Invalid index $0...",
                                  },
                                  ASTListConstructorExpression {
                                    "end": Position {
                                      "character": 66,
                                      "line": 114,
                                    },
                                    "fields": Array [
                                      ASTListValue {
                                        "end": Position {
                                          "character": 65,
                                          "line": 114,
                                        },
                                        "start": Position {
                                          "character": 64,
                                          "line": 114,
                                        },
                                        "type": "ListValue",
                                        "value": ASTIdentifier {
                                          "end": Position {
                                            "character": 65,
                                            "line": 114,
                                          },
                                          "name": "v",
                                          "start": Position {
                                            "character": 64,
                                            "line": 114,
                                          },
                                          "type": "Identifier",
                                        },
                                      },
                                    ],
                                    "start": Position {
                                      "character": 63,
                                      "line": 114,
                                    },
                                    "type": "ListConstructorExpression",
                                  },
                                ],
                                "base": ASTMemberExpression {
                                  "base": ASTUnaryExpression {
                                    "argument": ASTMemberExpression {
                                      "base": ASTIdentifier {
                                        "end": Position {
                                          "character": 20,
                                          "line": 114,
                                        },
                                        "name": "me",
                                        "start": Position {
                                          "character": 18,
                                          "line": 114,
                                        },
                                        "type": "Identifier",
                                      },
                                      "end": Position {
                                        "character": 27,
                                        "line": 114,
                                      },
                                      "identifier": ASTIdentifier {
                                        "end": Position {
                                          "character": 26,
                                          "line": 114,
                                        },
                                        "name": "Error",
                                        "start": Position {
                                          "character": 21,
                                          "line": 114,
                                        },
                                        "type": "Identifier",
                                      },
                                      "indexer": ".",
                                      "start": Position {
                                        "character": 20,
                                        "line": 114,
                                      },
                                      "type": "MemberExpression",
                                    },
                                    "end": Position {
                                      "character": 27,
                                      "line": 114,
                                    },
                                    "operator": "new",
                                    "start": Position {
                                      "character": 14,
                                      "line": 114,
                                    },
                                    "type": "UnaryExpression",
                                  },
                                  "end": Position {
                                    "character": 40,
                                    "line": 114,
                                  },
                                  "identifier": ASTIdentifier {
                                    "end": Position {
                                      "character": 39,
                                      "line": 114,
                                    },
                                    "name": "constructor",
                                    "start": Position {
                                      "character": 28,
                                      "line": 114,
                                    },
                                    "type": "Identifier",
                                  },
                                  "indexer": ".",
                                  "start": Position {
                                    "character": 27,
                                    "line": 114,
                                  },
                                  "type": "MemberExpression",
                                },
                                "end": Position {
                                  "character": 68,
                                  "line": 114,
                                },
                                "start": Position {
                                  "character": 39,
                                  "line": 114,
                                },
                                "type": "CallExpression",
                              },
                              "end": Position {
                                "character": 74,
                                "line": 114,
                              },
                              "identifier": ASTIdentifier {
                                "end": Position {
                                  "character": 73,
                                  "line": 114,
                                },
                                "name": "throw",
                                "start": Position {
                                  "character": 68,
                                  "line": 114,
                                },
                                "type": "Identifier",
                              },
                              "indexer": ".",
                              "start": Position {
                                "character": 67,
                                "line": 114,
                              },
                              "type": "MemberExpression",
                            },
                            "end": Position {
                              "character": 75,
                              "line": 114,
                            },
                            "start": Position {
                              "character": 73,
                              "line": 114,
                            },
                            "type": "CallExpression",
                          },
                          "start": Position {
                            "character": 13,
                            "line": 114,
                          },
                          "type": "CallStatement",
                        },
                      ],
                      "condition": ASTUnaryExpression {
                        "argument": ASTCallExpression {
                          "arguments": Array [
                            ASTIdentifier {
                              "end": Position {
                                "character": 36,
                                "line": 113,
                              },
                              "name": "v",
                              "start": Position {
                                "character": 35,
                                "line": 113,
                              },
                              "type": "Identifier",
                            },
                          ],
                          "base": ASTMemberExpression {
                            "base": ASTMemberExpression {
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 19,
                                  "line": 113,
                                },
                                "name": "me",
                                "start": Position {
                                  "character": 17,
                                  "line": 113,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 26,
                                "line": 113,
                              },
                              "identifier": ASTIdentifier {
                                "end": Position {
                                  "character": 25,
                                  "line": 113,
                                },
                                "name": "table",
                                "start": Position {
                                  "character": 20,
                                  "line": 113,
                                },
                                "type": "Identifier",
                              },
                              "indexer": ".",
                              "start": Position {
                                "character": 19,
                                "line": 113,
                              },
                              "type": "MemberExpression",
                            },
                            "end": Position {
                              "character": 35,
                              "line": 113,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 34,
                                "line": 113,
                              },
                              "name": "hasIndex",
                              "start": Position {
                                "character": 26,
                                "line": 113,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 25,
                              "line": 113,
                            },
                            "type": "MemberExpression",
                          },
                          "end": Position {
                            "character": 38,
                            "line": 113,
                          },
                          "start": Position {
                            "character": 34,
                            "line": 113,
                          },
                          "type": "CallExpression",
                        },
                        "end": Position {
                          "character": 38,
                          "line": 113,
                        },
                        "operator": "not",
                        "start": Position {
                          "character": 13,
                          "line": 113,
                        },
                        "type": "NegationExpression",
                      },
                      "end": Position {
                        "character": 15,
                        "line": 115,
                      },
                      "start": Position {
                        "character": 9,
                        "line": 113,
                      },
                      "type": "IfClause",
                    },
                  ],
                  "end": Position {
                    "character": 15,
                    "line": 115,
                  },
                  "start": Position {
                    "character": 9,
                    "line": 113,
                  },
                  "type": "IfStatement",
                },
                ASTReturnStatement {
                  "argument": ASTIndexExpression {
                    "base": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 18,
                          "line": 116,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 16,
                          "line": 116,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 25,
                        "line": 116,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 24,
                          "line": 116,
                        },
                        "name": "table",
                        "start": Position {
                          "character": 19,
                          "line": 116,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 18,
                        "line": 116,
                      },
                      "type": "MemberExpression",
                    },
                    "end": Position {
                      "character": 27,
                      "line": 116,
                    },
                    "index": ASTIdentifier {
                      "end": Position {
                        "character": 26,
                        "line": 116,
                      },
                      "name": "v",
                      "start": Position {
                        "character": 25,
                        "line": 116,
                      },
                      "type": "Identifier",
                    },
                    "start": Position {
                      "character": 25,
                      "line": 116,
                    },
                    "type": "IndexExpression",
                  },
                  "end": Position {
                    "character": 17,
                    "line": 117,
                  },
                  "start": Position {
                    "character": 9,
                    "line": 116,
                  },
                  "type": "ReturnStatement",
                },
              ],
              "end": Position {
                "character": 17,
                "line": 117,
              },
              "namespaces": Set {},
              "parameters": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 112,
                  },
                  "name": "v",
                  "start": Position {
                    "character": 20,
                    "line": 112,
                  },
                  "type": "Identifier",
                },
              ],
              "start": Position {
                "character": 11,
                "line": 112,
              },
              "type": "FunctionDeclaration",
            },
            "start": Position {
              "character": 5,
              "line": 112,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 8,
                "line": 112,
              },
              "name": "get",
              "start": Position {
                "character": 5,
                "line": 112,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 120,
            },
            "init": ASTFunctionStatement {
              "assignments": Array [],
              "body": Array [
                ASTReturnStatement {
                  "argument": ASTCallExpression {
                    "arguments": Array [
                      ASTLiteral {
                        "end": Position {
                          "character": 27,
                          "line": 119,
                        },
                        "raw": "\\"&\\"",
                        "start": Position {
                          "character": 24,
                          "line": 119,
                        },
                        "type": "StringLiteral",
                        "value": "&",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 30,
                          "line": 119,
                        },
                        "name": "a",
                        "start": Position {
                          "character": 29,
                          "line": 119,
                        },
                        "type": "Identifier",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 33,
                          "line": 119,
                        },
                        "name": "b",
                        "start": Position {
                          "character": 32,
                          "line": 119,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 23,
                        "line": 119,
                      },
                      "name": "bitwise",
                      "start": Position {
                        "character": 16,
                        "line": 119,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 34,
                      "line": 119,
                    },
                    "start": Position {
                      "character": 23,
                      "line": 119,
                    },
                    "type": "CallExpression",
                  },
                  "end": Position {
                    "character": 17,
                    "line": 120,
                  },
                  "start": Position {
                    "character": 9,
                    "line": 119,
                  },
                  "type": "ReturnStatement",
                },
              ],
              "end": Position {
                "character": 17,
                "line": 120,
              },
              "namespaces": Set {},
              "parameters": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 118,
                  },
                  "name": "a",
                  "start": Position {
                    "character": 20,
                    "line": 118,
                  },
                  "type": "Identifier",
                },
                ASTIdentifier {
                  "end": Position {
                    "character": 24,
                    "line": 118,
                  },
                  "name": "b",
                  "start": Position {
                    "character": 23,
                    "line": 118,
                  },
                  "type": "Identifier",
                },
              ],
              "start": Position {
                "character": 11,
                "line": 118,
              },
              "type": "FunctionDeclaration",
            },
            "start": Position {
              "character": 5,
              "line": 118,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 8,
                "line": 118,
              },
              "name": "AND",
              "start": Position {
                "character": 5,
                "line": 118,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 123,
            },
            "init": ASTFunctionStatement {
              "assignments": Array [],
              "body": Array [
                ASTReturnStatement {
                  "argument": ASTCallExpression {
                    "arguments": Array [
                      ASTLiteral {
                        "end": Position {
                          "character": 28,
                          "line": 122,
                        },
                        "raw": "\\"<<\\"",
                        "start": Position {
                          "character": 24,
                          "line": 122,
                        },
                        "type": "StringLiteral",
                        "value": "<<",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 31,
                          "line": 122,
                        },
                        "name": "a",
                        "start": Position {
                          "character": 30,
                          "line": 122,
                        },
                        "type": "Identifier",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 34,
                          "line": 122,
                        },
                        "name": "b",
                        "start": Position {
                          "character": 33,
                          "line": 122,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 23,
                        "line": 122,
                      },
                      "name": "bitwise",
                      "start": Position {
                        "character": 16,
                        "line": 122,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 35,
                      "line": 122,
                    },
                    "start": Position {
                      "character": 23,
                      "line": 122,
                    },
                    "type": "CallExpression",
                  },
                  "end": Position {
                    "character": 17,
                    "line": 123,
                  },
                  "start": Position {
                    "character": 9,
                    "line": 122,
                  },
                  "type": "ReturnStatement",
                },
              ],
              "end": Position {
                "character": 17,
                "line": 123,
              },
              "namespaces": Set {},
              "parameters": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 24,
                    "line": 121,
                  },
                  "name": "a",
                  "start": Position {
                    "character": 23,
                    "line": 121,
                  },
                  "type": "Identifier",
                },
                ASTIdentifier {
                  "end": Position {
                    "character": 27,
                    "line": 121,
                  },
                  "name": "b",
                  "start": Position {
                    "character": 26,
                    "line": 121,
                  },
                  "type": "Identifier",
                },
              ],
              "start": Position {
                "character": 14,
                "line": 121,
              },
              "type": "FunctionDeclaration",
            },
            "start": Position {
              "character": 5,
              "line": 121,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 121,
              },
              "name": "LSHIFT",
              "start": Position {
                "character": 5,
                "line": 121,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 126,
            },
            "init": ASTFunctionStatement {
              "assignments": Array [],
              "body": Array [
                ASTReturnStatement {
                  "argument": ASTCallExpression {
                    "arguments": Array [
                      ASTLiteral {
                        "end": Position {
                          "character": 28,
                          "line": 125,
                        },
                        "raw": "\\">>\\"",
                        "start": Position {
                          "character": 24,
                          "line": 125,
                        },
                        "type": "StringLiteral",
                        "value": ">>",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 31,
                          "line": 125,
                        },
                        "name": "a",
                        "start": Position {
                          "character": 30,
                          "line": 125,
                        },
                        "type": "Identifier",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 34,
                          "line": 125,
                        },
                        "name": "b",
                        "start": Position {
                          "character": 33,
                          "line": 125,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 23,
                        "line": 125,
                      },
                      "name": "bitwise",
                      "start": Position {
                        "character": 16,
                        "line": 125,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 35,
                      "line": 125,
                    },
                    "start": Position {
                      "character": 23,
                      "line": 125,
                    },
                    "type": "CallExpression",
                  },
                  "end": Position {
                    "character": 17,
                    "line": 126,
                  },
                  "start": Position {
                    "character": 9,
                    "line": 125,
                  },
                  "type": "ReturnStatement",
                },
              ],
              "end": Position {
                "character": 17,
                "line": 126,
              },
              "namespaces": Set {},
              "parameters": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 24,
                    "line": 124,
                  },
                  "name": "a",
                  "start": Position {
                    "character": 23,
                    "line": 124,
                  },
                  "type": "Identifier",
                },
                ASTIdentifier {
                  "end": Position {
                    "character": 27,
                    "line": 124,
                  },
                  "name": "b",
                  "start": Position {
                    "character": 26,
                    "line": 124,
                  },
                  "type": "Identifier",
                },
              ],
              "start": Position {
                "character": 14,
                "line": 124,
              },
              "type": "FunctionDeclaration",
            },
            "start": Position {
              "character": 5,
              "line": 124,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 124,
              },
              "name": "RSHIFT",
              "start": Position {
                "character": 5,
                "line": 124,
              },
              "type": "Identifier",
            },
          },
          ASTWhileStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 42,
                  "line": 128,
                },
                "init": ASTIndexExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 17,
                      "line": 128,
                    },
                    "name": "hash",
                    "start": Position {
                      "character": 13,
                      "line": 128,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 42,
                    "line": 128,
                  },
                  "index": ASTEvaluationExpression {
                    "end": Position {
                      "character": 42,
                      "line": 128,
                    },
                    "left": ASTEvaluationExpression {
                      "end": Position {
                        "character": 39,
                        "line": 128,
                      },
                      "left": ASTIdentifier {
                        "end": Position {
                          "character": 26,
                          "line": 128,
                        },
                        "name": "position",
                        "start": Position {
                          "character": 18,
                          "line": 128,
                        },
                        "type": "Identifier",
                      },
                      "operator": "%",
                      "right": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 33,
                            "line": 128,
                          },
                          "name": "hash",
                          "start": Position {
                            "character": 29,
                            "line": 128,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 39,
                          "line": 128,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 37,
                            "line": 128,
                          },
                          "name": "len",
                          "start": Position {
                            "character": 34,
                            "line": 128,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 33,
                          "line": 128,
                        },
                        "type": "MemberExpression",
                      },
                      "start": Position {
                        "character": 27,
                        "line": 128,
                      },
                      "type": "BinaryExpression",
                    },
                    "operator": "-",
                    "right": ASTLiteral {
                      "end": Position {
                        "character": 41,
                        "line": 128,
                      },
                      "raw": "1",
                      "start": Position {
                        "character": 40,
                        "line": 128,
                      },
                      "type": "NumericLiteral",
                      "value": 1,
                    },
                    "start": Position {
                      "character": 27,
                      "line": 128,
                    },
                    "type": "BinaryExpression",
                  },
                  "start": Position {
                    "character": 18,
                    "line": 128,
                  },
                  "type": "IndexExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 128,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 128,
                  },
                  "name": "m",
                  "start": Position {
                    "character": 9,
                    "line": 128,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 47,
                  "line": 129,
                },
                "init": ASTCallExpression {
                  "arguments": Array [
                    ASTEvaluationExpression {
                      "end": Position {
                        "character": 43,
                        "line": 129,
                      },
                      "left": ASTMemberExpression {
                        "base": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 23,
                              "line": 129,
                            },
                            "name": "str",
                            "start": Position {
                              "character": 20,
                              "line": 129,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 34,
                            "line": 129,
                          },
                          "index": ASTIdentifier {
                            "end": Position {
                              "character": 32,
                              "line": 129,
                            },
                            "name": "position",
                            "start": Position {
                              "character": 24,
                              "line": 129,
                            },
                            "type": "Identifier",
                          },
                          "start": Position {
                            "character": 24,
                            "line": 129,
                          },
                          "type": "IndexExpression",
                        },
                        "end": Position {
                          "character": 40,
                          "line": 129,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 38,
                            "line": 129,
                          },
                          "name": "code",
                          "start": Position {
                            "character": 34,
                            "line": 129,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 33,
                          "line": 129,
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "+",
                      "right": ASTIdentifier {
                        "end": Position {
                          "character": 42,
                          "line": 129,
                        },
                        "name": "m",
                        "start": Position {
                          "character": 41,
                          "line": 129,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 39,
                        "line": 129,
                      },
                      "type": "BinaryExpression",
                    },
                    ASTLiteral {
                      "end": Position {
                        "character": 46,
                        "line": 129,
                      },
                      "raw": "16",
                      "start": Position {
                        "character": 44,
                        "line": 129,
                      },
                      "type": "NumericLiteral",
                      "value": 16,
                    },
                  ],
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 19,
                      "line": 129,
                    },
                    "name": "LSHIFT",
                    "start": Position {
                      "character": 13,
                      "line": 129,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 47,
                    "line": 129,
                  },
                  "start": Position {
                    "character": 19,
                    "line": 129,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 129,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 129,
                  },
                  "name": "a",
                  "start": Position {
                    "character": 9,
                    "line": 129,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 50,
                  "line": 130,
                },
                "init": ASTCallExpression {
                  "arguments": Array [
                    ASTEvaluationExpression {
                      "end": Position {
                        "character": 47,
                        "line": 130,
                      },
                      "left": ASTMemberExpression {
                        "base": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 23,
                              "line": 130,
                            },
                            "name": "str",
                            "start": Position {
                              "character": 20,
                              "line": 130,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 38,
                            "line": 130,
                          },
                          "index": ASTEvaluationExpression {
                            "end": Position {
                              "character": 37,
                              "line": 130,
                            },
                            "left": ASTIdentifier {
                              "end": Position {
                                "character": 32,
                                "line": 130,
                              },
                              "name": "position",
                              "start": Position {
                                "character": 24,
                                "line": 130,
                              },
                              "type": "Identifier",
                            },
                            "operator": "+",
                            "right": ASTLiteral {
                              "end": Position {
                                "character": 36,
                                "line": 130,
                              },
                              "raw": "1",
                              "start": Position {
                                "character": 35,
                                "line": 130,
                              },
                              "type": "NumericLiteral",
                              "value": 1,
                            },
                            "start": Position {
                              "character": 33,
                              "line": 130,
                            },
                            "type": "BinaryExpression",
                          },
                          "start": Position {
                            "character": 24,
                            "line": 130,
                          },
                          "type": "IndexExpression",
                        },
                        "end": Position {
                          "character": 44,
                          "line": 130,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 42,
                            "line": 130,
                          },
                          "name": "code",
                          "start": Position {
                            "character": 38,
                            "line": 130,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 37,
                          "line": 130,
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "+",
                      "right": ASTIdentifier {
                        "end": Position {
                          "character": 46,
                          "line": 130,
                        },
                        "name": "m",
                        "start": Position {
                          "character": 45,
                          "line": 130,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 43,
                        "line": 130,
                      },
                      "type": "BinaryExpression",
                    },
                    ASTLiteral {
                      "end": Position {
                        "character": 49,
                        "line": 130,
                      },
                      "raw": "8",
                      "start": Position {
                        "character": 48,
                        "line": 130,
                      },
                      "type": "NumericLiteral",
                      "value": 8,
                    },
                  ],
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 19,
                      "line": 130,
                    },
                    "name": "LSHIFT",
                    "start": Position {
                      "character": 13,
                      "line": 130,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 50,
                    "line": 130,
                  },
                  "start": Position {
                    "character": 19,
                    "line": 130,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 130,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 130,
                  },
                  "name": "b",
                  "start": Position {
                    "character": 9,
                    "line": 130,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 39,
                  "line": 131,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 39,
                    "line": 131,
                  },
                  "left": ASTMemberExpression {
                    "base": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 16,
                          "line": 131,
                        },
                        "name": "str",
                        "start": Position {
                          "character": 13,
                          "line": 131,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 31,
                        "line": 131,
                      },
                      "index": ASTEvaluationExpression {
                        "end": Position {
                          "character": 30,
                          "line": 131,
                        },
                        "left": ASTIdentifier {
                          "end": Position {
                            "character": 25,
                            "line": 131,
                          },
                          "name": "position",
                          "start": Position {
                            "character": 17,
                            "line": 131,
                          },
                          "type": "Identifier",
                        },
                        "operator": "+",
                        "right": ASTLiteral {
                          "end": Position {
                            "character": 29,
                            "line": 131,
                          },
                          "raw": "2",
                          "start": Position {
                            "character": 28,
                            "line": 131,
                          },
                          "type": "NumericLiteral",
                          "value": 2,
                        },
                        "start": Position {
                          "character": 26,
                          "line": 131,
                        },
                        "type": "BinaryExpression",
                      },
                      "start": Position {
                        "character": 17,
                        "line": 131,
                      },
                      "type": "IndexExpression",
                    },
                    "end": Position {
                      "character": 37,
                      "line": 131,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 35,
                        "line": 131,
                      },
                      "name": "code",
                      "start": Position {
                        "character": 31,
                        "line": 131,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 30,
                      "line": 131,
                    },
                    "type": "MemberExpression",
                  },
                  "operator": "+",
                  "right": ASTIdentifier {
                    "end": Position {
                      "character": 39,
                      "line": 131,
                    },
                    "name": "m",
                    "start": Position {
                      "character": 38,
                      "line": 131,
                    },
                    "type": "Identifier",
                  },
                  "start": Position {
                    "character": 36,
                    "line": 131,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 131,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 10,
                    "line": 131,
                  },
                  "name": "c",
                  "start": Position {
                    "character": 9,
                    "line": 131,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 27,
                  "line": 132,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 27,
                    "line": 132,
                  },
                  "left": ASTEvaluationExpression {
                    "end": Position {
                      "character": 25,
                      "line": 132,
                    },
                    "left": ASTIdentifier {
                      "end": Position {
                        "character": 19,
                        "line": 132,
                      },
                      "name": "a",
                      "start": Position {
                        "character": 18,
                        "line": 132,
                      },
                      "type": "Identifier",
                    },
                    "operator": "+",
                    "right": ASTIdentifier {
                      "end": Position {
                        "character": 23,
                        "line": 132,
                      },
                      "name": "b",
                      "start": Position {
                        "character": 22,
                        "line": 132,
                      },
                      "type": "Identifier",
                    },
                    "start": Position {
                      "character": 20,
                      "line": 132,
                    },
                    "type": "BinaryExpression",
                  },
                  "operator": "+",
                  "right": ASTIdentifier {
                    "end": Position {
                      "character": 27,
                      "line": 132,
                    },
                    "name": "c",
                    "start": Position {
                      "character": 26,
                      "line": 132,
                    },
                    "type": "Identifier",
                  },
                  "start": Position {
                    "character": 20,
                    "line": 132,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 132,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 15,
                    "line": 132,
                  },
                  "name": "buffer",
                  "start": Position {
                    "character": 9,
                    "line": 132,
                  },
                  "type": "Identifier",
                },
              },
              ASTCallStatement {
                "end": Position {
                  "character": 54,
                  "line": 133,
                },
                "expression": ASTCallExpression {
                  "arguments": Array [
                    ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTIdentifier {
                                  "end": Position {
                                    "character": 42,
                                    "line": 133,
                                  },
                                  "name": "buffer",
                                  "start": Position {
                                    "character": 36,
                                    "line": 133,
                                  },
                                  "type": "Identifier",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 46,
                                    "line": 133,
                                  },
                                  "raw": "18",
                                  "start": Position {
                                    "character": 44,
                                    "line": 133,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 18,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 35,
                                  "line": 133,
                                },
                                "name": "RSHIFT",
                                "start": Position {
                                  "character": 29,
                                  "line": 133,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 48,
                                "line": 133,
                              },
                              "start": Position {
                                "character": 35,
                                "line": 133,
                              },
                              "type": "CallExpression",
                            },
                            ASTLiteral {
                              "end": Position {
                                "character": 51,
                                "line": 133,
                              },
                              "raw": "63",
                              "start": Position {
                                "character": 49,
                                "line": 133,
                              },
                              "type": "NumericLiteral",
                              "value": 63,
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 28,
                              "line": 133,
                            },
                            "name": "AND",
                            "start": Position {
                              "character": 25,
                              "line": 133,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 53,
                            "line": 133,
                          },
                          "start": Position {
                            "character": 28,
                            "line": 133,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 24,
                          "line": 133,
                        },
                        "name": "get",
                        "start": Position {
                          "character": 21,
                          "line": 133,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 54,
                        "line": 133,
                      },
                      "start": Position {
                        "character": 24,
                        "line": 133,
                      },
                      "type": "CallExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 133,
                      },
                      "name": "output",
                      "start": Position {
                        "character": 9,
                        "line": 133,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 21,
                      "line": 133,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 133,
                      },
                      "name": "push",
                      "start": Position {
                        "character": 16,
                        "line": 133,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 15,
                      "line": 133,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 54,
                    "line": 133,
                  },
                  "start": Position {
                    "character": 20,
                    "line": 133,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 133,
                },
                "type": "CallStatement",
              },
              ASTCallStatement {
                "end": Position {
                  "character": 54,
                  "line": 134,
                },
                "expression": ASTCallExpression {
                  "arguments": Array [
                    ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTIdentifier {
                                  "end": Position {
                                    "character": 42,
                                    "line": 134,
                                  },
                                  "name": "buffer",
                                  "start": Position {
                                    "character": 36,
                                    "line": 134,
                                  },
                                  "type": "Identifier",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 46,
                                    "line": 134,
                                  },
                                  "raw": "12",
                                  "start": Position {
                                    "character": 44,
                                    "line": 134,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 12,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 35,
                                  "line": 134,
                                },
                                "name": "RSHIFT",
                                "start": Position {
                                  "character": 29,
                                  "line": 134,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 48,
                                "line": 134,
                              },
                              "start": Position {
                                "character": 35,
                                "line": 134,
                              },
                              "type": "CallExpression",
                            },
                            ASTLiteral {
                              "end": Position {
                                "character": 51,
                                "line": 134,
                              },
                              "raw": "63",
                              "start": Position {
                                "character": 49,
                                "line": 134,
                              },
                              "type": "NumericLiteral",
                              "value": 63,
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 28,
                              "line": 134,
                            },
                            "name": "AND",
                            "start": Position {
                              "character": 25,
                              "line": 134,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 53,
                            "line": 134,
                          },
                          "start": Position {
                            "character": 28,
                            "line": 134,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 24,
                          "line": 134,
                        },
                        "name": "get",
                        "start": Position {
                          "character": 21,
                          "line": 134,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 54,
                        "line": 134,
                      },
                      "start": Position {
                        "character": 24,
                        "line": 134,
                      },
                      "type": "CallExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 134,
                      },
                      "name": "output",
                      "start": Position {
                        "character": 9,
                        "line": 134,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 21,
                      "line": 134,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 134,
                      },
                      "name": "push",
                      "start": Position {
                        "character": 16,
                        "line": 134,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 15,
                      "line": 134,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 54,
                    "line": 134,
                  },
                  "start": Position {
                    "character": 20,
                    "line": 134,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 134,
                },
                "type": "CallStatement",
              },
              ASTCallStatement {
                "end": Position {
                  "character": 53,
                  "line": 135,
                },
                "expression": ASTCallExpression {
                  "arguments": Array [
                    ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTIdentifier {
                                  "end": Position {
                                    "character": 42,
                                    "line": 135,
                                  },
                                  "name": "buffer",
                                  "start": Position {
                                    "character": 36,
                                    "line": 135,
                                  },
                                  "type": "Identifier",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 45,
                                    "line": 135,
                                  },
                                  "raw": "6",
                                  "start": Position {
                                    "character": 44,
                                    "line": 135,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 6,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 35,
                                  "line": 135,
                                },
                                "name": "RSHIFT",
                                "start": Position {
                                  "character": 29,
                                  "line": 135,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 47,
                                "line": 135,
                              },
                              "start": Position {
                                "character": 35,
                                "line": 135,
                              },
                              "type": "CallExpression",
                            },
                            ASTLiteral {
                              "end": Position {
                                "character": 50,
                                "line": 135,
                              },
                              "raw": "63",
                              "start": Position {
                                "character": 48,
                                "line": 135,
                              },
                              "type": "NumericLiteral",
                              "value": 63,
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 28,
                              "line": 135,
                            },
                            "name": "AND",
                            "start": Position {
                              "character": 25,
                              "line": 135,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 52,
                            "line": 135,
                          },
                          "start": Position {
                            "character": 28,
                            "line": 135,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 24,
                          "line": 135,
                        },
                        "name": "get",
                        "start": Position {
                          "character": 21,
                          "line": 135,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 53,
                        "line": 135,
                      },
                      "start": Position {
                        "character": 24,
                        "line": 135,
                      },
                      "type": "CallExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 135,
                      },
                      "name": "output",
                      "start": Position {
                        "character": 9,
                        "line": 135,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 21,
                      "line": 135,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 135,
                      },
                      "name": "push",
                      "start": Position {
                        "character": 16,
                        "line": 135,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 15,
                      "line": 135,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 53,
                    "line": 135,
                  },
                  "start": Position {
                    "character": 20,
                    "line": 135,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 135,
                },
                "type": "CallStatement",
              },
              ASTCallStatement {
                "end": Position {
                  "character": 42,
                  "line": 136,
                },
                "expression": ASTCallExpression {
                  "arguments": Array [
                    ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTIdentifier {
                              "end": Position {
                                "character": 35,
                                "line": 136,
                              },
                              "name": "buffer",
                              "start": Position {
                                "character": 29,
                                "line": 136,
                              },
                              "type": "Identifier",
                            },
                            ASTLiteral {
                              "end": Position {
                                "character": 39,
                                "line": 136,
                              },
                              "raw": "63",
                              "start": Position {
                                "character": 37,
                                "line": 136,
                              },
                              "type": "NumericLiteral",
                              "value": 63,
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 28,
                              "line": 136,
                            },
                            "name": "AND",
                            "start": Position {
                              "character": 25,
                              "line": 136,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 41,
                            "line": 136,
                          },
                          "start": Position {
                            "character": 28,
                            "line": 136,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 24,
                          "line": 136,
                        },
                        "name": "get",
                        "start": Position {
                          "character": 21,
                          "line": 136,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 42,
                        "line": 136,
                      },
                      "start": Position {
                        "character": 24,
                        "line": 136,
                      },
                      "type": "CallExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 136,
                      },
                      "name": "output",
                      "start": Position {
                        "character": 9,
                        "line": 136,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 21,
                      "line": 136,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 136,
                      },
                      "name": "push",
                      "start": Position {
                        "character": 16,
                        "line": 136,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 15,
                      "line": 136,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 42,
                    "line": 136,
                  },
                  "start": Position {
                    "character": 20,
                    "line": 136,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 136,
                },
                "type": "CallStatement",
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 32,
                  "line": 137,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 32,
                    "line": 137,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 28,
                      "line": 137,
                    },
                    "name": "position",
                    "start": Position {
                      "character": 20,
                      "line": 137,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 137,
                    },
                    "raw": "3",
                    "start": Position {
                      "character": 31,
                      "line": 137,
                    },
                    "type": "NumericLiteral",
                    "value": 3,
                  },
                  "start": Position {
                    "character": 29,
                    "line": 137,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 137,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 17,
                    "line": 137,
                  },
                  "name": "position",
                  "start": Position {
                    "character": 9,
                    "line": 137,
                  },
                  "type": "Identifier",
                },
              },
            ],
            "condition": ASTEvaluationExpression {
              "end": Position {
                "character": 25,
                "line": 127,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 19,
                  "line": 127,
                },
                "name": "position",
                "start": Position {
                  "character": 11,
                  "line": 127,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": ASTIdentifier {
                "end": Position {
                  "character": 25,
                  "line": 127,
                },
                "name": "max",
                "start": Position {
                  "character": 22,
                  "line": 127,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 20,
                "line": 127,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 14,
              "line": 138,
            },
            "start": Position {
              "character": 5,
              "line": 127,
            },
            "type": "WhileStatement",
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 42,
                      "line": 140,
                    },
                    "init": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 17,
                          "line": 140,
                        },
                        "name": "hash",
                        "start": Position {
                          "character": 13,
                          "line": 140,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 42,
                        "line": 140,
                      },
                      "index": ASTEvaluationExpression {
                        "end": Position {
                          "character": 42,
                          "line": 140,
                        },
                        "left": ASTEvaluationExpression {
                          "end": Position {
                            "character": 39,
                            "line": 140,
                          },
                          "left": ASTIdentifier {
                            "end": Position {
                              "character": 26,
                              "line": 140,
                            },
                            "name": "position",
                            "start": Position {
                              "character": 18,
                              "line": 140,
                            },
                            "type": "Identifier",
                          },
                          "operator": "%",
                          "right": ASTMemberExpression {
                            "base": ASTIdentifier {
                              "end": Position {
                                "character": 33,
                                "line": 140,
                              },
                              "name": "hash",
                              "start": Position {
                                "character": 29,
                                "line": 140,
                              },
                              "type": "Identifier",
                            },
                            "end": Position {
                              "character": 39,
                              "line": 140,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 37,
                                "line": 140,
                              },
                              "name": "len",
                              "start": Position {
                                "character": 34,
                                "line": 140,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 33,
                              "line": 140,
                            },
                            "type": "MemberExpression",
                          },
                          "start": Position {
                            "character": 27,
                            "line": 140,
                          },
                          "type": "BinaryExpression",
                        },
                        "operator": "-",
                        "right": ASTLiteral {
                          "end": Position {
                            "character": 41,
                            "line": 140,
                          },
                          "raw": "1",
                          "start": Position {
                            "character": 40,
                            "line": 140,
                          },
                          "type": "NumericLiteral",
                          "value": 1,
                        },
                        "start": Position {
                          "character": 27,
                          "line": 140,
                        },
                        "type": "BinaryExpression",
                      },
                      "start": Position {
                        "character": 18,
                        "line": 140,
                      },
                      "type": "IndexExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 140,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 10,
                        "line": 140,
                      },
                      "name": "m",
                      "start": Position {
                        "character": 9,
                        "line": 140,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 46,
                      "line": 141,
                    },
                    "init": ASTCallExpression {
                      "arguments": Array [
                        ASTEvaluationExpression {
                          "end": Position {
                            "character": 43,
                            "line": 141,
                          },
                          "left": ASTMemberExpression {
                            "base": ASTIndexExpression {
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 23,
                                  "line": 141,
                                },
                                "name": "str",
                                "start": Position {
                                  "character": 20,
                                  "line": 141,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 34,
                                "line": 141,
                              },
                              "index": ASTIdentifier {
                                "end": Position {
                                  "character": 32,
                                  "line": 141,
                                },
                                "name": "position",
                                "start": Position {
                                  "character": 24,
                                  "line": 141,
                                },
                                "type": "Identifier",
                              },
                              "start": Position {
                                "character": 24,
                                "line": 141,
                              },
                              "type": "IndexExpression",
                            },
                            "end": Position {
                              "character": 40,
                              "line": 141,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 38,
                                "line": 141,
                              },
                              "name": "code",
                              "start": Position {
                                "character": 34,
                                "line": 141,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 33,
                              "line": 141,
                            },
                            "type": "MemberExpression",
                          },
                          "operator": "+",
                          "right": ASTIdentifier {
                            "end": Position {
                              "character": 42,
                              "line": 141,
                            },
                            "name": "m",
                            "start": Position {
                              "character": 41,
                              "line": 141,
                            },
                            "type": "Identifier",
                          },
                          "start": Position {
                            "character": 39,
                            "line": 141,
                          },
                          "type": "BinaryExpression",
                        },
                        ASTLiteral {
                          "end": Position {
                            "character": 45,
                            "line": 141,
                          },
                          "raw": "8",
                          "start": Position {
                            "character": 44,
                            "line": 141,
                          },
                          "type": "NumericLiteral",
                          "value": 8,
                        },
                      ],
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 19,
                          "line": 141,
                        },
                        "name": "LSHIFT",
                        "start": Position {
                          "character": 13,
                          "line": 141,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 46,
                        "line": 141,
                      },
                      "start": Position {
                        "character": 19,
                        "line": 141,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 141,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 10,
                        "line": 141,
                      },
                      "name": "a",
                      "start": Position {
                        "character": 9,
                        "line": 141,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 39,
                      "line": 142,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 39,
                        "line": 142,
                      },
                      "left": ASTMemberExpression {
                        "base": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 16,
                              "line": 142,
                            },
                            "name": "str",
                            "start": Position {
                              "character": 13,
                              "line": 142,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 31,
                            "line": 142,
                          },
                          "index": ASTEvaluationExpression {
                            "end": Position {
                              "character": 30,
                              "line": 142,
                            },
                            "left": ASTIdentifier {
                              "end": Position {
                                "character": 25,
                                "line": 142,
                              },
                              "name": "position",
                              "start": Position {
                                "character": 17,
                                "line": 142,
                              },
                              "type": "Identifier",
                            },
                            "operator": "+",
                            "right": ASTLiteral {
                              "end": Position {
                                "character": 29,
                                "line": 142,
                              },
                              "raw": "1",
                              "start": Position {
                                "character": 28,
                                "line": 142,
                              },
                              "type": "NumericLiteral",
                              "value": 1,
                            },
                            "start": Position {
                              "character": 26,
                              "line": 142,
                            },
                            "type": "BinaryExpression",
                          },
                          "start": Position {
                            "character": 17,
                            "line": 142,
                          },
                          "type": "IndexExpression",
                        },
                        "end": Position {
                          "character": 37,
                          "line": 142,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 35,
                            "line": 142,
                          },
                          "name": "code",
                          "start": Position {
                            "character": 31,
                            "line": 142,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 30,
                          "line": 142,
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "+",
                      "right": ASTIdentifier {
                        "end": Position {
                          "character": 39,
                          "line": 142,
                        },
                        "name": "m",
                        "start": Position {
                          "character": 38,
                          "line": 142,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 36,
                        "line": 142,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 142,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 10,
                        "line": 142,
                      },
                      "name": "b",
                      "start": Position {
                        "character": 9,
                        "line": 142,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 23,
                      "line": 143,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 23,
                        "line": 143,
                      },
                      "left": ASTIdentifier {
                        "end": Position {
                          "character": 19,
                          "line": 143,
                        },
                        "name": "a",
                        "start": Position {
                          "character": 18,
                          "line": 143,
                        },
                        "type": "Identifier",
                      },
                      "operator": "+",
                      "right": ASTIdentifier {
                        "end": Position {
                          "character": 23,
                          "line": 143,
                        },
                        "name": "b",
                        "start": Position {
                          "character": 22,
                          "line": 143,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 20,
                        "line": 143,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 143,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 143,
                      },
                      "name": "buffer",
                      "start": Position {
                        "character": 9,
                        "line": 143,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTCallStatement {
                    "end": Position {
                      "character": 45,
                      "line": 144,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTIdentifier {
                                  "end": Position {
                                    "character": 38,
                                    "line": 144,
                                  },
                                  "name": "buffer",
                                  "start": Position {
                                    "character": 32,
                                    "line": 144,
                                  },
                                  "type": "Identifier",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 42,
                                    "line": 144,
                                  },
                                  "raw": "10",
                                  "start": Position {
                                    "character": 40,
                                    "line": 144,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 10,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 31,
                                  "line": 144,
                                },
                                "name": "RSHIFT",
                                "start": Position {
                                  "character": 25,
                                  "line": 144,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 44,
                                "line": 144,
                              },
                              "start": Position {
                                "character": 31,
                                "line": 144,
                              },
                              "type": "CallExpression",
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 24,
                              "line": 144,
                            },
                            "name": "get",
                            "start": Position {
                              "character": 21,
                              "line": 144,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 45,
                            "line": 144,
                          },
                          "start": Position {
                            "character": 24,
                            "line": 144,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 15,
                            "line": 144,
                          },
                          "name": "output",
                          "start": Position {
                            "character": 9,
                            "line": 144,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 21,
                          "line": 144,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 20,
                            "line": 144,
                          },
                          "name": "push",
                          "start": Position {
                            "character": 16,
                            "line": 144,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 15,
                          "line": 144,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 45,
                        "line": 144,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 144,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 144,
                    },
                    "type": "CallStatement",
                  },
                  ASTCallStatement {
                    "end": Position {
                      "character": 53,
                      "line": 145,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTCallExpression {
                                  "arguments": Array [
                                    ASTIdentifier {
                                      "end": Position {
                                        "character": 42,
                                        "line": 145,
                                      },
                                      "name": "buffer",
                                      "start": Position {
                                        "character": 36,
                                        "line": 145,
                                      },
                                      "type": "Identifier",
                                    },
                                    ASTLiteral {
                                      "end": Position {
                                        "character": 45,
                                        "line": 145,
                                      },
                                      "raw": "4",
                                      "start": Position {
                                        "character": 44,
                                        "line": 145,
                                      },
                                      "type": "NumericLiteral",
                                      "value": 4,
                                    },
                                  ],
                                  "base": ASTIdentifier {
                                    "end": Position {
                                      "character": 35,
                                      "line": 145,
                                    },
                                    "name": "RSHIFT",
                                    "start": Position {
                                      "character": 29,
                                      "line": 145,
                                    },
                                    "type": "Identifier",
                                  },
                                  "end": Position {
                                    "character": 47,
                                    "line": 145,
                                  },
                                  "start": Position {
                                    "character": 35,
                                    "line": 145,
                                  },
                                  "type": "CallExpression",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 50,
                                    "line": 145,
                                  },
                                  "raw": "63",
                                  "start": Position {
                                    "character": 48,
                                    "line": 145,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 63,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 28,
                                  "line": 145,
                                },
                                "name": "AND",
                                "start": Position {
                                  "character": 25,
                                  "line": 145,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 52,
                                "line": 145,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 145,
                              },
                              "type": "CallExpression",
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 24,
                              "line": 145,
                            },
                            "name": "get",
                            "start": Position {
                              "character": 21,
                              "line": 145,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 53,
                            "line": 145,
                          },
                          "start": Position {
                            "character": 24,
                            "line": 145,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 15,
                            "line": 145,
                          },
                          "name": "output",
                          "start": Position {
                            "character": 9,
                            "line": 145,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 21,
                          "line": 145,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 20,
                            "line": 145,
                          },
                          "name": "push",
                          "start": Position {
                            "character": 16,
                            "line": 145,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 15,
                          "line": 145,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 53,
                        "line": 145,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 145,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 145,
                    },
                    "type": "CallStatement",
                  },
                  ASTCallStatement {
                    "end": Position {
                      "character": 53,
                      "line": 146,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTCallExpression {
                                  "arguments": Array [
                                    ASTIdentifier {
                                      "end": Position {
                                        "character": 42,
                                        "line": 146,
                                      },
                                      "name": "buffer",
                                      "start": Position {
                                        "character": 36,
                                        "line": 146,
                                      },
                                      "type": "Identifier",
                                    },
                                    ASTLiteral {
                                      "end": Position {
                                        "character": 45,
                                        "line": 146,
                                      },
                                      "raw": "2",
                                      "start": Position {
                                        "character": 44,
                                        "line": 146,
                                      },
                                      "type": "NumericLiteral",
                                      "value": 2,
                                    },
                                  ],
                                  "base": ASTIdentifier {
                                    "end": Position {
                                      "character": 35,
                                      "line": 146,
                                    },
                                    "name": "LSHIFT",
                                    "start": Position {
                                      "character": 29,
                                      "line": 146,
                                    },
                                    "type": "Identifier",
                                  },
                                  "end": Position {
                                    "character": 47,
                                    "line": 146,
                                  },
                                  "start": Position {
                                    "character": 35,
                                    "line": 146,
                                  },
                                  "type": "CallExpression",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 50,
                                    "line": 146,
                                  },
                                  "raw": "63",
                                  "start": Position {
                                    "character": 48,
                                    "line": 146,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 63,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 28,
                                  "line": 146,
                                },
                                "name": "AND",
                                "start": Position {
                                  "character": 25,
                                  "line": 146,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 52,
                                "line": 146,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 146,
                              },
                              "type": "CallExpression",
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 24,
                              "line": 146,
                            },
                            "name": "get",
                            "start": Position {
                              "character": 21,
                              "line": 146,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 53,
                            "line": 146,
                          },
                          "start": Position {
                            "character": 24,
                            "line": 146,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 15,
                            "line": 146,
                          },
                          "name": "output",
                          "start": Position {
                            "character": 9,
                            "line": 146,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 21,
                          "line": 146,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 20,
                            "line": 146,
                          },
                          "name": "push",
                          "start": Position {
                            "character": 16,
                            "line": 146,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 15,
                          "line": 146,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 53,
                        "line": 146,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 146,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 146,
                    },
                    "type": "CallStatement",
                  },
                  ASTCallStatement {
                    "end": Position {
                      "character": 25,
                      "line": 147,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTLiteral {
                          "end": Position {
                            "character": 24,
                            "line": 147,
                          },
                          "raw": "\\"=\\"",
                          "start": Position {
                            "character": 21,
                            "line": 147,
                          },
                          "type": "StringLiteral",
                          "value": "=",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 15,
                            "line": 147,
                          },
                          "name": "output",
                          "start": Position {
                            "character": 9,
                            "line": 147,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 21,
                          "line": 147,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 20,
                            "line": 147,
                          },
                          "name": "push",
                          "start": Position {
                            "character": 16,
                            "line": 147,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 15,
                          "line": 147,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 25,
                        "line": 147,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 147,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 147,
                    },
                    "type": "CallStatement",
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 22,
                    "line": 139,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 16,
                      "line": 139,
                    },
                    "name": "padding",
                    "start": Position {
                      "character": 9,
                      "line": 139,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 21,
                      "line": 139,
                    },
                    "raw": "2",
                    "start": Position {
                      "character": 20,
                      "line": 139,
                    },
                    "type": "NumericLiteral",
                    "value": 2,
                  },
                  "start": Position {
                    "character": 17,
                    "line": 139,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 12,
                  "line": 148,
                },
                "start": Position {
                  "character": 5,
                  "line": 139,
                },
                "type": "IfClause",
              },
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 42,
                      "line": 149,
                    },
                    "init": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 17,
                          "line": 149,
                        },
                        "name": "hash",
                        "start": Position {
                          "character": 13,
                          "line": 149,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 42,
                        "line": 149,
                      },
                      "index": ASTEvaluationExpression {
                        "end": Position {
                          "character": 42,
                          "line": 149,
                        },
                        "left": ASTEvaluationExpression {
                          "end": Position {
                            "character": 39,
                            "line": 149,
                          },
                          "left": ASTIdentifier {
                            "end": Position {
                              "character": 26,
                              "line": 149,
                            },
                            "name": "position",
                            "start": Position {
                              "character": 18,
                              "line": 149,
                            },
                            "type": "Identifier",
                          },
                          "operator": "%",
                          "right": ASTMemberExpression {
                            "base": ASTIdentifier {
                              "end": Position {
                                "character": 33,
                                "line": 149,
                              },
                              "name": "hash",
                              "start": Position {
                                "character": 29,
                                "line": 149,
                              },
                              "type": "Identifier",
                            },
                            "end": Position {
                              "character": 39,
                              "line": 149,
                            },
                            "identifier": ASTIdentifier {
                              "end": Position {
                                "character": 37,
                                "line": 149,
                              },
                              "name": "len",
                              "start": Position {
                                "character": 34,
                                "line": 149,
                              },
                              "type": "Identifier",
                            },
                            "indexer": ".",
                            "start": Position {
                              "character": 33,
                              "line": 149,
                            },
                            "type": "MemberExpression",
                          },
                          "start": Position {
                            "character": 27,
                            "line": 149,
                          },
                          "type": "BinaryExpression",
                        },
                        "operator": "-",
                        "right": ASTLiteral {
                          "end": Position {
                            "character": 41,
                            "line": 149,
                          },
                          "raw": "1",
                          "start": Position {
                            "character": 40,
                            "line": 149,
                          },
                          "type": "NumericLiteral",
                          "value": 1,
                        },
                        "start": Position {
                          "character": 27,
                          "line": 149,
                        },
                        "type": "BinaryExpression",
                      },
                      "start": Position {
                        "character": 18,
                        "line": 149,
                      },
                      "type": "IndexExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 149,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 10,
                        "line": 149,
                      },
                      "name": "m",
                      "start": Position {
                        "character": 9,
                        "line": 149,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 40,
                      "line": 150,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 40,
                        "line": 150,
                      },
                      "left": ASTMemberExpression {
                        "base": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 21,
                              "line": 150,
                            },
                            "name": "str",
                            "start": Position {
                              "character": 18,
                              "line": 150,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 32,
                            "line": 150,
                          },
                          "index": ASTIdentifier {
                            "end": Position {
                              "character": 30,
                              "line": 150,
                            },
                            "name": "position",
                            "start": Position {
                              "character": 22,
                              "line": 150,
                            },
                            "type": "Identifier",
                          },
                          "start": Position {
                            "character": 22,
                            "line": 150,
                          },
                          "type": "IndexExpression",
                        },
                        "end": Position {
                          "character": 38,
                          "line": 150,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 36,
                            "line": 150,
                          },
                          "name": "code",
                          "start": Position {
                            "character": 32,
                            "line": 150,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 31,
                          "line": 150,
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "+",
                      "right": ASTIdentifier {
                        "end": Position {
                          "character": 40,
                          "line": 150,
                        },
                        "name": "m",
                        "start": Position {
                          "character": 39,
                          "line": 150,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 37,
                        "line": 150,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 150,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 150,
                      },
                      "name": "buffer",
                      "start": Position {
                        "character": 9,
                        "line": 150,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTCallStatement {
                    "end": Position {
                      "character": 44,
                      "line": 151,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTIdentifier {
                                  "end": Position {
                                    "character": 38,
                                    "line": 151,
                                  },
                                  "name": "buffer",
                                  "start": Position {
                                    "character": 32,
                                    "line": 151,
                                  },
                                  "type": "Identifier",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 41,
                                    "line": 151,
                                  },
                                  "raw": "2",
                                  "start": Position {
                                    "character": 40,
                                    "line": 151,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 2,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 31,
                                  "line": 151,
                                },
                                "name": "RSHIFT",
                                "start": Position {
                                  "character": 25,
                                  "line": 151,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 43,
                                "line": 151,
                              },
                              "start": Position {
                                "character": 31,
                                "line": 151,
                              },
                              "type": "CallExpression",
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 24,
                              "line": 151,
                            },
                            "name": "get",
                            "start": Position {
                              "character": 21,
                              "line": 151,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 44,
                            "line": 151,
                          },
                          "start": Position {
                            "character": 24,
                            "line": 151,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 15,
                            "line": 151,
                          },
                          "name": "output",
                          "start": Position {
                            "character": 9,
                            "line": 151,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 21,
                          "line": 151,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 20,
                            "line": 151,
                          },
                          "name": "push",
                          "start": Position {
                            "character": 16,
                            "line": 151,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 15,
                          "line": 151,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 44,
                        "line": 151,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 151,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 151,
                    },
                    "type": "CallStatement",
                  },
                  ASTCallStatement {
                    "end": Position {
                      "character": 53,
                      "line": 152,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTCallExpression {
                          "arguments": Array [
                            ASTCallExpression {
                              "arguments": Array [
                                ASTCallExpression {
                                  "arguments": Array [
                                    ASTIdentifier {
                                      "end": Position {
                                        "character": 42,
                                        "line": 152,
                                      },
                                      "name": "buffer",
                                      "start": Position {
                                        "character": 36,
                                        "line": 152,
                                      },
                                      "type": "Identifier",
                                    },
                                    ASTLiteral {
                                      "end": Position {
                                        "character": 45,
                                        "line": 152,
                                      },
                                      "raw": "4",
                                      "start": Position {
                                        "character": 44,
                                        "line": 152,
                                      },
                                      "type": "NumericLiteral",
                                      "value": 4,
                                    },
                                  ],
                                  "base": ASTIdentifier {
                                    "end": Position {
                                      "character": 35,
                                      "line": 152,
                                    },
                                    "name": "LSHIFT",
                                    "start": Position {
                                      "character": 29,
                                      "line": 152,
                                    },
                                    "type": "Identifier",
                                  },
                                  "end": Position {
                                    "character": 47,
                                    "line": 152,
                                  },
                                  "start": Position {
                                    "character": 35,
                                    "line": 152,
                                  },
                                  "type": "CallExpression",
                                },
                                ASTLiteral {
                                  "end": Position {
                                    "character": 50,
                                    "line": 152,
                                  },
                                  "raw": "63",
                                  "start": Position {
                                    "character": 48,
                                    "line": 152,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 63,
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 28,
                                  "line": 152,
                                },
                                "name": "AND",
                                "start": Position {
                                  "character": 25,
                                  "line": 152,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 52,
                                "line": 152,
                              },
                              "start": Position {
                                "character": 28,
                                "line": 152,
                              },
                              "type": "CallExpression",
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 24,
                              "line": 152,
                            },
                            "name": "get",
                            "start": Position {
                              "character": 21,
                              "line": 152,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 53,
                            "line": 152,
                          },
                          "start": Position {
                            "character": 24,
                            "line": 152,
                          },
                          "type": "CallExpression",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 15,
                            "line": 152,
                          },
                          "name": "output",
                          "start": Position {
                            "character": 9,
                            "line": 152,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 21,
                          "line": 152,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 20,
                            "line": 152,
                          },
                          "name": "push",
                          "start": Position {
                            "character": 16,
                            "line": 152,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 15,
                          "line": 152,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 53,
                        "line": 152,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 152,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 152,
                    },
                    "type": "CallStatement",
                  },
                  ASTCallStatement {
                    "end": Position {
                      "character": 26,
                      "line": 153,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTLiteral {
                          "end": Position {
                            "character": 25,
                            "line": 153,
                          },
                          "raw": "\\"==\\"",
                          "start": Position {
                            "character": 21,
                            "line": 153,
                          },
                          "type": "StringLiteral",
                          "value": "==",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 15,
                            "line": 153,
                          },
                          "name": "output",
                          "start": Position {
                            "character": 9,
                            "line": 153,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 21,
                          "line": 153,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 20,
                            "line": 153,
                          },
                          "name": "push",
                          "start": Position {
                            "character": 16,
                            "line": 153,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 15,
                          "line": 153,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 26,
                        "line": 153,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 153,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 153,
                    },
                    "type": "CallStatement",
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 27,
                    "line": 148,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 21,
                      "line": 148,
                    },
                    "name": "padding",
                    "start": Position {
                      "character": 14,
                      "line": 148,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 26,
                      "line": 148,
                    },
                    "raw": "1",
                    "start": Position {
                      "character": 25,
                      "line": 148,
                    },
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                  "start": Position {
                    "character": 22,
                    "line": 148,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 11,
                  "line": 154,
                },
                "start": Position {
                  "character": 13,
                  "line": 148,
                },
                "type": "ElseifClause",
              },
            ],
            "end": Position {
              "character": 11,
              "line": 154,
            },
            "start": Position {
              "character": 5,
              "line": 139,
            },
            "type": "IfStatement",
          },
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTLiteral {
                  "end": Position {
                    "character": 26,
                    "line": 155,
                  },
                  "raw": "\\"\\"",
                  "start": Position {
                    "character": 24,
                    "line": 155,
                  },
                  "type": "StringLiteral",
                  "value": "",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 18,
                    "line": 155,
                  },
                  "name": "output",
                  "start": Position {
                    "character": 12,
                    "line": 155,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 24,
                  "line": 155,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 23,
                    "line": 155,
                  },
                  "name": "join",
                  "start": Position {
                    "character": 19,
                    "line": 155,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 18,
                  "line": 155,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 27,
                "line": 155,
              },
              "start": Position {
                "character": 23,
                "line": 155,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 156,
            },
            "start": Position {
              "character": 5,
              "line": 155,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 156,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 30,
              "line": 103,
            },
            "name": "str",
            "start": Position {
              "character": 27,
              "line": 103,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 34,
              "line": 103,
            },
            "name": "pw",
            "start": Position {
              "character": 32,
              "line": 103,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 18,
          "line": 103,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 103,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 103,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 103,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 17,
          "line": 103,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 15,
            "line": 103,
          },
          "name": "encrypt",
          "start": Position {
            "character": 8,
            "line": 103,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 103,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 202,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 159,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 159,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 159,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 159,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 159,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 159,
              },
              "type": "Identifier",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 47,
                      "line": 160,
                    },
                    "init": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 33,
                          "line": 160,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 31,
                          "line": 160,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 47,
                        "line": 160,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 47,
                          "line": 160,
                        },
                        "name": "defaultSecret",
                        "start": Position {
                          "character": 34,
                          "line": 160,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 33,
                        "line": 160,
                      },
                      "type": "MemberExpression",
                    },
                    "start": Position {
                      "character": 26,
                      "line": 160,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 28,
                        "line": 160,
                      },
                      "name": "pw",
                      "start": Position {
                        "character": 26,
                        "line": 160,
                      },
                      "type": "Identifier",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 20,
                    "line": 160,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 11,
                      "line": 160,
                    },
                    "name": "pw",
                    "start": Position {
                      "character": 9,
                      "line": 160,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 19,
                      "line": 160,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 15,
                      "line": 160,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 12,
                    "line": 160,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 47,
                  "line": 160,
                },
                "start": Position {
                  "character": 5,
                  "line": 160,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 47,
              "line": 160,
            },
            "start": Position {
              "character": 5,
              "line": 160,
            },
            "type": "IfShortcutStatement",
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 26,
              "line": 161,
            },
            "init": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 25,
                    "line": 161,
                  },
                  "name": "pw",
                  "start": Position {
                    "character": 23,
                    "line": 161,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 14,
                    "line": 161,
                  },
                  "name": "me",
                  "start": Position {
                    "character": 12,
                    "line": 161,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 23,
                  "line": 161,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 22,
                    "line": 161,
                  },
                  "name": "getHash",
                  "start": Position {
                    "character": 15,
                    "line": 161,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 14,
                  "line": 161,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 26,
                "line": 161,
              },
              "start": Position {
                "character": 22,
                "line": 161,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 161,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 9,
                "line": 161,
              },
              "name": "hash",
              "start": Position {
                "character": 5,
                "line": 161,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 20,
              "line": 162,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 162,
              },
              "raw": "0",
              "start": Position {
                "character": 19,
                "line": 162,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 162,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 16,
                "line": 162,
              },
              "name": "hashPointer",
              "start": Position {
                "character": 5,
                "line": 162,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 26,
              "line": 163,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 22,
                  "line": 163,
                },
                "name": "hash",
                "start": Position {
                  "character": 18,
                  "line": 163,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 26,
                "line": 163,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 26,
                  "line": 163,
                },
                "name": "len",
                "start": Position {
                  "character": 23,
                  "line": 163,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 22,
                "line": 163,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 163,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 15,
                "line": 163,
              },
              "name": "hashLength",
              "start": Position {
                "character": 5,
                "line": 163,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 16,
              "line": 164,
            },
            "init": ASTListConstructorExpression {
              "end": Position {
                "character": 16,
                "line": 164,
              },
              "fields": Array [],
              "start": Position {
                "character": 14,
                "line": 164,
              },
              "type": "ListConstructorExpression",
            },
            "start": Position {
              "character": 5,
              "line": 164,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 164,
              },
              "name": "output",
              "start": Position {
                "character": 5,
                "line": 164,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 19,
              "line": 165,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 165,
              },
              "raw": "0",
              "start": Position {
                "character": 18,
                "line": 165,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 165,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 15,
                "line": 165,
              },
              "name": "bitCounter",
              "start": Position {
                "character": 5,
                "line": 165,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 19,
              "line": 166,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 19,
                "line": 166,
              },
              "raw": "0",
              "start": Position {
                "character": 18,
                "line": 166,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 166,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 15,
                "line": 166,
              },
              "name": "bitStorage",
              "start": Position {
                "character": 5,
                "line": 166,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 167,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 17,
                "line": 167,
              },
              "raw": "0",
              "start": Position {
                "character": 16,
                "line": 167,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 167,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 167,
              },
              "name": "position",
              "start": Position {
                "character": 5,
                "line": 167,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 20,
              "line": 168,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 20,
                "line": 168,
              },
              "raw": "0",
              "start": Position {
                "character": 19,
                "line": 168,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 168,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 16,
                "line": 168,
              },
              "name": "hashPointer",
              "start": Position {
                "character": 5,
                "line": 168,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 18,
              "line": 169,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 14,
                  "line": 169,
                },
                "name": "str",
                "start": Position {
                  "character": 11,
                  "line": 169,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 18,
                "line": 169,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 18,
                  "line": 169,
                },
                "name": "len",
                "start": Position {
                  "character": 15,
                  "line": 169,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 14,
                "line": 169,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 169,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 8,
                "line": 169,
              },
              "name": "max",
              "start": Position {
                "character": 5,
                "line": 169,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 172,
            },
            "init": ASTFunctionStatement {
              "assignments": Array [],
              "body": Array [
                ASTReturnStatement {
                  "argument": ASTCallExpression {
                    "arguments": Array [
                      ASTLiteral {
                        "end": Position {
                          "character": 27,
                          "line": 171,
                        },
                        "raw": "\\"&\\"",
                        "start": Position {
                          "character": 24,
                          "line": 171,
                        },
                        "type": "StringLiteral",
                        "value": "&",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 30,
                          "line": 171,
                        },
                        "name": "a",
                        "start": Position {
                          "character": 29,
                          "line": 171,
                        },
                        "type": "Identifier",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 33,
                          "line": 171,
                        },
                        "name": "b",
                        "start": Position {
                          "character": 32,
                          "line": 171,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 23,
                        "line": 171,
                      },
                      "name": "bitwise",
                      "start": Position {
                        "character": 16,
                        "line": 171,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 34,
                      "line": 171,
                    },
                    "start": Position {
                      "character": 23,
                      "line": 171,
                    },
                    "type": "CallExpression",
                  },
                  "end": Position {
                    "character": 17,
                    "line": 172,
                  },
                  "start": Position {
                    "character": 9,
                    "line": 171,
                  },
                  "type": "ReturnStatement",
                },
              ],
              "end": Position {
                "character": 17,
                "line": 172,
              },
              "namespaces": Set {},
              "parameters": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 170,
                  },
                  "name": "a",
                  "start": Position {
                    "character": 20,
                    "line": 170,
                  },
                  "type": "Identifier",
                },
                ASTIdentifier {
                  "end": Position {
                    "character": 24,
                    "line": 170,
                  },
                  "name": "b",
                  "start": Position {
                    "character": 23,
                    "line": 170,
                  },
                  "type": "Identifier",
                },
              ],
              "start": Position {
                "character": 11,
                "line": 170,
              },
              "type": "FunctionDeclaration",
            },
            "start": Position {
              "character": 5,
              "line": 170,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 8,
                "line": 170,
              },
              "name": "AND",
              "start": Position {
                "character": 5,
                "line": 170,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 17,
              "line": 175,
            },
            "init": ASTFunctionStatement {
              "assignments": Array [],
              "body": Array [
                ASTReturnStatement {
                  "argument": ASTCallExpression {
                    "arguments": Array [
                      ASTLiteral {
                        "end": Position {
                          "character": 28,
                          "line": 174,
                        },
                        "raw": "\\">>\\"",
                        "start": Position {
                          "character": 24,
                          "line": 174,
                        },
                        "type": "StringLiteral",
                        "value": ">>",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 31,
                          "line": 174,
                        },
                        "name": "a",
                        "start": Position {
                          "character": 30,
                          "line": 174,
                        },
                        "type": "Identifier",
                      },
                      ASTIdentifier {
                        "end": Position {
                          "character": 34,
                          "line": 174,
                        },
                        "name": "b",
                        "start": Position {
                          "character": 33,
                          "line": 174,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 23,
                        "line": 174,
                      },
                      "name": "bitwise",
                      "start": Position {
                        "character": 16,
                        "line": 174,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 35,
                      "line": 174,
                    },
                    "start": Position {
                      "character": 23,
                      "line": 174,
                    },
                    "type": "CallExpression",
                  },
                  "end": Position {
                    "character": 17,
                    "line": 175,
                  },
                  "start": Position {
                    "character": 9,
                    "line": 174,
                  },
                  "type": "ReturnStatement",
                },
              ],
              "end": Position {
                "character": 17,
                "line": 175,
              },
              "namespaces": Set {},
              "parameters": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 24,
                    "line": 173,
                  },
                  "name": "a",
                  "start": Position {
                    "character": 23,
                    "line": 173,
                  },
                  "type": "Identifier",
                },
                ASTIdentifier {
                  "end": Position {
                    "character": 27,
                    "line": 173,
                  },
                  "name": "b",
                  "start": Position {
                    "character": 26,
                    "line": 173,
                  },
                  "type": "Identifier",
                },
              ],
              "start": Position {
                "character": 14,
                "line": 173,
              },
              "type": "FunctionDeclaration",
            },
            "start": Position {
              "character": 5,
              "line": 173,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 173,
              },
              "name": "RSHIFT",
              "start": Position {
                "character": 5,
                "line": 173,
              },
              "type": "Identifier",
            },
          },
          ASTWhileStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 49,
                  "line": 177,
                },
                "init": ASTCallExpression {
                  "arguments": Array [
                    ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 38,
                          "line": 177,
                        },
                        "name": "str",
                        "start": Position {
                          "character": 35,
                          "line": 177,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 49,
                        "line": 177,
                      },
                      "index": ASTIdentifier {
                        "end": Position {
                          "character": 47,
                          "line": 177,
                        },
                        "name": "position",
                        "start": Position {
                          "character": 39,
                          "line": 177,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 39,
                        "line": 177,
                      },
                      "type": "IndexExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 20,
                          "line": 177,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 18,
                          "line": 177,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 27,
                        "line": 177,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 26,
                          "line": 177,
                        },
                        "name": "table",
                        "start": Position {
                          "character": 21,
                          "line": 177,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 20,
                        "line": 177,
                      },
                      "type": "MemberExpression",
                    },
                    "end": Position {
                      "character": 35,
                      "line": 177,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 34,
                        "line": 177,
                      },
                      "name": "indexOf",
                      "start": Position {
                        "character": 27,
                        "line": 177,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 26,
                      "line": 177,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 49,
                    "line": 177,
                  },
                  "start": Position {
                    "character": 34,
                    "line": 177,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 177,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 15,
                    "line": 177,
                  },
                  "name": "buffer",
                  "start": Position {
                    "character": 9,
                    "line": 177,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 32,
                  "line": 178,
                },
                "init": ASTIdentifier {
                  "end": Position {
                    "character": 32,
                    "line": 178,
                  },
                  "name": "bitCounter",
                  "start": Position {
                    "character": 22,
                    "line": 178,
                  },
                  "type": "Identifier",
                },
                "start": Position {
                  "character": 9,
                  "line": 178,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 19,
                    "line": 178,
                  },
                  "name": "currentBit",
                  "start": Position {
                    "character": 9,
                    "line": 178,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 36,
                  "line": 179,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 36,
                    "line": 179,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 32,
                      "line": 179,
                    },
                    "name": "bitCounter",
                    "start": Position {
                      "character": 22,
                      "line": 179,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 36,
                      "line": 179,
                    },
                    "raw": "1",
                    "start": Position {
                      "character": 35,
                      "line": 179,
                    },
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                  "start": Position {
                    "character": 33,
                    "line": 179,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 179,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 19,
                    "line": 179,
                  },
                  "name": "bitCounter",
                  "start": Position {
                    "character": 9,
                    "line": 179,
                  },
                  "type": "Identifier",
                },
              },
              ASTIfStatement {
                "clauses": Array [
                  ASTIfClause {
                    "body": Array [
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 50,
                          "line": 181,
                        },
                        "init": ASTEvaluationExpression {
                          "end": Position {
                            "character": 50,
                            "line": 181,
                          },
                          "left": ASTEvaluationExpression {
                            "end": Position {
                              "character": 43,
                              "line": 181,
                            },
                            "left": ASTIdentifier {
                              "end": Position {
                                "character": 36,
                                "line": 181,
                              },
                              "name": "bitStorage",
                              "start": Position {
                                "character": 26,
                                "line": 181,
                              },
                              "type": "Identifier",
                            },
                            "operator": "*",
                            "right": ASTLiteral {
                              "end": Position {
                                "character": 41,
                                "line": 181,
                              },
                              "raw": "64",
                              "start": Position {
                                "character": 39,
                                "line": 181,
                              },
                              "type": "NumericLiteral",
                              "value": 64,
                            },
                            "start": Position {
                              "character": 37,
                              "line": 181,
                            },
                            "type": "BinaryExpression",
                          },
                          "operator": "+",
                          "right": ASTIdentifier {
                            "end": Position {
                              "character": 50,
                              "line": 181,
                            },
                            "name": "buffer",
                            "start": Position {
                              "character": 44,
                              "line": 181,
                            },
                            "type": "Identifier",
                          },
                          "start": Position {
                            "character": 37,
                            "line": 181,
                          },
                          "type": "BinaryExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 181,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 23,
                            "line": 181,
                          },
                          "name": "bitStorage",
                          "start": Position {
                            "character": 13,
                            "line": 181,
                          },
                          "type": "Identifier",
                        },
                      },
                    ],
                    "condition": ASTEvaluationExpression {
                      "end": Position {
                        "character": 28,
                        "line": 180,
                      },
                      "left": ASTIdentifier {
                        "end": Position {
                          "character": 23,
                          "line": 180,
                        },
                        "name": "currentBit",
                        "start": Position {
                          "character": 13,
                          "line": 180,
                        },
                        "type": "Identifier",
                      },
                      "operator": "%",
                      "right": ASTLiteral {
                        "end": Position {
                          "character": 27,
                          "line": 180,
                        },
                        "raw": "4",
                        "start": Position {
                          "character": 26,
                          "line": 180,
                        },
                        "type": "NumericLiteral",
                        "value": 4,
                      },
                      "start": Position {
                        "character": 24,
                        "line": 180,
                      },
                      "type": "BinaryExpression",
                    },
                    "end": Position {
                      "character": 13,
                      "line": 182,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 180,
                    },
                    "type": "IfClause",
                  },
                  ASTElseClause {
                    "body": Array [
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 32,
                          "line": 183,
                        },
                        "init": ASTIdentifier {
                          "end": Position {
                            "character": 32,
                            "line": 183,
                          },
                          "name": "buffer",
                          "start": Position {
                            "character": 26,
                            "line": 183,
                          },
                          "type": "Identifier",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 183,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 23,
                            "line": 183,
                          },
                          "name": "bitStorage",
                          "start": Position {
                            "character": 13,
                            "line": 183,
                          },
                          "type": "Identifier",
                        },
                      },
                    ],
                    "end": Position {
                      "character": 15,
                      "line": 184,
                    },
                    "start": Position {
                      "character": 13,
                      "line": 182,
                    },
                    "type": "ElseClause",
                  },
                ],
                "end": Position {
                  "character": 15,
                  "line": 184,
                },
                "start": Position {
                  "character": 9,
                  "line": 180,
                },
                "type": "IfStatement",
              },
              ASTIfStatement {
                "clauses": Array [
                  ASTIfClause {
                    "body": Array [
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 78,
                          "line": 186,
                        },
                        "init": ASTEvaluationExpression {
                          "end": Position {
                            "character": 78,
                            "line": 186,
                          },
                          "left": ASTEvaluationExpression {
                            "end": Position {
                              "character": 76,
                              "line": 186,
                            },
                            "left": ASTEvaluationExpression {
                              "end": Position {
                                "character": 61,
                                "line": 186,
                              },
                              "left": ASTCallExpression {
                                "arguments": Array [
                                  ASTEvaluationExpression {
                                    "end": Position {
                                      "character": 56,
                                      "line": 186,
                                    },
                                    "left": ASTIdentifier {
                                      "end": Position {
                                        "character": 51,
                                        "line": 186,
                                      },
                                      "name": "hashPointer",
                                      "start": Position {
                                        "character": 40,
                                        "line": 186,
                                      },
                                      "type": "Identifier",
                                    },
                                    "operator": "/",
                                    "right": ASTLiteral {
                                      "end": Position {
                                        "character": 55,
                                        "line": 186,
                                      },
                                      "raw": "3",
                                      "start": Position {
                                        "character": 54,
                                        "line": 186,
                                      },
                                      "type": "NumericLiteral",
                                      "value": 3,
                                    },
                                    "start": Position {
                                      "character": 52,
                                      "line": 186,
                                    },
                                    "type": "BinaryExpression",
                                  },
                                ],
                                "base": ASTIdentifier {
                                  "end": Position {
                                    "character": 39,
                                    "line": 186,
                                  },
                                  "name": "floor",
                                  "start": Position {
                                    "character": 34,
                                    "line": 186,
                                  },
                                  "type": "Identifier",
                                },
                                "end": Position {
                                  "character": 58,
                                  "line": 186,
                                },
                                "start": Position {
                                  "character": 39,
                                  "line": 186,
                                },
                                "type": "CallExpression",
                              },
                              "operator": "*",
                              "right": ASTLiteral {
                                "end": Position {
                                  "character": 60,
                                  "line": 186,
                                },
                                "raw": "3",
                                "start": Position {
                                  "character": 59,
                                  "line": 186,
                                },
                                "type": "NumericLiteral",
                                "value": 3,
                              },
                              "start": Position {
                                "character": 57,
                                "line": 186,
                              },
                              "type": "BinaryExpression",
                            },
                            "operator": "%",
                            "right": ASTIdentifier {
                              "end": Position {
                                "character": 74,
                                "line": 186,
                              },
                              "name": "hashLength",
                              "start": Position {
                                "character": 64,
                                "line": 186,
                              },
                              "type": "Identifier",
                            },
                            "start": Position {
                              "character": 62,
                              "line": 186,
                            },
                            "type": "BinaryExpression",
                          },
                          "operator": "-",
                          "right": ASTLiteral {
                            "end": Position {
                              "character": 78,
                              "line": 186,
                            },
                            "raw": "1",
                            "start": Position {
                              "character": 77,
                              "line": 186,
                            },
                            "type": "NumericLiteral",
                            "value": 1,
                          },
                          "start": Position {
                            "character": 62,
                            "line": 186,
                          },
                          "type": "BinaryExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 186,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 30,
                            "line": 186,
                          },
                          "name": "expectedHashIndex",
                          "start": Position {
                            "character": 13,
                            "line": 186,
                          },
                          "type": "Identifier",
                        },
                      },
                      ASTIfStatement {
                        "clauses": Array [
                          ASTIfClause {
                            "body": Array [
                              ASTBase {
                                "end": Position {
                                  "character": 65,
                                  "line": 187,
                                },
                                "start": Position {
                                  "character": 60,
                                  "line": 187,
                                },
                                "type": "BreakStatement",
                              },
                            ],
                            "condition": ASTUnaryExpression {
                              "argument": ASTCallExpression {
                                "arguments": Array [
                                  ASTIdentifier {
                                    "end": Position {
                                      "character": 52,
                                      "line": 187,
                                    },
                                    "name": "expectedHashIndex",
                                    "start": Position {
                                      "character": 35,
                                      "line": 187,
                                    },
                                    "type": "Identifier",
                                  },
                                ],
                                "base": ASTMemberExpression {
                                  "base": ASTIdentifier {
                                    "end": Position {
                                      "character": 25,
                                      "line": 187,
                                    },
                                    "name": "hash",
                                    "start": Position {
                                      "character": 21,
                                      "line": 187,
                                    },
                                    "type": "Identifier",
                                  },
                                  "end": Position {
                                    "character": 35,
                                    "line": 187,
                                  },
                                  "identifier": ASTIdentifier {
                                    "end": Position {
                                      "character": 34,
                                      "line": 187,
                                    },
                                    "name": "hasIndex",
                                    "start": Position {
                                      "character": 26,
                                      "line": 187,
                                    },
                                    "type": "Identifier",
                                  },
                                  "indexer": ".",
                                  "start": Position {
                                    "character": 25,
                                    "line": 187,
                                  },
                                  "type": "MemberExpression",
                                },
                                "end": Position {
                                  "character": 54,
                                  "line": 187,
                                },
                                "start": Position {
                                  "character": 34,
                                  "line": 187,
                                },
                                "type": "CallExpression",
                              },
                              "end": Position {
                                "character": 54,
                                "line": 187,
                              },
                              "operator": "not",
                              "start": Position {
                                "character": 17,
                                "line": 187,
                              },
                              "type": "NegationExpression",
                            },
                            "end": Position {
                              "character": 65,
                              "line": 187,
                            },
                            "start": Position {
                              "character": 13,
                              "line": 187,
                            },
                            "type": "IfShortcutClause",
                          },
                        ],
                        "end": Position {
                          "character": 65,
                          "line": 187,
                        },
                        "start": Position {
                          "character": 13,
                          "line": 187,
                        },
                        "type": "IfShortcutStatement",
                      },
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 40,
                          "line": 188,
                        },
                        "init": ASTIndexExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 21,
                              "line": 188,
                            },
                            "name": "hash",
                            "start": Position {
                              "character": 17,
                              "line": 188,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 40,
                            "line": 188,
                          },
                          "index": ASTIdentifier {
                            "end": Position {
                              "character": 39,
                              "line": 188,
                            },
                            "name": "expectedHashIndex",
                            "start": Position {
                              "character": 22,
                              "line": 188,
                            },
                            "type": "Identifier",
                          },
                          "start": Position {
                            "character": 22,
                            "line": 188,
                          },
                          "type": "IndexExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 188,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 14,
                            "line": 188,
                          },
                          "name": "m",
                          "start": Position {
                            "character": 13,
                            "line": 188,
                          },
                          "type": "Identifier",
                        },
                      },
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 48,
                          "line": 189,
                        },
                        "init": ASTCallExpression {
                          "arguments": Array [
                            ASTEvaluationExpression {
                              "end": Position {
                                "character": 45,
                                "line": 189,
                              },
                              "left": ASTUnaryExpression {
                                "argument": ASTLiteral {
                                  "end": Position {
                                    "character": 31,
                                    "line": 189,
                                  },
                                  "raw": "2",
                                  "start": Position {
                                    "character": 30,
                                    "line": 189,
                                  },
                                  "type": "NumericLiteral",
                                  "value": 2,
                                },
                                "end": Position {
                                  "character": 33,
                                  "line": 189,
                                },
                                "operator": "-",
                                "start": Position {
                                  "character": 29,
                                  "line": 189,
                                },
                                "type": "BinaryNegatedExpression",
                              },
                              "operator": "*",
                              "right": ASTIdentifier {
                                "end": Position {
                                  "character": 44,
                                  "line": 189,
                                },
                                "name": "bitCounter",
                                "start": Position {
                                  "character": 34,
                                  "line": 189,
                                },
                                "type": "Identifier",
                              },
                              "start": Position {
                                "character": 32,
                                "line": 189,
                              },
                              "type": "BinaryExpression",
                            },
                            ASTLiteral {
                              "end": Position {
                                "character": 47,
                                "line": 189,
                              },
                              "raw": "6",
                              "start": Position {
                                "character": 46,
                                "line": 189,
                              },
                              "type": "NumericLiteral",
                              "value": 6,
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 28,
                              "line": 189,
                            },
                            "name": "AND",
                            "start": Position {
                              "character": 25,
                              "line": 189,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 48,
                            "line": 189,
                          },
                          "start": Position {
                            "character": 28,
                            "line": 189,
                          },
                          "type": "CallExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 189,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 22,
                            "line": 189,
                          },
                          "name": "operation",
                          "start": Position {
                            "character": 13,
                            "line": 189,
                          },
                          "type": "Identifier",
                        },
                      },
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 54,
                          "line": 190,
                        },
                        "init": ASTCallExpression {
                          "arguments": Array [
                            ASTIdentifier {
                              "end": Position {
                                "character": 42,
                                "line": 190,
                              },
                              "name": "bitStorage",
                              "start": Position {
                                "character": 32,
                                "line": 190,
                              },
                              "type": "Identifier",
                            },
                            ASTIdentifier {
                              "end": Position {
                                "character": 53,
                                "line": 190,
                              },
                              "name": "operation",
                              "start": Position {
                                "character": 44,
                                "line": 190,
                              },
                              "type": "Identifier",
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 31,
                              "line": 190,
                            },
                            "name": "RSHIFT",
                            "start": Position {
                              "character": 25,
                              "line": 190,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 54,
                            "line": 190,
                          },
                          "start": Position {
                            "character": 31,
                            "line": 190,
                          },
                          "type": "CallExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 190,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 22,
                            "line": 190,
                          },
                          "name": "operation",
                          "start": Position {
                            "character": 13,
                            "line": 190,
                          },
                          "type": "Identifier",
                        },
                      },
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 44,
                          "line": 191,
                        },
                        "init": ASTCallExpression {
                          "arguments": Array [
                            ASTLiteral {
                              "end": Position {
                                "character": 32,
                                "line": 191,
                              },
                              "raw": "255",
                              "start": Position {
                                "character": 29,
                                "line": 191,
                              },
                              "type": "NumericLiteral",
                              "value": 255,
                            },
                            ASTIdentifier {
                              "end": Position {
                                "character": 43,
                                "line": 191,
                              },
                              "name": "operation",
                              "start": Position {
                                "character": 34,
                                "line": 191,
                              },
                              "type": "Identifier",
                            },
                          ],
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 28,
                              "line": 191,
                            },
                            "name": "AND",
                            "start": Position {
                              "character": 25,
                              "line": 191,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 44,
                            "line": 191,
                          },
                          "start": Position {
                            "character": 28,
                            "line": 191,
                          },
                          "type": "CallExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 191,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 22,
                            "line": 191,
                          },
                          "name": "operation",
                          "start": Position {
                            "character": 13,
                            "line": 191,
                          },
                          "type": "Identifier",
                        },
                      },
                      ASTIfStatement {
                        "clauses": Array [
                          ASTIfClause {
                            "body": Array [
                              ASTAssignmentStatement {
                                "end": Position {
                                  "character": 41,
                                  "line": 193,
                                },
                                "init": ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 41,
                                    "line": 193,
                                  },
                                  "left": ASTIdentifier {
                                    "end": Position {
                                      "character": 37,
                                      "line": 193,
                                    },
                                    "name": "operation",
                                    "start": Position {
                                      "character": 28,
                                      "line": 193,
                                    },
                                    "type": "Identifier",
                                  },
                                  "operator": "-",
                                  "right": ASTIdentifier {
                                    "end": Position {
                                      "character": 41,
                                      "line": 193,
                                    },
                                    "name": "m",
                                    "start": Position {
                                      "character": 40,
                                      "line": 193,
                                    },
                                    "type": "Identifier",
                                  },
                                  "start": Position {
                                    "character": 38,
                                    "line": 193,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "start": Position {
                                  "character": 17,
                                  "line": 193,
                                },
                                "type": "AssignmentStatement",
                                "variable": ASTIdentifier {
                                  "end": Position {
                                    "character": 25,
                                    "line": 193,
                                  },
                                  "name": "charCode",
                                  "start": Position {
                                    "character": 17,
                                    "line": 193,
                                  },
                                  "type": "Identifier",
                                },
                              },
                              ASTIfStatement {
                                "clauses": Array [
                                  ASTIfClause {
                                    "body": Array [
                                      ASTBase {
                                        "end": Position {
                                          "character": 58,
                                          "line": 194,
                                        },
                                        "start": Position {
                                          "character": 53,
                                          "line": 194,
                                        },
                                        "type": "BreakStatement",
                                      },
                                    ],
                                    "condition": ASTEvaluationExpression {
                                      "end": Position {
                                        "character": 47,
                                        "line": 194,
                                      },
                                      "left": ASTIdentifier {
                                        "end": Position {
                                          "character": 29,
                                          "line": 194,
                                        },
                                        "name": "charCode",
                                        "start": Position {
                                          "character": 21,
                                          "line": 194,
                                        },
                                        "type": "Identifier",
                                      },
                                      "operator": ">",
                                      "right": ASTMemberExpression {
                                        "base": ASTIdentifier {
                                          "end": Position {
                                            "character": 34,
                                            "line": 194,
                                          },
                                          "name": "me",
                                          "start": Position {
                                            "character": 32,
                                            "line": 194,
                                          },
                                          "type": "Identifier",
                                        },
                                        "end": Position {
                                          "character": 47,
                                          "line": 194,
                                        },
                                        "identifier": ASTIdentifier {
                                          "end": Position {
                                            "character": 46,
                                            "line": 194,
                                          },
                                          "name": "maxCharCode",
                                          "start": Position {
                                            "character": 35,
                                            "line": 194,
                                          },
                                          "type": "Identifier",
                                        },
                                        "indexer": ".",
                                        "start": Position {
                                          "character": 34,
                                          "line": 194,
                                        },
                                        "type": "MemberExpression",
                                      },
                                      "start": Position {
                                        "character": 30,
                                        "line": 194,
                                      },
                                      "type": "BinaryExpression",
                                    },
                                    "end": Position {
                                      "character": 58,
                                      "line": 194,
                                    },
                                    "start": Position {
                                      "character": 17,
                                      "line": 194,
                                    },
                                    "type": "IfShortcutClause",
                                  },
                                ],
                                "end": Position {
                                  "character": 58,
                                  "line": 194,
                                },
                                "start": Position {
                                  "character": 17,
                                  "line": 194,
                                },
                                "type": "IfShortcutStatement",
                              },
                              ASTCallStatement {
                                "end": Position {
                                  "character": 44,
                                  "line": 195,
                                },
                                "expression": ASTCallExpression {
                                  "arguments": Array [
                                    ASTCallExpression {
                                      "arguments": Array [
                                        ASTIdentifier {
                                          "end": Position {
                                            "character": 42,
                                            "line": 195,
                                          },
                                          "name": "charCode",
                                          "start": Position {
                                            "character": 34,
                                            "line": 195,
                                          },
                                          "type": "Identifier",
                                        },
                                      ],
                                      "base": ASTIdentifier {
                                        "end": Position {
                                          "character": 33,
                                          "line": 195,
                                        },
                                        "name": "char",
                                        "start": Position {
                                          "character": 29,
                                          "line": 195,
                                        },
                                        "type": "Identifier",
                                      },
                                      "end": Position {
                                        "character": 44,
                                        "line": 195,
                                      },
                                      "start": Position {
                                        "character": 33,
                                        "line": 195,
                                      },
                                      "type": "CallExpression",
                                    },
                                  ],
                                  "base": ASTMemberExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 23,
                                        "line": 195,
                                      },
                                      "name": "output",
                                      "start": Position {
                                        "character": 17,
                                        "line": 195,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 29,
                                      "line": 195,
                                    },
                                    "identifier": ASTIdentifier {
                                      "end": Position {
                                        "character": 28,
                                        "line": 195,
                                      },
                                      "name": "push",
                                      "start": Position {
                                        "character": 24,
                                        "line": 195,
                                      },
                                      "type": "Identifier",
                                    },
                                    "indexer": ".",
                                    "start": Position {
                                      "character": 23,
                                      "line": 195,
                                    },
                                    "type": "MemberExpression",
                                  },
                                  "end": Position {
                                    "character": 44,
                                    "line": 195,
                                  },
                                  "start": Position {
                                    "character": 28,
                                    "line": 195,
                                  },
                                  "type": "CallExpression",
                                },
                                "start": Position {
                                  "character": 17,
                                  "line": 195,
                                },
                                "type": "CallStatement",
                              },
                            ],
                            "condition": ASTEvaluationExpression {
                              "end": Position {
                                "character": 32,
                                "line": 192,
                              },
                              "left": ASTIdentifier {
                                "end": Position {
                                  "character": 26,
                                  "line": 192,
                                },
                                "name": "operation",
                                "start": Position {
                                  "character": 17,
                                  "line": 192,
                                },
                                "type": "Identifier",
                              },
                              "operator": "!=",
                              "right": ASTLiteral {
                                "end": Position {
                                  "character": 31,
                                  "line": 192,
                                },
                                "raw": "0",
                                "start": Position {
                                  "character": 30,
                                  "line": 192,
                                },
                                "type": "NumericLiteral",
                                "value": 0,
                              },
                              "start": Position {
                                "character": 27,
                                "line": 192,
                              },
                              "type": "BinaryExpression",
                            },
                            "end": Position {
                              "character": 19,
                              "line": 196,
                            },
                            "start": Position {
                              "character": 13,
                              "line": 192,
                            },
                            "type": "IfClause",
                          },
                        ],
                        "end": Position {
                          "character": 19,
                          "line": 196,
                        },
                        "start": Position {
                          "character": 13,
                          "line": 192,
                        },
                        "type": "IfStatement",
                      },
                      ASTAssignmentStatement {
                        "end": Position {
                          "character": 42,
                          "line": 197,
                        },
                        "init": ASTEvaluationExpression {
                          "end": Position {
                            "character": 42,
                            "line": 197,
                          },
                          "left": ASTIdentifier {
                            "end": Position {
                              "character": 38,
                              "line": 197,
                            },
                            "name": "hashPointer",
                            "start": Position {
                              "character": 27,
                              "line": 197,
                            },
                            "type": "Identifier",
                          },
                          "operator": "+",
                          "right": ASTLiteral {
                            "end": Position {
                              "character": 42,
                              "line": 197,
                            },
                            "raw": "1",
                            "start": Position {
                              "character": 41,
                              "line": 197,
                            },
                            "type": "NumericLiteral",
                            "value": 1,
                          },
                          "start": Position {
                            "character": 39,
                            "line": 197,
                          },
                          "type": "BinaryExpression",
                        },
                        "start": Position {
                          "character": 13,
                          "line": 197,
                        },
                        "type": "AssignmentStatement",
                        "variable": ASTIdentifier {
                          "end": Position {
                            "character": 24,
                            "line": 197,
                          },
                          "name": "hashPointer",
                          "start": Position {
                            "character": 13,
                            "line": 197,
                          },
                          "type": "Identifier",
                        },
                      },
                    ],
                    "condition": ASTEvaluationExpression {
                      "end": Position {
                        "character": 28,
                        "line": 185,
                      },
                      "left": ASTIdentifier {
                        "end": Position {
                          "character": 23,
                          "line": 185,
                        },
                        "name": "currentBit",
                        "start": Position {
                          "character": 13,
                          "line": 185,
                        },
                        "type": "Identifier",
                      },
                      "operator": "%",
                      "right": ASTLiteral {
                        "end": Position {
                          "character": 27,
                          "line": 185,
                        },
                        "raw": "4",
                        "start": Position {
                          "character": 26,
                          "line": 185,
                        },
                        "type": "NumericLiteral",
                        "value": 4,
                      },
                      "start": Position {
                        "character": 24,
                        "line": 185,
                      },
                      "type": "BinaryExpression",
                    },
                    "end": Position {
                      "character": 15,
                      "line": 198,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 185,
                    },
                    "type": "IfClause",
                  },
                ],
                "end": Position {
                  "character": 15,
                  "line": 198,
                },
                "start": Position {
                  "character": 9,
                  "line": 185,
                },
                "type": "IfStatement",
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 32,
                  "line": 199,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 32,
                    "line": 199,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 28,
                      "line": 199,
                    },
                    "name": "position",
                    "start": Position {
                      "character": 20,
                      "line": 199,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 199,
                    },
                    "raw": "1",
                    "start": Position {
                      "character": 31,
                      "line": 199,
                    },
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                  "start": Position {
                    "character": 29,
                    "line": 199,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 199,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 17,
                    "line": 199,
                  },
                  "name": "position",
                  "start": Position {
                    "character": 9,
                    "line": 199,
                  },
                  "type": "Identifier",
                },
              },
            ],
            "condition": ASTEvaluationExpression {
              "end": Position {
                "character": 25,
                "line": 176,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 19,
                  "line": 176,
                },
                "name": "position",
                "start": Position {
                  "character": 11,
                  "line": 176,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": ASTIdentifier {
                "end": Position {
                  "character": 25,
                  "line": 176,
                },
                "name": "max",
                "start": Position {
                  "character": 22,
                  "line": 176,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 20,
                "line": 176,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 14,
              "line": 200,
            },
            "start": Position {
              "character": 5,
              "line": 176,
            },
            "type": "WhileStatement",
          },
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTLiteral {
                  "end": Position {
                    "character": 26,
                    "line": 201,
                  },
                  "raw": "\\"\\"",
                  "start": Position {
                    "character": 24,
                    "line": 201,
                  },
                  "type": "StringLiteral",
                  "value": "",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 18,
                    "line": 201,
                  },
                  "name": "output",
                  "start": Position {
                    "character": 12,
                    "line": 201,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 24,
                  "line": 201,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 23,
                    "line": 201,
                  },
                  "name": "join",
                  "start": Position {
                    "character": 19,
                    "line": 201,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 18,
                  "line": 201,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 27,
                "line": 201,
              },
              "start": Position {
                "character": 23,
                "line": 201,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 202,
            },
            "start": Position {
              "character": 5,
              "line": 201,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 202,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 30,
              "line": 158,
            },
            "name": "str",
            "start": Position {
              "character": 27,
              "line": 158,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 34,
              "line": 158,
            },
            "name": "pw",
            "start": Position {
              "character": 32,
              "line": 158,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 18,
          "line": 158,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 158,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 158,
          },
          "name": "Crypto",
          "start": Position {
            "character": 1,
            "line": 158,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 17,
          "line": 158,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 15,
            "line": 158,
          },
          "name": "decrypt",
          "start": Position {
            "character": 8,
            "line": 158,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 158,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 40,
        "line": 204,
      },
      "init": ASTCallExpression {
        "arguments": Array [
          ASTLiteral {
            "end": Position {
              "character": 39,
              "line": 204,
            },
            "raw": "\\"test\\"",
            "start": Position {
              "character": 33,
              "line": 204,
            },
            "type": "StringLiteral",
            "value": "test",
          },
        ],
        "base": ASTMemberExpression {
          "base": ASTUnaryExpression {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 19,
                "line": 204,
              },
              "name": "Crypto",
              "start": Position {
                "character": 13,
                "line": 204,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 20,
              "line": 204,
            },
            "operator": "new",
            "start": Position {
              "character": 9,
              "line": 204,
            },
            "type": "UnaryExpression",
          },
          "end": Position {
            "character": 33,
            "line": 204,
          },
          "identifier": ASTIdentifier {
            "end": Position {
              "character": 32,
              "line": 204,
            },
            "name": "constructor",
            "start": Position {
              "character": 21,
              "line": 204,
            },
            "type": "Identifier",
          },
          "indexer": ".",
          "start": Position {
            "character": 20,
            "line": 204,
          },
          "type": "MemberExpression",
        },
        "end": Position {
          "character": 40,
          "line": 204,
        },
        "start": Position {
          "character": 32,
          "line": 204,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 204,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 5,
          "line": 204,
        },
        "name": "test",
        "start": Position {
          "character": 1,
          "line": 204,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 14,
        "line": 206,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 14,
          "line": 206,
        },
        "raw": "\\"abcde\\"",
        "start": Position {
          "character": 7,
          "line": 206,
        },
        "type": "StringLiteral",
        "value": "abcde",
      },
      "start": Position {
        "character": 1,
        "line": 206,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 4,
          "line": 206,
        },
        "name": "pwd",
        "start": Position {
          "character": 1,
          "line": 206,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 24,
        "line": 208,
      },
      "init": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 23,
              "line": 208,
            },
            "name": "pwd",
            "start": Position {
              "character": 20,
              "line": 208,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTMemberExpression {
          "base": ASTIdentifier {
            "end": Position {
              "character": 11,
              "line": 208,
            },
            "name": "test",
            "start": Position {
              "character": 7,
              "line": 208,
            },
            "type": "Identifier",
          },
          "end": Position {
            "character": 20,
            "line": 208,
          },
          "identifier": ASTIdentifier {
            "end": Position {
              "character": 19,
              "line": 208,
            },
            "name": "encrypt",
            "start": Position {
              "character": 12,
              "line": 208,
            },
            "type": "Identifier",
          },
          "indexer": ".",
          "start": Position {
            "character": 11,
            "line": 208,
          },
          "type": "MemberExpression",
        },
        "end": Position {
          "character": 24,
          "line": 208,
        },
        "start": Position {
          "character": 19,
          "line": 208,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 208,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 4,
          "line": 208,
        },
        "name": "foo",
        "start": Position {
          "character": 1,
          "line": 208,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 30,
        "line": 209,
      },
      "init": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 29,
              "line": 209,
            },
            "name": "foo",
            "start": Position {
              "character": 26,
              "line": 209,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTMemberExpression {
          "base": ASTIdentifier {
            "end": Position {
              "character": 17,
              "line": 209,
            },
            "name": "test",
            "start": Position {
              "character": 13,
              "line": 209,
            },
            "type": "Identifier",
          },
          "end": Position {
            "character": 26,
            "line": 209,
          },
          "identifier": ASTIdentifier {
            "end": Position {
              "character": 25,
              "line": 209,
            },
            "name": "decrypt",
            "start": Position {
              "character": 18,
              "line": 209,
            },
            "type": "Identifier",
          },
          "indexer": ".",
          "start": Position {
            "character": 17,
            "line": 209,
          },
          "type": "MemberExpression",
        },
        "end": Position {
          "character": 30,
          "line": 209,
        },
        "start": Position {
          "character": 25,
          "line": 209,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 209,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 10,
          "line": 209,
        },
        "name": "decrypted",
        "start": Position {
          "character": 1,
          "line": 209,
        },
        "type": "Identifier",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 11,
        "line": 211,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 10,
              "line": 211,
            },
            "name": "foo",
            "start": Position {
              "character": 7,
              "line": 211,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 211,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 211,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 211,
        },
        "start": Position {
          "character": 6,
          "line": 211,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 211,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 17,
        "line": 212,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTIdentifier {
            "end": Position {
              "character": 16,
              "line": 212,
            },
            "name": "decrypted",
            "start": Position {
              "character": 7,
              "line": 212,
            },
            "type": "Identifier",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 212,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 212,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 17,
          "line": 212,
        },
        "start": Position {
          "character": 6,
          "line": 212,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 212,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 1,
    "line": 213,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 10,
      },
      "raw": "0",
      "start": Position {
        "character": 13,
        "line": 10,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 36,
        "line": 14,
      },
      "raw": "\\"$\\"",
      "start": Position {
        "character": 33,
        "line": 14,
      },
      "type": "StringLiteral",
      "value": "$",
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 15,
      },
      "raw": "1",
      "start": Position {
        "character": 25,
        "line": 15,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 38,
        "line": 22,
      },
      "raw": "0",
      "start": Position {
        "character": 37,
        "line": 22,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 23,
        "line": 64,
      },
      "raw": "null",
      "start": Position {
        "character": 19,
        "line": 64,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 71,
      },
      "raw": "\\"<color=#ff0000>\\"",
      "start": Position {
        "character": 10,
        "line": 71,
      },
      "type": "StringLiteral",
      "value": "<color=#ff0000>",
    },
    ASTLiteral {
      "end": Position {
        "character": 55,
        "line": 71,
      },
      "raw": "\\"</color>\\"",
      "start": Position {
        "character": 45,
        "line": 71,
      },
      "type": "StringLiteral",
      "value": "</color>",
    },
    ASTLiteral {
      "end": Position {
        "character": 91,
        "line": 76,
      },
      "raw": "\\"QWERTZUIOPASDFGHJKLYXCVBNMqwertzuiopasdfghjklyxcvbnm1234567890+-\\"",
      "start": Position {
        "character": 25,
        "line": 76,
      },
      "type": "StringLiteral",
      "value": "QWERTZUIOPASDFGHJKLYXCVBNMqwertzuiopasdfghjklyxcvbnm1234567890+-",
    },
    ASTLiteral {
      "end": Position {
        "character": 33,
        "line": 77,
      },
      "raw": "\\"test123\\"",
      "start": Position {
        "character": 24,
        "line": 77,
      },
      "type": "StringLiteral",
      "value": "test123",
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 78,
      },
      "raw": "55295",
      "start": Position {
        "character": 22,
        "line": 78,
      },
      "type": "NumericLiteral",
      "value": 55295,
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 86,
      },
      "raw": "null",
      "start": Position {
        "character": 20,
        "line": 86,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 23,
        "line": 87,
      },
      "raw": "null",
      "start": Position {
        "character": 19,
        "line": 87,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 88,
      },
      "raw": "64",
      "start": Position {
        "character": 24,
        "line": 88,
      },
      "type": "NumericLiteral",
      "value": 64,
    },
    ASTLiteral {
      "end": Position {
        "character": 82,
        "line": 88,
      },
      "raw": "\\"Invalid charset $0...\\"",
      "start": Position {
        "character": 59,
        "line": 88,
      },
      "type": "StringLiteral",
      "value": "Invalid charset $0...",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 105,
      },
      "raw": "null",
      "start": Position {
        "character": 15,
        "line": 105,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 107,
      },
      "raw": "0",
      "start": Position {
        "character": 19,
        "line": 107,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 109,
      },
      "raw": "0",
      "start": Position {
        "character": 16,
        "line": 109,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 110,
      },
      "raw": "3",
      "start": Position {
        "character": 25,
        "line": 110,
      },
      "type": "NumericLiteral",
      "value": 3,
    },
    ASTLiteral {
      "end": Position {
        "character": 61,
        "line": 114,
      },
      "raw": "\\"Invalid index $0...\\"",
      "start": Position {
        "character": 40,
        "line": 114,
      },
      "type": "StringLiteral",
      "value": "Invalid index $0...",
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 119,
      },
      "raw": "\\"&\\"",
      "start": Position {
        "character": 24,
        "line": 119,
      },
      "type": "StringLiteral",
      "value": "&",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 122,
      },
      "raw": "\\"<<\\"",
      "start": Position {
        "character": 24,
        "line": 122,
      },
      "type": "StringLiteral",
      "value": "<<",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 125,
      },
      "raw": "\\">>\\"",
      "start": Position {
        "character": 24,
        "line": 125,
      },
      "type": "StringLiteral",
      "value": ">>",
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 128,
      },
      "raw": "1",
      "start": Position {
        "character": 40,
        "line": 128,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 46,
        "line": 129,
      },
      "raw": "16",
      "start": Position {
        "character": 44,
        "line": 129,
      },
      "type": "NumericLiteral",
      "value": 16,
    },
    ASTLiteral {
      "end": Position {
        "character": 36,
        "line": 130,
      },
      "raw": "1",
      "start": Position {
        "character": 35,
        "line": 130,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 49,
        "line": 130,
      },
      "raw": "8",
      "start": Position {
        "character": 48,
        "line": 130,
      },
      "type": "NumericLiteral",
      "value": 8,
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 131,
      },
      "raw": "2",
      "start": Position {
        "character": 28,
        "line": 131,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 46,
        "line": 133,
      },
      "raw": "18",
      "start": Position {
        "character": 44,
        "line": 133,
      },
      "type": "NumericLiteral",
      "value": 18,
    },
    ASTLiteral {
      "end": Position {
        "character": 51,
        "line": 133,
      },
      "raw": "63",
      "start": Position {
        "character": 49,
        "line": 133,
      },
      "type": "NumericLiteral",
      "value": 63,
    },
    ASTLiteral {
      "end": Position {
        "character": 46,
        "line": 134,
      },
      "raw": "12",
      "start": Position {
        "character": 44,
        "line": 134,
      },
      "type": "NumericLiteral",
      "value": 12,
    },
    ASTLiteral {
      "end": Position {
        "character": 51,
        "line": 134,
      },
      "raw": "63",
      "start": Position {
        "character": 49,
        "line": 134,
      },
      "type": "NumericLiteral",
      "value": 63,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 135,
      },
      "raw": "6",
      "start": Position {
        "character": 44,
        "line": 135,
      },
      "type": "NumericLiteral",
      "value": 6,
    },
    ASTLiteral {
      "end": Position {
        "character": 50,
        "line": 135,
      },
      "raw": "63",
      "start": Position {
        "character": 48,
        "line": 135,
      },
      "type": "NumericLiteral",
      "value": 63,
    },
    ASTLiteral {
      "end": Position {
        "character": 39,
        "line": 136,
      },
      "raw": "63",
      "start": Position {
        "character": 37,
        "line": 136,
      },
      "type": "NumericLiteral",
      "value": 63,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 137,
      },
      "raw": "3",
      "start": Position {
        "character": 31,
        "line": 137,
      },
      "type": "NumericLiteral",
      "value": 3,
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 139,
      },
      "raw": "2",
      "start": Position {
        "character": 20,
        "line": 139,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 140,
      },
      "raw": "1",
      "start": Position {
        "character": 40,
        "line": 140,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 141,
      },
      "raw": "8",
      "start": Position {
        "character": 44,
        "line": 141,
      },
      "type": "NumericLiteral",
      "value": 8,
    },
    ASTLiteral {
      "end": Position {
        "character": 29,
        "line": 142,
      },
      "raw": "1",
      "start": Position {
        "character": 28,
        "line": 142,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 42,
        "line": 144,
      },
      "raw": "10",
      "start": Position {
        "character": 40,
        "line": 144,
      },
      "type": "NumericLiteral",
      "value": 10,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 145,
      },
      "raw": "4",
      "start": Position {
        "character": 44,
        "line": 145,
      },
      "type": "NumericLiteral",
      "value": 4,
    },
    ASTLiteral {
      "end": Position {
        "character": 50,
        "line": 145,
      },
      "raw": "63",
      "start": Position {
        "character": 48,
        "line": 145,
      },
      "type": "NumericLiteral",
      "value": 63,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 146,
      },
      "raw": "2",
      "start": Position {
        "character": 44,
        "line": 146,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 50,
        "line": 146,
      },
      "raw": "63",
      "start": Position {
        "character": 48,
        "line": 146,
      },
      "type": "NumericLiteral",
      "value": 63,
    },
    ASTLiteral {
      "end": Position {
        "character": 24,
        "line": 147,
      },
      "raw": "\\"=\\"",
      "start": Position {
        "character": 21,
        "line": 147,
      },
      "type": "StringLiteral",
      "value": "=",
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 148,
      },
      "raw": "1",
      "start": Position {
        "character": 25,
        "line": 148,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 149,
      },
      "raw": "1",
      "start": Position {
        "character": 40,
        "line": 149,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 151,
      },
      "raw": "2",
      "start": Position {
        "character": 40,
        "line": 151,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 45,
        "line": 152,
      },
      "raw": "4",
      "start": Position {
        "character": 44,
        "line": 152,
      },
      "type": "NumericLiteral",
      "value": 4,
    },
    ASTLiteral {
      "end": Position {
        "character": 50,
        "line": 152,
      },
      "raw": "63",
      "start": Position {
        "character": 48,
        "line": 152,
      },
      "type": "NumericLiteral",
      "value": 63,
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 153,
      },
      "raw": "\\"==\\"",
      "start": Position {
        "character": 21,
        "line": 153,
      },
      "type": "StringLiteral",
      "value": "==",
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 155,
      },
      "raw": "\\"\\"",
      "start": Position {
        "character": 24,
        "line": 155,
      },
      "type": "StringLiteral",
      "value": "",
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 160,
      },
      "raw": "null",
      "start": Position {
        "character": 15,
        "line": 160,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 162,
      },
      "raw": "0",
      "start": Position {
        "character": 19,
        "line": 162,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 165,
      },
      "raw": "0",
      "start": Position {
        "character": 18,
        "line": 165,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 19,
        "line": 166,
      },
      "raw": "0",
      "start": Position {
        "character": 18,
        "line": 166,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 167,
      },
      "raw": "0",
      "start": Position {
        "character": 16,
        "line": 167,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 168,
      },
      "raw": "0",
      "start": Position {
        "character": 19,
        "line": 168,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 171,
      },
      "raw": "\\"&\\"",
      "start": Position {
        "character": 24,
        "line": 171,
      },
      "type": "StringLiteral",
      "value": "&",
    },
    ASTLiteral {
      "end": Position {
        "character": 28,
        "line": 174,
      },
      "raw": "\\">>\\"",
      "start": Position {
        "character": 24,
        "line": 174,
      },
      "type": "StringLiteral",
      "value": ">>",
    },
    ASTLiteral {
      "end": Position {
        "character": 36,
        "line": 179,
      },
      "raw": "1",
      "start": Position {
        "character": 35,
        "line": 179,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 180,
      },
      "raw": "4",
      "start": Position {
        "character": 26,
        "line": 180,
      },
      "type": "NumericLiteral",
      "value": 4,
    },
    ASTLiteral {
      "end": Position {
        "character": 41,
        "line": 181,
      },
      "raw": "64",
      "start": Position {
        "character": 39,
        "line": 181,
      },
      "type": "NumericLiteral",
      "value": 64,
    },
    ASTLiteral {
      "end": Position {
        "character": 27,
        "line": 185,
      },
      "raw": "4",
      "start": Position {
        "character": 26,
        "line": 185,
      },
      "type": "NumericLiteral",
      "value": 4,
    },
    ASTLiteral {
      "end": Position {
        "character": 55,
        "line": 186,
      },
      "raw": "3",
      "start": Position {
        "character": 54,
        "line": 186,
      },
      "type": "NumericLiteral",
      "value": 3,
    },
    ASTLiteral {
      "end": Position {
        "character": 60,
        "line": 186,
      },
      "raw": "3",
      "start": Position {
        "character": 59,
        "line": 186,
      },
      "type": "NumericLiteral",
      "value": 3,
    },
    ASTLiteral {
      "end": Position {
        "character": 78,
        "line": 186,
      },
      "raw": "1",
      "start": Position {
        "character": 77,
        "line": 186,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 189,
      },
      "raw": "2",
      "start": Position {
        "character": 30,
        "line": 189,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 47,
        "line": 189,
      },
      "raw": "6",
      "start": Position {
        "character": 46,
        "line": 189,
      },
      "type": "NumericLiteral",
      "value": 6,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 191,
      },
      "raw": "255",
      "start": Position {
        "character": 29,
        "line": 191,
      },
      "type": "NumericLiteral",
      "value": 255,
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 192,
      },
      "raw": "0",
      "start": Position {
        "character": 30,
        "line": 192,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 42,
        "line": 197,
      },
      "raw": "1",
      "start": Position {
        "character": 41,
        "line": 197,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 199,
      },
      "raw": "1",
      "start": Position {
        "character": 31,
        "line": 199,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 201,
      },
      "raw": "\\"\\"",
      "start": Position {
        "character": 24,
        "line": 201,
      },
      "type": "StringLiteral",
      "value": "",
    },
    ASTLiteral {
      "end": Position {
        "character": 39,
        "line": 204,
      },
      "raw": "\\"test\\"",
      "start": Position {
        "character": 33,
        "line": 204,
      },
      "type": "StringLiteral",
      "value": "test",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 206,
      },
      "raw": "\\"abcde\\"",
      "start": Position {
        "character": 7,
        "line": 206,
      },
      "type": "StringLiteral",
      "value": "abcde",
    },
  ],
  "namespaces": Set {
    "String",
    "constructor",
    "parse",
    "values",
    "result",
    "index",
    "maxIndex",
    "len",
    "replace",
    "startsWith",
    "indexOf",
    "substr",
    "startIndex",
    "endIndex",
    "newStr",
    "remove",
    "toString",
    "length",
    "split",
    "seperator",
    "trim",
    "Error",
    "message",
    "m",
    "throw",
    "Crypto",
    "defaultCharset",
    "defaultSecret",
    "maxCharCode",
    "hashFn",
    "charset",
    "me",
    "table",
    "getHash",
    "pw",
    "x",
    "push",
    "code",
    "reverse",
    "encrypt",
    "hashPointer",
    "output",
    "position",
    "padding",
    "max",
    "get",
    "v",
    "AND",
    "a",
    "b",
    "LSHIFT",
    "RSHIFT",
    "c",
    "buffer",
    "join",
    "decrypt",
    "hashLength",
    "bitCounter",
    "bitStorage",
    "currentBit",
    "expectedHashIndex",
    "operation",
    "charCode",
    "test",
    "pwd",
    "foo",
    "decrypted",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts random.src 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 12,
        "line": 1,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 12,
          "line": 1,
        },
        "fields": Array [],
        "start": Position {
          "character": 10,
          "line": 1,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 1,
        },
        "name": "Random",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 17,
        "line": 3,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 17,
          "line": 3,
        },
        "fields": Array [],
        "start": Position {
          "character": 15,
          "line": 3,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 3,
          },
          "name": "Random",
          "start": Position {
            "character": 1,
            "line": 3,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 14,
          "line": 3,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 12,
            "line": 3,
          },
          "name": "pool",
          "start": Position {
            "character": 8,
            "line": 3,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 3,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 30,
        "line": 4,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 30,
          "line": 4,
        },
        "raw": "\\"random\\"",
        "start": Position {
          "character": 22,
          "line": 4,
        },
        "type": "StringLiteral",
        "value": "random",
      },
      "start": Position {
        "character": 1,
        "line": 4,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 4,
          },
          "name": "Random",
          "start": Position {
            "character": 1,
            "line": 4,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 21,
          "line": 4,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 19,
            "line": 4,
          },
          "name": "defaultSeed",
          "start": Position {
            "character": 8,
            "line": 4,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 4,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 8,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTMapConstructorExpression {
              "end": Position {
                "character": 59,
                "line": 7,
              },
              "fields": Array [
                ASTMapKeyString {
                  "end": Position {
                    "character": 26,
                    "line": 7,
                  },
                  "key": ASTLiteral {
                    "end": Position {
                      "character": 20,
                      "line": 7,
                    },
                    "raw": "\\"seed\\"",
                    "start": Position {
                      "character": 14,
                      "line": 7,
                    },
                    "type": "StringLiteral",
                    "value": "seed",
                  },
                  "start": Position {
                    "character": 14,
                    "line": 7,
                  },
                  "type": "MapKeyString",
                  "value": ASTIdentifier {
                    "end": Position {
                      "character": 26,
                      "line": 7,
                    },
                    "name": "seed",
                    "start": Position {
                      "character": 22,
                      "line": 7,
                    },
                    "type": "Identifier",
                  },
                },
                ASTMapKeyString {
                  "end": Position {
                    "character": 40,
                    "line": 7,
                  },
                  "key": ASTLiteral {
                    "end": Position {
                      "character": 35,
                      "line": 7,
                    },
                    "raw": "\\"value\\"",
                    "start": Position {
                      "character": 28,
                      "line": 7,
                    },
                    "type": "StringLiteral",
                    "value": "value",
                  },
                  "start": Position {
                    "character": 28,
                    "line": 7,
                  },
                  "type": "MapKeyString",
                  "value": ASTIdentifier {
                    "end": Position {
                      "character": 40,
                      "line": 7,
                    },
                    "name": "val",
                    "start": Position {
                      "character": 37,
                      "line": 7,
                    },
                    "type": "Identifier",
                  },
                },
                ASTMapKeyString {
                  "end": Position {
                    "character": 57,
                    "line": 7,
                  },
                  "key": ASTLiteral {
                    "end": Position {
                      "character": 54,
                      "line": 7,
                    },
                    "raw": "\\"generation\\"",
                    "start": Position {
                      "character": 42,
                      "line": 7,
                    },
                    "type": "StringLiteral",
                    "value": "generation",
                  },
                  "start": Position {
                    "character": 42,
                    "line": 7,
                  },
                  "type": "MapKeyString",
                  "value": ASTLiteral {
                    "end": Position {
                      "character": 57,
                      "line": 7,
                    },
                    "raw": "0",
                    "start": Position {
                      "character": 56,
                      "line": 7,
                    },
                    "type": "NumericLiteral",
                    "value": 0,
                  },
                },
              ],
              "start": Position {
                "character": 12,
                "line": 7,
              },
              "type": "MapConstructorExpression",
            },
            "end": Position {
              "character": 13,
              "line": 8,
            },
            "start": Position {
              "character": 5,
              "line": 7,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 8,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 34,
              "line": 6,
            },
            "name": "seed",
            "start": Position {
              "character": 30,
              "line": 6,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 39,
              "line": 6,
            },
            "name": "val",
            "start": Position {
              "character": 36,
              "line": 6,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 21,
          "line": 6,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 6,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 6,
          },
          "name": "Random",
          "start": Position {
            "character": 1,
            "line": 6,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 20,
          "line": 6,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 6,
          },
          "name": "createPool",
          "start": Position {
            "character": 8,
            "line": 6,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 6,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 20,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 16,
              "line": 11,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 16,
                "line": 11,
              },
              "raw": "0",
              "start": Position {
                "character": 15,
                "line": 11,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 11,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 12,
                "line": 11,
              },
              "name": "seedVal",
              "start": Position {
                "character": 5,
                "line": 11,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 19,
              "line": 12,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 15,
                  "line": 12,
                },
                "name": "seed",
                "start": Position {
                  "character": 11,
                  "line": 12,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 19,
                "line": 12,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 19,
                  "line": 12,
                },
                "name": "len",
                "start": Position {
                  "character": 16,
                  "line": 12,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 15,
                "line": 12,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 12,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 8,
                "line": 12,
              },
              "name": "pos",
              "start": Position {
                "character": 5,
                "line": 12,
              },
              "type": "Identifier",
            },
          },
          ASTForGenericStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 44,
                  "line": 15,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 44,
                    "line": 15,
                  },
                  "left": ASTEvaluationExpression {
                    "end": Position {
                      "character": 40,
                      "line": 15,
                    },
                    "left": ASTIdentifier {
                      "end": Position {
                        "character": 26,
                        "line": 15,
                      },
                      "name": "seedVal",
                      "start": Position {
                        "character": 19,
                        "line": 15,
                      },
                      "type": "Identifier",
                    },
                    "operator": "+",
                    "right": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 33,
                          "line": 15,
                        },
                        "name": "char",
                        "start": Position {
                          "character": 29,
                          "line": 15,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 40,
                        "line": 15,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 38,
                          "line": 15,
                        },
                        "name": "code",
                        "start": Position {
                          "character": 34,
                          "line": 15,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 33,
                        "line": 15,
                      },
                      "type": "MemberExpression",
                    },
                    "start": Position {
                      "character": 27,
                      "line": 15,
                    },
                    "type": "BinaryExpression",
                  },
                  "operator": "+",
                  "right": ASTIdentifier {
                    "end": Position {
                      "character": 44,
                      "line": 15,
                    },
                    "name": "pos",
                    "start": Position {
                      "character": 41,
                      "line": 15,
                    },
                    "type": "Identifier",
                  },
                  "start": Position {
                    "character": 27,
                    "line": 15,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 15,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 16,
                    "line": 15,
                  },
                  "name": "seedVal",
                  "start": Position {
                    "character": 9,
                    "line": 15,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 22,
                  "line": 16,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 22,
                    "line": 16,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 18,
                      "line": 16,
                    },
                    "name": "pos",
                    "start": Position {
                      "character": 15,
                      "line": 16,
                    },
                    "type": "Identifier",
                  },
                  "operator": "-",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 22,
                      "line": 16,
                    },
                    "raw": "1",
                    "start": Position {
                      "character": 21,
                      "line": 16,
                    },
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                  "start": Position {
                    "character": 19,
                    "line": 16,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 16,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 12,
                    "line": 16,
                  },
                  "name": "pos",
                  "start": Position {
                    "character": 9,
                    "line": 16,
                  },
                  "type": "Identifier",
                },
              },
            ],
            "end": Position {
              "character": 12,
              "line": 17,
            },
            "iterator": ASTIdentifier {
              "end": Position {
                "character": 21,
                "line": 14,
              },
              "name": "seed",
              "start": Position {
                "character": 17,
                "line": 14,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 14,
            },
            "type": "ForGenericStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 14,
              },
              "name": "char",
              "start": Position {
                "character": 9,
                "line": 14,
              },
              "type": "Identifier",
            },
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 19,
                "line": 19,
              },
              "name": "seedVal",
              "start": Position {
                "character": 12,
                "line": 19,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 20,
            },
            "start": Position {
              "character": 5,
              "line": 19,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 20,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 32,
              "line": 10,
            },
            "name": "seed",
            "start": Position {
              "character": 28,
              "line": 10,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 19,
          "line": 10,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 10,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 10,
          },
          "name": "Random",
          "start": Position {
            "character": 1,
            "line": 10,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 18,
          "line": 10,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 16,
            "line": 10,
          },
          "name": "calcSeed",
          "start": Position {
            "character": 8,
            "line": 10,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 10,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 42,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 23,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 23,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 23,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 23,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 23,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 23,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 19,
              "line": 24,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 14,
                  "line": 24,
                },
                "name": "me",
                "start": Position {
                  "character": 12,
                  "line": 24,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 19,
                "line": 24,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 19,
                  "line": 24,
                },
                "name": "pool",
                "start": Position {
                  "character": 15,
                  "line": 24,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 14,
                "line": 24,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 24,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 9,
                "line": 24,
              },
              "name": "pool",
              "start": Position {
                "character": 5,
                "line": 24,
              },
              "type": "Identifier",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 37,
                      "line": 25,
                    },
                    "init": ASTLiteral {
                      "end": Position {
                        "character": 37,
                        "line": 25,
                      },
                      "raw": "true",
                      "start": Position {
                        "character": 33,
                        "line": 25,
                      },
                      "type": "BooleanLiteral",
                      "value": true,
                    },
                    "start": Position {
                      "character": 27,
                      "line": 25,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 30,
                        "line": 25,
                      },
                      "name": "inc",
                      "start": Position {
                        "character": 27,
                        "line": 25,
                      },
                      "type": "Identifier",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 21,
                    "line": 25,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 12,
                      "line": 25,
                    },
                    "name": "inc",
                    "start": Position {
                      "character": 9,
                      "line": 25,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 20,
                      "line": 25,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 16,
                      "line": 25,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 13,
                    "line": 25,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 37,
                  "line": 25,
                },
                "start": Position {
                  "character": 5,
                  "line": 25,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 37,
              "line": 25,
            },
            "start": Position {
              "character": 5,
              "line": 25,
            },
            "type": "IfShortcutStatement",
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 49,
                      "line": 26,
                    },
                    "init": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 37,
                          "line": 26,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 35,
                          "line": 26,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 49,
                        "line": 26,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 49,
                          "line": 26,
                        },
                        "name": "defaultSeed",
                        "start": Position {
                          "character": 38,
                          "line": 26,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 37,
                        "line": 26,
                      },
                      "type": "MemberExpression",
                    },
                    "start": Position {
                      "character": 28,
                      "line": 26,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 32,
                        "line": 26,
                      },
                      "name": "seed",
                      "start": Position {
                        "character": 28,
                        "line": 26,
                      },
                      "type": "Identifier",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 22,
                    "line": 26,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 13,
                      "line": 26,
                    },
                    "name": "seed",
                    "start": Position {
                      "character": 9,
                      "line": 26,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 21,
                      "line": 26,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 17,
                      "line": 26,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 14,
                    "line": 26,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 49,
                  "line": 26,
                },
                "start": Position {
                  "character": 5,
                  "line": 26,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 49,
              "line": 26,
            },
            "start": Position {
              "character": 5,
              "line": 26,
            },
            "type": "IfShortcutStatement",
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 24,
                      "line": 28,
                    },
                    "init": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 18,
                          "line": 28,
                        },
                        "name": "pool",
                        "start": Position {
                          "character": 14,
                          "line": 28,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 24,
                        "line": 28,
                      },
                      "index": ASTIdentifier {
                        "end": Position {
                          "character": 23,
                          "line": 28,
                        },
                        "name": "seed",
                        "start": Position {
                          "character": 19,
                          "line": 28,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 19,
                        "line": 28,
                      },
                      "type": "IndexExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 28,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 11,
                        "line": 28,
                      },
                      "name": "ps",
                      "start": Position {
                        "character": 9,
                        "line": 28,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTIfStatement {
                    "clauses": Array [
                      ASTIfClause {
                        "body": Array [
                          ASTReturnStatement {
                            "argument": ASTMemberExpression {
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 36,
                                  "line": 29,
                                },
                                "name": "ps",
                                "start": Position {
                                  "character": 34,
                                  "line": 29,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 42,
                                "line": 29,
                              },
                              "identifier": ASTIdentifier {
                                "end": Position {
                                  "character": 42,
                                  "line": 29,
                                },
                                "name": "value",
                                "start": Position {
                                  "character": 37,
                                  "line": 29,
                                },
                                "type": "Identifier",
                              },
                              "indexer": ".",
                              "start": Position {
                                "character": 36,
                                "line": 29,
                              },
                              "type": "MemberExpression",
                            },
                            "end": Position {
                              "character": 42,
                              "line": 29,
                            },
                            "start": Position {
                              "character": 27,
                              "line": 29,
                            },
                            "type": "ReturnStatement",
                          },
                        ],
                        "condition": ASTUnaryExpression {
                          "argument": ASTIdentifier {
                            "end": Position {
                              "character": 20,
                              "line": 29,
                            },
                            "name": "inc",
                            "start": Position {
                              "character": 17,
                              "line": 29,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 21,
                            "line": 29,
                          },
                          "operator": "not",
                          "start": Position {
                            "character": 13,
                            "line": 29,
                          },
                          "type": "NegationExpression",
                        },
                        "end": Position {
                          "character": 42,
                          "line": 29,
                        },
                        "start": Position {
                          "character": 9,
                          "line": 29,
                        },
                        "type": "IfShortcutClause",
                      },
                    ],
                    "end": Position {
                      "character": 42,
                      "line": 29,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 29,
                    },
                    "type": "IfShortcutStatement",
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 42,
                      "line": 30,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 42,
                        "line": 30,
                      },
                      "left": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 27,
                            "line": 30,
                          },
                          "name": "ps",
                          "start": Position {
                            "character": 25,
                            "line": 30,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 40,
                          "line": 30,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 38,
                            "line": 30,
                          },
                          "name": "generation",
                          "start": Position {
                            "character": 28,
                            "line": 30,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 27,
                          "line": 30,
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "+",
                      "right": ASTLiteral {
                        "end": Position {
                          "character": 42,
                          "line": 30,
                        },
                        "raw": "1",
                        "start": Position {
                          "character": 41,
                          "line": 30,
                        },
                        "type": "NumericLiteral",
                        "value": 1,
                      },
                      "start": Position {
                        "character": 39,
                        "line": 30,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 30,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 11,
                          "line": 30,
                        },
                        "name": "ps",
                        "start": Position {
                          "character": 9,
                          "line": 30,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 24,
                        "line": 30,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 22,
                          "line": 30,
                        },
                        "name": "generation",
                        "start": Position {
                          "character": 12,
                          "line": 30,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 11,
                        "line": 30,
                      },
                      "type": "MemberExpression",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 73,
                      "line": 31,
                    },
                    "init": ASTCallExpression {
                      "arguments": Array [
                        ASTEvaluationExpression {
                          "end": Position {
                            "character": 73,
                            "line": 31,
                          },
                          "left": ASTEvaluationExpression {
                            "end": Position {
                              "character": 66,
                              "line": 31,
                            },
                            "left": ASTCallExpression {
                              "arguments": Array [
                                ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 51,
                                    "line": 31,
                                  },
                                  "left": ASTMemberExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 28,
                                        "line": 31,
                                      },
                                      "name": "ps",
                                      "start": Position {
                                        "character": 26,
                                        "line": 31,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 36,
                                      "line": 31,
                                    },
                                    "identifier": ASTIdentifier {
                                      "end": Position {
                                        "character": 34,
                                        "line": 31,
                                      },
                                      "name": "value",
                                      "start": Position {
                                        "character": 29,
                                        "line": 31,
                                      },
                                      "type": "Identifier",
                                    },
                                    "indexer": ".",
                                    "start": Position {
                                      "character": 28,
                                      "line": 31,
                                    },
                                    "type": "MemberExpression",
                                  },
                                  "operator": "+",
                                  "right": ASTMemberExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 39,
                                        "line": 31,
                                      },
                                      "name": "ps",
                                      "start": Position {
                                        "character": 37,
                                        "line": 31,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 51,
                                      "line": 31,
                                    },
                                    "identifier": ASTIdentifier {
                                      "end": Position {
                                        "character": 50,
                                        "line": 31,
                                      },
                                      "name": "generation",
                                      "start": Position {
                                        "character": 40,
                                        "line": 31,
                                      },
                                      "type": "Identifier",
                                    },
                                    "indexer": ".",
                                    "start": Position {
                                      "character": 39,
                                      "line": 31,
                                    },
                                    "type": "MemberExpression",
                                  },
                                  "start": Position {
                                    "character": 35,
                                    "line": 31,
                                  },
                                  "type": "BinaryExpression",
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 25,
                                  "line": 31,
                                },
                                "name": "rnd",
                                "start": Position {
                                  "character": 22,
                                  "line": 31,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 53,
                                "line": 31,
                              },
                              "start": Position {
                                "character": 25,
                                "line": 31,
                              },
                              "type": "CallExpression",
                            },
                            "operator": "*",
                            "right": ASTEvaluationExpression {
                              "end": Position {
                                "character": 65,
                                "line": 31,
                              },
                              "left": ASTIdentifier {
                                "end": Position {
                                  "character": 58,
                                  "line": 31,
                                },
                                "name": "max",
                                "start": Position {
                                  "character": 55,
                                  "line": 31,
                                },
                                "type": "Identifier",
                              },
                              "operator": "-",
                              "right": ASTIdentifier {
                                "end": Position {
                                  "character": 64,
                                  "line": 31,
                                },
                                "name": "min",
                                "start": Position {
                                  "character": 61,
                                  "line": 31,
                                },
                                "type": "Identifier",
                              },
                              "start": Position {
                                "character": 59,
                                "line": 31,
                              },
                              "type": "BinaryExpression",
                            },
                            "start": Position {
                              "character": 52,
                              "line": 31,
                            },
                            "type": "BinaryExpression",
                          },
                          "operator": "+",
                          "right": ASTIdentifier {
                            "end": Position {
                              "character": 72,
                              "line": 31,
                            },
                            "name": "min",
                            "start": Position {
                              "character": 69,
                              "line": 31,
                            },
                            "type": "Identifier",
                          },
                          "start": Position {
                            "character": 67,
                            "line": 31,
                          },
                          "type": "BinaryExpression",
                        },
                      ],
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 20,
                          "line": 31,
                        },
                        "name": "floor",
                        "start": Position {
                          "character": 15,
                          "line": 31,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 73,
                        "line": 31,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 31,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 31,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 12,
                        "line": 31,
                      },
                      "name": "val",
                      "start": Position {
                        "character": 9,
                        "line": 31,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 23,
                      "line": 32,
                    },
                    "init": ASTIdentifier {
                      "end": Position {
                        "character": 23,
                        "line": 32,
                      },
                      "name": "val",
                      "start": Position {
                        "character": 20,
                        "line": 32,
                      },
                      "type": "Identifier",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 32,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 11,
                          "line": 32,
                        },
                        "name": "ps",
                        "start": Position {
                          "character": 9,
                          "line": 32,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 19,
                        "line": 32,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 17,
                          "line": 32,
                        },
                        "name": "value",
                        "start": Position {
                          "character": 12,
                          "line": 32,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 11,
                        "line": 32,
                      },
                      "type": "MemberExpression",
                    },
                  },
                  ASTReturnStatement {
                    "argument": ASTIdentifier {
                      "end": Position {
                        "character": 19,
                        "line": 33,
                      },
                      "name": "val",
                      "start": Position {
                        "character": 16,
                        "line": 33,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 11,
                      "line": 34,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 33,
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "condition": ASTCallExpression {
                  "arguments": Array [
                    ASTIdentifier {
                      "end": Position {
                        "character": 27,
                        "line": 27,
                      },
                      "name": "seed",
                      "start": Position {
                        "character": 23,
                        "line": 27,
                      },
                      "type": "Identifier",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 13,
                        "line": 27,
                      },
                      "name": "pool",
                      "start": Position {
                        "character": 9,
                        "line": 27,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 23,
                      "line": 27,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 22,
                        "line": 27,
                      },
                      "name": "hasIndex",
                      "start": Position {
                        "character": 14,
                        "line": 27,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 13,
                      "line": 27,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 29,
                    "line": 27,
                  },
                  "start": Position {
                    "character": 22,
                    "line": 27,
                  },
                  "type": "CallExpression",
                },
                "end": Position {
                  "character": 11,
                  "line": 34,
                },
                "start": Position {
                  "character": 5,
                  "line": 27,
                },
                "type": "IfClause",
              },
            ],
            "end": Position {
              "character": 11,
              "line": 34,
            },
            "start": Position {
              "character": 5,
              "line": 27,
            },
            "type": "IfStatement",
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 32,
              "line": 36,
            },
            "init": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 31,
                    "line": 36,
                  },
                  "name": "seed",
                  "start": Position {
                    "character": 27,
                    "line": 36,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 17,
                    "line": 36,
                  },
                  "name": "me",
                  "start": Position {
                    "character": 15,
                    "line": 36,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 27,
                  "line": 36,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 36,
                  },
                  "name": "calcSeed",
                  "start": Position {
                    "character": 18,
                    "line": 36,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 17,
                  "line": 36,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 32,
                "line": 36,
              },
              "start": Position {
                "character": 26,
                "line": 36,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 36,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 12,
                "line": 36,
              },
              "name": "seedVal",
              "start": Position {
                "character": 5,
                "line": 36,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 52,
              "line": 38,
            },
            "init": ASTCallExpression {
              "arguments": Array [
                ASTEvaluationExpression {
                  "end": Position {
                    "character": 52,
                    "line": 38,
                  },
                  "left": ASTEvaluationExpression {
                    "end": Position {
                      "character": 45,
                      "line": 38,
                    },
                    "left": ASTCallExpression {
                      "arguments": Array [
                        ASTIdentifier {
                          "end": Position {
                            "character": 29,
                            "line": 38,
                          },
                          "name": "seedVal",
                          "start": Position {
                            "character": 22,
                            "line": 38,
                          },
                          "type": "Identifier",
                        },
                      ],
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 21,
                          "line": 38,
                        },
                        "name": "rnd",
                        "start": Position {
                          "character": 18,
                          "line": 38,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 32,
                        "line": 38,
                      },
                      "start": Position {
                        "character": 21,
                        "line": 38,
                      },
                      "type": "CallExpression",
                    },
                    "operator": "*",
                    "right": ASTEvaluationExpression {
                      "end": Position {
                        "character": 44,
                        "line": 38,
                      },
                      "left": ASTIdentifier {
                        "end": Position {
                          "character": 37,
                          "line": 38,
                        },
                        "name": "max",
                        "start": Position {
                          "character": 34,
                          "line": 38,
                        },
                        "type": "Identifier",
                      },
                      "operator": "-",
                      "right": ASTIdentifier {
                        "end": Position {
                          "character": 43,
                          "line": 38,
                        },
                        "name": "min",
                        "start": Position {
                          "character": 40,
                          "line": 38,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 38,
                        "line": 38,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 31,
                      "line": 38,
                    },
                    "type": "BinaryExpression",
                  },
                  "operator": "+",
                  "right": ASTIdentifier {
                    "end": Position {
                      "character": 51,
                      "line": 38,
                    },
                    "name": "min",
                    "start": Position {
                      "character": 48,
                      "line": 38,
                    },
                    "type": "Identifier",
                  },
                  "start": Position {
                    "character": 46,
                    "line": 38,
                  },
                  "type": "BinaryExpression",
                },
              ],
              "base": ASTIdentifier {
                "end": Position {
                  "character": 16,
                  "line": 38,
                },
                "name": "floor",
                "start": Position {
                  "character": 11,
                  "line": 38,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 52,
                "line": 38,
              },
              "start": Position {
                "character": 16,
                "line": 38,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 38,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 8,
                "line": 38,
              },
              "name": "val",
              "start": Position {
                "character": 5,
                "line": 38,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 45,
              "line": 39,
            },
            "init": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 39,
                    "line": 39,
                  },
                  "name": "seedVal",
                  "start": Position {
                    "character": 32,
                    "line": 39,
                  },
                  "type": "Identifier",
                },
                ASTIdentifier {
                  "end": Position {
                    "character": 44,
                    "line": 39,
                  },
                  "name": "val",
                  "start": Position {
                    "character": 41,
                    "line": 39,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 20,
                    "line": 39,
                  },
                  "name": "me",
                  "start": Position {
                    "character": 18,
                    "line": 39,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 32,
                  "line": 39,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 31,
                    "line": 39,
                  },
                  "name": "createPool",
                  "start": Position {
                    "character": 21,
                    "line": 39,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 20,
                  "line": 39,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 45,
                "line": 39,
              },
              "start": Position {
                "character": 31,
                "line": 39,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 39,
            },
            "type": "AssignmentStatement",
            "variable": ASTIndexExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 9,
                  "line": 39,
                },
                "name": "pool",
                "start": Position {
                  "character": 5,
                  "line": 39,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 17,
                "line": 39,
              },
              "index": ASTIdentifier {
                "end": Position {
                  "character": 14,
                  "line": 39,
                },
                "name": "seed",
                "start": Position {
                  "character": 10,
                  "line": 39,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 10,
                "line": 39,
              },
              "type": "IndexExpression",
            },
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 15,
                "line": 41,
              },
              "name": "val",
              "start": Position {
                "character": 12,
                "line": 41,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 42,
            },
            "start": Position {
              "character": 5,
              "line": 41,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 42,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 26,
              "line": 22,
            },
            "name": "min",
            "start": Position {
              "character": 23,
              "line": 22,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 31,
              "line": 22,
            },
            "name": "max",
            "start": Position {
              "character": 28,
              "line": 22,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 37,
              "line": 22,
            },
            "name": "seed",
            "start": Position {
              "character": 33,
              "line": 22,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 42,
              "line": 22,
            },
            "name": "inc",
            "start": Position {
              "character": 39,
              "line": 22,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 14,
          "line": 22,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 22,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 22,
          },
          "name": "Random",
          "start": Position {
            "character": 1,
            "line": 22,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 13,
          "line": 22,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 11,
            "line": 22,
          },
          "name": "gen",
          "start": Position {
            "character": 8,
            "line": 22,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 22,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 55,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 45,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 45,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 45,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 45,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 45,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 45,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 46,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 14,
                "line": 46,
              },
              "raw": "0",
              "start": Position {
                "character": 13,
                "line": 46,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 46,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 46,
              },
              "name": "index",
              "start": Position {
                "character": 5,
                "line": 46,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 16,
              "line": 47,
            },
            "init": ASTListConstructorExpression {
              "end": Position {
                "character": 16,
                "line": 47,
              },
              "fields": Array [],
              "start": Position {
                "character": 14,
                "line": 47,
              },
              "type": "ListConstructorExpression",
            },
            "start": Position {
              "character": 5,
              "line": 47,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 47,
              },
              "name": "result",
              "start": Position {
                "character": 5,
                "line": 47,
              },
              "type": "Identifier",
            },
          },
          ASTWhileStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 38,
                  "line": 49,
                },
                "init": ASTCallExpression {
                  "arguments": Array [
                    ASTIdentifier {
                      "end": Position {
                        "character": 26,
                        "line": 49,
                      },
                      "name": "min",
                      "start": Position {
                        "character": 23,
                        "line": 49,
                      },
                      "type": "Identifier",
                    },
                    ASTIdentifier {
                      "end": Position {
                        "character": 31,
                        "line": 49,
                      },
                      "name": "max",
                      "start": Position {
                        "character": 28,
                        "line": 49,
                      },
                      "type": "Identifier",
                    },
                    ASTIdentifier {
                      "end": Position {
                        "character": 37,
                        "line": 49,
                      },
                      "name": "seed",
                      "start": Position {
                        "character": 33,
                        "line": 49,
                      },
                      "type": "Identifier",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 18,
                        "line": 49,
                      },
                      "name": "me",
                      "start": Position {
                        "character": 16,
                        "line": 49,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 23,
                      "line": 49,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 22,
                        "line": 49,
                      },
                      "name": "gen",
                      "start": Position {
                        "character": 19,
                        "line": 49,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 18,
                      "line": 49,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 38,
                    "line": 49,
                  },
                  "start": Position {
                    "character": 22,
                    "line": 49,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 49,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 13,
                    "line": 49,
                  },
                  "name": "temp",
                  "start": Position {
                    "character": 9,
                    "line": 49,
                  },
                  "type": "Identifier",
                },
              },
              ASTCallStatement {
                "end": Position {
                  "character": 27,
                  "line": 50,
                },
                "expression": ASTCallExpression {
                  "arguments": Array [
                    ASTIdentifier {
                      "end": Position {
                        "character": 25,
                        "line": 50,
                      },
                      "name": "temp",
                      "start": Position {
                        "character": 21,
                        "line": 50,
                      },
                      "type": "Identifier",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 50,
                      },
                      "name": "result",
                      "start": Position {
                        "character": 9,
                        "line": 50,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 21,
                      "line": 50,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 50,
                      },
                      "name": "push",
                      "start": Position {
                        "character": 16,
                        "line": 50,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 15,
                      "line": 50,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 27,
                    "line": 50,
                  },
                  "start": Position {
                    "character": 20,
                    "line": 50,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 50,
                },
                "type": "CallStatement",
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 26,
                  "line": 51,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 26,
                    "line": 51,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 22,
                      "line": 51,
                    },
                    "name": "index",
                    "start": Position {
                      "character": 17,
                      "line": 51,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 26,
                      "line": 51,
                    },
                    "raw": "1",
                    "start": Position {
                      "character": 25,
                      "line": 51,
                    },
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                  "start": Position {
                    "character": 23,
                    "line": 51,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 51,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 14,
                    "line": 51,
                  },
                  "name": "index",
                  "start": Position {
                    "character": 9,
                    "line": 51,
                  },
                  "type": "Identifier",
                },
              },
            ],
            "condition": ASTEvaluationExpression {
              "end": Position {
                "character": 25,
                "line": 48,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 16,
                  "line": 48,
                },
                "name": "index",
                "start": Position {
                  "character": 11,
                  "line": 48,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": ASTIdentifier {
                "end": Position {
                  "character": 25,
                  "line": 48,
                },
                "name": "amount",
                "start": Position {
                  "character": 19,
                  "line": 48,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 17,
                "line": 48,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 14,
              "line": 52,
            },
            "start": Position {
              "character": 5,
              "line": 48,
            },
            "type": "WhileStatement",
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTCallStatement {
                    "end": Position {
                      "character": 52,
                      "line": 53,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTIdentifier {
                          "end": Position {
                            "character": 51,
                            "line": 53,
                          },
                          "name": "seed",
                          "start": Position {
                            "character": 47,
                            "line": 53,
                          },
                          "type": "Identifier",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTMemberExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 34,
                              "line": 53,
                            },
                            "name": "me",
                            "start": Position {
                              "character": 32,
                              "line": 53,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 40,
                            "line": 53,
                          },
                          "identifier": ASTIdentifier {
                            "end": Position {
                              "character": 39,
                              "line": 53,
                            },
                            "name": "pool",
                            "start": Position {
                              "character": 35,
                              "line": 53,
                            },
                            "type": "Identifier",
                          },
                          "indexer": ".",
                          "start": Position {
                            "character": 34,
                            "line": 53,
                          },
                          "type": "MemberExpression",
                        },
                        "end": Position {
                          "character": 47,
                          "line": 53,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 46,
                            "line": 53,
                          },
                          "name": "remove",
                          "start": Position {
                            "character": 40,
                            "line": 53,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 39,
                          "line": 53,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 52,
                        "line": 53,
                      },
                      "start": Position {
                        "character": 46,
                        "line": 53,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 32,
                      "line": 53,
                    },
                    "type": "CallStatement",
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 26,
                    "line": 53,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 17,
                      "line": 53,
                    },
                    "name": "keepPool",
                    "start": Position {
                      "character": 9,
                      "line": 53,
                    },
                    "type": "Identifier",
                  },
                  "operator": "!=",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 25,
                      "line": 53,
                    },
                    "raw": "true",
                    "start": Position {
                      "character": 21,
                      "line": 53,
                    },
                    "type": "BooleanLiteral",
                    "value": true,
                  },
                  "start": Position {
                    "character": 18,
                    "line": 53,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 52,
                  "line": 53,
                },
                "start": Position {
                  "character": 5,
                  "line": 53,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 52,
              "line": 53,
            },
            "start": Position {
              "character": 5,
              "line": 53,
            },
            "type": "IfShortcutStatement",
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 18,
                "line": 54,
              },
              "name": "result",
              "start": Position {
                "character": 12,
                "line": 54,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 55,
            },
            "start": Position {
              "character": 5,
              "line": 54,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 55,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 26,
              "line": 44,
            },
            "name": "min",
            "start": Position {
              "character": 23,
              "line": 44,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 31,
              "line": 44,
            },
            "name": "max",
            "start": Position {
              "character": 28,
              "line": 44,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 37,
              "line": 44,
            },
            "name": "seed",
            "start": Position {
              "character": 33,
              "line": 44,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 45,
              "line": 44,
            },
            "name": "amount",
            "start": Position {
              "character": 39,
              "line": 44,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 55,
              "line": 44,
            },
            "name": "keepPool",
            "start": Position {
              "character": 47,
              "line": 44,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 14,
          "line": 44,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 44,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 44,
          },
          "name": "Random",
          "start": Position {
            "character": 1,
            "line": 44,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 13,
          "line": 44,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 11,
            "line": 44,
          },
          "name": "seq",
          "start": Position {
            "character": 8,
            "line": 44,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 44,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 59,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 24,
                    "line": 58,
                  },
                  "name": "min",
                  "start": Position {
                    "character": 21,
                    "line": 58,
                  },
                  "type": "Identifier",
                },
                ASTIdentifier {
                  "end": Position {
                    "character": 29,
                    "line": 58,
                  },
                  "name": "max",
                  "start": Position {
                    "character": 26,
                    "line": 58,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 16,
                    "line": 58,
                  },
                  "name": "self",
                  "start": Position {
                    "character": 12,
                    "line": 58,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 21,
                  "line": 58,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 20,
                    "line": 58,
                  },
                  "name": "gen",
                  "start": Position {
                    "character": 17,
                    "line": 58,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 16,
                  "line": 58,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 30,
                "line": 58,
              },
              "start": Position {
                "character": 20,
                "line": 58,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 59,
            },
            "start": Position {
              "character": 5,
              "line": 58,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 59,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 26,
              "line": 57,
            },
            "name": "min",
            "start": Position {
              "character": 23,
              "line": 57,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 31,
              "line": 57,
            },
            "name": "max",
            "start": Position {
              "character": 28,
              "line": 57,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 14,
          "line": 57,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 57,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 57,
          },
          "name": "Random",
          "start": Position {
            "character": 1,
            "line": 57,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 13,
          "line": 57,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 11,
            "line": 57,
          },
          "name": "get",
          "start": Position {
            "character": 8,
            "line": 57,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 57,
        },
        "type": "MemberExpression",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 27,
        "line": 61,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTCallExpression {
            "arguments": Array [
              ASTLiteral {
                "end": Position {
                  "character": 21,
                  "line": 61,
                },
                "raw": "100",
                "start": Position {
                  "character": 18,
                  "line": 61,
                },
                "type": "NumericLiteral",
                "value": 100,
              },
              ASTLiteral {
                "end": Position {
                  "character": 25,
                  "line": 61,
                },
                "raw": "500",
                "start": Position {
                  "character": 22,
                  "line": 61,
                },
                "type": "NumericLiteral",
                "value": 500,
              },
            ],
            "base": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 13,
                  "line": 61,
                },
                "name": "Random",
                "start": Position {
                  "character": 7,
                  "line": 61,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 18,
                "line": 61,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 17,
                  "line": 61,
                },
                "name": "get",
                "start": Position {
                  "character": 14,
                  "line": 61,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 13,
                "line": 61,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 27,
              "line": 61,
            },
            "start": Position {
              "character": 17,
              "line": 61,
            },
            "type": "CallExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 61,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 61,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 27,
          "line": 61,
        },
        "start": Position {
          "character": 6,
          "line": 61,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 61,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 39,
        "line": 62,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTCallExpression {
            "arguments": Array [
              ASTLiteral {
                "end": Position {
                  "character": 21,
                  "line": 62,
                },
                "raw": "100",
                "start": Position {
                  "character": 18,
                  "line": 62,
                },
                "type": "NumericLiteral",
                "value": 100,
              },
              ASTLiteral {
                "end": Position {
                  "character": 25,
                  "line": 62,
                },
                "raw": "500",
                "start": Position {
                  "character": 22,
                  "line": 62,
                },
                "type": "NumericLiteral",
                "value": 500,
              },
              ASTLiteral {
                "end": Position {
                  "character": 33,
                  "line": 62,
                },
                "raw": "\\"test\\"",
                "start": Position {
                  "character": 27,
                  "line": 62,
                },
                "type": "StringLiteral",
                "value": "test",
              },
              ASTLiteral {
                "end": Position {
                  "character": 37,
                  "line": 62,
                },
                "raw": "10",
                "start": Position {
                  "character": 35,
                  "line": 62,
                },
                "type": "NumericLiteral",
                "value": 10,
              },
            ],
            "base": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 13,
                  "line": 62,
                },
                "name": "Random",
                "start": Position {
                  "character": 7,
                  "line": 62,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 18,
                "line": 62,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 17,
                  "line": 62,
                },
                "name": "seq",
                "start": Position {
                  "character": 14,
                  "line": 62,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 13,
                "line": 62,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 39,
              "line": 62,
            },
            "start": Position {
              "character": 17,
              "line": 62,
            },
            "type": "CallExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 62,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 62,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 39,
          "line": 62,
        },
        "start": Position {
          "character": 6,
          "line": 62,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 62,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 39,
    "line": 62,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 30,
        "line": 4,
      },
      "raw": "\\"random\\"",
      "start": Position {
        "character": 22,
        "line": 4,
      },
      "type": "StringLiteral",
      "value": "random",
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 7,
      },
      "raw": "\\"seed\\"",
      "start": Position {
        "character": 14,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "seed",
    },
    ASTLiteral {
      "end": Position {
        "character": 35,
        "line": 7,
      },
      "raw": "\\"value\\"",
      "start": Position {
        "character": 28,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "value",
    },
    ASTLiteral {
      "end": Position {
        "character": 54,
        "line": 7,
      },
      "raw": "\\"generation\\"",
      "start": Position {
        "character": 42,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "generation",
    },
    ASTLiteral {
      "end": Position {
        "character": 57,
        "line": 7,
      },
      "raw": "0",
      "start": Position {
        "character": 56,
        "line": 7,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 11,
      },
      "raw": "0",
      "start": Position {
        "character": 15,
        "line": 11,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 22,
        "line": 16,
      },
      "raw": "1",
      "start": Position {
        "character": 21,
        "line": 16,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 25,
      },
      "raw": "null",
      "start": Position {
        "character": 16,
        "line": 25,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 25,
      },
      "raw": "true",
      "start": Position {
        "character": 33,
        "line": 25,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 26,
      },
      "raw": "null",
      "start": Position {
        "character": 17,
        "line": 26,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 42,
        "line": 30,
      },
      "raw": "1",
      "start": Position {
        "character": 41,
        "line": 30,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 46,
      },
      "raw": "0",
      "start": Position {
        "character": 13,
        "line": 46,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 51,
      },
      "raw": "1",
      "start": Position {
        "character": 25,
        "line": 51,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 53,
      },
      "raw": "true",
      "start": Position {
        "character": 21,
        "line": 53,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 61,
      },
      "raw": "100",
      "start": Position {
        "character": 18,
        "line": 61,
      },
      "type": "NumericLiteral",
      "value": 100,
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 61,
      },
      "raw": "500",
      "start": Position {
        "character": 22,
        "line": 61,
      },
      "type": "NumericLiteral",
      "value": 500,
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 62,
      },
      "raw": "100",
      "start": Position {
        "character": 18,
        "line": 62,
      },
      "type": "NumericLiteral",
      "value": 100,
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 62,
      },
      "raw": "500",
      "start": Position {
        "character": 22,
        "line": 62,
      },
      "type": "NumericLiteral",
      "value": 500,
    },
    ASTLiteral {
      "end": Position {
        "character": 33,
        "line": 62,
      },
      "raw": "\\"test\\"",
      "start": Position {
        "character": 27,
        "line": 62,
      },
      "type": "StringLiteral",
      "value": "test",
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 62,
      },
      "raw": "10",
      "start": Position {
        "character": 35,
        "line": 62,
      },
      "type": "NumericLiteral",
      "value": 10,
    },
  ],
  "namespaces": Set {
    "Random",
    "pool",
    "defaultSeed",
    "createPool",
    "seed",
    "val",
    "calcSeed",
    "seedVal",
    "pos",
    "len",
    "code",
    "gen",
    "min",
    "max",
    "inc",
    "me",
    "ps",
    "value",
    "generation",
    "seq",
    "amount",
    "keepPool",
    "index",
    "result",
    "temp",
    "push",
    "remove",
    "get",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts random.src unsafe 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 12,
        "line": 1,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 12,
          "line": 1,
        },
        "fields": Array [],
        "start": Position {
          "character": 10,
          "line": 1,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 7,
          "line": 1,
        },
        "name": "Random",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 17,
        "line": 3,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 17,
          "line": 3,
        },
        "fields": Array [],
        "start": Position {
          "character": 15,
          "line": 3,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 3,
          },
          "name": "Random",
          "start": Position {
            "character": 1,
            "line": 3,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 14,
          "line": 3,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 12,
            "line": 3,
          },
          "name": "pool",
          "start": Position {
            "character": 8,
            "line": 3,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 3,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 30,
        "line": 4,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 30,
          "line": 4,
        },
        "raw": "\\"random\\"",
        "start": Position {
          "character": 22,
          "line": 4,
        },
        "type": "StringLiteral",
        "value": "random",
      },
      "start": Position {
        "character": 1,
        "line": 4,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 4,
          },
          "name": "Random",
          "start": Position {
            "character": 1,
            "line": 4,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 21,
          "line": 4,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 19,
            "line": 4,
          },
          "name": "defaultSeed",
          "start": Position {
            "character": 8,
            "line": 4,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 4,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 8,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTMapConstructorExpression {
              "end": Position {
                "character": 59,
                "line": 7,
              },
              "fields": Array [
                ASTMapKeyString {
                  "end": Position {
                    "character": 26,
                    "line": 7,
                  },
                  "key": ASTLiteral {
                    "end": Position {
                      "character": 20,
                      "line": 7,
                    },
                    "raw": "\\"seed\\"",
                    "start": Position {
                      "character": 14,
                      "line": 7,
                    },
                    "type": "StringLiteral",
                    "value": "seed",
                  },
                  "start": Position {
                    "character": 14,
                    "line": 7,
                  },
                  "type": "MapKeyString",
                  "value": ASTIdentifier {
                    "end": Position {
                      "character": 26,
                      "line": 7,
                    },
                    "name": "seed",
                    "start": Position {
                      "character": 22,
                      "line": 7,
                    },
                    "type": "Identifier",
                  },
                },
                ASTMapKeyString {
                  "end": Position {
                    "character": 40,
                    "line": 7,
                  },
                  "key": ASTLiteral {
                    "end": Position {
                      "character": 35,
                      "line": 7,
                    },
                    "raw": "\\"value\\"",
                    "start": Position {
                      "character": 28,
                      "line": 7,
                    },
                    "type": "StringLiteral",
                    "value": "value",
                  },
                  "start": Position {
                    "character": 28,
                    "line": 7,
                  },
                  "type": "MapKeyString",
                  "value": ASTIdentifier {
                    "end": Position {
                      "character": 40,
                      "line": 7,
                    },
                    "name": "val",
                    "start": Position {
                      "character": 37,
                      "line": 7,
                    },
                    "type": "Identifier",
                  },
                },
                ASTMapKeyString {
                  "end": Position {
                    "character": 57,
                    "line": 7,
                  },
                  "key": ASTLiteral {
                    "end": Position {
                      "character": 54,
                      "line": 7,
                    },
                    "raw": "\\"generation\\"",
                    "start": Position {
                      "character": 42,
                      "line": 7,
                    },
                    "type": "StringLiteral",
                    "value": "generation",
                  },
                  "start": Position {
                    "character": 42,
                    "line": 7,
                  },
                  "type": "MapKeyString",
                  "value": ASTLiteral {
                    "end": Position {
                      "character": 57,
                      "line": 7,
                    },
                    "raw": "0",
                    "start": Position {
                      "character": 56,
                      "line": 7,
                    },
                    "type": "NumericLiteral",
                    "value": 0,
                  },
                },
              ],
              "start": Position {
                "character": 12,
                "line": 7,
              },
              "type": "MapConstructorExpression",
            },
            "end": Position {
              "character": 13,
              "line": 8,
            },
            "start": Position {
              "character": 5,
              "line": 7,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 8,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 34,
              "line": 6,
            },
            "name": "seed",
            "start": Position {
              "character": 30,
              "line": 6,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 39,
              "line": 6,
            },
            "name": "val",
            "start": Position {
              "character": 36,
              "line": 6,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 21,
          "line": 6,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 6,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 6,
          },
          "name": "Random",
          "start": Position {
            "character": 1,
            "line": 6,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 20,
          "line": 6,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 18,
            "line": 6,
          },
          "name": "createPool",
          "start": Position {
            "character": 8,
            "line": 6,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 6,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 20,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 16,
              "line": 11,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 16,
                "line": 11,
              },
              "raw": "0",
              "start": Position {
                "character": 15,
                "line": 11,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 11,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 12,
                "line": 11,
              },
              "name": "seedVal",
              "start": Position {
                "character": 5,
                "line": 11,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 19,
              "line": 12,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 15,
                  "line": 12,
                },
                "name": "seed",
                "start": Position {
                  "character": 11,
                  "line": 12,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 19,
                "line": 12,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 19,
                  "line": 12,
                },
                "name": "len",
                "start": Position {
                  "character": 16,
                  "line": 12,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 15,
                "line": 12,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 12,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 8,
                "line": 12,
              },
              "name": "pos",
              "start": Position {
                "character": 5,
                "line": 12,
              },
              "type": "Identifier",
            },
          },
          ASTForGenericStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 44,
                  "line": 15,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 44,
                    "line": 15,
                  },
                  "left": ASTEvaluationExpression {
                    "end": Position {
                      "character": 40,
                      "line": 15,
                    },
                    "left": ASTIdentifier {
                      "end": Position {
                        "character": 26,
                        "line": 15,
                      },
                      "name": "seedVal",
                      "start": Position {
                        "character": 19,
                        "line": 15,
                      },
                      "type": "Identifier",
                    },
                    "operator": "+",
                    "right": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 33,
                          "line": 15,
                        },
                        "name": "char",
                        "start": Position {
                          "character": 29,
                          "line": 15,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 40,
                        "line": 15,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 38,
                          "line": 15,
                        },
                        "name": "code",
                        "start": Position {
                          "character": 34,
                          "line": 15,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 33,
                        "line": 15,
                      },
                      "type": "MemberExpression",
                    },
                    "start": Position {
                      "character": 27,
                      "line": 15,
                    },
                    "type": "BinaryExpression",
                  },
                  "operator": "+",
                  "right": ASTIdentifier {
                    "end": Position {
                      "character": 44,
                      "line": 15,
                    },
                    "name": "pos",
                    "start": Position {
                      "character": 41,
                      "line": 15,
                    },
                    "type": "Identifier",
                  },
                  "start": Position {
                    "character": 27,
                    "line": 15,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 15,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 16,
                    "line": 15,
                  },
                  "name": "seedVal",
                  "start": Position {
                    "character": 9,
                    "line": 15,
                  },
                  "type": "Identifier",
                },
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 22,
                  "line": 16,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 22,
                    "line": 16,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 18,
                      "line": 16,
                    },
                    "name": "pos",
                    "start": Position {
                      "character": 15,
                      "line": 16,
                    },
                    "type": "Identifier",
                  },
                  "operator": "-",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 22,
                      "line": 16,
                    },
                    "raw": "1",
                    "start": Position {
                      "character": 21,
                      "line": 16,
                    },
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                  "start": Position {
                    "character": 19,
                    "line": 16,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 16,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 12,
                    "line": 16,
                  },
                  "name": "pos",
                  "start": Position {
                    "character": 9,
                    "line": 16,
                  },
                  "type": "Identifier",
                },
              },
            ],
            "end": Position {
              "character": 12,
              "line": 17,
            },
            "iterator": ASTIdentifier {
              "end": Position {
                "character": 21,
                "line": 14,
              },
              "name": "seed",
              "start": Position {
                "character": 17,
                "line": 14,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 14,
            },
            "type": "ForGenericStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 13,
                "line": 14,
              },
              "name": "char",
              "start": Position {
                "character": 9,
                "line": 14,
              },
              "type": "Identifier",
            },
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 19,
                "line": 19,
              },
              "name": "seedVal",
              "start": Position {
                "character": 12,
                "line": 19,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 20,
            },
            "start": Position {
              "character": 5,
              "line": 19,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 20,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 32,
              "line": 10,
            },
            "name": "seed",
            "start": Position {
              "character": 28,
              "line": 10,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 19,
          "line": 10,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 10,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 10,
          },
          "name": "Random",
          "start": Position {
            "character": 1,
            "line": 10,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 18,
          "line": 10,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 16,
            "line": 10,
          },
          "name": "calcSeed",
          "start": Position {
            "character": 8,
            "line": 10,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 10,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 42,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 23,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 23,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 23,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 23,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 23,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 23,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 19,
              "line": 24,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 14,
                  "line": 24,
                },
                "name": "me",
                "start": Position {
                  "character": 12,
                  "line": 24,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 19,
                "line": 24,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 19,
                  "line": 24,
                },
                "name": "pool",
                "start": Position {
                  "character": 15,
                  "line": 24,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 14,
                "line": 24,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 24,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 9,
                "line": 24,
              },
              "name": "pool",
              "start": Position {
                "character": 5,
                "line": 24,
              },
              "type": "Identifier",
            },
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 37,
                      "line": 25,
                    },
                    "init": ASTLiteral {
                      "end": Position {
                        "character": 37,
                        "line": 25,
                      },
                      "raw": "true",
                      "start": Position {
                        "character": 33,
                        "line": 25,
                      },
                      "type": "BooleanLiteral",
                      "value": true,
                    },
                    "start": Position {
                      "character": 27,
                      "line": 25,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 30,
                        "line": 25,
                      },
                      "name": "inc",
                      "start": Position {
                        "character": 27,
                        "line": 25,
                      },
                      "type": "Identifier",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 21,
                    "line": 25,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 12,
                      "line": 25,
                    },
                    "name": "inc",
                    "start": Position {
                      "character": 9,
                      "line": 25,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 20,
                      "line": 25,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 16,
                      "line": 25,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 13,
                    "line": 25,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 37,
                  "line": 25,
                },
                "start": Position {
                  "character": 5,
                  "line": 25,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 37,
              "line": 25,
            },
            "start": Position {
              "character": 5,
              "line": 25,
            },
            "type": "IfShortcutStatement",
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 49,
                      "line": 26,
                    },
                    "init": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 37,
                          "line": 26,
                        },
                        "name": "me",
                        "start": Position {
                          "character": 35,
                          "line": 26,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 49,
                        "line": 26,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 49,
                          "line": 26,
                        },
                        "name": "defaultSeed",
                        "start": Position {
                          "character": 38,
                          "line": 26,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 37,
                        "line": 26,
                      },
                      "type": "MemberExpression",
                    },
                    "start": Position {
                      "character": 28,
                      "line": 26,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 32,
                        "line": 26,
                      },
                      "name": "seed",
                      "start": Position {
                        "character": 28,
                        "line": 26,
                      },
                      "type": "Identifier",
                    },
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 22,
                    "line": 26,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 13,
                      "line": 26,
                    },
                    "name": "seed",
                    "start": Position {
                      "character": 9,
                      "line": 26,
                    },
                    "type": "Identifier",
                  },
                  "operator": "==",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 21,
                      "line": 26,
                    },
                    "raw": "null",
                    "start": Position {
                      "character": 17,
                      "line": 26,
                    },
                    "type": "NilLiteral",
                    "value": null,
                  },
                  "start": Position {
                    "character": 14,
                    "line": 26,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 49,
                  "line": 26,
                },
                "start": Position {
                  "character": 5,
                  "line": 26,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 49,
              "line": 26,
            },
            "start": Position {
              "character": 5,
              "line": 26,
            },
            "type": "IfShortcutStatement",
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 24,
                      "line": 28,
                    },
                    "init": ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 18,
                          "line": 28,
                        },
                        "name": "pool",
                        "start": Position {
                          "character": 14,
                          "line": 28,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 24,
                        "line": 28,
                      },
                      "index": ASTIdentifier {
                        "end": Position {
                          "character": 23,
                          "line": 28,
                        },
                        "name": "seed",
                        "start": Position {
                          "character": 19,
                          "line": 28,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 19,
                        "line": 28,
                      },
                      "type": "IndexExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 28,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 11,
                        "line": 28,
                      },
                      "name": "ps",
                      "start": Position {
                        "character": 9,
                        "line": 28,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTIfStatement {
                    "clauses": Array [
                      ASTIfClause {
                        "body": Array [
                          ASTReturnStatement {
                            "argument": ASTMemberExpression {
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 36,
                                  "line": 29,
                                },
                                "name": "ps",
                                "start": Position {
                                  "character": 34,
                                  "line": 29,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 42,
                                "line": 29,
                              },
                              "identifier": ASTIdentifier {
                                "end": Position {
                                  "character": 42,
                                  "line": 29,
                                },
                                "name": "value",
                                "start": Position {
                                  "character": 37,
                                  "line": 29,
                                },
                                "type": "Identifier",
                              },
                              "indexer": ".",
                              "start": Position {
                                "character": 36,
                                "line": 29,
                              },
                              "type": "MemberExpression",
                            },
                            "end": Position {
                              "character": 42,
                              "line": 29,
                            },
                            "start": Position {
                              "character": 27,
                              "line": 29,
                            },
                            "type": "ReturnStatement",
                          },
                        ],
                        "condition": ASTUnaryExpression {
                          "argument": ASTIdentifier {
                            "end": Position {
                              "character": 20,
                              "line": 29,
                            },
                            "name": "inc",
                            "start": Position {
                              "character": 17,
                              "line": 29,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 21,
                            "line": 29,
                          },
                          "operator": "not",
                          "start": Position {
                            "character": 13,
                            "line": 29,
                          },
                          "type": "NegationExpression",
                        },
                        "end": Position {
                          "character": 42,
                          "line": 29,
                        },
                        "start": Position {
                          "character": 9,
                          "line": 29,
                        },
                        "type": "IfShortcutClause",
                      },
                    ],
                    "end": Position {
                      "character": 42,
                      "line": 29,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 29,
                    },
                    "type": "IfShortcutStatement",
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 42,
                      "line": 30,
                    },
                    "init": ASTEvaluationExpression {
                      "end": Position {
                        "character": 42,
                        "line": 30,
                      },
                      "left": ASTMemberExpression {
                        "base": ASTIdentifier {
                          "end": Position {
                            "character": 27,
                            "line": 30,
                          },
                          "name": "ps",
                          "start": Position {
                            "character": 25,
                            "line": 30,
                          },
                          "type": "Identifier",
                        },
                        "end": Position {
                          "character": 40,
                          "line": 30,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 38,
                            "line": 30,
                          },
                          "name": "generation",
                          "start": Position {
                            "character": 28,
                            "line": 30,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 27,
                          "line": 30,
                        },
                        "type": "MemberExpression",
                      },
                      "operator": "+",
                      "right": ASTLiteral {
                        "end": Position {
                          "character": 42,
                          "line": 30,
                        },
                        "raw": "1",
                        "start": Position {
                          "character": 41,
                          "line": 30,
                        },
                        "type": "NumericLiteral",
                        "value": 1,
                      },
                      "start": Position {
                        "character": 39,
                        "line": 30,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 30,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 11,
                          "line": 30,
                        },
                        "name": "ps",
                        "start": Position {
                          "character": 9,
                          "line": 30,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 24,
                        "line": 30,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 22,
                          "line": 30,
                        },
                        "name": "generation",
                        "start": Position {
                          "character": 12,
                          "line": 30,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 11,
                        "line": 30,
                      },
                      "type": "MemberExpression",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 73,
                      "line": 31,
                    },
                    "init": ASTCallExpression {
                      "arguments": Array [
                        ASTEvaluationExpression {
                          "end": Position {
                            "character": 73,
                            "line": 31,
                          },
                          "left": ASTEvaluationExpression {
                            "end": Position {
                              "character": 66,
                              "line": 31,
                            },
                            "left": ASTCallExpression {
                              "arguments": Array [
                                ASTEvaluationExpression {
                                  "end": Position {
                                    "character": 51,
                                    "line": 31,
                                  },
                                  "left": ASTMemberExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 28,
                                        "line": 31,
                                      },
                                      "name": "ps",
                                      "start": Position {
                                        "character": 26,
                                        "line": 31,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 36,
                                      "line": 31,
                                    },
                                    "identifier": ASTIdentifier {
                                      "end": Position {
                                        "character": 34,
                                        "line": 31,
                                      },
                                      "name": "value",
                                      "start": Position {
                                        "character": 29,
                                        "line": 31,
                                      },
                                      "type": "Identifier",
                                    },
                                    "indexer": ".",
                                    "start": Position {
                                      "character": 28,
                                      "line": 31,
                                    },
                                    "type": "MemberExpression",
                                  },
                                  "operator": "+",
                                  "right": ASTMemberExpression {
                                    "base": ASTIdentifier {
                                      "end": Position {
                                        "character": 39,
                                        "line": 31,
                                      },
                                      "name": "ps",
                                      "start": Position {
                                        "character": 37,
                                        "line": 31,
                                      },
                                      "type": "Identifier",
                                    },
                                    "end": Position {
                                      "character": 51,
                                      "line": 31,
                                    },
                                    "identifier": ASTIdentifier {
                                      "end": Position {
                                        "character": 50,
                                        "line": 31,
                                      },
                                      "name": "generation",
                                      "start": Position {
                                        "character": 40,
                                        "line": 31,
                                      },
                                      "type": "Identifier",
                                    },
                                    "indexer": ".",
                                    "start": Position {
                                      "character": 39,
                                      "line": 31,
                                    },
                                    "type": "MemberExpression",
                                  },
                                  "start": Position {
                                    "character": 35,
                                    "line": 31,
                                  },
                                  "type": "BinaryExpression",
                                },
                              ],
                              "base": ASTIdentifier {
                                "end": Position {
                                  "character": 25,
                                  "line": 31,
                                },
                                "name": "rnd",
                                "start": Position {
                                  "character": 22,
                                  "line": 31,
                                },
                                "type": "Identifier",
                              },
                              "end": Position {
                                "character": 53,
                                "line": 31,
                              },
                              "start": Position {
                                "character": 25,
                                "line": 31,
                              },
                              "type": "CallExpression",
                            },
                            "operator": "*",
                            "right": ASTEvaluationExpression {
                              "end": Position {
                                "character": 65,
                                "line": 31,
                              },
                              "left": ASTIdentifier {
                                "end": Position {
                                  "character": 58,
                                  "line": 31,
                                },
                                "name": "max",
                                "start": Position {
                                  "character": 55,
                                  "line": 31,
                                },
                                "type": "Identifier",
                              },
                              "operator": "-",
                              "right": ASTIdentifier {
                                "end": Position {
                                  "character": 64,
                                  "line": 31,
                                },
                                "name": "min",
                                "start": Position {
                                  "character": 61,
                                  "line": 31,
                                },
                                "type": "Identifier",
                              },
                              "start": Position {
                                "character": 59,
                                "line": 31,
                              },
                              "type": "BinaryExpression",
                            },
                            "start": Position {
                              "character": 52,
                              "line": 31,
                            },
                            "type": "BinaryExpression",
                          },
                          "operator": "+",
                          "right": ASTIdentifier {
                            "end": Position {
                              "character": 72,
                              "line": 31,
                            },
                            "name": "min",
                            "start": Position {
                              "character": 69,
                              "line": 31,
                            },
                            "type": "Identifier",
                          },
                          "start": Position {
                            "character": 67,
                            "line": 31,
                          },
                          "type": "BinaryExpression",
                        },
                      ],
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 20,
                          "line": 31,
                        },
                        "name": "floor",
                        "start": Position {
                          "character": 15,
                          "line": 31,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 73,
                        "line": 31,
                      },
                      "start": Position {
                        "character": 20,
                        "line": 31,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 31,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTIdentifier {
                      "end": Position {
                        "character": 12,
                        "line": 31,
                      },
                      "name": "val",
                      "start": Position {
                        "character": 9,
                        "line": 31,
                      },
                      "type": "Identifier",
                    },
                  },
                  ASTAssignmentStatement {
                    "end": Position {
                      "character": 23,
                      "line": 32,
                    },
                    "init": ASTIdentifier {
                      "end": Position {
                        "character": 23,
                        "line": 32,
                      },
                      "name": "val",
                      "start": Position {
                        "character": 20,
                        "line": 32,
                      },
                      "type": "Identifier",
                    },
                    "start": Position {
                      "character": 9,
                      "line": 32,
                    },
                    "type": "AssignmentStatement",
                    "variable": ASTMemberExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 11,
                          "line": 32,
                        },
                        "name": "ps",
                        "start": Position {
                          "character": 9,
                          "line": 32,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 19,
                        "line": 32,
                      },
                      "identifier": ASTIdentifier {
                        "end": Position {
                          "character": 17,
                          "line": 32,
                        },
                        "name": "value",
                        "start": Position {
                          "character": 12,
                          "line": 32,
                        },
                        "type": "Identifier",
                      },
                      "indexer": ".",
                      "start": Position {
                        "character": 11,
                        "line": 32,
                      },
                      "type": "MemberExpression",
                    },
                  },
                  ASTReturnStatement {
                    "argument": ASTIdentifier {
                      "end": Position {
                        "character": 19,
                        "line": 33,
                      },
                      "name": "val",
                      "start": Position {
                        "character": 16,
                        "line": 33,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 11,
                      "line": 34,
                    },
                    "start": Position {
                      "character": 9,
                      "line": 33,
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "condition": ASTCallExpression {
                  "arguments": Array [
                    ASTIdentifier {
                      "end": Position {
                        "character": 27,
                        "line": 27,
                      },
                      "name": "seed",
                      "start": Position {
                        "character": 23,
                        "line": 27,
                      },
                      "type": "Identifier",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 13,
                        "line": 27,
                      },
                      "name": "pool",
                      "start": Position {
                        "character": 9,
                        "line": 27,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 23,
                      "line": 27,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 22,
                        "line": 27,
                      },
                      "name": "hasIndex",
                      "start": Position {
                        "character": 14,
                        "line": 27,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 13,
                      "line": 27,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 29,
                    "line": 27,
                  },
                  "start": Position {
                    "character": 22,
                    "line": 27,
                  },
                  "type": "CallExpression",
                },
                "end": Position {
                  "character": 11,
                  "line": 34,
                },
                "start": Position {
                  "character": 5,
                  "line": 27,
                },
                "type": "IfClause",
              },
            ],
            "end": Position {
              "character": 11,
              "line": 34,
            },
            "start": Position {
              "character": 5,
              "line": 27,
            },
            "type": "IfStatement",
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 32,
              "line": 36,
            },
            "init": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 31,
                    "line": 36,
                  },
                  "name": "seed",
                  "start": Position {
                    "character": 27,
                    "line": 36,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 17,
                    "line": 36,
                  },
                  "name": "me",
                  "start": Position {
                    "character": 15,
                    "line": 36,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 27,
                  "line": 36,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 36,
                  },
                  "name": "calcSeed",
                  "start": Position {
                    "character": 18,
                    "line": 36,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 17,
                  "line": 36,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 32,
                "line": 36,
              },
              "start": Position {
                "character": 26,
                "line": 36,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 36,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 12,
                "line": 36,
              },
              "name": "seedVal",
              "start": Position {
                "character": 5,
                "line": 36,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 52,
              "line": 38,
            },
            "init": ASTCallExpression {
              "arguments": Array [
                ASTEvaluationExpression {
                  "end": Position {
                    "character": 52,
                    "line": 38,
                  },
                  "left": ASTEvaluationExpression {
                    "end": Position {
                      "character": 45,
                      "line": 38,
                    },
                    "left": ASTCallExpression {
                      "arguments": Array [
                        ASTIdentifier {
                          "end": Position {
                            "character": 29,
                            "line": 38,
                          },
                          "name": "seedVal",
                          "start": Position {
                            "character": 22,
                            "line": 38,
                          },
                          "type": "Identifier",
                        },
                      ],
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 21,
                          "line": 38,
                        },
                        "name": "rnd",
                        "start": Position {
                          "character": 18,
                          "line": 38,
                        },
                        "type": "Identifier",
                      },
                      "end": Position {
                        "character": 32,
                        "line": 38,
                      },
                      "start": Position {
                        "character": 21,
                        "line": 38,
                      },
                      "type": "CallExpression",
                    },
                    "operator": "*",
                    "right": ASTEvaluationExpression {
                      "end": Position {
                        "character": 44,
                        "line": 38,
                      },
                      "left": ASTIdentifier {
                        "end": Position {
                          "character": 37,
                          "line": 38,
                        },
                        "name": "max",
                        "start": Position {
                          "character": 34,
                          "line": 38,
                        },
                        "type": "Identifier",
                      },
                      "operator": "-",
                      "right": ASTIdentifier {
                        "end": Position {
                          "character": 43,
                          "line": 38,
                        },
                        "name": "min",
                        "start": Position {
                          "character": 40,
                          "line": 38,
                        },
                        "type": "Identifier",
                      },
                      "start": Position {
                        "character": 38,
                        "line": 38,
                      },
                      "type": "BinaryExpression",
                    },
                    "start": Position {
                      "character": 31,
                      "line": 38,
                    },
                    "type": "BinaryExpression",
                  },
                  "operator": "+",
                  "right": ASTIdentifier {
                    "end": Position {
                      "character": 51,
                      "line": 38,
                    },
                    "name": "min",
                    "start": Position {
                      "character": 48,
                      "line": 38,
                    },
                    "type": "Identifier",
                  },
                  "start": Position {
                    "character": 46,
                    "line": 38,
                  },
                  "type": "BinaryExpression",
                },
              ],
              "base": ASTIdentifier {
                "end": Position {
                  "character": 16,
                  "line": 38,
                },
                "name": "floor",
                "start": Position {
                  "character": 11,
                  "line": 38,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 52,
                "line": 38,
              },
              "start": Position {
                "character": 16,
                "line": 38,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 38,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 8,
                "line": 38,
              },
              "name": "val",
              "start": Position {
                "character": 5,
                "line": 38,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 45,
              "line": 39,
            },
            "init": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 39,
                    "line": 39,
                  },
                  "name": "seedVal",
                  "start": Position {
                    "character": 32,
                    "line": 39,
                  },
                  "type": "Identifier",
                },
                ASTIdentifier {
                  "end": Position {
                    "character": 44,
                    "line": 39,
                  },
                  "name": "val",
                  "start": Position {
                    "character": 41,
                    "line": 39,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 20,
                    "line": 39,
                  },
                  "name": "me",
                  "start": Position {
                    "character": 18,
                    "line": 39,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 32,
                  "line": 39,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 31,
                    "line": 39,
                  },
                  "name": "createPool",
                  "start": Position {
                    "character": 21,
                    "line": 39,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 20,
                  "line": 39,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 45,
                "line": 39,
              },
              "start": Position {
                "character": 31,
                "line": 39,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 39,
            },
            "type": "AssignmentStatement",
            "variable": ASTIndexExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 9,
                  "line": 39,
                },
                "name": "pool",
                "start": Position {
                  "character": 5,
                  "line": 39,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 17,
                "line": 39,
              },
              "index": ASTIdentifier {
                "end": Position {
                  "character": 14,
                  "line": 39,
                },
                "name": "seed",
                "start": Position {
                  "character": 10,
                  "line": 39,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 10,
                "line": 39,
              },
              "type": "IndexExpression",
            },
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 15,
                "line": 41,
              },
              "name": "val",
              "start": Position {
                "character": 12,
                "line": 41,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 42,
            },
            "start": Position {
              "character": 5,
              "line": 41,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 42,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 26,
              "line": 22,
            },
            "name": "min",
            "start": Position {
              "character": 23,
              "line": 22,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 31,
              "line": 22,
            },
            "name": "max",
            "start": Position {
              "character": 28,
              "line": 22,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 37,
              "line": 22,
            },
            "name": "seed",
            "start": Position {
              "character": 33,
              "line": 22,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 42,
              "line": 22,
            },
            "name": "inc",
            "start": Position {
              "character": 39,
              "line": 22,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 14,
          "line": 22,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 22,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 22,
          },
          "name": "Random",
          "start": Position {
            "character": 1,
            "line": 22,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 13,
          "line": 22,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 11,
            "line": 22,
          },
          "name": "gen",
          "start": Position {
            "character": 8,
            "line": 22,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 22,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 55,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 45,
            },
            "init": ASTIdentifier {
              "end": Position {
                "character": 14,
                "line": 45,
              },
              "name": "self",
              "start": Position {
                "character": 10,
                "line": 45,
              },
              "type": "Identifier",
            },
            "start": Position {
              "character": 5,
              "line": 45,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 7,
                "line": 45,
              },
              "name": "me",
              "start": Position {
                "character": 5,
                "line": 45,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 14,
              "line": 46,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 14,
                "line": 46,
              },
              "raw": "0",
              "start": Position {
                "character": 13,
                "line": 46,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 46,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 46,
              },
              "name": "index",
              "start": Position {
                "character": 5,
                "line": 46,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 16,
              "line": 47,
            },
            "init": ASTListConstructorExpression {
              "end": Position {
                "character": 16,
                "line": 47,
              },
              "fields": Array [],
              "start": Position {
                "character": 14,
                "line": 47,
              },
              "type": "ListConstructorExpression",
            },
            "start": Position {
              "character": 5,
              "line": 47,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 47,
              },
              "name": "result",
              "start": Position {
                "character": 5,
                "line": 47,
              },
              "type": "Identifier",
            },
          },
          ASTWhileStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 38,
                  "line": 49,
                },
                "init": ASTCallExpression {
                  "arguments": Array [
                    ASTIdentifier {
                      "end": Position {
                        "character": 26,
                        "line": 49,
                      },
                      "name": "min",
                      "start": Position {
                        "character": 23,
                        "line": 49,
                      },
                      "type": "Identifier",
                    },
                    ASTIdentifier {
                      "end": Position {
                        "character": 31,
                        "line": 49,
                      },
                      "name": "max",
                      "start": Position {
                        "character": 28,
                        "line": 49,
                      },
                      "type": "Identifier",
                    },
                    ASTIdentifier {
                      "end": Position {
                        "character": 37,
                        "line": 49,
                      },
                      "name": "seed",
                      "start": Position {
                        "character": 33,
                        "line": 49,
                      },
                      "type": "Identifier",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 18,
                        "line": 49,
                      },
                      "name": "me",
                      "start": Position {
                        "character": 16,
                        "line": 49,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 23,
                      "line": 49,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 22,
                        "line": 49,
                      },
                      "name": "gen",
                      "start": Position {
                        "character": 19,
                        "line": 49,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 18,
                      "line": 49,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 38,
                    "line": 49,
                  },
                  "start": Position {
                    "character": 22,
                    "line": 49,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 49,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 13,
                    "line": 49,
                  },
                  "name": "temp",
                  "start": Position {
                    "character": 9,
                    "line": 49,
                  },
                  "type": "Identifier",
                },
              },
              ASTCallStatement {
                "end": Position {
                  "character": 27,
                  "line": 50,
                },
                "expression": ASTCallExpression {
                  "arguments": Array [
                    ASTIdentifier {
                      "end": Position {
                        "character": 25,
                        "line": 50,
                      },
                      "name": "temp",
                      "start": Position {
                        "character": 21,
                        "line": 50,
                      },
                      "type": "Identifier",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 15,
                        "line": 50,
                      },
                      "name": "result",
                      "start": Position {
                        "character": 9,
                        "line": 50,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 21,
                      "line": 50,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 20,
                        "line": 50,
                      },
                      "name": "push",
                      "start": Position {
                        "character": 16,
                        "line": 50,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 15,
                      "line": 50,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 27,
                    "line": 50,
                  },
                  "start": Position {
                    "character": 20,
                    "line": 50,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 50,
                },
                "type": "CallStatement",
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 26,
                  "line": 51,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 26,
                    "line": 51,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 22,
                      "line": 51,
                    },
                    "name": "index",
                    "start": Position {
                      "character": 17,
                      "line": 51,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 26,
                      "line": 51,
                    },
                    "raw": "1",
                    "start": Position {
                      "character": 25,
                      "line": 51,
                    },
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                  "start": Position {
                    "character": 23,
                    "line": 51,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 51,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 14,
                    "line": 51,
                  },
                  "name": "index",
                  "start": Position {
                    "character": 9,
                    "line": 51,
                  },
                  "type": "Identifier",
                },
              },
            ],
            "condition": ASTEvaluationExpression {
              "end": Position {
                "character": 25,
                "line": 48,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 16,
                  "line": 48,
                },
                "name": "index",
                "start": Position {
                  "character": 11,
                  "line": 48,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": ASTIdentifier {
                "end": Position {
                  "character": 25,
                  "line": 48,
                },
                "name": "amount",
                "start": Position {
                  "character": 19,
                  "line": 48,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 17,
                "line": 48,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 14,
              "line": 52,
            },
            "start": Position {
              "character": 5,
              "line": 48,
            },
            "type": "WhileStatement",
          },
          ASTIfStatement {
            "clauses": Array [
              ASTIfClause {
                "body": Array [
                  ASTCallStatement {
                    "end": Position {
                      "character": 52,
                      "line": 53,
                    },
                    "expression": ASTCallExpression {
                      "arguments": Array [
                        ASTIdentifier {
                          "end": Position {
                            "character": 51,
                            "line": 53,
                          },
                          "name": "seed",
                          "start": Position {
                            "character": 47,
                            "line": 53,
                          },
                          "type": "Identifier",
                        },
                      ],
                      "base": ASTMemberExpression {
                        "base": ASTMemberExpression {
                          "base": ASTIdentifier {
                            "end": Position {
                              "character": 34,
                              "line": 53,
                            },
                            "name": "me",
                            "start": Position {
                              "character": 32,
                              "line": 53,
                            },
                            "type": "Identifier",
                          },
                          "end": Position {
                            "character": 40,
                            "line": 53,
                          },
                          "identifier": ASTIdentifier {
                            "end": Position {
                              "character": 39,
                              "line": 53,
                            },
                            "name": "pool",
                            "start": Position {
                              "character": 35,
                              "line": 53,
                            },
                            "type": "Identifier",
                          },
                          "indexer": ".",
                          "start": Position {
                            "character": 34,
                            "line": 53,
                          },
                          "type": "MemberExpression",
                        },
                        "end": Position {
                          "character": 47,
                          "line": 53,
                        },
                        "identifier": ASTIdentifier {
                          "end": Position {
                            "character": 46,
                            "line": 53,
                          },
                          "name": "remove",
                          "start": Position {
                            "character": 40,
                            "line": 53,
                          },
                          "type": "Identifier",
                        },
                        "indexer": ".",
                        "start": Position {
                          "character": 39,
                          "line": 53,
                        },
                        "type": "MemberExpression",
                      },
                      "end": Position {
                        "character": 52,
                        "line": 53,
                      },
                      "start": Position {
                        "character": 46,
                        "line": 53,
                      },
                      "type": "CallExpression",
                    },
                    "start": Position {
                      "character": 32,
                      "line": 53,
                    },
                    "type": "CallStatement",
                  },
                ],
                "condition": ASTEvaluationExpression {
                  "end": Position {
                    "character": 26,
                    "line": 53,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 17,
                      "line": 53,
                    },
                    "name": "keepPool",
                    "start": Position {
                      "character": 9,
                      "line": 53,
                    },
                    "type": "Identifier",
                  },
                  "operator": "!=",
                  "right": ASTLiteral {
                    "end": Position {
                      "character": 25,
                      "line": 53,
                    },
                    "raw": "true",
                    "start": Position {
                      "character": 21,
                      "line": 53,
                    },
                    "type": "BooleanLiteral",
                    "value": true,
                  },
                  "start": Position {
                    "character": 18,
                    "line": 53,
                  },
                  "type": "BinaryExpression",
                },
                "end": Position {
                  "character": 52,
                  "line": 53,
                },
                "start": Position {
                  "character": 5,
                  "line": 53,
                },
                "type": "IfShortcutClause",
              },
            ],
            "end": Position {
              "character": 52,
              "line": 53,
            },
            "start": Position {
              "character": 5,
              "line": 53,
            },
            "type": "IfShortcutStatement",
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 18,
                "line": 54,
              },
              "name": "result",
              "start": Position {
                "character": 12,
                "line": 54,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 55,
            },
            "start": Position {
              "character": 5,
              "line": 54,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 55,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 26,
              "line": 44,
            },
            "name": "min",
            "start": Position {
              "character": 23,
              "line": 44,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 31,
              "line": 44,
            },
            "name": "max",
            "start": Position {
              "character": 28,
              "line": 44,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 37,
              "line": 44,
            },
            "name": "seed",
            "start": Position {
              "character": 33,
              "line": 44,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 45,
              "line": 44,
            },
            "name": "amount",
            "start": Position {
              "character": 39,
              "line": 44,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 55,
              "line": 44,
            },
            "name": "keepPool",
            "start": Position {
              "character": 47,
              "line": 44,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 14,
          "line": 44,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 44,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 44,
          },
          "name": "Random",
          "start": Position {
            "character": 1,
            "line": 44,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 13,
          "line": 44,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 11,
            "line": 44,
          },
          "name": "seq",
          "start": Position {
            "character": 8,
            "line": 44,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 44,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 59,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTCallExpression {
              "arguments": Array [
                ASTIdentifier {
                  "end": Position {
                    "character": 24,
                    "line": 58,
                  },
                  "name": "min",
                  "start": Position {
                    "character": 21,
                    "line": 58,
                  },
                  "type": "Identifier",
                },
                ASTIdentifier {
                  "end": Position {
                    "character": 29,
                    "line": 58,
                  },
                  "name": "max",
                  "start": Position {
                    "character": 26,
                    "line": 58,
                  },
                  "type": "Identifier",
                },
              ],
              "base": ASTMemberExpression {
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 16,
                    "line": 58,
                  },
                  "name": "self",
                  "start": Position {
                    "character": 12,
                    "line": 58,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 21,
                  "line": 58,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 20,
                    "line": 58,
                  },
                  "name": "gen",
                  "start": Position {
                    "character": 17,
                    "line": 58,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 16,
                  "line": 58,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 30,
                "line": 58,
              },
              "start": Position {
                "character": 20,
                "line": 58,
              },
              "type": "CallExpression",
            },
            "end": Position {
              "character": 13,
              "line": 59,
            },
            "start": Position {
              "character": 5,
              "line": 58,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 59,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 26,
              "line": 57,
            },
            "name": "min",
            "start": Position {
              "character": 23,
              "line": 57,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 31,
              "line": 57,
            },
            "name": "max",
            "start": Position {
              "character": 28,
              "line": 57,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 14,
          "line": 57,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 57,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 7,
            "line": 57,
          },
          "name": "Random",
          "start": Position {
            "character": 1,
            "line": 57,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 13,
          "line": 57,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 11,
            "line": 57,
          },
          "name": "get",
          "start": Position {
            "character": 8,
            "line": 57,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 7,
          "line": 57,
        },
        "type": "MemberExpression",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 27,
        "line": 61,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTCallExpression {
            "arguments": Array [
              ASTLiteral {
                "end": Position {
                  "character": 21,
                  "line": 61,
                },
                "raw": "100",
                "start": Position {
                  "character": 18,
                  "line": 61,
                },
                "type": "NumericLiteral",
                "value": 100,
              },
              ASTLiteral {
                "end": Position {
                  "character": 25,
                  "line": 61,
                },
                "raw": "500",
                "start": Position {
                  "character": 22,
                  "line": 61,
                },
                "type": "NumericLiteral",
                "value": 500,
              },
            ],
            "base": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 13,
                  "line": 61,
                },
                "name": "Random",
                "start": Position {
                  "character": 7,
                  "line": 61,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 18,
                "line": 61,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 17,
                  "line": 61,
                },
                "name": "get",
                "start": Position {
                  "character": 14,
                  "line": 61,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 13,
                "line": 61,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 27,
              "line": 61,
            },
            "start": Position {
              "character": 17,
              "line": 61,
            },
            "type": "CallExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 61,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 61,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 27,
          "line": 61,
        },
        "start": Position {
          "character": 6,
          "line": 61,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 61,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 39,
        "line": 62,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTCallExpression {
            "arguments": Array [
              ASTLiteral {
                "end": Position {
                  "character": 21,
                  "line": 62,
                },
                "raw": "100",
                "start": Position {
                  "character": 18,
                  "line": 62,
                },
                "type": "NumericLiteral",
                "value": 100,
              },
              ASTLiteral {
                "end": Position {
                  "character": 25,
                  "line": 62,
                },
                "raw": "500",
                "start": Position {
                  "character": 22,
                  "line": 62,
                },
                "type": "NumericLiteral",
                "value": 500,
              },
              ASTLiteral {
                "end": Position {
                  "character": 33,
                  "line": 62,
                },
                "raw": "\\"test\\"",
                "start": Position {
                  "character": 27,
                  "line": 62,
                },
                "type": "StringLiteral",
                "value": "test",
              },
              ASTLiteral {
                "end": Position {
                  "character": 37,
                  "line": 62,
                },
                "raw": "10",
                "start": Position {
                  "character": 35,
                  "line": 62,
                },
                "type": "NumericLiteral",
                "value": 10,
              },
            ],
            "base": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 13,
                  "line": 62,
                },
                "name": "Random",
                "start": Position {
                  "character": 7,
                  "line": 62,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 18,
                "line": 62,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 17,
                  "line": 62,
                },
                "name": "seq",
                "start": Position {
                  "character": 14,
                  "line": 62,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 13,
                "line": 62,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 39,
              "line": 62,
            },
            "start": Position {
              "character": 17,
              "line": 62,
            },
            "type": "CallExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 62,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 62,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 39,
          "line": 62,
        },
        "start": Position {
          "character": 6,
          "line": 62,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 62,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 39,
    "line": 62,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 30,
        "line": 4,
      },
      "raw": "\\"random\\"",
      "start": Position {
        "character": 22,
        "line": 4,
      },
      "type": "StringLiteral",
      "value": "random",
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 7,
      },
      "raw": "\\"seed\\"",
      "start": Position {
        "character": 14,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "seed",
    },
    ASTLiteral {
      "end": Position {
        "character": 35,
        "line": 7,
      },
      "raw": "\\"value\\"",
      "start": Position {
        "character": 28,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "value",
    },
    ASTLiteral {
      "end": Position {
        "character": 54,
        "line": 7,
      },
      "raw": "\\"generation\\"",
      "start": Position {
        "character": 42,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "generation",
    },
    ASTLiteral {
      "end": Position {
        "character": 57,
        "line": 7,
      },
      "raw": "0",
      "start": Position {
        "character": 56,
        "line": 7,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 11,
      },
      "raw": "0",
      "start": Position {
        "character": 15,
        "line": 11,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 22,
        "line": 16,
      },
      "raw": "1",
      "start": Position {
        "character": 21,
        "line": 16,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 20,
        "line": 25,
      },
      "raw": "null",
      "start": Position {
        "character": 16,
        "line": 25,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 25,
      },
      "raw": "true",
      "start": Position {
        "character": 33,
        "line": 25,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 26,
      },
      "raw": "null",
      "start": Position {
        "character": 17,
        "line": 26,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 42,
        "line": 30,
      },
      "raw": "1",
      "start": Position {
        "character": 41,
        "line": 30,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 46,
      },
      "raw": "0",
      "start": Position {
        "character": 13,
        "line": 46,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 26,
        "line": 51,
      },
      "raw": "1",
      "start": Position {
        "character": 25,
        "line": 51,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 53,
      },
      "raw": "true",
      "start": Position {
        "character": 21,
        "line": 53,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 61,
      },
      "raw": "100",
      "start": Position {
        "character": 18,
        "line": 61,
      },
      "type": "NumericLiteral",
      "value": 100,
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 61,
      },
      "raw": "500",
      "start": Position {
        "character": 22,
        "line": 61,
      },
      "type": "NumericLiteral",
      "value": 500,
    },
    ASTLiteral {
      "end": Position {
        "character": 21,
        "line": 62,
      },
      "raw": "100",
      "start": Position {
        "character": 18,
        "line": 62,
      },
      "type": "NumericLiteral",
      "value": 100,
    },
    ASTLiteral {
      "end": Position {
        "character": 25,
        "line": 62,
      },
      "raw": "500",
      "start": Position {
        "character": 22,
        "line": 62,
      },
      "type": "NumericLiteral",
      "value": 500,
    },
    ASTLiteral {
      "end": Position {
        "character": 33,
        "line": 62,
      },
      "raw": "\\"test\\"",
      "start": Position {
        "character": 27,
        "line": 62,
      },
      "type": "StringLiteral",
      "value": "test",
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 62,
      },
      "raw": "10",
      "start": Position {
        "character": 35,
        "line": 62,
      },
      "type": "NumericLiteral",
      "value": 10,
    },
  ],
  "namespaces": Set {
    "Random",
    "pool",
    "defaultSeed",
    "createPool",
    "seed",
    "val",
    "calcSeed",
    "seedVal",
    "pos",
    "len",
    "code",
    "gen",
    "min",
    "max",
    "inc",
    "me",
    "ps",
    "value",
    "generation",
    "seq",
    "amount",
    "keepPool",
    "index",
    "result",
    "temp",
    "push",
    "remove",
    "get",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts scuffed-if-clauses.src 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 33,
                "line": 1,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 1,
                    },
                    "raw": "\\"true - 1\\"",
                    "start": Position {
                      "character": 22,
                      "line": 1,
                    },
                    "type": "StringLiteral",
                    "value": "true - 1",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 1,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 16,
                    "line": 1,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 33,
                  "line": 1,
                },
                "start": Position {
                  "character": 21,
                  "line": 1,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 16,
                "line": 1,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 1,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 1,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 33,
            "line": 1,
          },
          "start": Position {
            "character": 1,
            "line": 1,
          },
          "type": "IfShortcutClause",
        },
      ],
      "end": Position {
        "character": 33,
        "line": 1,
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "IfShortcutStatement",
    },
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 33,
                "line": 5,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 5,
                    },
                    "raw": "\\"true - 2\\"",
                    "start": Position {
                      "character": 22,
                      "line": 5,
                    },
                    "type": "StringLiteral",
                    "value": "true - 2",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 5,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 16,
                    "line": 5,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 33,
                  "line": 5,
                },
                "start": Position {
                  "character": 21,
                  "line": 5,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 16,
                "line": 5,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 5,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 5,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 33,
            "line": 5,
          },
          "start": Position {
            "character": 1,
            "line": 5,
          },
          "type": "IfShortcutClause",
        },
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 38,
                "line": 6,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 37,
                      "line": 6,
                    },
                    "raw": "\\"true - 2\\"",
                    "start": Position {
                      "character": 27,
                      "line": 6,
                    },
                    "type": "StringLiteral",
                    "value": "true - 2",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 6,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 21,
                    "line": 6,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 38,
                  "line": 6,
                },
                "start": Position {
                  "character": 26,
                  "line": 6,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 21,
                "line": 6,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 14,
              "line": 6,
            },
            "raw": "true",
            "start": Position {
              "character": 10,
              "line": 6,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 38,
            "line": 6,
          },
          "start": Position {
            "character": 9,
            "line": 6,
          },
          "type": "ElseifShortcutClause",
        },
      ],
      "end": Position {
        "character": 38,
        "line": 6,
      },
      "start": Position {
        "character": 1,
        "line": 5,
      },
      "type": "IfShortcutStatement",
    },
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 33,
                "line": 9,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 9,
                    },
                    "raw": "\\"true - 3\\"",
                    "start": Position {
                      "character": 22,
                      "line": 9,
                    },
                    "type": "StringLiteral",
                    "value": "true - 3",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 9,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 16,
                    "line": 9,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 33,
                  "line": 9,
                },
                "start": Position {
                  "character": 21,
                  "line": 9,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 16,
                "line": 9,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 9,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 9,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 33,
            "line": 9,
          },
          "start": Position {
            "character": 1,
            "line": 9,
          },
          "type": "IfShortcutClause",
        },
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 38,
                "line": 10,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 37,
                      "line": 10,
                    },
                    "raw": "\\"true - 3\\"",
                    "start": Position {
                      "character": 27,
                      "line": 10,
                    },
                    "type": "StringLiteral",
                    "value": "true - 3",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 10,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 21,
                    "line": 10,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 38,
                  "line": 10,
                },
                "start": Position {
                  "character": 26,
                  "line": 10,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 21,
                "line": 10,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 14,
              "line": 10,
            },
            "raw": "true",
            "start": Position {
              "character": 10,
              "line": 10,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 38,
            "line": 10,
          },
          "start": Position {
            "character": 9,
            "line": 10,
          },
          "type": "ElseifShortcutClause",
        },
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 38,
                "line": 11,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 37,
                      "line": 11,
                    },
                    "raw": "\\"true - 3\\"",
                    "start": Position {
                      "character": 27,
                      "line": 11,
                    },
                    "type": "StringLiteral",
                    "value": "true - 3",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 11,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 21,
                    "line": 11,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 38,
                  "line": 11,
                },
                "start": Position {
                  "character": 26,
                  "line": 11,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 21,
                "line": 11,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 14,
              "line": 11,
            },
            "raw": "true",
            "start": Position {
              "character": 10,
              "line": 11,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 38,
            "line": 11,
          },
          "start": Position {
            "character": 9,
            "line": 11,
          },
          "type": "ElseifShortcutClause",
        },
      ],
      "end": Position {
        "character": 38,
        "line": 11,
      },
      "start": Position {
        "character": 1,
        "line": 9,
      },
      "type": "IfShortcutStatement",
    },
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 33,
                "line": 15,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 15,
                    },
                    "raw": "\\"true - 4\\"",
                    "start": Position {
                      "character": 22,
                      "line": 15,
                    },
                    "type": "StringLiteral",
                    "value": "true - 4",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 15,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 16,
                    "line": 15,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 33,
                  "line": 15,
                },
                "start": Position {
                  "character": 21,
                  "line": 15,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 16,
                "line": 15,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 15,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 15,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 33,
            "line": 15,
          },
          "start": Position {
            "character": 1,
            "line": 15,
          },
          "type": "IfShortcutClause",
        },
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 38,
                "line": 16,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 37,
                      "line": 16,
                    },
                    "raw": "\\"true - 4\\"",
                    "start": Position {
                      "character": 27,
                      "line": 16,
                    },
                    "type": "StringLiteral",
                    "value": "true - 4",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 16,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 21,
                    "line": 16,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 38,
                  "line": 16,
                },
                "start": Position {
                  "character": 26,
                  "line": 16,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 21,
                "line": 16,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 14,
              "line": 16,
            },
            "raw": "true",
            "start": Position {
              "character": 10,
              "line": 16,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 38,
            "line": 16,
          },
          "start": Position {
            "character": 9,
            "line": 16,
          },
          "type": "ElseifShortcutClause",
        },
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 38,
                "line": 17,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 37,
                      "line": 17,
                    },
                    "raw": "\\"true - 4\\"",
                    "start": Position {
                      "character": 27,
                      "line": 17,
                    },
                    "type": "StringLiteral",
                    "value": "true - 4",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 17,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 21,
                    "line": 17,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 38,
                  "line": 17,
                },
                "start": Position {
                  "character": 26,
                  "line": 17,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 21,
                "line": 17,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 14,
              "line": 17,
            },
            "raw": "true",
            "start": Position {
              "character": 10,
              "line": 17,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 38,
            "line": 17,
          },
          "start": Position {
            "character": 9,
            "line": 17,
          },
          "type": "ElseifShortcutClause",
        },
        ASTElseClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 23,
                "line": 18,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 22,
                      "line": 18,
                    },
                    "raw": "\\"true - 4\\"",
                    "start": Position {
                      "character": 12,
                      "line": 18,
                    },
                    "type": "StringLiteral",
                    "value": "true - 4",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 11,
                    "line": 18,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 6,
                    "line": 18,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 23,
                  "line": 18,
                },
                "start": Position {
                  "character": 11,
                  "line": 18,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 6,
                "line": 18,
              },
              "type": "CallStatement",
            },
          ],
          "end": Position {
            "character": 23,
            "line": 18,
          },
          "start": Position {
            "character": 6,
            "line": 18,
          },
          "type": "ElseShortcutClause",
        },
      ],
      "end": Position {
        "character": 23,
        "line": 18,
      },
      "start": Position {
        "character": 1,
        "line": 15,
      },
      "type": "IfShortcutStatement",
    },
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 33,
                "line": 21,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 21,
                    },
                    "raw": "\\"true - 5\\"",
                    "start": Position {
                      "character": 22,
                      "line": 21,
                    },
                    "type": "StringLiteral",
                    "value": "true - 5",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 21,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 16,
                    "line": 21,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 33,
                  "line": 21,
                },
                "start": Position {
                  "character": 21,
                  "line": 21,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 16,
                "line": 21,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 21,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 21,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 33,
            "line": 21,
          },
          "start": Position {
            "character": 1,
            "line": 21,
          },
          "type": "IfShortcutClause",
        },
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 38,
                "line": 22,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 37,
                      "line": 22,
                    },
                    "raw": "\\"true - 5\\"",
                    "start": Position {
                      "character": 27,
                      "line": 22,
                    },
                    "type": "StringLiteral",
                    "value": "true - 5",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 22,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 21,
                    "line": 22,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 38,
                  "line": 22,
                },
                "start": Position {
                  "character": 26,
                  "line": 22,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 21,
                "line": 22,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 14,
              "line": 22,
            },
            "raw": "true",
            "start": Position {
              "character": 10,
              "line": 22,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 38,
            "line": 22,
          },
          "start": Position {
            "character": 9,
            "line": 22,
          },
          "type": "ElseifShortcutClause",
        },
        ASTElseClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 23,
                "line": 23,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 22,
                      "line": 23,
                    },
                    "raw": "\\"true - 5\\"",
                    "start": Position {
                      "character": 12,
                      "line": 23,
                    },
                    "type": "StringLiteral",
                    "value": "true - 5",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 11,
                    "line": 23,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 6,
                    "line": 23,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 23,
                  "line": 23,
                },
                "start": Position {
                  "character": 11,
                  "line": 23,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 6,
                "line": 23,
              },
              "type": "CallStatement",
            },
          ],
          "end": Position {
            "character": 23,
            "line": 23,
          },
          "start": Position {
            "character": 6,
            "line": 23,
          },
          "type": "ElseShortcutClause",
        },
      ],
      "end": Position {
        "character": 23,
        "line": 23,
      },
      "start": Position {
        "character": 1,
        "line": 21,
      },
      "type": "IfShortcutStatement",
    },
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 33,
                "line": 26,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 26,
                    },
                    "raw": "\\"true - 6\\"",
                    "start": Position {
                      "character": 22,
                      "line": 26,
                    },
                    "type": "StringLiteral",
                    "value": "true - 6",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 26,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 16,
                    "line": 26,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 33,
                  "line": 26,
                },
                "start": Position {
                  "character": 21,
                  "line": 26,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 16,
                "line": 26,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 26,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 26,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 33,
            "line": 26,
          },
          "start": Position {
            "character": 1,
            "line": 26,
          },
          "type": "IfShortcutClause",
        },
        ASTElseClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 23,
                "line": 27,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 22,
                      "line": 27,
                    },
                    "raw": "\\"true - 6\\"",
                    "start": Position {
                      "character": 12,
                      "line": 27,
                    },
                    "type": "StringLiteral",
                    "value": "true - 6",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 11,
                    "line": 27,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 6,
                    "line": 27,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 23,
                  "line": 27,
                },
                "start": Position {
                  "character": 11,
                  "line": 27,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 6,
                "line": 27,
              },
              "type": "CallStatement",
            },
          ],
          "end": Position {
            "character": 23,
            "line": 27,
          },
          "start": Position {
            "character": 6,
            "line": 27,
          },
          "type": "ElseShortcutClause",
        },
      ],
      "end": Position {
        "character": 23,
        "line": 27,
      },
      "start": Position {
        "character": 1,
        "line": 26,
      },
      "type": "IfShortcutStatement",
    },
  ],
  "end": Position {
    "character": 7,
    "line": 28,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 1,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 1,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 1,
      },
      "raw": "\\"true - 1\\"",
      "start": Position {
        "character": 22,
        "line": 1,
      },
      "type": "StringLiteral",
      "value": "true - 1",
    },
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 5,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 5,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 5,
      },
      "raw": "\\"true - 2\\"",
      "start": Position {
        "character": 22,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "true - 2",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 6,
      },
      "raw": "true",
      "start": Position {
        "character": 10,
        "line": 6,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 6,
      },
      "raw": "\\"true - 2\\"",
      "start": Position {
        "character": 27,
        "line": 6,
      },
      "type": "StringLiteral",
      "value": "true - 2",
    },
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 9,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 9,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 9,
      },
      "raw": "\\"true - 3\\"",
      "start": Position {
        "character": 22,
        "line": 9,
      },
      "type": "StringLiteral",
      "value": "true - 3",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 10,
      },
      "raw": "true",
      "start": Position {
        "character": 10,
        "line": 10,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 10,
      },
      "raw": "\\"true - 3\\"",
      "start": Position {
        "character": 27,
        "line": 10,
      },
      "type": "StringLiteral",
      "value": "true - 3",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 11,
      },
      "raw": "true",
      "start": Position {
        "character": 10,
        "line": 11,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 11,
      },
      "raw": "\\"true - 3\\"",
      "start": Position {
        "character": 27,
        "line": 11,
      },
      "type": "StringLiteral",
      "value": "true - 3",
    },
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 15,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 15,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 15,
      },
      "raw": "\\"true - 4\\"",
      "start": Position {
        "character": 22,
        "line": 15,
      },
      "type": "StringLiteral",
      "value": "true - 4",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 16,
      },
      "raw": "true",
      "start": Position {
        "character": 10,
        "line": 16,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 16,
      },
      "raw": "\\"true - 4\\"",
      "start": Position {
        "character": 27,
        "line": 16,
      },
      "type": "StringLiteral",
      "value": "true - 4",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 17,
      },
      "raw": "true",
      "start": Position {
        "character": 10,
        "line": 17,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 17,
      },
      "raw": "\\"true - 4\\"",
      "start": Position {
        "character": 27,
        "line": 17,
      },
      "type": "StringLiteral",
      "value": "true - 4",
    },
    ASTLiteral {
      "end": Position {
        "character": 22,
        "line": 18,
      },
      "raw": "\\"true - 4\\"",
      "start": Position {
        "character": 12,
        "line": 18,
      },
      "type": "StringLiteral",
      "value": "true - 4",
    },
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 21,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 21,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 21,
      },
      "raw": "\\"true - 5\\"",
      "start": Position {
        "character": 22,
        "line": 21,
      },
      "type": "StringLiteral",
      "value": "true - 5",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 22,
      },
      "raw": "true",
      "start": Position {
        "character": 10,
        "line": 22,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 22,
      },
      "raw": "\\"true - 5\\"",
      "start": Position {
        "character": 27,
        "line": 22,
      },
      "type": "StringLiteral",
      "value": "true - 5",
    },
    ASTLiteral {
      "end": Position {
        "character": 22,
        "line": 23,
      },
      "raw": "\\"true - 5\\"",
      "start": Position {
        "character": 12,
        "line": 23,
      },
      "type": "StringLiteral",
      "value": "true - 5",
    },
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 26,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 26,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 26,
      },
      "raw": "\\"true - 6\\"",
      "start": Position {
        "character": 22,
        "line": 26,
      },
      "type": "StringLiteral",
      "value": "true - 6",
    },
    ASTLiteral {
      "end": Position {
        "character": 22,
        "line": 27,
      },
      "raw": "\\"true - 6\\"",
      "start": Position {
        "character": 12,
        "line": 27,
      },
      "type": "StringLiteral",
      "value": "true - 6",
    },
  ],
  "namespaces": Set {},
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts scuffed-if-clauses.src unsafe 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 33,
                "line": 1,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 1,
                    },
                    "raw": "\\"true - 1\\"",
                    "start": Position {
                      "character": 22,
                      "line": 1,
                    },
                    "type": "StringLiteral",
                    "value": "true - 1",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 1,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 16,
                    "line": 1,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 33,
                  "line": 1,
                },
                "start": Position {
                  "character": 21,
                  "line": 1,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 16,
                "line": 1,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 1,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 1,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 33,
            "line": 1,
          },
          "start": Position {
            "character": 1,
            "line": 1,
          },
          "type": "IfShortcutClause",
        },
      ],
      "end": Position {
        "character": 33,
        "line": 1,
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "IfShortcutStatement",
    },
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 33,
                "line": 5,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 5,
                    },
                    "raw": "\\"true - 2\\"",
                    "start": Position {
                      "character": 22,
                      "line": 5,
                    },
                    "type": "StringLiteral",
                    "value": "true - 2",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 5,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 16,
                    "line": 5,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 33,
                  "line": 5,
                },
                "start": Position {
                  "character": 21,
                  "line": 5,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 16,
                "line": 5,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 5,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 5,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 33,
            "line": 5,
          },
          "start": Position {
            "character": 1,
            "line": 5,
          },
          "type": "IfShortcutClause",
        },
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 38,
                "line": 6,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 37,
                      "line": 6,
                    },
                    "raw": "\\"true - 2\\"",
                    "start": Position {
                      "character": 27,
                      "line": 6,
                    },
                    "type": "StringLiteral",
                    "value": "true - 2",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 6,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 21,
                    "line": 6,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 38,
                  "line": 6,
                },
                "start": Position {
                  "character": 26,
                  "line": 6,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 21,
                "line": 6,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 14,
              "line": 6,
            },
            "raw": "true",
            "start": Position {
              "character": 10,
              "line": 6,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 38,
            "line": 6,
          },
          "start": Position {
            "character": 9,
            "line": 6,
          },
          "type": "ElseifShortcutClause",
        },
      ],
      "end": Position {
        "character": 38,
        "line": 6,
      },
      "start": Position {
        "character": 1,
        "line": 5,
      },
      "type": "IfShortcutStatement",
    },
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 33,
                "line": 9,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 9,
                    },
                    "raw": "\\"true - 3\\"",
                    "start": Position {
                      "character": 22,
                      "line": 9,
                    },
                    "type": "StringLiteral",
                    "value": "true - 3",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 9,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 16,
                    "line": 9,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 33,
                  "line": 9,
                },
                "start": Position {
                  "character": 21,
                  "line": 9,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 16,
                "line": 9,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 9,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 9,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 33,
            "line": 9,
          },
          "start": Position {
            "character": 1,
            "line": 9,
          },
          "type": "IfShortcutClause",
        },
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 38,
                "line": 10,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 37,
                      "line": 10,
                    },
                    "raw": "\\"true - 3\\"",
                    "start": Position {
                      "character": 27,
                      "line": 10,
                    },
                    "type": "StringLiteral",
                    "value": "true - 3",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 10,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 21,
                    "line": 10,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 38,
                  "line": 10,
                },
                "start": Position {
                  "character": 26,
                  "line": 10,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 21,
                "line": 10,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 14,
              "line": 10,
            },
            "raw": "true",
            "start": Position {
              "character": 10,
              "line": 10,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 38,
            "line": 10,
          },
          "start": Position {
            "character": 9,
            "line": 10,
          },
          "type": "ElseifShortcutClause",
        },
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 38,
                "line": 11,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 37,
                      "line": 11,
                    },
                    "raw": "\\"true - 3\\"",
                    "start": Position {
                      "character": 27,
                      "line": 11,
                    },
                    "type": "StringLiteral",
                    "value": "true - 3",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 11,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 21,
                    "line": 11,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 38,
                  "line": 11,
                },
                "start": Position {
                  "character": 26,
                  "line": 11,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 21,
                "line": 11,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 14,
              "line": 11,
            },
            "raw": "true",
            "start": Position {
              "character": 10,
              "line": 11,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 38,
            "line": 11,
          },
          "start": Position {
            "character": 9,
            "line": 11,
          },
          "type": "ElseifShortcutClause",
        },
      ],
      "end": Position {
        "character": 38,
        "line": 11,
      },
      "start": Position {
        "character": 1,
        "line": 9,
      },
      "type": "IfShortcutStatement",
    },
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 33,
                "line": 15,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 15,
                    },
                    "raw": "\\"true - 4\\"",
                    "start": Position {
                      "character": 22,
                      "line": 15,
                    },
                    "type": "StringLiteral",
                    "value": "true - 4",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 15,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 16,
                    "line": 15,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 33,
                  "line": 15,
                },
                "start": Position {
                  "character": 21,
                  "line": 15,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 16,
                "line": 15,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 15,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 15,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 33,
            "line": 15,
          },
          "start": Position {
            "character": 1,
            "line": 15,
          },
          "type": "IfShortcutClause",
        },
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 38,
                "line": 16,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 37,
                      "line": 16,
                    },
                    "raw": "\\"true - 4\\"",
                    "start": Position {
                      "character": 27,
                      "line": 16,
                    },
                    "type": "StringLiteral",
                    "value": "true - 4",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 16,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 21,
                    "line": 16,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 38,
                  "line": 16,
                },
                "start": Position {
                  "character": 26,
                  "line": 16,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 21,
                "line": 16,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 14,
              "line": 16,
            },
            "raw": "true",
            "start": Position {
              "character": 10,
              "line": 16,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 38,
            "line": 16,
          },
          "start": Position {
            "character": 9,
            "line": 16,
          },
          "type": "ElseifShortcutClause",
        },
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 38,
                "line": 17,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 37,
                      "line": 17,
                    },
                    "raw": "\\"true - 4\\"",
                    "start": Position {
                      "character": 27,
                      "line": 17,
                    },
                    "type": "StringLiteral",
                    "value": "true - 4",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 17,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 21,
                    "line": 17,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 38,
                  "line": 17,
                },
                "start": Position {
                  "character": 26,
                  "line": 17,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 21,
                "line": 17,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 14,
              "line": 17,
            },
            "raw": "true",
            "start": Position {
              "character": 10,
              "line": 17,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 38,
            "line": 17,
          },
          "start": Position {
            "character": 9,
            "line": 17,
          },
          "type": "ElseifShortcutClause",
        },
        ASTElseClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 23,
                "line": 18,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 22,
                      "line": 18,
                    },
                    "raw": "\\"true - 4\\"",
                    "start": Position {
                      "character": 12,
                      "line": 18,
                    },
                    "type": "StringLiteral",
                    "value": "true - 4",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 11,
                    "line": 18,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 6,
                    "line": 18,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 23,
                  "line": 18,
                },
                "start": Position {
                  "character": 11,
                  "line": 18,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 6,
                "line": 18,
              },
              "type": "CallStatement",
            },
          ],
          "end": Position {
            "character": 23,
            "line": 18,
          },
          "start": Position {
            "character": 6,
            "line": 18,
          },
          "type": "ElseShortcutClause",
        },
      ],
      "end": Position {
        "character": 23,
        "line": 18,
      },
      "start": Position {
        "character": 1,
        "line": 15,
      },
      "type": "IfShortcutStatement",
    },
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 33,
                "line": 21,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 21,
                    },
                    "raw": "\\"true - 5\\"",
                    "start": Position {
                      "character": 22,
                      "line": 21,
                    },
                    "type": "StringLiteral",
                    "value": "true - 5",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 21,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 16,
                    "line": 21,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 33,
                  "line": 21,
                },
                "start": Position {
                  "character": 21,
                  "line": 21,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 16,
                "line": 21,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 21,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 21,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 33,
            "line": 21,
          },
          "start": Position {
            "character": 1,
            "line": 21,
          },
          "type": "IfShortcutClause",
        },
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 38,
                "line": 22,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 37,
                      "line": 22,
                    },
                    "raw": "\\"true - 5\\"",
                    "start": Position {
                      "character": 27,
                      "line": 22,
                    },
                    "type": "StringLiteral",
                    "value": "true - 5",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 26,
                    "line": 22,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 21,
                    "line": 22,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 38,
                  "line": 22,
                },
                "start": Position {
                  "character": 26,
                  "line": 22,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 21,
                "line": 22,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 14,
              "line": 22,
            },
            "raw": "true",
            "start": Position {
              "character": 10,
              "line": 22,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 38,
            "line": 22,
          },
          "start": Position {
            "character": 9,
            "line": 22,
          },
          "type": "ElseifShortcutClause",
        },
        ASTElseClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 23,
                "line": 23,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 22,
                      "line": 23,
                    },
                    "raw": "\\"true - 5\\"",
                    "start": Position {
                      "character": 12,
                      "line": 23,
                    },
                    "type": "StringLiteral",
                    "value": "true - 5",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 11,
                    "line": 23,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 6,
                    "line": 23,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 23,
                  "line": 23,
                },
                "start": Position {
                  "character": 11,
                  "line": 23,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 6,
                "line": 23,
              },
              "type": "CallStatement",
            },
          ],
          "end": Position {
            "character": 23,
            "line": 23,
          },
          "start": Position {
            "character": 6,
            "line": 23,
          },
          "type": "ElseShortcutClause",
        },
      ],
      "end": Position {
        "character": 23,
        "line": 23,
      },
      "start": Position {
        "character": 1,
        "line": 21,
      },
      "type": "IfShortcutStatement",
    },
    ASTIfStatement {
      "clauses": Array [
        ASTIfClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 33,
                "line": 26,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 32,
                      "line": 26,
                    },
                    "raw": "\\"true - 6\\"",
                    "start": Position {
                      "character": 22,
                      "line": 26,
                    },
                    "type": "StringLiteral",
                    "value": "true - 6",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 21,
                    "line": 26,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 16,
                    "line": 26,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 33,
                  "line": 26,
                },
                "start": Position {
                  "character": 21,
                  "line": 26,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 16,
                "line": 26,
              },
              "type": "CallStatement",
            },
          ],
          "condition": ASTLiteral {
            "end": Position {
              "character": 9,
              "line": 26,
            },
            "raw": "true",
            "start": Position {
              "character": 5,
              "line": 26,
            },
            "type": "BooleanLiteral",
            "value": true,
          },
          "end": Position {
            "character": 33,
            "line": 26,
          },
          "start": Position {
            "character": 1,
            "line": 26,
          },
          "type": "IfShortcutClause",
        },
        ASTElseClause {
          "body": Array [
            ASTCallStatement {
              "end": Position {
                "character": 23,
                "line": 27,
              },
              "expression": ASTCallExpression {
                "arguments": Array [
                  ASTLiteral {
                    "end": Position {
                      "character": 22,
                      "line": 27,
                    },
                    "raw": "\\"true - 6\\"",
                    "start": Position {
                      "character": 12,
                      "line": 27,
                    },
                    "type": "StringLiteral",
                    "value": "true - 6",
                  },
                ],
                "base": ASTIdentifier {
                  "end": Position {
                    "character": 11,
                    "line": 27,
                  },
                  "name": "print",
                  "start": Position {
                    "character": 6,
                    "line": 27,
                  },
                  "type": "Identifier",
                },
                "end": Position {
                  "character": 23,
                  "line": 27,
                },
                "start": Position {
                  "character": 11,
                  "line": 27,
                },
                "type": "CallExpression",
              },
              "start": Position {
                "character": 6,
                "line": 27,
              },
              "type": "CallStatement",
            },
          ],
          "end": Position {
            "character": 23,
            "line": 27,
          },
          "start": Position {
            "character": 6,
            "line": 27,
          },
          "type": "ElseShortcutClause",
        },
      ],
      "end": Position {
        "character": 23,
        "line": 27,
      },
      "start": Position {
        "character": 1,
        "line": 26,
      },
      "type": "IfShortcutStatement",
    },
  ],
  "end": Position {
    "character": 7,
    "line": 28,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 1,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 1,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 1,
      },
      "raw": "\\"true - 1\\"",
      "start": Position {
        "character": 22,
        "line": 1,
      },
      "type": "StringLiteral",
      "value": "true - 1",
    },
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 5,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 5,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 5,
      },
      "raw": "\\"true - 2\\"",
      "start": Position {
        "character": 22,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "true - 2",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 6,
      },
      "raw": "true",
      "start": Position {
        "character": 10,
        "line": 6,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 6,
      },
      "raw": "\\"true - 2\\"",
      "start": Position {
        "character": 27,
        "line": 6,
      },
      "type": "StringLiteral",
      "value": "true - 2",
    },
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 9,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 9,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 9,
      },
      "raw": "\\"true - 3\\"",
      "start": Position {
        "character": 22,
        "line": 9,
      },
      "type": "StringLiteral",
      "value": "true - 3",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 10,
      },
      "raw": "true",
      "start": Position {
        "character": 10,
        "line": 10,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 10,
      },
      "raw": "\\"true - 3\\"",
      "start": Position {
        "character": 27,
        "line": 10,
      },
      "type": "StringLiteral",
      "value": "true - 3",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 11,
      },
      "raw": "true",
      "start": Position {
        "character": 10,
        "line": 11,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 11,
      },
      "raw": "\\"true - 3\\"",
      "start": Position {
        "character": 27,
        "line": 11,
      },
      "type": "StringLiteral",
      "value": "true - 3",
    },
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 15,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 15,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 15,
      },
      "raw": "\\"true - 4\\"",
      "start": Position {
        "character": 22,
        "line": 15,
      },
      "type": "StringLiteral",
      "value": "true - 4",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 16,
      },
      "raw": "true",
      "start": Position {
        "character": 10,
        "line": 16,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 16,
      },
      "raw": "\\"true - 4\\"",
      "start": Position {
        "character": 27,
        "line": 16,
      },
      "type": "StringLiteral",
      "value": "true - 4",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 17,
      },
      "raw": "true",
      "start": Position {
        "character": 10,
        "line": 17,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 17,
      },
      "raw": "\\"true - 4\\"",
      "start": Position {
        "character": 27,
        "line": 17,
      },
      "type": "StringLiteral",
      "value": "true - 4",
    },
    ASTLiteral {
      "end": Position {
        "character": 22,
        "line": 18,
      },
      "raw": "\\"true - 4\\"",
      "start": Position {
        "character": 12,
        "line": 18,
      },
      "type": "StringLiteral",
      "value": "true - 4",
    },
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 21,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 21,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 21,
      },
      "raw": "\\"true - 5\\"",
      "start": Position {
        "character": 22,
        "line": 21,
      },
      "type": "StringLiteral",
      "value": "true - 5",
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 22,
      },
      "raw": "true",
      "start": Position {
        "character": 10,
        "line": 22,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 37,
        "line": 22,
      },
      "raw": "\\"true - 5\\"",
      "start": Position {
        "character": 27,
        "line": 22,
      },
      "type": "StringLiteral",
      "value": "true - 5",
    },
    ASTLiteral {
      "end": Position {
        "character": 22,
        "line": 23,
      },
      "raw": "\\"true - 5\\"",
      "start": Position {
        "character": 12,
        "line": 23,
      },
      "type": "StringLiteral",
      "value": "true - 5",
    },
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 26,
      },
      "raw": "true",
      "start": Position {
        "character": 5,
        "line": 26,
      },
      "type": "BooleanLiteral",
      "value": true,
    },
    ASTLiteral {
      "end": Position {
        "character": 32,
        "line": 26,
      },
      "raw": "\\"true - 6\\"",
      "start": Position {
        "character": 22,
        "line": 26,
      },
      "type": "StringLiteral",
      "value": "true - 6",
    },
    ASTLiteral {
      "end": Position {
        "character": 22,
        "line": 27,
      },
      "raw": "\\"true - 6\\"",
      "start": Position {
        "character": 12,
        "line": 27,
      },
      "type": "StringLiteral",
      "value": "true - 6",
    },
  ],
  "namespaces": Set {},
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts simple-object.src 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 10,
        "line": 1,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 10,
          "line": 1,
        },
        "fields": Array [],
        "start": Position {
          "character": 8,
          "line": 1,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 5,
          "line": 1,
        },
        "name": "test",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 18,
        "line": 3,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 18,
          "line": 3,
        },
        "raw": "\\"was\\"",
        "start": Position {
          "character": 13,
          "line": 3,
        },
        "type": "StringLiteral",
        "value": "was",
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 5,
            "line": 3,
          },
          "name": "test",
          "start": Position {
            "character": 1,
            "line": 3,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 12,
          "line": 3,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 10,
            "line": 3,
          },
          "name": "here",
          "start": Position {
            "character": 6,
            "line": 3,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 5,
          "line": 3,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 7,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTCallStatement {
            "end": Position {
              "character": 21,
              "line": 6,
            },
            "expression": ASTCallExpression {
              "arguments": Array [
                ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 15,
                      "line": 6,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 11,
                      "line": 6,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 21,
                    "line": 6,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 20,
                      "line": 6,
                    },
                    "name": "here",
                    "start": Position {
                      "character": 16,
                      "line": 6,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 15,
                    "line": 6,
                  },
                  "type": "MemberExpression",
                },
              ],
              "base": ASTIdentifier {
                "end": Position {
                  "character": 10,
                  "line": 6,
                },
                "name": "print",
                "start": Position {
                  "character": 5,
                  "line": 6,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 21,
                "line": 6,
              },
              "start": Position {
                "character": 10,
                "line": 6,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 6,
            },
            "type": "CallStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 7,
        },
        "namespaces": Set {},
        "parameters": Array [],
        "start": Position {
          "character": 12,
          "line": 5,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 5,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 5,
            "line": 5,
          },
          "name": "test",
          "start": Position {
            "character": 1,
            "line": 5,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 5,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 9,
            "line": 5,
          },
          "name": "was",
          "start": Position {
            "character": 6,
            "line": 5,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 5,
          "line": 5,
        },
        "type": "MemberExpression",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 18,
        "line": 9,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTCallExpression {
            "arguments": Array [],
            "base": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 11,
                  "line": 9,
                },
                "name": "test",
                "start": Position {
                  "character": 7,
                  "line": 9,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 16,
                "line": 9,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 15,
                  "line": 9,
                },
                "name": "was",
                "start": Position {
                  "character": 12,
                  "line": 9,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 11,
                "line": 9,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 18,
              "line": 9,
            },
            "start": Position {
              "character": 15,
              "line": 9,
            },
            "type": "CallExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 9,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 9,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 18,
          "line": 9,
        },
        "start": Position {
          "character": 6,
          "line": 9,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 9,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 18,
    "line": 9,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 3,
      },
      "raw": "\\"was\\"",
      "start": Position {
        "character": 13,
        "line": 3,
      },
      "type": "StringLiteral",
      "value": "was",
    },
  ],
  "namespaces": Set {
    "test",
    "here",
    "was",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts simple-object.src unsafe 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 10,
        "line": 1,
      },
      "init": ASTMapConstructorExpression {
        "end": Position {
          "character": 10,
          "line": 1,
        },
        "fields": Array [],
        "start": Position {
          "character": 8,
          "line": 1,
        },
        "type": "MapConstructorExpression",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 5,
          "line": 1,
        },
        "name": "test",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 18,
        "line": 3,
      },
      "init": ASTLiteral {
        "end": Position {
          "character": 18,
          "line": 3,
        },
        "raw": "\\"was\\"",
        "start": Position {
          "character": 13,
          "line": 3,
        },
        "type": "StringLiteral",
        "value": "was",
      },
      "start": Position {
        "character": 1,
        "line": 3,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 5,
            "line": 3,
          },
          "name": "test",
          "start": Position {
            "character": 1,
            "line": 3,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 12,
          "line": 3,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 10,
            "line": 3,
          },
          "name": "here",
          "start": Position {
            "character": 6,
            "line": 3,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 5,
          "line": 3,
        },
        "type": "MemberExpression",
      },
    },
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 7,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTCallStatement {
            "end": Position {
              "character": 21,
              "line": 6,
            },
            "expression": ASTCallExpression {
              "arguments": Array [
                ASTMemberExpression {
                  "base": ASTIdentifier {
                    "end": Position {
                      "character": 15,
                      "line": 6,
                    },
                    "name": "self",
                    "start": Position {
                      "character": 11,
                      "line": 6,
                    },
                    "type": "Identifier",
                  },
                  "end": Position {
                    "character": 21,
                    "line": 6,
                  },
                  "identifier": ASTIdentifier {
                    "end": Position {
                      "character": 20,
                      "line": 6,
                    },
                    "name": "here",
                    "start": Position {
                      "character": 16,
                      "line": 6,
                    },
                    "type": "Identifier",
                  },
                  "indexer": ".",
                  "start": Position {
                    "character": 15,
                    "line": 6,
                  },
                  "type": "MemberExpression",
                },
              ],
              "base": ASTIdentifier {
                "end": Position {
                  "character": 10,
                  "line": 6,
                },
                "name": "print",
                "start": Position {
                  "character": 5,
                  "line": 6,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 21,
                "line": 6,
              },
              "start": Position {
                "character": 10,
                "line": 6,
              },
              "type": "CallExpression",
            },
            "start": Position {
              "character": 5,
              "line": 6,
            },
            "type": "CallStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 7,
        },
        "namespaces": Set {},
        "parameters": Array [],
        "start": Position {
          "character": 12,
          "line": 5,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 5,
      },
      "type": "AssignmentStatement",
      "variable": ASTMemberExpression {
        "base": ASTIdentifier {
          "end": Position {
            "character": 5,
            "line": 5,
          },
          "name": "test",
          "start": Position {
            "character": 1,
            "line": 5,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 11,
          "line": 5,
        },
        "identifier": ASTIdentifier {
          "end": Position {
            "character": 9,
            "line": 5,
          },
          "name": "was",
          "start": Position {
            "character": 6,
            "line": 5,
          },
          "type": "Identifier",
        },
        "indexer": ".",
        "start": Position {
          "character": 5,
          "line": 5,
        },
        "type": "MemberExpression",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 18,
        "line": 9,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTCallExpression {
            "arguments": Array [],
            "base": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 11,
                  "line": 9,
                },
                "name": "test",
                "start": Position {
                  "character": 7,
                  "line": 9,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 16,
                "line": 9,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 15,
                  "line": 9,
                },
                "name": "was",
                "start": Position {
                  "character": 12,
                  "line": 9,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 11,
                "line": 9,
              },
              "type": "MemberExpression",
            },
            "end": Position {
              "character": 18,
              "line": 9,
            },
            "start": Position {
              "character": 15,
              "line": 9,
            },
            "type": "CallExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 9,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 9,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 18,
          "line": 9,
        },
        "start": Position {
          "character": 6,
          "line": 9,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 9,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 18,
    "line": 9,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 18,
        "line": 3,
      },
      "raw": "\\"was\\"",
      "start": Position {
        "character": 13,
        "line": 3,
      },
      "type": "StringLiteral",
      "value": "was",
    },
  ],
  "namespaces": Set {
    "test",
    "here",
    "was",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts slice.src 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 13,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 15,
              "line": 2,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 15,
                "line": 2,
              },
              "raw": "0",
              "start": Position {
                "character": 14,
                "line": 2,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 2,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 2,
              },
              "name": "offset",
              "start": Position {
                "character": 5,
                "line": 2,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 21,
              "line": 3,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 17,
                  "line": 3,
                },
                "name": "str",
                "start": Position {
                  "character": 14,
                  "line": 3,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 21,
                "line": 3,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 21,
                  "line": 3,
                },
                "name": "len",
                "start": Position {
                  "character": 18,
                  "line": 3,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 17,
                "line": 3,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 3,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 3,
              },
              "name": "maxLen",
              "start": Position {
                "character": 5,
                "line": 3,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 15,
              "line": 4,
            },
            "init": ASTListConstructorExpression {
              "end": Position {
                "character": 15,
                "line": 4,
              },
              "fields": Array [],
              "start": Position {
                "character": 13,
                "line": 4,
              },
              "type": "ListConstructorExpression",
            },
            "start": Position {
              "character": 5,
              "line": 4,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 4,
              },
              "name": "frags",
              "start": Position {
                "character": 5,
                "line": 4,
              },
              "type": "Identifier",
            },
          },
          ASTWhileStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 30,
                  "line": 7,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 30,
                    "line": 7,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 22,
                      "line": 7,
                    },
                    "name": "offset",
                    "start": Position {
                      "character": 16,
                      "line": 7,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTIdentifier {
                    "end": Position {
                      "character": 30,
                      "line": 7,
                    },
                    "name": "limit",
                    "start": Position {
                      "character": 25,
                      "line": 7,
                    },
                    "type": "Identifier",
                  },
                  "start": Position {
                    "character": 23,
                    "line": 7,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 7,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 13,
                    "line": 7,
                  },
                  "name": "next",
                  "start": Position {
                    "character": 9,
                    "line": 7,
                  },
                  "type": "Identifier",
                },
              },
              ASTCallStatement {
                "end": Position {
                  "character": 37,
                  "line": 8,
                },
                "expression": ASTCallExpression {
                  "arguments": Array [
                    ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 23,
                          "line": 8,
                        },
                        "name": "str",
                        "start": Position {
                          "character": 20,
                          "line": 8,
                        },
                        "type": "Identifier",
                      },
                      "end": Object {
                        "character": 37,
                        "line": 8,
                      },
                      "index": ASTSliceExpression {
                        "end": Object {
                          "character": 37,
                          "line": 8,
                        },
                        "left": ASTIdentifier {
                          "end": Position {
                            "character": 30,
                            "line": 8,
                          },
                          "name": "offset",
                          "start": Position {
                            "character": 24,
                            "line": 8,
                          },
                          "type": "Identifier",
                        },
                        "right": ASTIdentifier {
                          "end": Position {
                            "character": 35,
                            "line": 8,
                          },
                          "name": "next",
                          "start": Position {
                            "character": 31,
                            "line": 8,
                          },
                          "type": "Identifier",
                        },
                        "start": Position {
                          "character": 24,
                          "line": 8,
                        },
                        "type": "SliceExpression",
                      },
                      "start": Position {
                        "character": 24,
                        "line": 8,
                      },
                      "type": "IndexExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 14,
                        "line": 8,
                      },
                      "name": "frags",
                      "start": Position {
                        "character": 9,
                        "line": 8,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 20,
                      "line": 8,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 19,
                        "line": 8,
                      },
                      "name": "push",
                      "start": Position {
                        "character": 15,
                        "line": 8,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 14,
                      "line": 8,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 37,
                    "line": 8,
                  },
                  "start": Position {
                    "character": 19,
                    "line": 8,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 8,
                },
                "type": "CallStatement",
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 22,
                  "line": 9,
                },
                "init": ASTIdentifier {
                  "end": Position {
                    "character": 22,
                    "line": 9,
                  },
                  "name": "next",
                  "start": Position {
                    "character": 18,
                    "line": 9,
                  },
                  "type": "Identifier",
                },
                "start": Position {
                  "character": 9,
                  "line": 9,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 15,
                    "line": 9,
                  },
                  "name": "offset",
                  "start": Position {
                    "character": 9,
                    "line": 9,
                  },
                  "type": "Identifier",
                },
              },
            ],
            "condition": ASTEvaluationExpression {
              "end": Position {
                "character": 26,
                "line": 6,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 17,
                  "line": 6,
                },
                "name": "offset",
                "start": Position {
                  "character": 11,
                  "line": 6,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": ASTIdentifier {
                "end": Position {
                  "character": 26,
                  "line": 6,
                },
                "name": "maxLen",
                "start": Position {
                  "character": 20,
                  "line": 6,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 18,
                "line": 6,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 14,
              "line": 10,
            },
            "start": Position {
              "character": 5,
              "line": 6,
            },
            "type": "WhileStatement",
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 17,
                "line": 12,
              },
              "name": "frags",
              "start": Position {
                "character": 12,
                "line": 12,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 13,
            },
            "start": Position {
              "character": 5,
              "line": 12,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 13,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 28,
              "line": 1,
            },
            "name": "str",
            "start": Position {
              "character": 25,
              "line": 1,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 34,
              "line": 1,
            },
            "name": "limit",
            "start": Position {
              "character": 29,
              "line": 1,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 16,
          "line": 1,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 13,
          "line": 1,
        },
        "name": "divideString",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 59,
        "line": 15,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTCallExpression {
            "arguments": Array [
              ASTLiteral {
                "end": Position {
                  "character": 55,
                  "line": 15,
                },
                "raw": "\\"blahhblahhblahhblahhblahhblahhgad\\"",
                "start": Position {
                  "character": 20,
                  "line": 15,
                },
                "type": "StringLiteral",
                "value": "blahhblahhblahhblahhblahhblahhgad",
              },
              ASTLiteral {
                "end": Position {
                  "character": 57,
                  "line": 15,
                },
                "raw": "5",
                "start": Position {
                  "character": 56,
                  "line": 15,
                },
                "type": "NumericLiteral",
                "value": 5,
              },
            ],
            "base": ASTIdentifier {
              "end": Position {
                "character": 19,
                "line": 15,
              },
              "name": "divideString",
              "start": Position {
                "character": 7,
                "line": 15,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 59,
              "line": 15,
            },
            "start": Position {
              "character": 19,
              "line": 15,
            },
            "type": "CallExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 15,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 15,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 59,
          "line": 15,
        },
        "start": Position {
          "character": 6,
          "line": 15,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 15,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 59,
    "line": 15,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 15,
        "line": 2,
      },
      "raw": "0",
      "start": Position {
        "character": 14,
        "line": 2,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 55,
        "line": 15,
      },
      "raw": "\\"blahhblahhblahhblahhblahhblahhgad\\"",
      "start": Position {
        "character": 20,
        "line": 15,
      },
      "type": "StringLiteral",
      "value": "blahhblahhblahhblahhblahhblahhgad",
    },
    ASTLiteral {
      "end": Position {
        "character": 57,
        "line": 15,
      },
      "raw": "5",
      "start": Position {
        "character": 56,
        "line": 15,
      },
      "type": "NumericLiteral",
      "value": 5,
    },
  ],
  "namespaces": Set {
    "divideString",
    "limit",
    "offset",
    "maxLen",
    "len",
    "frags",
    "next",
    "push",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts slice.src unsafe 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 13,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTAssignmentStatement {
            "end": Position {
              "character": 15,
              "line": 2,
            },
            "init": ASTLiteral {
              "end": Position {
                "character": 15,
                "line": 2,
              },
              "raw": "0",
              "start": Position {
                "character": 14,
                "line": 2,
              },
              "type": "NumericLiteral",
              "value": 0,
            },
            "start": Position {
              "character": 5,
              "line": 2,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 2,
              },
              "name": "offset",
              "start": Position {
                "character": 5,
                "line": 2,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 21,
              "line": 3,
            },
            "init": ASTMemberExpression {
              "base": ASTIdentifier {
                "end": Position {
                  "character": 17,
                  "line": 3,
                },
                "name": "str",
                "start": Position {
                  "character": 14,
                  "line": 3,
                },
                "type": "Identifier",
              },
              "end": Position {
                "character": 21,
                "line": 3,
              },
              "identifier": ASTIdentifier {
                "end": Position {
                  "character": 21,
                  "line": 3,
                },
                "name": "len",
                "start": Position {
                  "character": 18,
                  "line": 3,
                },
                "type": "Identifier",
              },
              "indexer": ".",
              "start": Position {
                "character": 17,
                "line": 3,
              },
              "type": "MemberExpression",
            },
            "start": Position {
              "character": 5,
              "line": 3,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 11,
                "line": 3,
              },
              "name": "maxLen",
              "start": Position {
                "character": 5,
                "line": 3,
              },
              "type": "Identifier",
            },
          },
          ASTAssignmentStatement {
            "end": Position {
              "character": 15,
              "line": 4,
            },
            "init": ASTListConstructorExpression {
              "end": Position {
                "character": 15,
                "line": 4,
              },
              "fields": Array [],
              "start": Position {
                "character": 13,
                "line": 4,
              },
              "type": "ListConstructorExpression",
            },
            "start": Position {
              "character": 5,
              "line": 4,
            },
            "type": "AssignmentStatement",
            "variable": ASTIdentifier {
              "end": Position {
                "character": 10,
                "line": 4,
              },
              "name": "frags",
              "start": Position {
                "character": 5,
                "line": 4,
              },
              "type": "Identifier",
            },
          },
          ASTWhileStatement {
            "body": Array [
              ASTAssignmentStatement {
                "end": Position {
                  "character": 30,
                  "line": 7,
                },
                "init": ASTEvaluationExpression {
                  "end": Position {
                    "character": 30,
                    "line": 7,
                  },
                  "left": ASTIdentifier {
                    "end": Position {
                      "character": 22,
                      "line": 7,
                    },
                    "name": "offset",
                    "start": Position {
                      "character": 16,
                      "line": 7,
                    },
                    "type": "Identifier",
                  },
                  "operator": "+",
                  "right": ASTIdentifier {
                    "end": Position {
                      "character": 30,
                      "line": 7,
                    },
                    "name": "limit",
                    "start": Position {
                      "character": 25,
                      "line": 7,
                    },
                    "type": "Identifier",
                  },
                  "start": Position {
                    "character": 23,
                    "line": 7,
                  },
                  "type": "BinaryExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 7,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 13,
                    "line": 7,
                  },
                  "name": "next",
                  "start": Position {
                    "character": 9,
                    "line": 7,
                  },
                  "type": "Identifier",
                },
              },
              ASTCallStatement {
                "end": Position {
                  "character": 37,
                  "line": 8,
                },
                "expression": ASTCallExpression {
                  "arguments": Array [
                    ASTIndexExpression {
                      "base": ASTIdentifier {
                        "end": Position {
                          "character": 23,
                          "line": 8,
                        },
                        "name": "str",
                        "start": Position {
                          "character": 20,
                          "line": 8,
                        },
                        "type": "Identifier",
                      },
                      "end": Object {
                        "character": 37,
                        "line": 8,
                      },
                      "index": ASTSliceExpression {
                        "end": Object {
                          "character": 37,
                          "line": 8,
                        },
                        "left": ASTIdentifier {
                          "end": Position {
                            "character": 30,
                            "line": 8,
                          },
                          "name": "offset",
                          "start": Position {
                            "character": 24,
                            "line": 8,
                          },
                          "type": "Identifier",
                        },
                        "right": ASTIdentifier {
                          "end": Position {
                            "character": 35,
                            "line": 8,
                          },
                          "name": "next",
                          "start": Position {
                            "character": 31,
                            "line": 8,
                          },
                          "type": "Identifier",
                        },
                        "start": Position {
                          "character": 24,
                          "line": 8,
                        },
                        "type": "SliceExpression",
                      },
                      "start": Position {
                        "character": 24,
                        "line": 8,
                      },
                      "type": "IndexExpression",
                    },
                  ],
                  "base": ASTMemberExpression {
                    "base": ASTIdentifier {
                      "end": Position {
                        "character": 14,
                        "line": 8,
                      },
                      "name": "frags",
                      "start": Position {
                        "character": 9,
                        "line": 8,
                      },
                      "type": "Identifier",
                    },
                    "end": Position {
                      "character": 20,
                      "line": 8,
                    },
                    "identifier": ASTIdentifier {
                      "end": Position {
                        "character": 19,
                        "line": 8,
                      },
                      "name": "push",
                      "start": Position {
                        "character": 15,
                        "line": 8,
                      },
                      "type": "Identifier",
                    },
                    "indexer": ".",
                    "start": Position {
                      "character": 14,
                      "line": 8,
                    },
                    "type": "MemberExpression",
                  },
                  "end": Position {
                    "character": 37,
                    "line": 8,
                  },
                  "start": Position {
                    "character": 19,
                    "line": 8,
                  },
                  "type": "CallExpression",
                },
                "start": Position {
                  "character": 9,
                  "line": 8,
                },
                "type": "CallStatement",
              },
              ASTAssignmentStatement {
                "end": Position {
                  "character": 22,
                  "line": 9,
                },
                "init": ASTIdentifier {
                  "end": Position {
                    "character": 22,
                    "line": 9,
                  },
                  "name": "next",
                  "start": Position {
                    "character": 18,
                    "line": 9,
                  },
                  "type": "Identifier",
                },
                "start": Position {
                  "character": 9,
                  "line": 9,
                },
                "type": "AssignmentStatement",
                "variable": ASTIdentifier {
                  "end": Position {
                    "character": 15,
                    "line": 9,
                  },
                  "name": "offset",
                  "start": Position {
                    "character": 9,
                    "line": 9,
                  },
                  "type": "Identifier",
                },
              },
            ],
            "condition": ASTEvaluationExpression {
              "end": Position {
                "character": 26,
                "line": 6,
              },
              "left": ASTIdentifier {
                "end": Position {
                  "character": 17,
                  "line": 6,
                },
                "name": "offset",
                "start": Position {
                  "character": 11,
                  "line": 6,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": ASTIdentifier {
                "end": Position {
                  "character": 26,
                  "line": 6,
                },
                "name": "maxLen",
                "start": Position {
                  "character": 20,
                  "line": 6,
                },
                "type": "Identifier",
              },
              "start": Position {
                "character": 18,
                "line": 6,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 14,
              "line": 10,
            },
            "start": Position {
              "character": 5,
              "line": 6,
            },
            "type": "WhileStatement",
          },
          ASTReturnStatement {
            "argument": ASTIdentifier {
              "end": Position {
                "character": 17,
                "line": 12,
              },
              "name": "frags",
              "start": Position {
                "character": 12,
                "line": 12,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 13,
              "line": 13,
            },
            "start": Position {
              "character": 5,
              "line": 12,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 13,
        },
        "namespaces": Set {},
        "parameters": Array [
          ASTIdentifier {
            "end": Position {
              "character": 28,
              "line": 1,
            },
            "name": "str",
            "start": Position {
              "character": 25,
              "line": 1,
            },
            "type": "Identifier",
          },
          ASTIdentifier {
            "end": Position {
              "character": 34,
              "line": 1,
            },
            "name": "limit",
            "start": Position {
              "character": 29,
              "line": 1,
            },
            "type": "Identifier",
          },
        ],
        "start": Position {
          "character": 16,
          "line": 1,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 13,
          "line": 1,
        },
        "name": "divideString",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 59,
        "line": 15,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTCallExpression {
            "arguments": Array [
              ASTLiteral {
                "end": Position {
                  "character": 55,
                  "line": 15,
                },
                "raw": "\\"blahhblahhblahhblahhblahhblahhgad\\"",
                "start": Position {
                  "character": 20,
                  "line": 15,
                },
                "type": "StringLiteral",
                "value": "blahhblahhblahhblahhblahhblahhgad",
              },
              ASTLiteral {
                "end": Position {
                  "character": 57,
                  "line": 15,
                },
                "raw": "5",
                "start": Position {
                  "character": 56,
                  "line": 15,
                },
                "type": "NumericLiteral",
                "value": 5,
              },
            ],
            "base": ASTIdentifier {
              "end": Position {
                "character": 19,
                "line": 15,
              },
              "name": "divideString",
              "start": Position {
                "character": 7,
                "line": 15,
              },
              "type": "Identifier",
            },
            "end": Position {
              "character": 59,
              "line": 15,
            },
            "start": Position {
              "character": 19,
              "line": 15,
            },
            "type": "CallExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 15,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 15,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 59,
          "line": 15,
        },
        "start": Position {
          "character": 6,
          "line": 15,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 15,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 59,
    "line": 15,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 15,
        "line": 2,
      },
      "raw": "0",
      "start": Position {
        "character": 14,
        "line": 2,
      },
      "type": "NumericLiteral",
      "value": 0,
    },
    ASTLiteral {
      "end": Position {
        "character": 55,
        "line": 15,
      },
      "raw": "\\"blahhblahhblahhblahhblahhblahhgad\\"",
      "start": Position {
        "character": 20,
        "line": 15,
      },
      "type": "StringLiteral",
      "value": "blahhblahhblahhblahhblahhblahhgad",
    },
    ASTLiteral {
      "end": Position {
        "character": 57,
        "line": 15,
      },
      "raw": "5",
      "start": Position {
        "character": 56,
        "line": 15,
      },
      "type": "NumericLiteral",
      "value": 5,
    },
  ],
  "namespaces": Set {
    "divideString",
    "limit",
    "offset",
    "maxLen",
    "len",
    "frags",
    "next",
    "push",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts unary.src 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 3,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTLiteral {
              "end": Position {
                "character": 16,
                "line": 2,
              },
              "raw": "null",
              "start": Position {
                "character": 12,
                "line": 2,
              },
              "type": "NilLiteral",
              "value": null,
            },
            "end": Position {
              "character": 13,
              "line": 3,
            },
            "start": Position {
              "character": 5,
              "line": 2,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 3,
        },
        "namespaces": Set {},
        "parameters": Array [],
        "start": Position {
          "character": 8,
          "line": 1,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 5,
          "line": 1,
        },
        "name": "test",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 45,
        "line": 5,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTEvaluationExpression {
            "end": Position {
              "character": 45,
              "line": 5,
            },
            "left": ASTUnaryExpression {
              "argument": ASTMemberExpression {
                "base": ASTLiteral {
                  "end": Position {
                    "character": 13,
                    "line": 5,
                  },
                  "raw": "\\"was\\"",
                  "start": Position {
                    "character": 8,
                    "line": 5,
                  },
                  "type": "StringLiteral",
                  "value": "was",
                },
                "end": Position {
                  "character": 23,
                  "line": 5,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 19,
                    "line": 5,
                  },
                  "name": "split",
                  "start": Position {
                    "character": 14,
                    "line": 5,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 13,
                  "line": 5,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 23,
                "line": 5,
              },
              "operator": "@",
              "start": Position {
                "character": 7,
                "line": 5,
              },
              "type": "UnaryExpression",
            },
            "operator": "and",
            "right": ASTEvaluationExpression {
              "end": Position {
                "character": 44,
                "line": 5,
              },
              "left": ASTLiteral {
                "end": Position {
                  "character": 30,
                  "line": 5,
                },
                "raw": "false",
                "start": Position {
                  "character": 25,
                  "line": 5,
                },
                "type": "BooleanLiteral",
                "value": false,
              },
              "operator": "or",
              "right": ASTUnaryExpression {
                "argument": ASTLiteral {
                  "end": Position {
                    "character": 43,
                    "line": 5,
                  },
                  "raw": "false",
                  "start": Position {
                    "character": 38,
                    "line": 5,
                  },
                  "type": "BooleanLiteral",
                  "value": false,
                },
                "end": Position {
                  "character": 44,
                  "line": 5,
                },
                "operator": "not",
                "start": Position {
                  "character": 34,
                  "line": 5,
                },
                "type": "NegationExpression",
              },
              "start": Position {
                "character": 31,
                "line": 5,
              },
              "type": "LogicalExpression",
            },
            "start": Position {
              "character": 20,
              "line": 5,
            },
            "type": "LogicalExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 5,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 5,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 45,
          "line": 5,
        },
        "start": Position {
          "character": 6,
          "line": 5,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 5,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 47,
        "line": 6,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTUnaryExpression {
            "argument": ASTEvaluationExpression {
              "end": Position {
                "character": 46,
                "line": 6,
              },
              "left": ASTMemberExpression {
                "base": ASTLiteral {
                  "end": Position {
                    "character": 14,
                    "line": 6,
                  },
                  "raw": "\\"was\\"",
                  "start": Position {
                    "character": 9,
                    "line": 6,
                  },
                  "type": "StringLiteral",
                  "value": "was",
                },
                "end": Position {
                  "character": 24,
                  "line": 6,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 20,
                    "line": 6,
                  },
                  "name": "split",
                  "start": Position {
                    "character": 15,
                    "line": 6,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 14,
                  "line": 6,
                },
                "type": "MemberExpression",
              },
              "operator": "and",
              "right": ASTEvaluationExpression {
                "end": Position {
                  "character": 45,
                  "line": 6,
                },
                "left": ASTLiteral {
                  "end": Position {
                    "character": 31,
                    "line": 6,
                  },
                  "raw": "false",
                  "start": Position {
                    "character": 26,
                    "line": 6,
                  },
                  "type": "BooleanLiteral",
                  "value": false,
                },
                "operator": "or",
                "right": ASTUnaryExpression {
                  "argument": ASTLiteral {
                    "end": Position {
                      "character": 44,
                      "line": 6,
                    },
                    "raw": "false",
                    "start": Position {
                      "character": 39,
                      "line": 6,
                    },
                    "type": "BooleanLiteral",
                    "value": false,
                  },
                  "end": Position {
                    "character": 45,
                    "line": 6,
                  },
                  "operator": "not",
                  "start": Position {
                    "character": 35,
                    "line": 6,
                  },
                  "type": "NegationExpression",
                },
                "start": Position {
                  "character": 32,
                  "line": 6,
                },
                "type": "LogicalExpression",
              },
              "start": Position {
                "character": 21,
                "line": 6,
              },
              "type": "LogicalExpression",
            },
            "end": Position {
              "character": 47,
              "line": 6,
            },
            "operator": "@",
            "start": Position {
              "character": 7,
              "line": 6,
            },
            "type": "UnaryExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 6,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 6,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 47,
          "line": 6,
        },
        "start": Position {
          "character": 6,
          "line": 6,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 6,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 48,
        "line": 7,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTEvaluationExpression {
            "end": Position {
              "character": 48,
              "line": 7,
            },
            "left": ASTUnaryExpression {
              "argument": ASTMemberExpression {
                "base": ASTLiteral {
                  "end": Position {
                    "character": 16,
                    "line": 7,
                  },
                  "raw": "\\"was\\"",
                  "start": Position {
                    "character": 11,
                    "line": 7,
                  },
                  "type": "StringLiteral",
                  "value": "was",
                },
                "end": Position {
                  "character": 26,
                  "line": 7,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 22,
                    "line": 7,
                  },
                  "name": "split",
                  "start": Position {
                    "character": 17,
                    "line": 7,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 16,
                  "line": 7,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 26,
                "line": 7,
              },
              "operator": "not",
              "start": Position {
                "character": 7,
                "line": 7,
              },
              "type": "NegationExpression",
            },
            "operator": "and",
            "right": ASTEvaluationExpression {
              "end": Position {
                "character": 47,
                "line": 7,
              },
              "left": ASTLiteral {
                "end": Position {
                  "character": 33,
                  "line": 7,
                },
                "raw": "false",
                "start": Position {
                  "character": 28,
                  "line": 7,
                },
                "type": "BooleanLiteral",
                "value": false,
              },
              "operator": "or",
              "right": ASTUnaryExpression {
                "argument": ASTLiteral {
                  "end": Position {
                    "character": 46,
                    "line": 7,
                  },
                  "raw": "false",
                  "start": Position {
                    "character": 41,
                    "line": 7,
                  },
                  "type": "BooleanLiteral",
                  "value": false,
                },
                "end": Position {
                  "character": 47,
                  "line": 7,
                },
                "operator": "not",
                "start": Position {
                  "character": 37,
                  "line": 7,
                },
                "type": "NegationExpression",
              },
              "start": Position {
                "character": 34,
                "line": 7,
              },
              "type": "LogicalExpression",
            },
            "start": Position {
              "character": 23,
              "line": 7,
            },
            "type": "LogicalExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 7,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 7,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 48,
          "line": 7,
        },
        "start": Position {
          "character": 6,
          "line": 7,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 7,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 50,
        "line": 8,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTUnaryExpression {
            "argument": ASTEvaluationExpression {
              "end": Position {
                "character": 49,
                "line": 8,
              },
              "left": ASTMemberExpression {
                "base": ASTLiteral {
                  "end": Position {
                    "character": 17,
                    "line": 8,
                  },
                  "raw": "\\"was\\"",
                  "start": Position {
                    "character": 12,
                    "line": 8,
                  },
                  "type": "StringLiteral",
                  "value": "was",
                },
                "end": Position {
                  "character": 27,
                  "line": 8,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 23,
                    "line": 8,
                  },
                  "name": "split",
                  "start": Position {
                    "character": 18,
                    "line": 8,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 17,
                  "line": 8,
                },
                "type": "MemberExpression",
              },
              "operator": "and",
              "right": ASTEvaluationExpression {
                "end": Position {
                  "character": 48,
                  "line": 8,
                },
                "left": ASTLiteral {
                  "end": Position {
                    "character": 34,
                    "line": 8,
                  },
                  "raw": "false",
                  "start": Position {
                    "character": 29,
                    "line": 8,
                  },
                  "type": "BooleanLiteral",
                  "value": false,
                },
                "operator": "or",
                "right": ASTUnaryExpression {
                  "argument": ASTLiteral {
                    "end": Position {
                      "character": 47,
                      "line": 8,
                    },
                    "raw": "false",
                    "start": Position {
                      "character": 42,
                      "line": 8,
                    },
                    "type": "BooleanLiteral",
                    "value": false,
                  },
                  "end": Position {
                    "character": 48,
                    "line": 8,
                  },
                  "operator": "not",
                  "start": Position {
                    "character": 38,
                    "line": 8,
                  },
                  "type": "NegationExpression",
                },
                "start": Position {
                  "character": 35,
                  "line": 8,
                },
                "type": "LogicalExpression",
              },
              "start": Position {
                "character": 24,
                "line": 8,
              },
              "type": "LogicalExpression",
            },
            "end": Position {
              "character": 50,
              "line": 8,
            },
            "operator": "not",
            "start": Position {
              "character": 7,
              "line": 8,
            },
            "type": "NegationExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 8,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 8,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 50,
          "line": 8,
        },
        "start": Position {
          "character": 6,
          "line": 8,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 8,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 14,
        "line": 9,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTEvaluationExpression {
            "end": Position {
              "character": 14,
              "line": 9,
            },
            "left": ASTUnaryExpression {
              "argument": ASTLiteral {
                "end": Position {
                  "character": 9,
                  "line": 9,
                },
                "raw": "1",
                "start": Position {
                  "character": 8,
                  "line": 9,
                },
                "type": "NumericLiteral",
                "value": 1,
              },
              "end": Position {
                "character": 11,
                "line": 9,
              },
              "operator": "-",
              "start": Position {
                "character": 7,
                "line": 9,
              },
              "type": "BinaryNegatedExpression",
            },
            "operator": "+",
            "right": ASTLiteral {
              "end": Position {
                "character": 13,
                "line": 9,
              },
              "raw": "2",
              "start": Position {
                "character": 12,
                "line": 9,
              },
              "type": "NumericLiteral",
              "value": 2,
            },
            "start": Position {
              "character": 10,
              "line": 9,
            },
            "type": "BinaryExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 9,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 9,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 14,
          "line": 9,
        },
        "start": Position {
          "character": 6,
          "line": 9,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 9,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 16,
        "line": 10,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTUnaryExpression {
            "argument": ASTEvaluationExpression {
              "end": Position {
                "character": 15,
                "line": 10,
              },
              "left": ASTLiteral {
                "end": Position {
                  "character": 10,
                  "line": 10,
                },
                "raw": "1",
                "start": Position {
                  "character": 9,
                  "line": 10,
                },
                "type": "NumericLiteral",
                "value": 1,
              },
              "operator": "+",
              "right": ASTLiteral {
                "end": Position {
                  "character": 14,
                  "line": 10,
                },
                "raw": "2",
                "start": Position {
                  "character": 13,
                  "line": 10,
                },
                "type": "NumericLiteral",
                "value": 2,
              },
              "start": Position {
                "character": 11,
                "line": 10,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 16,
              "line": 10,
            },
            "operator": "-",
            "start": Position {
              "character": 7,
              "line": 10,
            },
            "type": "BinaryNegatedExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 10,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 10,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 16,
          "line": 10,
        },
        "start": Position {
          "character": 6,
          "line": 10,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 10,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 1,
    "line": 11,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 2,
      },
      "raw": "null",
      "start": Position {
        "character": 12,
        "line": 2,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 13,
        "line": 5,
      },
      "raw": "\\"was\\"",
      "start": Position {
        "character": 8,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "was",
    },
    ASTLiteral {
      "end": Position {
        "character": 30,
        "line": 5,
      },
      "raw": "false",
      "start": Position {
        "character": 25,
        "line": 5,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 43,
        "line": 5,
      },
      "raw": "false",
      "start": Position {
        "character": 38,
        "line": 5,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 6,
      },
      "raw": "\\"was\\"",
      "start": Position {
        "character": 9,
        "line": 6,
      },
      "type": "StringLiteral",
      "value": "was",
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 6,
      },
      "raw": "false",
      "start": Position {
        "character": 26,
        "line": 6,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 44,
        "line": 6,
      },
      "raw": "false",
      "start": Position {
        "character": 39,
        "line": 6,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 7,
      },
      "raw": "\\"was\\"",
      "start": Position {
        "character": 11,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "was",
    },
    ASTLiteral {
      "end": Position {
        "character": 33,
        "line": 7,
      },
      "raw": "false",
      "start": Position {
        "character": 28,
        "line": 7,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 46,
        "line": 7,
      },
      "raw": "false",
      "start": Position {
        "character": 41,
        "line": 7,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 8,
      },
      "raw": "\\"was\\"",
      "start": Position {
        "character": 12,
        "line": 8,
      },
      "type": "StringLiteral",
      "value": "was",
    },
    ASTLiteral {
      "end": Position {
        "character": 34,
        "line": 8,
      },
      "raw": "false",
      "start": Position {
        "character": 29,
        "line": 8,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 47,
        "line": 8,
      },
      "raw": "false",
      "start": Position {
        "character": 42,
        "line": 8,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 9,
      },
      "raw": "1",
      "start": Position {
        "character": 8,
        "line": 9,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 13,
        "line": 9,
      },
      "raw": "2",
      "start": Position {
        "character": 12,
        "line": 9,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 10,
        "line": 10,
      },
      "raw": "1",
      "start": Position {
        "character": 9,
        "line": 10,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 10,
      },
      "raw": "2",
      "start": Position {
        "character": 13,
        "line": 10,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
  ],
  "namespaces": Set {
    "test",
    "split",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

exports[`parse default scripts unary.src unsafe 1`] = `
ASTChunk {
  "assignments": Array [],
  "body": Array [
    ASTAssignmentStatement {
      "end": Position {
        "character": 13,
        "line": 3,
      },
      "init": ASTFunctionStatement {
        "assignments": Array [],
        "body": Array [
          ASTReturnStatement {
            "argument": ASTLiteral {
              "end": Position {
                "character": 16,
                "line": 2,
              },
              "raw": "null",
              "start": Position {
                "character": 12,
                "line": 2,
              },
              "type": "NilLiteral",
              "value": null,
            },
            "end": Position {
              "character": 13,
              "line": 3,
            },
            "start": Position {
              "character": 5,
              "line": 2,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Position {
          "character": 13,
          "line": 3,
        },
        "namespaces": Set {},
        "parameters": Array [],
        "start": Position {
          "character": 8,
          "line": 1,
        },
        "type": "FunctionDeclaration",
      },
      "start": Position {
        "character": 1,
        "line": 1,
      },
      "type": "AssignmentStatement",
      "variable": ASTIdentifier {
        "end": Position {
          "character": 5,
          "line": 1,
        },
        "name": "test",
        "start": Position {
          "character": 1,
          "line": 1,
        },
        "type": "Identifier",
      },
    },
    ASTCallStatement {
      "end": Position {
        "character": 45,
        "line": 5,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTEvaluationExpression {
            "end": Position {
              "character": 45,
              "line": 5,
            },
            "left": ASTUnaryExpression {
              "argument": ASTMemberExpression {
                "base": ASTLiteral {
                  "end": Position {
                    "character": 13,
                    "line": 5,
                  },
                  "raw": "\\"was\\"",
                  "start": Position {
                    "character": 8,
                    "line": 5,
                  },
                  "type": "StringLiteral",
                  "value": "was",
                },
                "end": Position {
                  "character": 23,
                  "line": 5,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 19,
                    "line": 5,
                  },
                  "name": "split",
                  "start": Position {
                    "character": 14,
                    "line": 5,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 13,
                  "line": 5,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 23,
                "line": 5,
              },
              "operator": "@",
              "start": Position {
                "character": 7,
                "line": 5,
              },
              "type": "UnaryExpression",
            },
            "operator": "and",
            "right": ASTEvaluationExpression {
              "end": Position {
                "character": 44,
                "line": 5,
              },
              "left": ASTLiteral {
                "end": Position {
                  "character": 30,
                  "line": 5,
                },
                "raw": "false",
                "start": Position {
                  "character": 25,
                  "line": 5,
                },
                "type": "BooleanLiteral",
                "value": false,
              },
              "operator": "or",
              "right": ASTUnaryExpression {
                "argument": ASTLiteral {
                  "end": Position {
                    "character": 43,
                    "line": 5,
                  },
                  "raw": "false",
                  "start": Position {
                    "character": 38,
                    "line": 5,
                  },
                  "type": "BooleanLiteral",
                  "value": false,
                },
                "end": Position {
                  "character": 44,
                  "line": 5,
                },
                "operator": "not",
                "start": Position {
                  "character": 34,
                  "line": 5,
                },
                "type": "NegationExpression",
              },
              "start": Position {
                "character": 31,
                "line": 5,
              },
              "type": "LogicalExpression",
            },
            "start": Position {
              "character": 20,
              "line": 5,
            },
            "type": "LogicalExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 5,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 5,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 45,
          "line": 5,
        },
        "start": Position {
          "character": 6,
          "line": 5,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 5,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 47,
        "line": 6,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTUnaryExpression {
            "argument": ASTEvaluationExpression {
              "end": Position {
                "character": 46,
                "line": 6,
              },
              "left": ASTMemberExpression {
                "base": ASTLiteral {
                  "end": Position {
                    "character": 14,
                    "line": 6,
                  },
                  "raw": "\\"was\\"",
                  "start": Position {
                    "character": 9,
                    "line": 6,
                  },
                  "type": "StringLiteral",
                  "value": "was",
                },
                "end": Position {
                  "character": 24,
                  "line": 6,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 20,
                    "line": 6,
                  },
                  "name": "split",
                  "start": Position {
                    "character": 15,
                    "line": 6,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 14,
                  "line": 6,
                },
                "type": "MemberExpression",
              },
              "operator": "and",
              "right": ASTEvaluationExpression {
                "end": Position {
                  "character": 45,
                  "line": 6,
                },
                "left": ASTLiteral {
                  "end": Position {
                    "character": 31,
                    "line": 6,
                  },
                  "raw": "false",
                  "start": Position {
                    "character": 26,
                    "line": 6,
                  },
                  "type": "BooleanLiteral",
                  "value": false,
                },
                "operator": "or",
                "right": ASTUnaryExpression {
                  "argument": ASTLiteral {
                    "end": Position {
                      "character": 44,
                      "line": 6,
                    },
                    "raw": "false",
                    "start": Position {
                      "character": 39,
                      "line": 6,
                    },
                    "type": "BooleanLiteral",
                    "value": false,
                  },
                  "end": Position {
                    "character": 45,
                    "line": 6,
                  },
                  "operator": "not",
                  "start": Position {
                    "character": 35,
                    "line": 6,
                  },
                  "type": "NegationExpression",
                },
                "start": Position {
                  "character": 32,
                  "line": 6,
                },
                "type": "LogicalExpression",
              },
              "start": Position {
                "character": 21,
                "line": 6,
              },
              "type": "LogicalExpression",
            },
            "end": Position {
              "character": 47,
              "line": 6,
            },
            "operator": "@",
            "start": Position {
              "character": 7,
              "line": 6,
            },
            "type": "UnaryExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 6,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 6,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 47,
          "line": 6,
        },
        "start": Position {
          "character": 6,
          "line": 6,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 6,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 48,
        "line": 7,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTEvaluationExpression {
            "end": Position {
              "character": 48,
              "line": 7,
            },
            "left": ASTUnaryExpression {
              "argument": ASTMemberExpression {
                "base": ASTLiteral {
                  "end": Position {
                    "character": 16,
                    "line": 7,
                  },
                  "raw": "\\"was\\"",
                  "start": Position {
                    "character": 11,
                    "line": 7,
                  },
                  "type": "StringLiteral",
                  "value": "was",
                },
                "end": Position {
                  "character": 26,
                  "line": 7,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 22,
                    "line": 7,
                  },
                  "name": "split",
                  "start": Position {
                    "character": 17,
                    "line": 7,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 16,
                  "line": 7,
                },
                "type": "MemberExpression",
              },
              "end": Position {
                "character": 26,
                "line": 7,
              },
              "operator": "not",
              "start": Position {
                "character": 7,
                "line": 7,
              },
              "type": "NegationExpression",
            },
            "operator": "and",
            "right": ASTEvaluationExpression {
              "end": Position {
                "character": 47,
                "line": 7,
              },
              "left": ASTLiteral {
                "end": Position {
                  "character": 33,
                  "line": 7,
                },
                "raw": "false",
                "start": Position {
                  "character": 28,
                  "line": 7,
                },
                "type": "BooleanLiteral",
                "value": false,
              },
              "operator": "or",
              "right": ASTUnaryExpression {
                "argument": ASTLiteral {
                  "end": Position {
                    "character": 46,
                    "line": 7,
                  },
                  "raw": "false",
                  "start": Position {
                    "character": 41,
                    "line": 7,
                  },
                  "type": "BooleanLiteral",
                  "value": false,
                },
                "end": Position {
                  "character": 47,
                  "line": 7,
                },
                "operator": "not",
                "start": Position {
                  "character": 37,
                  "line": 7,
                },
                "type": "NegationExpression",
              },
              "start": Position {
                "character": 34,
                "line": 7,
              },
              "type": "LogicalExpression",
            },
            "start": Position {
              "character": 23,
              "line": 7,
            },
            "type": "LogicalExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 7,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 7,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 48,
          "line": 7,
        },
        "start": Position {
          "character": 6,
          "line": 7,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 7,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 50,
        "line": 8,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTUnaryExpression {
            "argument": ASTEvaluationExpression {
              "end": Position {
                "character": 49,
                "line": 8,
              },
              "left": ASTMemberExpression {
                "base": ASTLiteral {
                  "end": Position {
                    "character": 17,
                    "line": 8,
                  },
                  "raw": "\\"was\\"",
                  "start": Position {
                    "character": 12,
                    "line": 8,
                  },
                  "type": "StringLiteral",
                  "value": "was",
                },
                "end": Position {
                  "character": 27,
                  "line": 8,
                },
                "identifier": ASTIdentifier {
                  "end": Position {
                    "character": 23,
                    "line": 8,
                  },
                  "name": "split",
                  "start": Position {
                    "character": 18,
                    "line": 8,
                  },
                  "type": "Identifier",
                },
                "indexer": ".",
                "start": Position {
                  "character": 17,
                  "line": 8,
                },
                "type": "MemberExpression",
              },
              "operator": "and",
              "right": ASTEvaluationExpression {
                "end": Position {
                  "character": 48,
                  "line": 8,
                },
                "left": ASTLiteral {
                  "end": Position {
                    "character": 34,
                    "line": 8,
                  },
                  "raw": "false",
                  "start": Position {
                    "character": 29,
                    "line": 8,
                  },
                  "type": "BooleanLiteral",
                  "value": false,
                },
                "operator": "or",
                "right": ASTUnaryExpression {
                  "argument": ASTLiteral {
                    "end": Position {
                      "character": 47,
                      "line": 8,
                    },
                    "raw": "false",
                    "start": Position {
                      "character": 42,
                      "line": 8,
                    },
                    "type": "BooleanLiteral",
                    "value": false,
                  },
                  "end": Position {
                    "character": 48,
                    "line": 8,
                  },
                  "operator": "not",
                  "start": Position {
                    "character": 38,
                    "line": 8,
                  },
                  "type": "NegationExpression",
                },
                "start": Position {
                  "character": 35,
                  "line": 8,
                },
                "type": "LogicalExpression",
              },
              "start": Position {
                "character": 24,
                "line": 8,
              },
              "type": "LogicalExpression",
            },
            "end": Position {
              "character": 50,
              "line": 8,
            },
            "operator": "not",
            "start": Position {
              "character": 7,
              "line": 8,
            },
            "type": "NegationExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 8,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 8,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 50,
          "line": 8,
        },
        "start": Position {
          "character": 6,
          "line": 8,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 8,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 14,
        "line": 9,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTEvaluationExpression {
            "end": Position {
              "character": 14,
              "line": 9,
            },
            "left": ASTUnaryExpression {
              "argument": ASTLiteral {
                "end": Position {
                  "character": 9,
                  "line": 9,
                },
                "raw": "1",
                "start": Position {
                  "character": 8,
                  "line": 9,
                },
                "type": "NumericLiteral",
                "value": 1,
              },
              "end": Position {
                "character": 11,
                "line": 9,
              },
              "operator": "-",
              "start": Position {
                "character": 7,
                "line": 9,
              },
              "type": "BinaryNegatedExpression",
            },
            "operator": "+",
            "right": ASTLiteral {
              "end": Position {
                "character": 13,
                "line": 9,
              },
              "raw": "2",
              "start": Position {
                "character": 12,
                "line": 9,
              },
              "type": "NumericLiteral",
              "value": 2,
            },
            "start": Position {
              "character": 10,
              "line": 9,
            },
            "type": "BinaryExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 9,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 9,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 14,
          "line": 9,
        },
        "start": Position {
          "character": 6,
          "line": 9,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 9,
      },
      "type": "CallStatement",
    },
    ASTCallStatement {
      "end": Position {
        "character": 16,
        "line": 10,
      },
      "expression": ASTCallExpression {
        "arguments": Array [
          ASTUnaryExpression {
            "argument": ASTEvaluationExpression {
              "end": Position {
                "character": 15,
                "line": 10,
              },
              "left": ASTLiteral {
                "end": Position {
                  "character": 10,
                  "line": 10,
                },
                "raw": "1",
                "start": Position {
                  "character": 9,
                  "line": 10,
                },
                "type": "NumericLiteral",
                "value": 1,
              },
              "operator": "+",
              "right": ASTLiteral {
                "end": Position {
                  "character": 14,
                  "line": 10,
                },
                "raw": "2",
                "start": Position {
                  "character": 13,
                  "line": 10,
                },
                "type": "NumericLiteral",
                "value": 2,
              },
              "start": Position {
                "character": 11,
                "line": 10,
              },
              "type": "BinaryExpression",
            },
            "end": Position {
              "character": 16,
              "line": 10,
            },
            "operator": "-",
            "start": Position {
              "character": 7,
              "line": 10,
            },
            "type": "BinaryNegatedExpression",
          },
        ],
        "base": ASTIdentifier {
          "end": Position {
            "character": 6,
            "line": 10,
          },
          "name": "print",
          "start": Position {
            "character": 1,
            "line": 10,
          },
          "type": "Identifier",
        },
        "end": Position {
          "character": 16,
          "line": 10,
        },
        "start": Position {
          "character": 6,
          "line": 10,
        },
        "type": "CallExpression",
      },
      "start": Position {
        "character": 1,
        "line": 10,
      },
      "type": "CallStatement",
    },
  ],
  "end": Position {
    "character": 1,
    "line": 11,
  },
  "literals": Array [
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 2,
      },
      "raw": "null",
      "start": Position {
        "character": 12,
        "line": 2,
      },
      "type": "NilLiteral",
      "value": null,
    },
    ASTLiteral {
      "end": Position {
        "character": 13,
        "line": 5,
      },
      "raw": "\\"was\\"",
      "start": Position {
        "character": 8,
        "line": 5,
      },
      "type": "StringLiteral",
      "value": "was",
    },
    ASTLiteral {
      "end": Position {
        "character": 30,
        "line": 5,
      },
      "raw": "false",
      "start": Position {
        "character": 25,
        "line": 5,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 43,
        "line": 5,
      },
      "raw": "false",
      "start": Position {
        "character": 38,
        "line": 5,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 6,
      },
      "raw": "\\"was\\"",
      "start": Position {
        "character": 9,
        "line": 6,
      },
      "type": "StringLiteral",
      "value": "was",
    },
    ASTLiteral {
      "end": Position {
        "character": 31,
        "line": 6,
      },
      "raw": "false",
      "start": Position {
        "character": 26,
        "line": 6,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 44,
        "line": 6,
      },
      "raw": "false",
      "start": Position {
        "character": 39,
        "line": 6,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 16,
        "line": 7,
      },
      "raw": "\\"was\\"",
      "start": Position {
        "character": 11,
        "line": 7,
      },
      "type": "StringLiteral",
      "value": "was",
    },
    ASTLiteral {
      "end": Position {
        "character": 33,
        "line": 7,
      },
      "raw": "false",
      "start": Position {
        "character": 28,
        "line": 7,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 46,
        "line": 7,
      },
      "raw": "false",
      "start": Position {
        "character": 41,
        "line": 7,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 17,
        "line": 8,
      },
      "raw": "\\"was\\"",
      "start": Position {
        "character": 12,
        "line": 8,
      },
      "type": "StringLiteral",
      "value": "was",
    },
    ASTLiteral {
      "end": Position {
        "character": 34,
        "line": 8,
      },
      "raw": "false",
      "start": Position {
        "character": 29,
        "line": 8,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 47,
        "line": 8,
      },
      "raw": "false",
      "start": Position {
        "character": 42,
        "line": 8,
      },
      "type": "BooleanLiteral",
      "value": false,
    },
    ASTLiteral {
      "end": Position {
        "character": 9,
        "line": 9,
      },
      "raw": "1",
      "start": Position {
        "character": 8,
        "line": 9,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 13,
        "line": 9,
      },
      "raw": "2",
      "start": Position {
        "character": 12,
        "line": 9,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
    ASTLiteral {
      "end": Position {
        "character": 10,
        "line": 10,
      },
      "raw": "1",
      "start": Position {
        "character": 9,
        "line": 10,
      },
      "type": "NumericLiteral",
      "value": 1,
    },
    ASTLiteral {
      "end": Position {
        "character": 14,
        "line": 10,
      },
      "raw": "2",
      "start": Position {
        "character": 13,
        "line": 10,
      },
      "type": "NumericLiteral",
      "value": 2,
    },
  ],
  "namespaces": Set {
    "test",
    "split",
  },
  "nativeImports": Array [],
  "start": Position {
    "character": 1,
    "line": 1,
  },
  "type": "Chunk",
}
`;

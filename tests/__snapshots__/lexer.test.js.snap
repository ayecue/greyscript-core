// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse default scripts ascii.src 1`] = `
"Identifier[1:0 - 1:8: value = 'AsciiGen', isAfterSpace = false]
Punctuator[1:9 - 1:10: value = '=', isAfterSpace = true]
Punctuator[1:11 - 1:12: value = '{', isAfterSpace = true]
Punctuator[1:12 - 1:13: value = '}', isAfterSpace = false]
EOL[1:13 - 1:13: value = ';', isAfterSpace = false]
EOL[2:14 - 2:14: value = ';', isAfterSpace = false]
Identifier[3:15 - 3:18: value = 'map', isAfterSpace = false]
Punctuator[3:19 - 3:20: value = '=', isAfterSpace = true]
Punctuator[3:21 - 3:22: value = '{', isAfterSpace = true]
Punctuator[3:22 - 3:23: value = '}', isAfterSpace = false]
EOL[3:23 - 3:23: value = ';', isAfterSpace = false]
EOL[4:24 - 4:24: value = ';', isAfterSpace = false]
Identifier[5:25 - 5:28: value = 'map', isAfterSpace = false]
Punctuator[5:28 - 5:29: value = '.', isAfterSpace = false]
Identifier[5:29 - 5:30: value = 'a', isAfterSpace = false]
Punctuator[5:31 - 5:32: value = '=', isAfterSpace = true]
Punctuator[5:33 - 5:34: value = '[', isAfterSpace = true]
StringLiteral[5:34 - 5:42: value = '||¯|| ', isAfterSpace = false]
Punctuator[5:42 - 5:43: value = ',', isAfterSpace = false]
StringLiteral[5:44 - 5:52: value = '||_|| ', isAfterSpace = true]
Punctuator[5:52 - 5:53: value = ',', isAfterSpace = false]
StringLiteral[5:54 - 5:62: value = '|| || ', isAfterSpace = true]
Punctuator[5:62 - 5:63: value = ']', isAfterSpace = false]
EOL[5:63 - 5:63: value = ';', isAfterSpace = false]
Identifier[6:64 - 6:67: value = 'map', isAfterSpace = false]
Punctuator[6:67 - 6:68: value = '.', isAfterSpace = false]
Identifier[6:68 - 6:69: value = 'b', isAfterSpace = false]
Punctuator[6:70 - 6:71: value = '=', isAfterSpace = true]
Punctuator[6:72 - 6:73: value = '[', isAfterSpace = true]
StringLiteral[6:73 - 6:80: value = '||¯/ ', isAfterSpace = false]
Punctuator[6:80 - 6:81: value = ',', isAfterSpace = false]
StringLiteral[6:82 - 6:89: value = '|| \\\\ ', isAfterSpace = true]
Punctuator[6:89 - 6:90: value = ',', isAfterSpace = false]
StringLiteral[6:91 - 6:98: value = '||_/ ', isAfterSpace = true]
Punctuator[6:98 - 6:99: value = ']', isAfterSpace = false]
EOL[6:99 - 6:99: value = ';', isAfterSpace = false]
Identifier[7:100 - 7:103: value = 'map', isAfterSpace = false]
Punctuator[7:103 - 7:104: value = '.', isAfterSpace = false]
Identifier[7:104 - 7:105: value = 'c', isAfterSpace = false]
Punctuator[7:106 - 7:107: value = '=', isAfterSpace = true]
Punctuator[7:108 - 7:109: value = '[', isAfterSpace = true]
StringLiteral[7:109 - 7:115: value = '||¯ ', isAfterSpace = false]
Punctuator[7:115 - 7:116: value = ',', isAfterSpace = false]
StringLiteral[7:117 - 7:123: value = '||  ', isAfterSpace = true]
Punctuator[7:123 - 7:124: value = ',', isAfterSpace = false]
StringLiteral[7:125 - 7:131: value = '||_ ', isAfterSpace = true]
Punctuator[7:131 - 7:132: value = ']', isAfterSpace = false]
EOL[7:132 - 7:132: value = ';', isAfterSpace = false]
Identifier[8:133 - 8:136: value = 'map', isAfterSpace = false]
Punctuator[8:136 - 8:137: value = '.', isAfterSpace = false]
Identifier[8:137 - 8:138: value = 'd', isAfterSpace = false]
Punctuator[8:139 - 8:140: value = '=', isAfterSpace = true]
Punctuator[8:141 - 8:142: value = '[', isAfterSpace = true]
StringLiteral[8:142 - 8:150: value = '||¯\\\\\\\\ ', isAfterSpace = false]
Punctuator[8:150 - 8:151: value = ',', isAfterSpace = false]
StringLiteral[8:152 - 8:160: value = '|| // ', isAfterSpace = true]
Punctuator[8:160 - 8:161: value = ',', isAfterSpace = false]
StringLiteral[8:162 - 8:170: value = '||//  ', isAfterSpace = true]
Punctuator[8:170 - 8:171: value = ']', isAfterSpace = false]
EOL[8:171 - 8:171: value = ';', isAfterSpace = false]
Identifier[9:172 - 9:175: value = 'map', isAfterSpace = false]
Punctuator[9:175 - 9:176: value = '.', isAfterSpace = false]
Identifier[9:176 - 9:177: value = 'e', isAfterSpace = false]
Punctuator[9:178 - 9:179: value = '=', isAfterSpace = true]
Punctuator[9:180 - 9:181: value = '[', isAfterSpace = true]
StringLiteral[9:181 - 9:187: value = '||¯ ', isAfterSpace = false]
Punctuator[9:187 - 9:188: value = ',', isAfterSpace = false]
StringLiteral[9:189 - 9:195: value = '||- ', isAfterSpace = true]
Punctuator[9:195 - 9:196: value = ',', isAfterSpace = false]
StringLiteral[9:197 - 9:203: value = '||_ ', isAfterSpace = true]
Punctuator[9:203 - 9:204: value = ']', isAfterSpace = false]
EOL[9:204 - 9:204: value = ';', isAfterSpace = false]
Identifier[10:205 - 10:208: value = 'map', isAfterSpace = false]
Punctuator[10:208 - 10:209: value = '.', isAfterSpace = false]
Identifier[10:209 - 10:210: value = 'f', isAfterSpace = false]
Punctuator[10:211 - 10:212: value = '=', isAfterSpace = true]
Punctuator[10:213 - 10:214: value = '[', isAfterSpace = true]
StringLiteral[10:214 - 10:220: value = '||¯ ', isAfterSpace = false]
Punctuator[10:220 - 10:221: value = ',', isAfterSpace = false]
StringLiteral[10:222 - 10:228: value = '||_ ', isAfterSpace = true]
Punctuator[10:228 - 10:229: value = ',', isAfterSpace = false]
StringLiteral[10:230 - 10:236: value = '||  ', isAfterSpace = true]
Punctuator[10:236 - 10:237: value = ']', isAfterSpace = false]
EOL[10:237 - 10:237: value = ';', isAfterSpace = false]
Identifier[11:238 - 11:241: value = 'map', isAfterSpace = false]
Punctuator[11:241 - 11:242: value = '.', isAfterSpace = false]
Identifier[11:242 - 11:243: value = 'g', isAfterSpace = false]
Punctuator[11:244 - 11:245: value = '=', isAfterSpace = true]
Punctuator[11:246 - 11:247: value = '[', isAfterSpace = true]
StringLiteral[11:247 - 11:255: value = '||¯¯  ', isAfterSpace = false]
Punctuator[11:255 - 11:256: value = ',', isAfterSpace = false]
StringLiteral[11:257 - 11:265: value = '|| \\\\\\\\ ', isAfterSpace = true]
Punctuator[11:265 - 11:266: value = ',', isAfterSpace = false]
StringLiteral[11:267 - 11:275: value = '||_|| ', isAfterSpace = true]
Punctuator[11:275 - 11:276: value = ']', isAfterSpace = false]
EOL[11:276 - 11:276: value = ';', isAfterSpace = false]
Identifier[12:277 - 12:280: value = 'map', isAfterSpace = false]
Punctuator[12:280 - 12:281: value = '.', isAfterSpace = false]
Identifier[12:281 - 12:282: value = 'h', isAfterSpace = false]
Punctuator[12:283 - 12:284: value = '=', isAfterSpace = true]
Punctuator[12:285 - 12:286: value = '[', isAfterSpace = true]
StringLiteral[12:286 - 12:294: value = '|| || ', isAfterSpace = false]
Punctuator[12:294 - 12:295: value = ',', isAfterSpace = false]
StringLiteral[12:296 - 12:304: value = '||-|| ', isAfterSpace = true]
Punctuator[12:304 - 12:305: value = ',', isAfterSpace = false]
StringLiteral[12:306 - 12:314: value = '|| || ', isAfterSpace = true]
Punctuator[12:314 - 12:315: value = ']', isAfterSpace = false]
EOL[12:315 - 12:315: value = ';', isAfterSpace = false]
Identifier[13:316 - 13:319: value = 'map', isAfterSpace = false]
Punctuator[13:319 - 13:320: value = '.', isAfterSpace = false]
Identifier[13:320 - 13:321: value = 'i', isAfterSpace = false]
Punctuator[13:322 - 13:323: value = '=', isAfterSpace = true]
Punctuator[13:324 - 13:325: value = '[', isAfterSpace = true]
StringLiteral[13:325 - 13:330: value = '|| ', isAfterSpace = false]
Punctuator[13:330 - 13:331: value = ',', isAfterSpace = false]
StringLiteral[13:332 - 13:337: value = '|| ', isAfterSpace = true]
Punctuator[13:337 - 13:338: value = ',', isAfterSpace = false]
StringLiteral[13:339 - 13:344: value = '|| ', isAfterSpace = true]
Punctuator[13:344 - 13:345: value = ']', isAfterSpace = false]
EOL[13:345 - 13:345: value = ';', isAfterSpace = false]
Identifier[14:346 - 14:349: value = 'map', isAfterSpace = false]
Punctuator[14:349 - 14:350: value = '.', isAfterSpace = false]
Identifier[14:350 - 14:351: value = 'j', isAfterSpace = false]
Punctuator[14:352 - 14:353: value = '=', isAfterSpace = true]
Punctuator[14:354 - 14:355: value = '[', isAfterSpace = true]
StringLiteral[14:355 - 14:363: value = ' ¯||¯ ', isAfterSpace = false]
Punctuator[14:363 - 14:364: value = ',', isAfterSpace = false]
StringLiteral[14:365 - 14:373: value = '  ||  ', isAfterSpace = true]
Punctuator[14:373 - 14:374: value = ',', isAfterSpace = false]
StringLiteral[14:375 - 14:383: value = '|_||  ', isAfterSpace = true]
Punctuator[14:383 - 14:384: value = ']', isAfterSpace = false]
EOL[14:384 - 14:384: value = ';', isAfterSpace = false]
Identifier[15:385 - 15:388: value = 'map', isAfterSpace = false]
Punctuator[15:388 - 15:389: value = '.', isAfterSpace = false]
Identifier[15:389 - 15:390: value = 'k', isAfterSpace = false]
Punctuator[15:391 - 15:392: value = '=', isAfterSpace = true]
Punctuator[15:393 - 15:394: value = '[', isAfterSpace = true]
StringLiteral[15:394 - 15:402: value = '||  / ', isAfterSpace = false]
Punctuator[15:402 - 15:403: value = ',', isAfterSpace = false]
StringLiteral[15:404 - 15:412: value = '|| /  ', isAfterSpace = true]
Punctuator[15:412 - 15:413: value = ',', isAfterSpace = false]
StringLiteral[15:414 - 15:422: value = '||¯\\\\\\\\ ', isAfterSpace = true]
Punctuator[15:422 - 15:423: value = ']', isAfterSpace = false]
EOL[15:423 - 15:423: value = ';', isAfterSpace = false]
Identifier[16:424 - 16:427: value = 'map', isAfterSpace = false]
Punctuator[16:427 - 16:428: value = '.', isAfterSpace = false]
Identifier[16:428 - 16:429: value = 'l', isAfterSpace = false]
Punctuator[16:430 - 16:431: value = '=', isAfterSpace = true]
Punctuator[16:432 - 16:433: value = '[', isAfterSpace = true]
StringLiteral[16:433 - 16:439: value = '||  ', isAfterSpace = false]
Punctuator[16:439 - 16:440: value = ',', isAfterSpace = false]
StringLiteral[16:441 - 16:447: value = '||  ', isAfterSpace = true]
Punctuator[16:447 - 16:448: value = ',', isAfterSpace = false]
StringLiteral[16:449 - 16:455: value = '||_ ', isAfterSpace = true]
Punctuator[16:455 - 16:456: value = ']', isAfterSpace = false]
EOL[16:456 - 16:456: value = ';', isAfterSpace = false]
Identifier[17:457 - 17:460: value = 'map', isAfterSpace = false]
Punctuator[17:460 - 17:461: value = '.', isAfterSpace = false]
Identifier[17:461 - 17:462: value = 'm', isAfterSpace = false]
Punctuator[17:463 - 17:464: value = '=', isAfterSpace = true]
Punctuator[17:465 - 17:466: value = '[', isAfterSpace = true]
StringLiteral[17:466 - 17:476: value = '||\\\\\\\\/|| ', isAfterSpace = false]
Punctuator[17:476 - 17:477: value = ',', isAfterSpace = false]
StringLiteral[17:478 - 17:488: value = '||   || ', isAfterSpace = true]
Punctuator[17:488 - 17:489: value = ',', isAfterSpace = false]
StringLiteral[17:490 - 17:500: value = '||   || ', isAfterSpace = true]
Punctuator[17:500 - 17:501: value = ']', isAfterSpace = false]
EOL[17:501 - 17:501: value = ';', isAfterSpace = false]
Identifier[18:502 - 18:505: value = 'map', isAfterSpace = false]
Punctuator[18:505 - 18:506: value = '.', isAfterSpace = false]
Identifier[18:506 - 18:507: value = 'n', isAfterSpace = false]
Punctuator[18:508 - 18:509: value = '=', isAfterSpace = true]
Punctuator[18:510 - 18:511: value = '[', isAfterSpace = true]
StringLiteral[18:511 - 18:521: value = '||\\\\\\\\ || ', isAfterSpace = false]
Punctuator[18:521 - 18:522: value = ',', isAfterSpace = false]
StringLiteral[18:523 - 18:533: value = '|| \\\\\\\\|| ', isAfterSpace = true]
Punctuator[18:533 - 18:534: value = ',', isAfterSpace = false]
StringLiteral[18:535 - 18:545: value = '||  \\\\|| ', isAfterSpace = true]
Punctuator[18:545 - 18:546: value = ']', isAfterSpace = false]
EOL[18:546 - 18:546: value = ';', isAfterSpace = false]
Identifier[19:547 - 19:550: value = 'map', isAfterSpace = false]
Punctuator[19:550 - 19:551: value = '.', isAfterSpace = false]
Identifier[19:551 - 19:552: value = 'o', isAfterSpace = false]
Punctuator[19:553 - 19:554: value = '=', isAfterSpace = true]
Punctuator[19:555 - 19:556: value = '[', isAfterSpace = true]
StringLiteral[19:556 - 19:564: value = '||¯|| ', isAfterSpace = false]
Punctuator[19:564 - 19:565: value = ',', isAfterSpace = false]
StringLiteral[19:566 - 19:574: value = '|| || ', isAfterSpace = true]
Punctuator[19:574 - 19:575: value = ',', isAfterSpace = false]
StringLiteral[19:576 - 19:584: value = '||_|| ', isAfterSpace = true]
Punctuator[19:584 - 19:585: value = ']', isAfterSpace = false]
EOL[19:585 - 19:585: value = ';', isAfterSpace = false]
Identifier[20:586 - 20:589: value = 'map', isAfterSpace = false]
Punctuator[20:589 - 20:590: value = '.', isAfterSpace = false]
Identifier[20:590 - 20:591: value = 'p', isAfterSpace = false]
Punctuator[20:592 - 20:593: value = '=', isAfterSpace = true]
Punctuator[20:594 - 20:595: value = '[', isAfterSpace = true]
StringLiteral[20:595 - 20:603: value = '||¯|| ', isAfterSpace = false]
Punctuator[20:603 - 20:604: value = ',', isAfterSpace = false]
StringLiteral[20:605 - 20:613: value = '||_|| ', isAfterSpace = true]
Punctuator[20:613 - 20:614: value = ',', isAfterSpace = false]
StringLiteral[20:615 - 20:623: value = '||    ', isAfterSpace = true]
Punctuator[20:623 - 20:624: value = ']', isAfterSpace = false]
EOL[20:624 - 20:624: value = ';', isAfterSpace = false]
Identifier[21:625 - 21:628: value = 'map', isAfterSpace = false]
Punctuator[21:628 - 21:629: value = '.', isAfterSpace = false]
Identifier[21:629 - 21:630: value = 'q', isAfterSpace = false]
Punctuator[21:631 - 21:632: value = '=', isAfterSpace = true]
Punctuator[21:633 - 21:634: value = '[', isAfterSpace = true]
StringLiteral[21:634 - 21:643: value = '||¯||  ', isAfterSpace = false]
Punctuator[21:643 - 21:644: value = ',', isAfterSpace = false]
StringLiteral[21:645 - 21:654: value = '|| ||  ', isAfterSpace = true]
Punctuator[21:654 - 21:655: value = ',', isAfterSpace = false]
StringLiteral[21:656 - 21:665: value = '||_||¬ ', isAfterSpace = true]
Punctuator[21:665 - 21:666: value = ']', isAfterSpace = false]
EOL[21:666 - 21:666: value = ';', isAfterSpace = false]
Identifier[22:667 - 22:670: value = 'map', isAfterSpace = false]
Punctuator[22:670 - 22:671: value = '.', isAfterSpace = false]
Identifier[22:671 - 22:672: value = 'r', isAfterSpace = false]
Punctuator[22:673 - 22:674: value = '=', isAfterSpace = true]
Punctuator[22:675 - 22:676: value = '[', isAfterSpace = true]
StringLiteral[22:676 - 22:684: value = '||¯|| ', isAfterSpace = false]
Punctuator[22:684 - 22:685: value = ',', isAfterSpace = false]
StringLiteral[22:686 - 22:694: value = '||¯\\\\\\\\ ', isAfterSpace = true]
Punctuator[22:694 - 22:695: value = ',', isAfterSpace = false]
StringLiteral[22:696 - 22:704: value = '|| || ', isAfterSpace = true]
Punctuator[22:704 - 22:705: value = ']', isAfterSpace = false]
EOL[22:705 - 22:705: value = ';', isAfterSpace = false]
Identifier[23:706 - 23:709: value = 'map', isAfterSpace = false]
Punctuator[23:709 - 23:710: value = '.', isAfterSpace = false]
Identifier[23:710 - 23:711: value = 's', isAfterSpace = false]
Punctuator[23:712 - 23:713: value = '=', isAfterSpace = true]
Punctuator[23:714 - 23:715: value = '[', isAfterSpace = true]
StringLiteral[23:715 - 23:722: value = '||¯¯ ', isAfterSpace = false]
Punctuator[23:722 - 23:723: value = ',', isAfterSpace = false]
StringLiteral[23:724 - 23:731: value = ' \\\\\\\\  ', isAfterSpace = true]
Punctuator[23:731 - 23:732: value = ',', isAfterSpace = false]
StringLiteral[23:733 - 23:740: value = '__|| ', isAfterSpace = true]
Punctuator[23:740 - 23:741: value = ']', isAfterSpace = false]
EOL[23:741 - 23:741: value = ';', isAfterSpace = false]
Identifier[24:742 - 24:745: value = 'map', isAfterSpace = false]
Punctuator[24:745 - 24:746: value = '.', isAfterSpace = false]
Identifier[24:746 - 24:747: value = 't', isAfterSpace = false]
Punctuator[24:748 - 24:749: value = '=', isAfterSpace = true]
Punctuator[24:750 - 24:751: value = '[', isAfterSpace = true]
StringLiteral[24:751 - 24:758: value = '¯||¯ ', isAfterSpace = false]
Punctuator[24:758 - 24:759: value = ',', isAfterSpace = false]
StringLiteral[24:760 - 24:767: value = ' ||  ', isAfterSpace = true]
Punctuator[24:767 - 24:768: value = ',', isAfterSpace = false]
StringLiteral[24:769 - 24:776: value = ' ||  ', isAfterSpace = true]
Punctuator[24:776 - 24:777: value = ']', isAfterSpace = false]
EOL[24:777 - 24:777: value = ';', isAfterSpace = false]
Identifier[25:778 - 25:781: value = 'map', isAfterSpace = false]
Punctuator[25:781 - 25:782: value = '.', isAfterSpace = false]
Identifier[25:782 - 25:783: value = 'u', isAfterSpace = false]
Punctuator[25:784 - 25:785: value = '=', isAfterSpace = true]
Punctuator[25:786 - 25:787: value = '[', isAfterSpace = true]
StringLiteral[25:787 - 25:795: value = '|| || ', isAfterSpace = false]
Punctuator[25:795 - 25:796: value = ',', isAfterSpace = false]
StringLiteral[25:797 - 25:805: value = '|| || ', isAfterSpace = true]
Punctuator[25:805 - 25:806: value = ',', isAfterSpace = false]
StringLiteral[25:807 - 25:815: value = '||_|| ', isAfterSpace = true]
Punctuator[25:815 - 25:816: value = ']', isAfterSpace = false]
EOL[25:816 - 25:816: value = ';', isAfterSpace = false]
Identifier[26:817 - 26:820: value = 'map', isAfterSpace = false]
Punctuator[26:820 - 26:821: value = '.', isAfterSpace = false]
Identifier[26:821 - 26:822: value = 'v', isAfterSpace = false]
Punctuator[26:823 - 26:824: value = '=', isAfterSpace = true]
Punctuator[26:825 - 26:826: value = '[', isAfterSpace = true]
StringLiteral[26:826 - 26:834: value = '\\\\\\\\ || ', isAfterSpace = false]
Punctuator[26:834 - 26:835: value = ',', isAfterSpace = false]
StringLiteral[26:836 - 26:844: value = ' \\\\\\\\|| ', isAfterSpace = true]
Punctuator[26:844 - 26:845: value = ',', isAfterSpace = false]
StringLiteral[26:846 - 26:854: value = '  \\\\\\\\| ', isAfterSpace = true]
Punctuator[26:854 - 26:855: value = ']', isAfterSpace = false]
EOL[26:855 - 26:855: value = ';', isAfterSpace = false]
Identifier[27:856 - 27:859: value = 'map', isAfterSpace = false]
Punctuator[27:859 - 27:860: value = '.', isAfterSpace = false]
Identifier[27:860 - 27:861: value = 'w', isAfterSpace = false]
Punctuator[27:862 - 27:863: value = '=', isAfterSpace = true]
Punctuator[27:864 - 27:865: value = '[', isAfterSpace = true]
StringLiteral[27:865 - 27:876: value = '\\\\\\\\ |\\\\\\\\ | ', isAfterSpace = false]
Punctuator[27:876 - 27:877: value = ',', isAfterSpace = false]
StringLiteral[27:878 - 27:889: value = ' \\\\\\\\| \\\\\\\\| ', isAfterSpace = true]
Punctuator[27:889 - 27:890: value = ',', isAfterSpace = false]
StringLiteral[27:891 - 27:902: value = '  \\\\\\\\  \\\\\\\\ ', isAfterSpace = true]
Punctuator[27:902 - 27:903: value = ']', isAfterSpace = false]
EOL[27:903 - 27:903: value = ';', isAfterSpace = false]
Identifier[28:904 - 28:907: value = 'map', isAfterSpace = false]
Punctuator[28:907 - 28:908: value = '.', isAfterSpace = false]
Identifier[28:908 - 28:909: value = 'x', isAfterSpace = false]
Punctuator[28:910 - 28:911: value = '=', isAfterSpace = true]
Punctuator[28:912 - 28:913: value = '[', isAfterSpace = true]
StringLiteral[28:913 - 28:921: value = '\\\\\\\\  / ', isAfterSpace = false]
Punctuator[28:921 - 28:922: value = ',', isAfterSpace = false]
StringLiteral[28:923 - 28:931: value = ' \\\\\\\\/  ', isAfterSpace = true]
Punctuator[28:931 - 28:932: value = ',', isAfterSpace = false]
StringLiteral[28:933 - 28:941: value = ' //\\\\  ', isAfterSpace = true]
Punctuator[28:941 - 28:942: value = ']', isAfterSpace = false]
EOL[28:942 - 28:942: value = ';', isAfterSpace = false]
Identifier[29:943 - 29:946: value = 'map', isAfterSpace = false]
Punctuator[29:946 - 29:947: value = '.', isAfterSpace = false]
Identifier[29:947 - 29:948: value = 'y', isAfterSpace = false]
Punctuator[29:949 - 29:950: value = '=', isAfterSpace = true]
Punctuator[29:951 - 29:952: value = '[', isAfterSpace = true]
StringLiteral[29:952 - 29:961: value = '\\\\\\\\  // ', isAfterSpace = false]
Punctuator[29:961 - 29:962: value = ',', isAfterSpace = false]
StringLiteral[29:963 - 29:972: value = ' \\\\\\\\//  ', isAfterSpace = true]
Punctuator[29:972 - 29:973: value = ',', isAfterSpace = false]
StringLiteral[29:974 - 29:983: value = '  ||   ', isAfterSpace = true]
Punctuator[29:983 - 29:984: value = ']', isAfterSpace = false]
EOL[29:984 - 29:984: value = ';', isAfterSpace = false]
Identifier[30:985 - 30:988: value = 'map', isAfterSpace = false]
Punctuator[30:988 - 30:989: value = '.', isAfterSpace = false]
Identifier[30:989 - 30:990: value = 'z', isAfterSpace = false]
Punctuator[30:991 - 30:992: value = '=', isAfterSpace = true]
Punctuator[30:993 - 30:994: value = '[', isAfterSpace = true]
StringLiteral[30:994 - 30:1000: value = '¯// ', isAfterSpace = false]
Punctuator[30:1000 - 30:1001: value = ',', isAfterSpace = false]
StringLiteral[30:1002 - 30:1008: value = '//  ', isAfterSpace = true]
Punctuator[30:1008 - 30:1009: value = ',', isAfterSpace = false]
StringLiteral[30:1010 - 30:1016: value = '||_ ', isAfterSpace = true]
Punctuator[30:1016 - 30:1017: value = ']', isAfterSpace = false]
EOL[30:1017 - 30:1017: value = ';', isAfterSpace = false]
Identifier[31:1018 - 31:1021: value = 'map', isAfterSpace = false]
Punctuator[31:1021 - 31:1022: value = '[', isAfterSpace = false]
StringLiteral[31:1022 - 31:1025: value = '0', isAfterSpace = false]
Punctuator[31:1025 - 31:1026: value = ']', isAfterSpace = false]
Punctuator[31:1027 - 31:1028: value = '=', isAfterSpace = true]
Punctuator[31:1029 - 31:1030: value = '[', isAfterSpace = true]
StringLiteral[31:1030 - 31:1038: value = '||¯|| ', isAfterSpace = false]
Punctuator[31:1038 - 31:1039: value = ',', isAfterSpace = false]
StringLiteral[31:1040 - 31:1048: value = '||x|| ', isAfterSpace = true]
Punctuator[31:1048 - 31:1049: value = ',', isAfterSpace = false]
StringLiteral[31:1050 - 31:1058: value = '||_|| ', isAfterSpace = true]
Punctuator[31:1058 - 31:1059: value = ']', isAfterSpace = false]
EOL[31:1059 - 31:1059: value = ';', isAfterSpace = false]
Identifier[32:1060 - 32:1063: value = 'map', isAfterSpace = false]
Punctuator[32:1063 - 32:1064: value = '[', isAfterSpace = false]
StringLiteral[32:1064 - 32:1067: value = '1', isAfterSpace = false]
Punctuator[32:1067 - 32:1068: value = ']', isAfterSpace = false]
Punctuator[32:1069 - 32:1070: value = '=', isAfterSpace = true]
Punctuator[32:1071 - 32:1072: value = '[', isAfterSpace = true]
StringLiteral[32:1072 - 32:1078: value = ''|| ', isAfterSpace = false]
Punctuator[32:1078 - 32:1079: value = ',', isAfterSpace = false]
StringLiteral[32:1080 - 32:1086: value = ' || ', isAfterSpace = true]
Punctuator[32:1086 - 32:1087: value = ',', isAfterSpace = false]
StringLiteral[32:1088 - 32:1094: value = ' || ', isAfterSpace = true]
Punctuator[32:1094 - 32:1095: value = ']', isAfterSpace = false]
EOL[32:1095 - 32:1095: value = ';', isAfterSpace = false]
Identifier[33:1096 - 33:1099: value = 'map', isAfterSpace = false]
Punctuator[33:1099 - 33:1100: value = '[', isAfterSpace = false]
StringLiteral[33:1100 - 33:1103: value = '2', isAfterSpace = false]
Punctuator[33:1103 - 33:1104: value = ']', isAfterSpace = false]
Punctuator[33:1105 - 33:1106: value = '=', isAfterSpace = true]
Punctuator[33:1107 - 33:1108: value = '[', isAfterSpace = true]
StringLiteral[33:1108 - 33:1115: value = '¯¯|| ', isAfterSpace = false]
Punctuator[33:1115 - 33:1116: value = ',', isAfterSpace = false]
StringLiteral[33:1117 - 33:1124: value = '||¯  ', isAfterSpace = true]
Punctuator[33:1124 - 33:1125: value = ',', isAfterSpace = false]
StringLiteral[33:1126 - 33:1133: value = '||_  ', isAfterSpace = true]
Punctuator[33:1133 - 33:1134: value = ']', isAfterSpace = false]
EOL[33:1134 - 33:1134: value = ';', isAfterSpace = false]
Identifier[34:1135 - 34:1138: value = 'map', isAfterSpace = false]
Punctuator[34:1138 - 34:1139: value = '[', isAfterSpace = false]
StringLiteral[34:1139 - 34:1142: value = '3', isAfterSpace = false]
Punctuator[34:1142 - 34:1143: value = ']', isAfterSpace = false]
Punctuator[34:1144 - 34:1145: value = '=', isAfterSpace = true]
Punctuator[34:1146 - 34:1147: value = '[', isAfterSpace = true]
StringLiteral[34:1147 - 34:1153: value = '¯|| ', isAfterSpace = false]
Punctuator[34:1153 - 34:1154: value = ',', isAfterSpace = false]
StringLiteral[34:1155 - 34:1161: value = '-|| ', isAfterSpace = true]
Punctuator[34:1161 - 34:1162: value = ',', isAfterSpace = false]
StringLiteral[34:1163 - 34:1169: value = '_|| ', isAfterSpace = true]
Punctuator[34:1169 - 34:1170: value = ']', isAfterSpace = false]
EOL[34:1170 - 34:1170: value = ';', isAfterSpace = false]
Identifier[35:1171 - 35:1174: value = 'map', isAfterSpace = false]
Punctuator[35:1174 - 35:1175: value = '[', isAfterSpace = false]
StringLiteral[35:1175 - 35:1178: value = '4', isAfterSpace = false]
Punctuator[35:1178 - 35:1179: value = ']', isAfterSpace = false]
Punctuator[35:1180 - 35:1181: value = '=', isAfterSpace = true]
Punctuator[35:1182 - 35:1183: value = '[', isAfterSpace = true]
StringLiteral[35:1183 - 35:1190: value = ' /|| ', isAfterSpace = false]
Punctuator[35:1190 - 35:1191: value = ',', isAfterSpace = false]
StringLiteral[35:1192 - 35:1199: value = '/_|| ', isAfterSpace = true]
Punctuator[35:1199 - 35:1200: value = ',', isAfterSpace = false]
StringLiteral[35:1201 - 35:1208: value = '  || ', isAfterSpace = true]
Punctuator[35:1208 - 35:1209: value = ']', isAfterSpace = false]
EOL[35:1209 - 35:1209: value = ';', isAfterSpace = false]
Identifier[36:1210 - 36:1213: value = 'map', isAfterSpace = false]
Punctuator[36:1213 - 36:1214: value = '[', isAfterSpace = false]
StringLiteral[36:1214 - 36:1217: value = '5', isAfterSpace = false]
Punctuator[36:1217 - 36:1218: value = ']', isAfterSpace = false]
Punctuator[36:1219 - 36:1220: value = '=', isAfterSpace = true]
Punctuator[36:1221 - 36:1222: value = '[', isAfterSpace = true]
StringLiteral[36:1222 - 36:1229: value = '||¯¯ ', isAfterSpace = false]
Punctuator[36:1229 - 36:1230: value = ',', isAfterSpace = false]
StringLiteral[36:1231 - 36:1238: value = ' ¯|| ', isAfterSpace = true]
Punctuator[36:1238 - 36:1239: value = ',', isAfterSpace = false]
StringLiteral[36:1240 - 36:1247: value = ' _|| ', isAfterSpace = true]
Punctuator[36:1247 - 36:1248: value = ']', isAfterSpace = false]
EOL[36:1248 - 36:1248: value = ';', isAfterSpace = false]
Identifier[37:1249 - 37:1252: value = 'map', isAfterSpace = false]
Punctuator[37:1252 - 37:1253: value = '[', isAfterSpace = false]
StringLiteral[37:1253 - 37:1256: value = '6', isAfterSpace = false]
Punctuator[37:1256 - 37:1257: value = ']', isAfterSpace = false]
Punctuator[37:1258 - 37:1259: value = '=', isAfterSpace = true]
Punctuator[37:1260 - 37:1261: value = '[', isAfterSpace = true]
StringLiteral[37:1261 - 37:1269: value = '||¯¯  ', isAfterSpace = false]
Punctuator[37:1269 - 37:1270: value = ',', isAfterSpace = false]
StringLiteral[37:1271 - 37:1279: value = '||¯|| ', isAfterSpace = true]
Punctuator[37:1279 - 37:1280: value = ',', isAfterSpace = false]
StringLiteral[37:1281 - 37:1289: value = '||_|| ', isAfterSpace = true]
Punctuator[37:1289 - 37:1290: value = ']', isAfterSpace = false]
EOL[37:1290 - 37:1290: value = ';', isAfterSpace = false]
Identifier[38:1291 - 38:1294: value = 'map', isAfterSpace = false]
Punctuator[38:1294 - 38:1295: value = '[', isAfterSpace = false]
StringLiteral[38:1295 - 38:1298: value = '7', isAfterSpace = false]
Punctuator[38:1298 - 38:1299: value = ']', isAfterSpace = false]
Punctuator[38:1300 - 38:1301: value = '=', isAfterSpace = true]
Punctuator[38:1302 - 38:1303: value = '[', isAfterSpace = true]
StringLiteral[38:1303 - 38:1310: value = '¯¯// ', isAfterSpace = false]
Punctuator[38:1310 - 38:1311: value = ',', isAfterSpace = false]
StringLiteral[38:1312 - 38:1319: value = ' //  ', isAfterSpace = true]
Punctuator[38:1319 - 38:1320: value = ',', isAfterSpace = false]
StringLiteral[38:1321 - 38:1328: value = '//   ', isAfterSpace = true]
Punctuator[38:1328 - 38:1329: value = ']', isAfterSpace = false]
EOL[38:1329 - 38:1329: value = ';', isAfterSpace = false]
Identifier[39:1330 - 39:1333: value = 'map', isAfterSpace = false]
Punctuator[39:1333 - 39:1334: value = '[', isAfterSpace = false]
StringLiteral[39:1334 - 39:1337: value = '8', isAfterSpace = false]
Punctuator[39:1337 - 39:1338: value = ']', isAfterSpace = false]
Punctuator[39:1339 - 39:1340: value = '=', isAfterSpace = true]
Punctuator[39:1341 - 39:1342: value = '[', isAfterSpace = true]
StringLiteral[39:1342 - 39:1350: value = '||¯|| ', isAfterSpace = false]
Punctuator[39:1350 - 39:1351: value = ',', isAfterSpace = false]
StringLiteral[39:1352 - 39:1360: value = '||-|| ', isAfterSpace = true]
Punctuator[39:1360 - 39:1361: value = ',', isAfterSpace = false]
StringLiteral[39:1362 - 39:1370: value = '||_|| ', isAfterSpace = true]
Punctuator[39:1370 - 39:1371: value = ']', isAfterSpace = false]
EOL[39:1371 - 39:1371: value = ';', isAfterSpace = false]
Identifier[40:1372 - 40:1375: value = 'map', isAfterSpace = false]
Punctuator[40:1375 - 40:1376: value = '[', isAfterSpace = false]
StringLiteral[40:1376 - 40:1379: value = '9', isAfterSpace = false]
Punctuator[40:1379 - 40:1380: value = ']', isAfterSpace = false]
Punctuator[40:1381 - 40:1382: value = '=', isAfterSpace = true]
Punctuator[40:1383 - 40:1384: value = '[', isAfterSpace = true]
StringLiteral[40:1384 - 40:1392: value = '||¯|| ', isAfterSpace = false]
Punctuator[40:1392 - 40:1393: value = ',', isAfterSpace = false]
StringLiteral[40:1394 - 40:1402: value = '  ¯|| ', isAfterSpace = true]
Punctuator[40:1402 - 40:1403: value = ',', isAfterSpace = false]
StringLiteral[40:1404 - 40:1412: value = '  //  ', isAfterSpace = true]
Punctuator[40:1412 - 40:1413: value = ']', isAfterSpace = false]
EOL[40:1413 - 40:1413: value = ';', isAfterSpace = false]
Identifier[41:1414 - 41:1417: value = 'map', isAfterSpace = false]
Punctuator[41:1417 - 41:1418: value = '[', isAfterSpace = false]
StringLiteral[41:1418 - 41:1421: value = ' ', isAfterSpace = false]
Punctuator[41:1421 - 41:1422: value = ']', isAfterSpace = false]
Punctuator[41:1423 - 41:1424: value = '=', isAfterSpace = true]
Punctuator[41:1425 - 41:1426: value = '[', isAfterSpace = true]
StringLiteral[41:1426 - 41:1430: value = '  ', isAfterSpace = false]
Punctuator[41:1430 - 41:1431: value = ',', isAfterSpace = false]
StringLiteral[41:1432 - 41:1436: value = '  ', isAfterSpace = true]
Punctuator[41:1436 - 41:1437: value = ',', isAfterSpace = false]
StringLiteral[41:1438 - 41:1442: value = '  ', isAfterSpace = true]
Punctuator[41:1442 - 41:1443: value = ']', isAfterSpace = false]
EOL[41:1443 - 41:1443: value = ';', isAfterSpace = false]
EOL[42:1444 - 42:1444: value = ';', isAfterSpace = false]
Identifier[43:1445 - 43:1453: value = 'AsciiGen', isAfterSpace = false]
Punctuator[43:1453 - 43:1454: value = '.', isAfterSpace = false]
Identifier[43:1454 - 43:1457: value = 'MAP', isAfterSpace = false]
Punctuator[43:1458 - 43:1459: value = '=', isAfterSpace = true]
Identifier[43:1460 - 43:1463: value = 'map', isAfterSpace = true]
EOL[43:1463 - 43:1463: value = ';', isAfterSpace = false]
EOL[44:1464 - 44:1464: value = ';', isAfterSpace = false]
Identifier[45:1465 - 45:1473: value = 'AsciiGen', isAfterSpace = false]
Punctuator[45:1473 - 45:1474: value = '.', isAfterSpace = false]
Identifier[45:1474 - 45:1477: value = 'gen', isAfterSpace = false]
Punctuator[45:1478 - 45:1479: value = '=', isAfterSpace = true]
Keyword[45:1480 - 45:1488: value = 'function', isAfterSpace = true]
Punctuator[45:1488 - 45:1489: value = '(', isAfterSpace = false]
Identifier[45:1489 - 45:1492: value = 'str', isAfterSpace = false]
Punctuator[45:1492 - 45:1493: value = ',', isAfterSpace = false]
Identifier[45:1494 - 45:1500: value = 'colors', isAfterSpace = true]
Punctuator[45:1500 - 45:1501: value = ')', isAfterSpace = false]
EOL[45:1502 - 45:1502: value = ';', isAfterSpace = true]
Identifier[46:1504 - 46:1505: value = 'r', isAfterSpace = true]
Punctuator[46:1506 - 46:1507: value = '=', isAfterSpace = true]
Punctuator[46:1508 - 46:1509: value = '[', isAfterSpace = true]
Punctuator[46:1509 - 46:1510: value = '[', isAfterSpace = false]
Punctuator[46:1510 - 46:1511: value = ']', isAfterSpace = false]
Punctuator[46:1511 - 46:1512: value = ',', isAfterSpace = false]
Punctuator[46:1513 - 46:1514: value = '[', isAfterSpace = true]
Punctuator[46:1514 - 46:1515: value = ']', isAfterSpace = false]
Punctuator[46:1515 - 46:1516: value = ',', isAfterSpace = false]
Punctuator[46:1517 - 46:1518: value = '[', isAfterSpace = true]
Punctuator[46:1518 - 46:1519: value = ']', isAfterSpace = false]
Punctuator[46:1519 - 46:1520: value = ']', isAfterSpace = false]
EOL[46:1520 - 46:1520: value = ';', isAfterSpace = false]
Identifier[47:1522 - 47:1527: value = 'signs', isAfterSpace = true]
Punctuator[47:1528 - 47:1529: value = '=', isAfterSpace = true]
Identifier[47:1530 - 47:1534: value = 'self', isAfterSpace = true]
Punctuator[47:1534 - 47:1535: value = '.', isAfterSpace = false]
Identifier[47:1535 - 47:1538: value = 'MAP', isAfterSpace = false]
EOL[47:1538 - 47:1538: value = ';', isAfterSpace = false]
EOL[48:1540 - 48:1540: value = ';', isAfterSpace = true]
Keyword[49:1542 - 49:1545: value = 'for', isAfterSpace = true]
Identifier[49:1546 - 49:1550: value = 'char', isAfterSpace = true]
Keyword[49:1551 - 49:1553: value = 'in', isAfterSpace = true]
Identifier[49:1554 - 49:1557: value = 'str', isAfterSpace = true]
EOL[49:1557 - 49:1557: value = ';', isAfterSpace = false]
Identifier[50:1560 - 50:1564: value = 'char', isAfterSpace = true]
Punctuator[50:1565 - 50:1566: value = '=', isAfterSpace = true]
Identifier[50:1567 - 50:1571: value = 'char', isAfterSpace = true]
Punctuator[50:1571 - 50:1572: value = '.', isAfterSpace = false]
Identifier[50:1572 - 50:1577: value = 'lower', isAfterSpace = false]
EOL[50:1577 - 50:1577: value = ';', isAfterSpace = false]
Keyword[51:1580 - 51:1582: value = 'if', isAfterSpace = true]
Punctuator[51:1583 - 51:1584: value = '(', isAfterSpace = true]
Identifier[51:1584 - 51:1589: value = 'signs', isAfterSpace = false]
Punctuator[51:1589 - 51:1590: value = '.', isAfterSpace = false]
Identifier[51:1590 - 51:1598: value = 'hasIndex', isAfterSpace = false]
Punctuator[51:1598 - 51:1599: value = '(', isAfterSpace = false]
Identifier[51:1599 - 51:1603: value = 'char', isAfterSpace = false]
Punctuator[51:1603 - 51:1604: value = ')', isAfterSpace = false]
Punctuator[51:1604 - 51:1605: value = ')', isAfterSpace = false]
Keyword[51:1606 - 51:1610: value = 'then', isAfterSpace = true]
EOL[51:1610 - 51:1610: value = ';', isAfterSpace = false]
Identifier[52:1614 - 52:1615: value = 'r', isAfterSpace = true]
Punctuator[52:1615 - 52:1616: value = '[', isAfterSpace = false]
NumericLiteral[52:1616 - 52:1617: value = '0', isAfterSpace = false]
Punctuator[52:1617 - 52:1618: value = ']', isAfterSpace = false]
Punctuator[52:1618 - 52:1619: value = '.', isAfterSpace = false]
Identifier[52:1619 - 52:1623: value = 'push', isAfterSpace = false]
Punctuator[52:1623 - 52:1624: value = '(', isAfterSpace = false]
Identifier[52:1624 - 52:1629: value = 'signs', isAfterSpace = false]
Punctuator[52:1629 - 52:1630: value = '[', isAfterSpace = false]
Identifier[52:1630 - 52:1634: value = 'char', isAfterSpace = false]
Punctuator[52:1634 - 52:1635: value = ']', isAfterSpace = false]
Punctuator[52:1635 - 52:1636: value = '[', isAfterSpace = false]
NumericLiteral[52:1636 - 52:1637: value = '0', isAfterSpace = false]
Punctuator[52:1637 - 52:1638: value = ']', isAfterSpace = false]
Punctuator[52:1638 - 52:1639: value = ')', isAfterSpace = false]
EOL[52:1639 - 52:1639: value = ';', isAfterSpace = false]
Identifier[53:1643 - 53:1644: value = 'r', isAfterSpace = true]
Punctuator[53:1644 - 53:1645: value = '[', isAfterSpace = false]
NumericLiteral[53:1645 - 53:1646: value = '1', isAfterSpace = false]
Punctuator[53:1646 - 53:1647: value = ']', isAfterSpace = false]
Punctuator[53:1647 - 53:1648: value = '.', isAfterSpace = false]
Identifier[53:1648 - 53:1652: value = 'push', isAfterSpace = false]
Punctuator[53:1652 - 53:1653: value = '(', isAfterSpace = false]
Identifier[53:1653 - 53:1658: value = 'signs', isAfterSpace = false]
Punctuator[53:1658 - 53:1659: value = '[', isAfterSpace = false]
Identifier[53:1659 - 53:1663: value = 'char', isAfterSpace = false]
Punctuator[53:1663 - 53:1664: value = ']', isAfterSpace = false]
Punctuator[53:1664 - 53:1665: value = '[', isAfterSpace = false]
NumericLiteral[53:1665 - 53:1666: value = '1', isAfterSpace = false]
Punctuator[53:1666 - 53:1667: value = ']', isAfterSpace = false]
Punctuator[53:1667 - 53:1668: value = ')', isAfterSpace = false]
EOL[53:1668 - 53:1668: value = ';', isAfterSpace = false]
Identifier[54:1672 - 54:1673: value = 'r', isAfterSpace = true]
Punctuator[54:1673 - 54:1674: value = '[', isAfterSpace = false]
NumericLiteral[54:1674 - 54:1675: value = '2', isAfterSpace = false]
Punctuator[54:1675 - 54:1676: value = ']', isAfterSpace = false]
Punctuator[54:1676 - 54:1677: value = '.', isAfterSpace = false]
Identifier[54:1677 - 54:1681: value = 'push', isAfterSpace = false]
Punctuator[54:1681 - 54:1682: value = '(', isAfterSpace = false]
Identifier[54:1682 - 54:1687: value = 'signs', isAfterSpace = false]
Punctuator[54:1687 - 54:1688: value = '[', isAfterSpace = false]
Identifier[54:1688 - 54:1692: value = 'char', isAfterSpace = false]
Punctuator[54:1692 - 54:1693: value = ']', isAfterSpace = false]
Punctuator[54:1693 - 54:1694: value = '[', isAfterSpace = false]
NumericLiteral[54:1694 - 54:1695: value = '2', isAfterSpace = false]
Punctuator[54:1695 - 54:1696: value = ']', isAfterSpace = false]
Punctuator[54:1696 - 54:1697: value = ')', isAfterSpace = false]
EOL[54:1697 - 54:1697: value = ';', isAfterSpace = false]
Keyword[55:1700 - 55:1706: value = 'end if', isAfterSpace = true]
EOL[55:1706 - 55:1706: value = ';', isAfterSpace = false]
Keyword[56:1708 - 56:1715: value = 'end for', isAfterSpace = true]
EOL[56:1715 - 56:1715: value = ';', isAfterSpace = false]
EOL[57:1716 - 57:1716: value = ';', isAfterSpace = false]
Keyword[58:1718 - 58:1720: value = 'if', isAfterSpace = true]
Punctuator[58:1721 - 58:1722: value = '(', isAfterSpace = true]
Identifier[58:1722 - 58:1728: value = 'typeof', isAfterSpace = false]
Punctuator[58:1728 - 58:1729: value = '(', isAfterSpace = false]
Identifier[58:1729 - 58:1735: value = 'colors', isAfterSpace = false]
Punctuator[58:1735 - 58:1736: value = ')', isAfterSpace = false]
Punctuator[58:1737 - 58:1739: value = '==', isAfterSpace = true]
StringLiteral[58:1740 - 58:1748: value = 'string', isAfterSpace = true]
Punctuator[58:1748 - 58:1749: value = ')', isAfterSpace = false]
Keyword[58:1750 - 58:1754: value = 'then', isAfterSpace = true]
EOL[58:1754 - 58:1754: value = ';', isAfterSpace = false]
Identifier[59:1757 - 59:1758: value = 'r', isAfterSpace = true]
Punctuator[59:1758 - 59:1759: value = '[', isAfterSpace = false]
NumericLiteral[59:1759 - 59:1760: value = '0', isAfterSpace = false]
Punctuator[59:1760 - 59:1761: value = ']', isAfterSpace = false]
Punctuator[59:1762 - 59:1763: value = '=', isAfterSpace = true]
Punctuator[59:1764 - 59:1765: value = '[', isAfterSpace = true]
StringLiteral[59:1765 - 59:1775: value = '<color=#', isAfterSpace = false]
Punctuator[59:1776 - 59:1777: value = '+', isAfterSpace = true]
Identifier[59:1778 - 59:1784: value = 'colors', isAfterSpace = true]
Punctuator[59:1785 - 59:1786: value = '+', isAfterSpace = true]
StringLiteral[59:1787 - 59:1790: value = '>', isAfterSpace = true]
Punctuator[59:1790 - 59:1791: value = ']', isAfterSpace = false]
Punctuator[59:1792 - 59:1793: value = '+', isAfterSpace = true]
Identifier[59:1794 - 59:1795: value = 'r', isAfterSpace = true]
Punctuator[59:1795 - 59:1796: value = '[', isAfterSpace = false]
NumericLiteral[59:1796 - 59:1797: value = '0', isAfterSpace = false]
Punctuator[59:1797 - 59:1798: value = ']', isAfterSpace = false]
Punctuator[59:1799 - 59:1800: value = '+', isAfterSpace = true]
Punctuator[59:1801 - 59:1802: value = '[', isAfterSpace = true]
StringLiteral[59:1802 - 59:1812: value = '</color>', isAfterSpace = false]
Punctuator[59:1812 - 59:1813: value = ']', isAfterSpace = false]
EOL[59:1813 - 59:1813: value = ';', isAfterSpace = false]
Identifier[60:1816 - 60:1817: value = 'r', isAfterSpace = true]
Punctuator[60:1817 - 60:1818: value = '[', isAfterSpace = false]
NumericLiteral[60:1818 - 60:1819: value = '1', isAfterSpace = false]
Punctuator[60:1819 - 60:1820: value = ']', isAfterSpace = false]
Punctuator[60:1821 - 60:1822: value = '=', isAfterSpace = true]
Punctuator[60:1823 - 60:1824: value = '[', isAfterSpace = true]
StringLiteral[60:1824 - 60:1834: value = '<color=#', isAfterSpace = false]
Punctuator[60:1835 - 60:1836: value = '+', isAfterSpace = true]
Identifier[60:1837 - 60:1843: value = 'colors', isAfterSpace = true]
Punctuator[60:1844 - 60:1845: value = '+', isAfterSpace = true]
StringLiteral[60:1846 - 60:1849: value = '>', isAfterSpace = true]
Punctuator[60:1849 - 60:1850: value = ']', isAfterSpace = false]
Punctuator[60:1851 - 60:1852: value = '+', isAfterSpace = true]
Identifier[60:1853 - 60:1854: value = 'r', isAfterSpace = true]
Punctuator[60:1854 - 60:1855: value = '[', isAfterSpace = false]
NumericLiteral[60:1855 - 60:1856: value = '1', isAfterSpace = false]
Punctuator[60:1856 - 60:1857: value = ']', isAfterSpace = false]
Punctuator[60:1858 - 60:1859: value = '+', isAfterSpace = true]
Punctuator[60:1860 - 60:1861: value = '[', isAfterSpace = true]
StringLiteral[60:1861 - 60:1871: value = '</color>', isAfterSpace = false]
Punctuator[60:1871 - 60:1872: value = ']', isAfterSpace = false]
EOL[60:1872 - 60:1872: value = ';', isAfterSpace = false]
Identifier[61:1875 - 61:1876: value = 'r', isAfterSpace = true]
Punctuator[61:1876 - 61:1877: value = '[', isAfterSpace = false]
NumericLiteral[61:1877 - 61:1878: value = '2', isAfterSpace = false]
Punctuator[61:1878 - 61:1879: value = ']', isAfterSpace = false]
Punctuator[61:1880 - 61:1881: value = '=', isAfterSpace = true]
Punctuator[61:1882 - 61:1883: value = '[', isAfterSpace = true]
StringLiteral[61:1883 - 61:1893: value = '<color=#', isAfterSpace = false]
Punctuator[61:1894 - 61:1895: value = '+', isAfterSpace = true]
Identifier[61:1896 - 61:1902: value = 'colors', isAfterSpace = true]
Punctuator[61:1903 - 61:1904: value = '+', isAfterSpace = true]
StringLiteral[61:1905 - 61:1908: value = '>', isAfterSpace = true]
Punctuator[61:1908 - 61:1909: value = ']', isAfterSpace = false]
Punctuator[61:1910 - 61:1911: value = '+', isAfterSpace = true]
Identifier[61:1912 - 61:1913: value = 'r', isAfterSpace = true]
Punctuator[61:1913 - 61:1914: value = '[', isAfterSpace = false]
NumericLiteral[61:1914 - 61:1915: value = '2', isAfterSpace = false]
Punctuator[61:1915 - 61:1916: value = ']', isAfterSpace = false]
Punctuator[61:1917 - 61:1918: value = '+', isAfterSpace = true]
Punctuator[61:1919 - 61:1920: value = '[', isAfterSpace = true]
StringLiteral[61:1920 - 61:1930: value = '</color>', isAfterSpace = false]
Punctuator[61:1930 - 61:1931: value = ']', isAfterSpace = false]
EOL[61:1931 - 61:1931: value = ';', isAfterSpace = false]
Keyword[62:1933 - 62:1940: value = 'else if', isAfterSpace = true]
Punctuator[62:1941 - 62:1942: value = '(', isAfterSpace = true]
Identifier[62:1942 - 62:1948: value = 'typeof', isAfterSpace = false]
Punctuator[62:1948 - 62:1949: value = '(', isAfterSpace = false]
Identifier[62:1949 - 62:1955: value = 'colors', isAfterSpace = false]
Punctuator[62:1955 - 62:1956: value = ')', isAfterSpace = false]
Punctuator[62:1957 - 62:1959: value = '==', isAfterSpace = true]
StringLiteral[62:1960 - 62:1966: value = 'list', isAfterSpace = true]
Punctuator[62:1966 - 62:1967: value = ')', isAfterSpace = false]
Keyword[62:1968 - 62:1972: value = 'then', isAfterSpace = true]
EOL[62:1972 - 62:1972: value = ';', isAfterSpace = false]
Identifier[63:1975 - 63:1976: value = 'r', isAfterSpace = true]
Punctuator[63:1976 - 63:1977: value = '[', isAfterSpace = false]
NumericLiteral[63:1977 - 63:1978: value = '0', isAfterSpace = false]
Punctuator[63:1978 - 63:1979: value = ']', isAfterSpace = false]
Punctuator[63:1980 - 63:1981: value = '=', isAfterSpace = true]
Punctuator[63:1982 - 63:1983: value = '[', isAfterSpace = true]
StringLiteral[63:1983 - 63:1993: value = '<color=#', isAfterSpace = false]
Punctuator[63:1994 - 63:1995: value = '+', isAfterSpace = true]
Identifier[63:1996 - 63:2002: value = 'colors', isAfterSpace = true]
Punctuator[63:2002 - 63:2003: value = '[', isAfterSpace = false]
NumericLiteral[63:2003 - 63:2004: value = '0', isAfterSpace = false]
Punctuator[63:2004 - 63:2005: value = ']', isAfterSpace = false]
Punctuator[63:2006 - 63:2007: value = '+', isAfterSpace = true]
StringLiteral[63:2008 - 63:2011: value = '>', isAfterSpace = true]
Punctuator[63:2011 - 63:2012: value = ']', isAfterSpace = false]
Punctuator[63:2013 - 63:2014: value = '+', isAfterSpace = true]
Identifier[63:2015 - 63:2016: value = 'r', isAfterSpace = true]
Punctuator[63:2016 - 63:2017: value = '[', isAfterSpace = false]
NumericLiteral[63:2017 - 63:2018: value = '0', isAfterSpace = false]
Punctuator[63:2018 - 63:2019: value = ']', isAfterSpace = false]
Punctuator[63:2020 - 63:2021: value = '+', isAfterSpace = true]
Punctuator[63:2022 - 63:2023: value = '[', isAfterSpace = true]
StringLiteral[63:2023 - 63:2033: value = '</color>', isAfterSpace = false]
Punctuator[63:2033 - 63:2034: value = ']', isAfterSpace = false]
EOL[63:2034 - 63:2034: value = ';', isAfterSpace = false]
Identifier[64:2037 - 64:2038: value = 'r', isAfterSpace = true]
Punctuator[64:2038 - 64:2039: value = '[', isAfterSpace = false]
NumericLiteral[64:2039 - 64:2040: value = '1', isAfterSpace = false]
Punctuator[64:2040 - 64:2041: value = ']', isAfterSpace = false]
Punctuator[64:2042 - 64:2043: value = '=', isAfterSpace = true]
Punctuator[64:2044 - 64:2045: value = '[', isAfterSpace = true]
StringLiteral[64:2045 - 64:2055: value = '<color=#', isAfterSpace = false]
Punctuator[64:2056 - 64:2057: value = '+', isAfterSpace = true]
Identifier[64:2058 - 64:2064: value = 'colors', isAfterSpace = true]
Punctuator[64:2064 - 64:2065: value = '[', isAfterSpace = false]
NumericLiteral[64:2065 - 64:2066: value = '1', isAfterSpace = false]
Punctuator[64:2066 - 64:2067: value = ']', isAfterSpace = false]
Punctuator[64:2068 - 64:2069: value = '+', isAfterSpace = true]
StringLiteral[64:2070 - 64:2073: value = '>', isAfterSpace = true]
Punctuator[64:2073 - 64:2074: value = ']', isAfterSpace = false]
Punctuator[64:2075 - 64:2076: value = '+', isAfterSpace = true]
Identifier[64:2077 - 64:2078: value = 'r', isAfterSpace = true]
Punctuator[64:2078 - 64:2079: value = '[', isAfterSpace = false]
NumericLiteral[64:2079 - 64:2080: value = '1', isAfterSpace = false]
Punctuator[64:2080 - 64:2081: value = ']', isAfterSpace = false]
Punctuator[64:2082 - 64:2083: value = '+', isAfterSpace = true]
Punctuator[64:2084 - 64:2085: value = '[', isAfterSpace = true]
StringLiteral[64:2085 - 64:2095: value = '</color>', isAfterSpace = false]
Punctuator[64:2095 - 64:2096: value = ']', isAfterSpace = false]
EOL[64:2096 - 64:2096: value = ';', isAfterSpace = false]
Identifier[65:2099 - 65:2100: value = 'r', isAfterSpace = true]
Punctuator[65:2100 - 65:2101: value = '[', isAfterSpace = false]
NumericLiteral[65:2101 - 65:2102: value = '2', isAfterSpace = false]
Punctuator[65:2102 - 65:2103: value = ']', isAfterSpace = false]
Punctuator[65:2104 - 65:2105: value = '=', isAfterSpace = true]
Punctuator[65:2106 - 65:2107: value = '[', isAfterSpace = true]
StringLiteral[65:2107 - 65:2117: value = '<color=#', isAfterSpace = false]
Punctuator[65:2118 - 65:2119: value = '+', isAfterSpace = true]
Identifier[65:2120 - 65:2126: value = 'colors', isAfterSpace = true]
Punctuator[65:2126 - 65:2127: value = '[', isAfterSpace = false]
NumericLiteral[65:2127 - 65:2128: value = '2', isAfterSpace = false]
Punctuator[65:2128 - 65:2129: value = ']', isAfterSpace = false]
Punctuator[65:2130 - 65:2131: value = '+', isAfterSpace = true]
StringLiteral[65:2132 - 65:2135: value = '>', isAfterSpace = true]
Punctuator[65:2135 - 65:2136: value = ']', isAfterSpace = false]
Punctuator[65:2137 - 65:2138: value = '+', isAfterSpace = true]
Identifier[65:2139 - 65:2140: value = 'r', isAfterSpace = true]
Punctuator[65:2140 - 65:2141: value = '[', isAfterSpace = false]
NumericLiteral[65:2141 - 65:2142: value = '2', isAfterSpace = false]
Punctuator[65:2142 - 65:2143: value = ']', isAfterSpace = false]
Punctuator[65:2144 - 65:2145: value = '+', isAfterSpace = true]
Punctuator[65:2146 - 65:2147: value = '[', isAfterSpace = true]
StringLiteral[65:2147 - 65:2157: value = '</color>', isAfterSpace = false]
Punctuator[65:2157 - 65:2158: value = ']', isAfterSpace = false]
EOL[65:2158 - 65:2158: value = ';', isAfterSpace = false]
Keyword[66:2160 - 66:2166: value = 'end if', isAfterSpace = true]
EOL[66:2166 - 66:2166: value = ';', isAfterSpace = false]
EOL[67:2167 - 67:2167: value = ';', isAfterSpace = false]
Keyword[68:2169 - 68:2175: value = 'return', isAfterSpace = true]
Punctuator[68:2176 - 68:2177: value = '[', isAfterSpace = true]
Identifier[68:2177 - 68:2178: value = 'r', isAfterSpace = false]
Punctuator[68:2178 - 68:2179: value = '[', isAfterSpace = false]
NumericLiteral[68:2179 - 68:2180: value = '0', isAfterSpace = false]
Punctuator[68:2180 - 68:2181: value = ']', isAfterSpace = false]
Punctuator[68:2181 - 68:2182: value = '.', isAfterSpace = false]
Identifier[68:2182 - 68:2186: value = 'join', isAfterSpace = false]
Punctuator[68:2186 - 68:2187: value = '(', isAfterSpace = false]
StringLiteral[68:2187 - 68:2189: value = '', isAfterSpace = false]
Punctuator[68:2189 - 68:2190: value = ')', isAfterSpace = false]
Punctuator[68:2190 - 68:2191: value = ',', isAfterSpace = false]
Identifier[68:2192 - 68:2193: value = 'r', isAfterSpace = true]
Punctuator[68:2193 - 68:2194: value = '[', isAfterSpace = false]
NumericLiteral[68:2194 - 68:2195: value = '1', isAfterSpace = false]
Punctuator[68:2195 - 68:2196: value = ']', isAfterSpace = false]
Punctuator[68:2196 - 68:2197: value = '.', isAfterSpace = false]
Identifier[68:2197 - 68:2201: value = 'join', isAfterSpace = false]
Punctuator[68:2201 - 68:2202: value = '(', isAfterSpace = false]
StringLiteral[68:2202 - 68:2204: value = '', isAfterSpace = false]
Punctuator[68:2204 - 68:2205: value = ')', isAfterSpace = false]
Punctuator[68:2205 - 68:2206: value = ',', isAfterSpace = false]
Identifier[68:2207 - 68:2208: value = 'r', isAfterSpace = true]
Punctuator[68:2208 - 68:2209: value = '[', isAfterSpace = false]
NumericLiteral[68:2209 - 68:2210: value = '2', isAfterSpace = false]
Punctuator[68:2210 - 68:2211: value = ']', isAfterSpace = false]
Punctuator[68:2211 - 68:2212: value = '.', isAfterSpace = false]
Identifier[68:2212 - 68:2216: value = 'join', isAfterSpace = false]
Punctuator[68:2216 - 68:2217: value = '(', isAfterSpace = false]
StringLiteral[68:2217 - 68:2219: value = '', isAfterSpace = false]
Punctuator[68:2219 - 68:2220: value = ')', isAfterSpace = false]
Punctuator[68:2220 - 68:2221: value = ']', isAfterSpace = false]
Punctuator[68:2221 - 68:2222: value = '.', isAfterSpace = false]
Identifier[68:2222 - 68:2226: value = 'join', isAfterSpace = false]
Punctuator[68:2226 - 68:2227: value = '(', isAfterSpace = false]
StringLiteral[68:2227 - 68:2231: value = '\\\\n', isAfterSpace = false]
Punctuator[68:2231 - 68:2232: value = ')', isAfterSpace = false]
EOL[68:2232 - 68:2232: value = ';', isAfterSpace = false]
Keyword[69:2233 - 69:2245: value = 'end function', isAfterSpace = false]
EOL[69:2245 - 69:2245: value = ';', isAfterSpace = false]
EOL[70:2246 - 70:2246: value = ';', isAfterSpace = false]
Identifier[71:2247 - 71:2252: value = 'print', isAfterSpace = false]
Punctuator[71:2252 - 71:2253: value = '(', isAfterSpace = false]
Identifier[71:2253 - 71:2261: value = 'AsciiGen', isAfterSpace = false]
Punctuator[71:2261 - 71:2262: value = '.', isAfterSpace = false]
Identifier[71:2262 - 71:2265: value = 'gen', isAfterSpace = false]
Punctuator[71:2265 - 71:2266: value = '(', isAfterSpace = false]
StringLiteral[71:2266 - 71:2273: value = 'Hallo', isAfterSpace = false]
Punctuator[71:2273 - 71:2274: value = ')', isAfterSpace = false]
Punctuator[71:2274 - 71:2275: value = ')', isAfterSpace = false]"
`;

exports[`parse default scripts binary-expressions.src 1`] = `
"Identifier[1:0 - 1:1: value = 'a', isAfterSpace = false]
Punctuator[1:2 - 1:4: value = '/=', isAfterSpace = true]
Identifier[1:5 - 1:6: value = 'b', isAfterSpace = true]
EOL[1:6 - 1:6: value = ';', isAfterSpace = false]
Identifier[2:7 - 2:8: value = 'a', isAfterSpace = false]
Punctuator[2:9 - 2:11: value = '*=', isAfterSpace = true]
Identifier[2:12 - 2:13: value = 'b', isAfterSpace = true]
EOL[2:13 - 2:13: value = ';', isAfterSpace = false]
Identifier[3:14 - 3:15: value = 'a', isAfterSpace = false]
Punctuator[3:16 - 3:18: value = '-=', isAfterSpace = true]
Identifier[3:19 - 3:20: value = 'b', isAfterSpace = true]
EOL[3:20 - 3:20: value = ';', isAfterSpace = false]
Identifier[4:21 - 4:22: value = 'a', isAfterSpace = false]
Punctuator[4:23 - 4:25: value = '+=', isAfterSpace = true]
Identifier[4:26 - 4:27: value = 'b', isAfterSpace = true]
EOL[4:27 - 4:27: value = ';', isAfterSpace = false]
Identifier[5:28 - 5:29: value = 'a', isAfterSpace = false]
Punctuator[5:30 - 5:32: value = '<<', isAfterSpace = true]
Identifier[5:33 - 5:34: value = 'b', isAfterSpace = true]
EOL[5:34 - 5:34: value = ';', isAfterSpace = false]
Identifier[6:35 - 6:36: value = 'a', isAfterSpace = false]
Punctuator[6:37 - 6:39: value = '>>', isAfterSpace = true]
Identifier[6:40 - 6:41: value = 'b', isAfterSpace = true]
EOL[6:41 - 6:41: value = ';', isAfterSpace = false]
Identifier[7:42 - 7:43: value = 'w', isAfterSpace = false]
Punctuator[7:44 - 7:45: value = '=', isAfterSpace = true]
Identifier[7:46 - 7:47: value = 'a', isAfterSpace = true]
Punctuator[7:48 - 7:51: value = '>>>', isAfterSpace = true]
Punctuator[7:52 - 7:53: value = '(', isAfterSpace = true]
Identifier[7:53 - 7:54: value = 'b', isAfterSpace = false]
Punctuator[7:55 - 7:57: value = '<<', isAfterSpace = true]
Identifier[7:58 - 7:59: value = 'c', isAfterSpace = true]
Punctuator[7:59 - 7:60: value = ')', isAfterSpace = false]
Punctuator[7:61 - 7:63: value = '>>', isAfterSpace = true]
Identifier[7:64 - 7:65: value = 'a', isAfterSpace = true]
EOL[7:65 - 7:65: value = ';', isAfterSpace = false]
Identifier[8:66 - 8:67: value = 'a', isAfterSpace = false]
Punctuator[8:68 - 8:69: value = '|', isAfterSpace = true]
Identifier[8:70 - 8:71: value = 'b', isAfterSpace = true]
EOL[8:71 - 8:71: value = ';', isAfterSpace = false]
Identifier[9:72 - 9:73: value = 'a', isAfterSpace = false]
Punctuator[9:74 - 9:75: value = '&', isAfterSpace = true]
Identifier[9:76 - 9:77: value = 'b', isAfterSpace = true]
EOL[9:77 - 9:77: value = ';', isAfterSpace = false]
Identifier[10:78 - 10:79: value = 'a', isAfterSpace = false]
Punctuator[10:80 - 10:81: value = '^', isAfterSpace = true]
Identifier[10:82 - 10:83: value = 'b', isAfterSpace = true]
EOL[10:83 - 10:83: value = ';', isAfterSpace = false]
Identifier[11:84 - 11:85: value = 'a', isAfterSpace = false]
Keyword[11:86 - 11:89: value = 'and', isAfterSpace = true]
Identifier[11:90 - 11:91: value = 'b', isAfterSpace = true]
EOL[11:91 - 11:91: value = ';', isAfterSpace = false]
Identifier[12:92 - 12:93: value = 'a', isAfterSpace = false]
Keyword[12:94 - 12:96: value = 'or', isAfterSpace = true]
Identifier[12:97 - 12:98: value = 'b', isAfterSpace = true]
EOL[12:98 - 12:98: value = ';', isAfterSpace = false]
EOL[13:99 - 13:99: value = ';', isAfterSpace = false]
EOL[14:100 - 14:100: value = ';', isAfterSpace = false]
Identifier[15:101 - 15:105: value = 'test', isAfterSpace = false]
Punctuator[15:105 - 15:106: value = '.', isAfterSpace = false]
Identifier[15:106 - 15:109: value = 'len', isAfterSpace = false]
Punctuator[15:110 - 15:111: value = '/', isAfterSpace = true]
NumericLiteral[15:112 - 15:113: value = '2', isAfterSpace = true]
EOL[15:113 - 15:113: value = ';', isAfterSpace = false]
Identifier[16:114 - 16:118: value = 'test', isAfterSpace = false]
Punctuator[16:118 - 16:119: value = '.', isAfterSpace = false]
Identifier[16:119 - 16:122: value = 'len', isAfterSpace = false]
Punctuator[16:123 - 16:124: value = '+', isAfterSpace = true]
NumericLiteral[16:125 - 16:126: value = '2', isAfterSpace = true]
EOL[16:126 - 16:126: value = ';', isAfterSpace = false]
Identifier[17:127 - 17:131: value = 'test', isAfterSpace = false]
Punctuator[17:131 - 17:132: value = '.', isAfterSpace = false]
Identifier[17:132 - 17:135: value = 'len', isAfterSpace = false]
Punctuator[17:136 - 17:137: value = '-', isAfterSpace = true]
NumericLiteral[17:138 - 17:139: value = '2', isAfterSpace = true]"
`;

exports[`parse default scripts callexpr-with-nl.src 1`] = `
"Identifier[1:0 - 1:1: value = 'x', isAfterSpace = false]
Punctuator[1:1 - 1:2: value = '(', isAfterSpace = false]
EOL[1:2 - 1:2: value = ';', isAfterSpace = false]
NumericLiteral[2:7 - 2:8: value = '1', isAfterSpace = true]
Punctuator[2:8 - 2:9: value = ',', isAfterSpace = false]
EOL[2:9 - 2:9: value = ';', isAfterSpace = false]
NumericLiteral[3:14 - 3:15: value = '2', isAfterSpace = true]
Punctuator[3:15 - 3:16: value = ',', isAfterSpace = false]
EOL[3:16 - 3:16: value = ';', isAfterSpace = false]
NumericLiteral[4:21 - 4:22: value = '3', isAfterSpace = true]
Punctuator[4:22 - 4:23: value = ',', isAfterSpace = false]
EOL[4:23 - 4:23: value = ';', isAfterSpace = false]
NumericLiteral[5:28 - 5:29: value = '4', isAfterSpace = true]
Punctuator[5:29 - 5:30: value = ',', isAfterSpace = false]
EOL[5:30 - 5:30: value = ';', isAfterSpace = false]
NumericLiteral[6:35 - 6:36: value = '5', isAfterSpace = true]
EOL[6:36 - 6:36: value = ';', isAfterSpace = false]
Punctuator[7:37 - 7:38: value = ')', isAfterSpace = false]"
`;

exports[`parse default scripts eol.src 1`] = `
"Keyword[1:0 - 1:2: value = 'if', isAfterSpace = false]
Punctuator[1:3 - 1:4: value = '(', isAfterSpace = true]
BooleanLiteral[1:4 - 1:8: value = 'true', isAfterSpace = false]
Punctuator[1:8 - 1:9: value = ')', isAfterSpace = false]
Keyword[1:10 - 1:14: value = 'then', isAfterSpace = true]
EOL[1:14 - 1:15: value = ';', isAfterSpace = false]
EOL[1:15 - 1:15: value = ';', isAfterSpace = false]
Identifier[2:17 - 2:22: value = 'print', isAfterSpace = true]
Punctuator[2:22 - 2:23: value = '(', isAfterSpace = false]
StringLiteral[2:23 - 2:29: value = 'true', isAfterSpace = false]
Punctuator[2:29 - 2:30: value = ')', isAfterSpace = false]
EOL[2:30 - 2:30: value = ';', isAfterSpace = false]
Keyword[3:31 - 3:35: value = 'else', isAfterSpace = false]
EOL[3:35 - 3:36: value = ';', isAfterSpace = false]
EOL[3:36 - 3:36: value = ';', isAfterSpace = false]
Identifier[4:38 - 4:43: value = 'print', isAfterSpace = true]
Punctuator[4:43 - 4:44: value = '(', isAfterSpace = false]
StringLiteral[4:44 - 4:51: value = 'false', isAfterSpace = false]
Punctuator[4:51 - 4:52: value = ')', isAfterSpace = false]
EOL[4:52 - 4:52: value = ';', isAfterSpace = false]
Keyword[5:53 - 5:59: value = 'end if', isAfterSpace = false]
EOL[5:59 - 5:60: value = ';', isAfterSpace = false]
EOL[5:60 - 5:60: value = ';', isAfterSpace = false]
EOL[6:61 - 6:61: value = ';', isAfterSpace = false]
Keyword[7:62 - 7:67: value = 'while', isAfterSpace = false]
Punctuator[7:68 - 7:69: value = '(', isAfterSpace = true]
BooleanLiteral[7:69 - 7:74: value = 'false', isAfterSpace = false]
Punctuator[7:74 - 7:75: value = ')', isAfterSpace = false]
EOL[7:75 - 7:76: value = ';', isAfterSpace = false]
EOL[7:76 - 7:76: value = ';', isAfterSpace = false]
Identifier[8:78 - 8:83: value = 'print', isAfterSpace = true]
Punctuator[8:83 - 8:84: value = '(', isAfterSpace = false]
StringLiteral[8:84 - 8:89: value = 'foo', isAfterSpace = false]
Punctuator[8:89 - 8:90: value = ')', isAfterSpace = false]
EOL[8:90 - 8:90: value = ';', isAfterSpace = false]
Keyword[9:91 - 9:100: value = 'end while', isAfterSpace = false]
EOL[9:100 - 9:101: value = ';', isAfterSpace = false]
EOL[9:101 - 9:101: value = ';', isAfterSpace = false]
EOL[10:102 - 10:102: value = ';', isAfterSpace = false]
Keyword[11:103 - 11:106: value = 'for', isAfterSpace = false]
Punctuator[11:107 - 11:108: value = '(', isAfterSpace = true]
Identifier[11:108 - 11:111: value = 'foo', isAfterSpace = false]
Keyword[11:112 - 11:114: value = 'in', isAfterSpace = true]
Punctuator[11:115 - 11:116: value = '[', isAfterSpace = true]
Punctuator[11:116 - 11:117: value = ']', isAfterSpace = false]
Punctuator[11:117 - 11:118: value = ')', isAfterSpace = false]
EOL[11:118 - 11:119: value = ';', isAfterSpace = false]
EOL[11:119 - 11:119: value = ';', isAfterSpace = false]
Identifier[12:121 - 12:126: value = 'print', isAfterSpace = true]
Punctuator[12:126 - 12:127: value = '(', isAfterSpace = false]
StringLiteral[12:127 - 12:132: value = 'foo', isAfterSpace = false]
Punctuator[12:132 - 12:133: value = ')', isAfterSpace = false]
EOL[12:133 - 12:133: value = ';', isAfterSpace = false]
Keyword[13:134 - 13:141: value = 'end for', isAfterSpace = false]
EOL[13:141 - 13:142: value = ';', isAfterSpace = false]"
`;

exports[`parse default scripts if-clause.src 1`] = `
"Identifier[1:0 - 1:6: value = 'params', isAfterSpace = false]
Punctuator[1:7 - 1:8: value = '=', isAfterSpace = true]
Punctuator[1:9 - 1:10: value = '[', isAfterSpace = true]
StringLiteral[1:10 - 1:22: value = '/home/test', isAfterSpace = false]
Punctuator[1:22 - 1:23: value = ',', isAfterSpace = false]
StringLiteral[1:24 - 1:38: value = 'myTestFolder', isAfterSpace = true]
Punctuator[1:38 - 1:39: value = ']', isAfterSpace = false]
EOL[1:39 - 1:39: value = ';', isAfterSpace = false]
EOL[2:40 - 2:40: value = ';', isAfterSpace = false]
Identifier[3:41 - 3:46: value = 'print', isAfterSpace = false]
Punctuator[3:46 - 3:47: value = '(', isAfterSpace = false]
Identifier[3:47 - 3:53: value = 'params', isAfterSpace = false]
Punctuator[3:53 - 3:54: value = '.', isAfterSpace = false]
Identifier[3:54 - 3:57: value = 'len', isAfterSpace = false]
Punctuator[3:58 - 3:60: value = '!=', isAfterSpace = true]
NumericLiteral[3:61 - 3:62: value = '1', isAfterSpace = true]
Keyword[3:63 - 3:65: value = 'or', isAfterSpace = true]
Identifier[3:66 - 3:72: value = 'params', isAfterSpace = true]
Punctuator[3:72 - 3:73: value = '[', isAfterSpace = false]
NumericLiteral[3:73 - 3:74: value = '0', isAfterSpace = false]
Punctuator[3:74 - 3:75: value = ']', isAfterSpace = false]
Punctuator[3:76 - 3:78: value = '==', isAfterSpace = true]
StringLiteral[3:79 - 3:83: value = '-h', isAfterSpace = true]
Keyword[3:84 - 3:86: value = 'or', isAfterSpace = true]
Identifier[3:87 - 3:93: value = 'params', isAfterSpace = true]
Punctuator[3:93 - 3:94: value = '[', isAfterSpace = false]
NumericLiteral[3:94 - 3:95: value = '0', isAfterSpace = false]
Punctuator[3:95 - 3:96: value = ']', isAfterSpace = false]
Punctuator[3:97 - 3:99: value = '==', isAfterSpace = true]
StringLiteral[3:100 - 3:108: value = '--help', isAfterSpace = true]
Punctuator[3:108 - 3:109: value = ')', isAfterSpace = false]
EOL[3:109 - 3:109: value = ';', isAfterSpace = false]
Identifier[4:110 - 4:115: value = 'print', isAfterSpace = false]
Punctuator[4:115 - 4:116: value = '(', isAfterSpace = false]
Punctuator[4:116 - 4:117: value = '(', isAfterSpace = false]
Identifier[4:117 - 4:123: value = 'params', isAfterSpace = false]
Punctuator[4:123 - 4:124: value = '.', isAfterSpace = false]
Identifier[4:124 - 4:127: value = 'len', isAfterSpace = false]
Punctuator[4:128 - 4:130: value = '!=', isAfterSpace = true]
NumericLiteral[4:131 - 4:132: value = '1', isAfterSpace = true]
Punctuator[4:132 - 4:133: value = ')', isAfterSpace = false]
Keyword[4:134 - 4:136: value = 'or', isAfterSpace = true]
Punctuator[4:137 - 4:138: value = '(', isAfterSpace = true]
Identifier[4:138 - 4:144: value = 'params', isAfterSpace = false]
Punctuator[4:144 - 4:145: value = '[', isAfterSpace = false]
NumericLiteral[4:145 - 4:146: value = '0', isAfterSpace = false]
Punctuator[4:146 - 4:147: value = ']', isAfterSpace = false]
Punctuator[4:148 - 4:150: value = '==', isAfterSpace = true]
StringLiteral[4:151 - 4:155: value = '-h', isAfterSpace = true]
Punctuator[4:155 - 4:156: value = ')', isAfterSpace = false]
Keyword[4:157 - 4:159: value = 'or', isAfterSpace = true]
Punctuator[4:160 - 4:161: value = '(', isAfterSpace = true]
Identifier[4:161 - 4:167: value = 'params', isAfterSpace = false]
Punctuator[4:167 - 4:168: value = '[', isAfterSpace = false]
NumericLiteral[4:168 - 4:169: value = '0', isAfterSpace = false]
Punctuator[4:169 - 4:170: value = ']', isAfterSpace = false]
Punctuator[4:171 - 4:173: value = '==', isAfterSpace = true]
StringLiteral[4:174 - 4:182: value = '--help', isAfterSpace = true]
Punctuator[4:182 - 4:183: value = ')', isAfterSpace = false]
Punctuator[4:183 - 4:184: value = ')', isAfterSpace = false]"
`;

exports[`parse default scripts if-shorthand.src 1`] = `
"Keyword[1:0 - 1:2: value = 'if', isAfterSpace = false]
Punctuator[1:3 - 1:4: value = '(', isAfterSpace = true]
BooleanLiteral[1:4 - 1:8: value = 'true', isAfterSpace = false]
Punctuator[1:8 - 1:9: value = ')', isAfterSpace = false]
Keyword[1:10 - 1:14: value = 'then', isAfterSpace = true]
Identifier[1:15 - 1:20: value = 'print', isAfterSpace = true]
Punctuator[1:20 - 1:21: value = '(', isAfterSpace = false]
StringLiteral[1:21 - 1:27: value = 'true', isAfterSpace = false]
Punctuator[1:27 - 1:28: value = ')', isAfterSpace = false]
EOL[1:28 - 1:28: value = ';', isAfterSpace = false]
Keyword[2:29 - 2:31: value = 'if', isAfterSpace = false]
Punctuator[2:32 - 2:33: value = '(', isAfterSpace = true]
BooleanLiteral[2:33 - 2:38: value = 'false', isAfterSpace = false]
Punctuator[2:38 - 2:39: value = ')', isAfterSpace = false]
Keyword[2:40 - 2:44: value = 'then', isAfterSpace = true]
Identifier[2:45 - 2:50: value = 'print', isAfterSpace = true]
Punctuator[2:50 - 2:51: value = '(', isAfterSpace = false]
StringLiteral[2:51 - 2:57: value = 'true', isAfterSpace = false]
Punctuator[2:57 - 2:58: value = ')', isAfterSpace = false]
Keyword[2:59 - 2:63: value = 'else', isAfterSpace = true]
Identifier[2:64 - 2:69: value = 'print', isAfterSpace = true]
Punctuator[2:69 - 2:70: value = '(', isAfterSpace = false]
StringLiteral[2:70 - 2:76: value = 'true', isAfterSpace = false]
Punctuator[2:76 - 2:77: value = ')', isAfterSpace = false]
EOL[2:77 - 2:77: value = ';', isAfterSpace = false]
Identifier[3:78 - 3:83: value = 'print', isAfterSpace = false]
Punctuator[3:83 - 3:84: value = '(', isAfterSpace = false]
StringLiteral[3:84 - 3:89: value = 'was', isAfterSpace = false]
Punctuator[3:89 - 3:90: value = ')', isAfterSpace = false]
EOL[3:90 - 3:90: value = ';', isAfterSpace = false]
Keyword[4:91 - 4:93: value = 'if', isAfterSpace = false]
Punctuator[4:94 - 4:95: value = '(', isAfterSpace = true]
BooleanLiteral[4:95 - 4:100: value = 'false', isAfterSpace = false]
Punctuator[4:100 - 4:101: value = ')', isAfterSpace = false]
Keyword[4:102 - 4:106: value = 'then', isAfterSpace = true]
EOL[4:106 - 4:106: value = ';', isAfterSpace = false]
Identifier[5:108 - 5:113: value = 'print', isAfterSpace = true]
Punctuator[5:113 - 5:114: value = '(', isAfterSpace = false]
BooleanLiteral[5:114 - 5:119: value = 'false', isAfterSpace = false]
Punctuator[5:119 - 5:120: value = ')', isAfterSpace = false]
EOL[5:120 - 5:120: value = ';', isAfterSpace = false]
Keyword[6:121 - 6:125: value = 'else', isAfterSpace = false]
EOL[6:125 - 6:125: value = ';', isAfterSpace = false]
Identifier[7:127 - 7:132: value = 'print', isAfterSpace = true]
Punctuator[7:132 - 7:133: value = '(', isAfterSpace = false]
BooleanLiteral[7:133 - 7:137: value = 'true', isAfterSpace = false]
Punctuator[7:137 - 7:138: value = ')', isAfterSpace = false]
EOL[7:138 - 7:138: value = ';', isAfterSpace = false]
Keyword[8:139 - 8:145: value = 'end if', isAfterSpace = false]
EOL[8:145 - 8:145: value = ';', isAfterSpace = false]
EOL[9:146 - 9:146: value = ';', isAfterSpace = false]
Keyword[10:147 - 10:150: value = 'for', isAfterSpace = false]
Punctuator[10:151 - 10:152: value = '(', isAfterSpace = true]
Identifier[10:152 - 10:153: value = 'i', isAfterSpace = false]
Keyword[10:154 - 10:156: value = 'in', isAfterSpace = true]
Punctuator[10:157 - 10:158: value = '[', isAfterSpace = true]
Punctuator[10:158 - 10:159: value = ']', isAfterSpace = false]
Punctuator[10:159 - 10:160: value = ')', isAfterSpace = false]
Identifier[10:161 - 10:166: value = 'print', isAfterSpace = true]
Punctuator[10:166 - 10:167: value = '(', isAfterSpace = false]
Identifier[10:167 - 10:168: value = 'i', isAfterSpace = false]
Punctuator[10:168 - 10:169: value = ')', isAfterSpace = false]
EOL[10:169 - 10:169: value = ';', isAfterSpace = false]
Keyword[11:170 - 11:173: value = 'for', isAfterSpace = false]
Punctuator[11:174 - 11:175: value = '(', isAfterSpace = true]
Identifier[11:175 - 11:176: value = 'b', isAfterSpace = false]
Keyword[11:177 - 11:179: value = 'in', isAfterSpace = true]
Punctuator[11:180 - 11:181: value = '[', isAfterSpace = true]
Punctuator[11:181 - 11:182: value = ']', isAfterSpace = false]
Punctuator[11:182 - 11:183: value = ')', isAfterSpace = false]
EOL[11:183 - 11:183: value = ';', isAfterSpace = false]
Identifier[12:185 - 12:190: value = 'print', isAfterSpace = true]
Punctuator[12:190 - 12:191: value = '(', isAfterSpace = false]
Identifier[12:191 - 12:192: value = 'b', isAfterSpace = false]
Punctuator[12:192 - 12:193: value = ')', isAfterSpace = false]
EOL[12:193 - 12:193: value = ';', isAfterSpace = false]
Keyword[13:194 - 13:201: value = 'end for', isAfterSpace = false]
EOL[13:201 - 13:201: value = ';', isAfterSpace = false]
Keyword[14:202 - 14:207: value = 'while', isAfterSpace = false]
Punctuator[14:208 - 14:209: value = '(', isAfterSpace = true]
Identifier[14:209 - 14:210: value = 'i', isAfterSpace = false]
Punctuator[14:211 - 14:212: value = '<', isAfterSpace = true]
Identifier[14:213 - 14:214: value = 'b', isAfterSpace = true]
Punctuator[14:214 - 14:215: value = ')', isAfterSpace = false]
Identifier[14:216 - 14:217: value = 'i', isAfterSpace = true]
Punctuator[14:218 - 14:220: value = '+=', isAfterSpace = true]
NumericLiteral[14:221 - 14:222: value = '1', isAfterSpace = true]
EOL[14:222 - 14:222: value = ';', isAfterSpace = false]
Keyword[15:223 - 15:228: value = 'while', isAfterSpace = false]
Punctuator[15:229 - 15:230: value = '(', isAfterSpace = true]
Identifier[15:230 - 15:231: value = 'b', isAfterSpace = false]
Punctuator[15:232 - 15:233: value = '<', isAfterSpace = true]
Identifier[15:234 - 15:235: value = 'i', isAfterSpace = true]
Punctuator[15:235 - 15:236: value = ')', isAfterSpace = false]
EOL[15:236 - 15:236: value = ';', isAfterSpace = false]
Identifier[16:238 - 16:239: value = 'b', isAfterSpace = true]
Punctuator[16:240 - 16:242: value = '+=', isAfterSpace = true]
NumericLiteral[16:243 - 16:244: value = '1', isAfterSpace = true]
EOL[16:244 - 16:244: value = ';', isAfterSpace = false]
Keyword[17:245 - 17:254: value = 'end while', isAfterSpace = false]
EOL[17:254 - 17:254: value = ';', isAfterSpace = false]
Identifier[18:255 - 18:265: value = 'myFunction', isAfterSpace = false]
Punctuator[18:266 - 18:267: value = '=', isAfterSpace = true]
Keyword[18:268 - 18:276: value = 'function', isAfterSpace = true]
Punctuator[18:276 - 18:277: value = '(', isAfterSpace = false]
Identifier[18:277 - 18:278: value = 'v', isAfterSpace = false]
Punctuator[18:278 - 18:279: value = ')', isAfterSpace = false]
Identifier[18:280 - 18:285: value = 'print', isAfterSpace = true]
Punctuator[18:285 - 18:286: value = '(', isAfterSpace = false]
Identifier[18:286 - 18:287: value = 'v', isAfterSpace = false]
Punctuator[18:287 - 18:288: value = ')', isAfterSpace = false]
EOL[18:288 - 18:288: value = ';', isAfterSpace = false]
Identifier[19:289 - 19:302: value = 'otherFunction', isAfterSpace = false]
Punctuator[19:303 - 19:304: value = '=', isAfterSpace = true]
Keyword[19:305 - 19:313: value = 'function', isAfterSpace = true]
Punctuator[19:313 - 19:314: value = '(', isAfterSpace = false]
Identifier[19:314 - 19:315: value = 'n', isAfterSpace = false]
Punctuator[19:315 - 19:316: value = ')', isAfterSpace = false]
EOL[19:316 - 19:316: value = ';', isAfterSpace = false]
Identifier[20:318 - 20:323: value = 'print', isAfterSpace = true]
Punctuator[20:323 - 20:324: value = '(', isAfterSpace = false]
Identifier[20:324 - 20:325: value = 'n', isAfterSpace = false]
Punctuator[20:325 - 20:326: value = ')', isAfterSpace = false]
EOL[20:326 - 20:326: value = ';', isAfterSpace = false]
Keyword[21:327 - 21:339: value = 'end function', isAfterSpace = false]
EOL[21:339 - 21:339: value = ';', isAfterSpace = false]
EOL[22:340 - 22:340: value = ';', isAfterSpace = false]
Keyword[23:341 - 23:349: value = 'function', isAfterSpace = false]
Punctuator[23:349 - 23:350: value = '(', isAfterSpace = false]
Identifier[23:350 - 23:351: value = 'm', isAfterSpace = false]
Punctuator[23:351 - 23:352: value = ')', isAfterSpace = false]
Keyword[23:353 - 23:359: value = 'return', isAfterSpace = true]
StringLiteral[23:360 - 23:365: value = 'was', isAfterSpace = true]
EOL[23:365 - 23:365: value = ';', isAfterSpace = false]
EOL[24:366 - 24:366: value = ';', isAfterSpace = false]
EOL[25:367 - 25:367: value = ';', isAfterSpace = false]
Keyword[26:368 - 26:376: value = 'function', isAfterSpace = false]
Punctuator[26:376 - 26:377: value = '(', isAfterSpace = false]
Identifier[26:377 - 26:378: value = 'b', isAfterSpace = false]
Punctuator[26:378 - 26:379: value = ')', isAfterSpace = false]
EOL[26:379 - 26:379: value = ';', isAfterSpace = false]
Keyword[27:381 - 27:383: value = 'if', isAfterSpace = true]
Punctuator[27:384 - 27:385: value = '(', isAfterSpace = true]
Identifier[27:385 - 27:386: value = 'a', isAfterSpace = false]
Punctuator[27:386 - 27:387: value = ')', isAfterSpace = false]
Keyword[27:388 - 27:392: value = 'then', isAfterSpace = true]
Keyword[27:393 - 27:399: value = 'return', isAfterSpace = true]
StringLiteral[27:400 - 27:405: value = 'foo', isAfterSpace = true]
EOL[27:405 - 27:405: value = ';', isAfterSpace = false]
Keyword[28:406 - 28:418: value = 'end function', isAfterSpace = false]
EOL[28:418 - 28:418: value = ';', isAfterSpace = false]
EOL[29:419 - 29:419: value = ';', isAfterSpace = false]
Keyword[30:420 - 30:422: value = 'if', isAfterSpace = false]
Keyword[30:423 - 30:426: value = 'not', isAfterSpace = true]
Punctuator[30:427 - 30:428: value = '@', isAfterSpace = true]
Identifier[30:428 - 30:431: value = 'ref', isAfterSpace = false]
Keyword[30:432 - 30:436: value = 'then', isAfterSpace = true]
EOL[30:436 - 30:436: value = ';', isAfterSpace = false]
Keyword[31:437 - 31:443: value = 'end if', isAfterSpace = false]
EOL[31:443 - 31:443: value = ';', isAfterSpace = false]
EOL[32:444 - 32:444: value = ';', isAfterSpace = false]
Keyword[33:445 - 33:447: value = 'if', isAfterSpace = false]
BooleanLiteral[33:448 - 33:452: value = 'true', isAfterSpace = true]
Keyword[33:453 - 33:457: value = 'then', isAfterSpace = true]
EOL[33:457 - 33:457: value = ';', isAfterSpace = false]
Identifier[34:459 - 34:472: value = 'elseSomething', isAfterSpace = true]
Punctuator[34:473 - 34:474: value = '=', isAfterSpace = true]
BooleanLiteral[34:475 - 34:480: value = 'false', isAfterSpace = true]
EOL[34:480 - 34:480: value = ';', isAfterSpace = false]
Keyword[35:481 - 35:485: value = 'else', isAfterSpace = false]
EOL[35:485 - 35:485: value = ';', isAfterSpace = false]
Keyword[36:486 - 36:492: value = 'end if', isAfterSpace = false]"
`;

exports[`parse default scripts invalid code 1`] = `Array []`;

exports[`parse default scripts map.src 1`] = `
"Identifier[1:0 - 1:4: value = 'test', isAfterSpace = false]
Punctuator[1:5 - 1:6: value = '=', isAfterSpace = true]
Punctuator[1:7 - 1:8: value = '{', isAfterSpace = true]
EOL[1:8 - 1:8: value = ';', isAfterSpace = false]
Punctuator[2:13 - 2:14: value = '{', isAfterSpace = true]
StringLiteral[2:14 - 2:22: value = 'myTest', isAfterSpace = false]
SliceOperator[2:22 - 2:23: value = ':', isAfterSpace = false]
NumericLiteral[2:24 - 2:25: value = '0', isAfterSpace = true]
Punctuator[2:25 - 2:26: value = ',', isAfterSpace = false]
NumericLiteral[2:27 - 2:28: value = '1', isAfterSpace = true]
SliceOperator[2:28 - 2:29: value = ':', isAfterSpace = false]
NumericLiteral[2:30 - 2:31: value = '2', isAfterSpace = true]
Punctuator[2:31 - 2:32: value = '}', isAfterSpace = false]
SliceOperator[2:32 - 2:33: value = ':', isAfterSpace = false]
BooleanLiteral[2:34 - 2:38: value = 'true', isAfterSpace = true]
EOL[2:38 - 2:38: value = ';', isAfterSpace = false]
Punctuator[3:39 - 3:40: value = '}', isAfterSpace = false]
EOL[3:40 - 3:40: value = ';', isAfterSpace = false]
Identifier[4:41 - 4:46: value = 'test2', isAfterSpace = false]
Punctuator[4:47 - 4:48: value = '=', isAfterSpace = true]
Punctuator[4:49 - 4:50: value = '{', isAfterSpace = true]
EOL[4:50 - 4:50: value = ';', isAfterSpace = false]
Punctuator[5:55 - 5:56: value = '[', isAfterSpace = true]
NumericLiteral[5:56 - 5:58: value = '12', isAfterSpace = false]
Punctuator[5:58 - 5:59: value = ',', isAfterSpace = false]
NumericLiteral[5:60 - 5:62: value = '14', isAfterSpace = true]
Punctuator[5:62 - 5:63: value = ']', isAfterSpace = false]
SliceOperator[5:63 - 5:64: value = ':', isAfterSpace = false]
BooleanLiteral[5:65 - 5:69: value = 'true', isAfterSpace = true]
EOL[5:69 - 5:69: value = ';', isAfterSpace = false]
Punctuator[6:70 - 6:71: value = '}', isAfterSpace = false]
EOL[6:71 - 6:71: value = ';', isAfterSpace = false]
Identifier[7:72 - 7:77: value = 'test3', isAfterSpace = false]
Punctuator[7:78 - 7:79: value = '=', isAfterSpace = true]
Punctuator[7:80 - 7:81: value = '{', isAfterSpace = true]
EOL[7:81 - 7:81: value = ';', isAfterSpace = false]
Identifier[8:86 - 8:90: value = 'test', isAfterSpace = true]
SliceOperator[8:90 - 8:91: value = ':', isAfterSpace = false]
NumericLiteral[8:92 - 8:95: value = '234', isAfterSpace = true]
EOL[8:95 - 8:95: value = ';', isAfterSpace = false]
Punctuator[9:96 - 9:97: value = '}', isAfterSpace = false]
EOL[9:97 - 9:97: value = ';', isAfterSpace = false]
Identifier[10:98 - 10:103: value = 'test4', isAfterSpace = false]
Punctuator[10:104 - 10:105: value = '=', isAfterSpace = true]
Punctuator[10:106 - 10:107: value = '{', isAfterSpace = true]
EOL[10:107 - 10:107: value = ';', isAfterSpace = false]
BooleanLiteral[11:112 - 11:116: value = 'true', isAfterSpace = true]
SliceOperator[11:116 - 11:117: value = ':', isAfterSpace = false]
StringLiteral[11:118 - 11:123: value = 'foo', isAfterSpace = true]
EOL[11:123 - 11:123: value = ';', isAfterSpace = false]
Punctuator[12:124 - 12:125: value = '}', isAfterSpace = false]
EOL[12:125 - 12:125: value = ';', isAfterSpace = false]
Identifier[13:126 - 13:131: value = 'test5', isAfterSpace = false]
Punctuator[13:132 - 13:133: value = '=', isAfterSpace = true]
Punctuator[13:134 - 13:135: value = '{', isAfterSpace = true]
EOL[13:135 - 13:135: value = ';', isAfterSpace = false]
NumericLiteral[14:140 - 14:143: value = '123', isAfterSpace = true]
SliceOperator[14:143 - 14:144: value = ':', isAfterSpace = false]
StringLiteral[14:145 - 14:150: value = 'bar', isAfterSpace = true]
EOL[14:150 - 14:150: value = ';', isAfterSpace = false]
Punctuator[15:151 - 15:152: value = '}', isAfterSpace = false]"
`;

exports[`parse default scripts member-with-nl.src 1`] = `
"Identifier[1:0 - 1:1: value = 'x', isAfterSpace = false]
Punctuator[1:1 - 1:2: value = '.', isAfterSpace = false]
EOL[1:2 - 1:2: value = ';', isAfterSpace = false]
Identifier[2:3 - 2:7: value = 'test', isAfterSpace = false]
Punctuator[2:7 - 2:8: value = '.', isAfterSpace = false]
EOL[2:8 - 2:8: value = ';', isAfterSpace = false]
Identifier[3:9 - 3:13: value = 'test', isAfterSpace = false]
Punctuator[3:13 - 3:14: value = '.', isAfterSpace = false]
EOL[3:14 - 3:14: value = ';', isAfterSpace = false]
Identifier[4:15 - 4:19: value = 'test', isAfterSpace = false]"
`;

exports[`parse default scripts multiline.src 1`] = `
"Identifier[1:0 - 1:5: value = 'print', isAfterSpace = false]
Punctuator[1:5 - 1:6: value = '(', isAfterSpace = false]
StringLiteral[1:6 - 6:48: value = '

was
print(\\"was\\")
foo[\\"xxxx\\"].test
', isAfterSpace = false]
Punctuator[6:48 - 6:49: value = ')', isAfterSpace = false]
EOL[6:49 - 6:49: value = ';', isAfterSpace = false]
EOL[7:50 - 7:50: value = ';', isAfterSpace = false]
Identifier[8:51 - 8:56: value = 'print', isAfterSpace = false]
Punctuator[8:56 - 8:57: value = '(', isAfterSpace = false]
StringLiteral[8:57 - 9:75: value = '
print(\\"was\\") ', isAfterSpace = false]
Punctuator[9:76 - 9:77: value = '+', isAfterSpace = true]
StringLiteral[9:78 - 11:100: value = '
foo[\\"xxxx\\"].test
', isAfterSpace = true]
Punctuator[11:101 - 11:102: value = '+', isAfterSpace = true]
StringLiteral[11:103 - 15:112: value = '


was
', isAfterSpace = true]
Punctuator[15:112 - 15:113: value = ')', isAfterSpace = false]
EOL[15:113 - 15:113: value = ';', isAfterSpace = false]
EOL[16:114 - 16:114: value = ';', isAfterSpace = false]
Identifier[17:115 - 17:120: value = 'print', isAfterSpace = false]
Punctuator[17:120 - 17:121: value = '(', isAfterSpace = false]
StringLiteral[17:121 - 22:187: value = '

    if (typeof(@item.value) == \\"function\\") then

    end if
', isAfterSpace = false]
Punctuator[22:187 - 22:188: value = ')', isAfterSpace = false]"
`;

exports[`parse default scripts negation.src 1`] = `
"Identifier[1:0 - 1:4: value = 'test', isAfterSpace = false]
Punctuator[1:5 - 1:6: value = '=', isAfterSpace = true]
Punctuator[1:7 - 1:8: value = '-', isAfterSpace = true]
NumericLiteral[1:8 - 1:9: value = '1', isAfterSpace = false]
Punctuator[1:10 - 1:11: value = '+', isAfterSpace = true]
NumericLiteral[1:12 - 1:13: value = '2', isAfterSpace = true]
Punctuator[1:14 - 1:15: value = '+', isAfterSpace = true]
Punctuator[1:16 - 1:17: value = '-', isAfterSpace = true]
NumericLiteral[1:17 - 1:18: value = '2', isAfterSpace = false]
Punctuator[1:19 - 1:20: value = '+', isAfterSpace = true]
Punctuator[1:21 - 1:22: value = '+', isAfterSpace = true]
NumericLiteral[1:22 - 1:23: value = '3', isAfterSpace = false]
EOL[1:23 - 1:23: value = ';', isAfterSpace = false]
Identifier[2:24 - 2:27: value = 'foo', isAfterSpace = false]
Punctuator[2:28 - 2:29: value = '=', isAfterSpace = true]
Punctuator[2:30 - 2:31: value = '[', isAfterSpace = true]
Punctuator[2:31 - 2:32: value = '-', isAfterSpace = false]
NumericLiteral[2:32 - 2:33: value = '1', isAfterSpace = false]
Punctuator[2:33 - 2:34: value = ',', isAfterSpace = false]
Punctuator[2:35 - 2:36: value = '-', isAfterSpace = true]
NumericLiteral[2:36 - 2:37: value = '2', isAfterSpace = false]
Punctuator[2:38 - 2:39: value = '+', isAfterSpace = true]
NumericLiteral[2:40 - 2:41: value = '4', isAfterSpace = true]
Punctuator[2:41 - 2:42: value = ',', isAfterSpace = false]
Punctuator[2:43 - 2:44: value = '(', isAfterSpace = true]
Punctuator[2:44 - 2:45: value = '-', isAfterSpace = false]
NumericLiteral[2:45 - 2:46: value = '2', isAfterSpace = false]
Punctuator[2:46 - 2:47: value = ')', isAfterSpace = false]
Punctuator[2:48 - 2:49: value = '+', isAfterSpace = true]
Punctuator[2:50 - 2:51: value = '-', isAfterSpace = true]
NumericLiteral[2:51 - 2:52: value = '4', isAfterSpace = false]
Punctuator[2:53 - 2:54: value = '+', isAfterSpace = true]
Punctuator[2:55 - 2:56: value = '+', isAfterSpace = true]
NumericLiteral[2:56 - 2:57: value = '6', isAfterSpace = false]
Punctuator[2:57 - 2:58: value = ']', isAfterSpace = false]
EOL[2:58 - 2:58: value = ';', isAfterSpace = false]
EOL[3:59 - 3:59: value = ';', isAfterSpace = false]
Identifier[4:60 - 4:65: value = 'print', isAfterSpace = false]
Punctuator[4:65 - 4:66: value = '(', isAfterSpace = false]
Identifier[4:66 - 4:70: value = 'test', isAfterSpace = false]
Punctuator[4:70 - 4:71: value = ')', isAfterSpace = false]
EOL[4:71 - 4:71: value = ';', isAfterSpace = false]
Identifier[5:72 - 5:77: value = 'print', isAfterSpace = false]
Punctuator[5:77 - 5:78: value = '(', isAfterSpace = false]
Identifier[5:78 - 5:81: value = 'foo', isAfterSpace = false]
Punctuator[5:81 - 5:82: value = ')', isAfterSpace = false]"
`;

exports[`parse default scripts obj-init.src 1`] = `
"Identifier[1:0 - 1:17: value = 'valueOfIdentifier', isAfterSpace = false]
Punctuator[1:18 - 1:19: value = '=', isAfterSpace = true]
StringLiteral[1:20 - 1:25: value = 'foo', isAfterSpace = true]
EOL[1:25 - 1:25: value = ';', isAfterSpace = false]
EOL[2:26 - 2:26: value = ';', isAfterSpace = false]
Identifier[3:27 - 3:35: value = 'myObject', isAfterSpace = false]
Punctuator[3:36 - 3:37: value = '=', isAfterSpace = true]
Punctuator[3:38 - 3:39: value = '{', isAfterSpace = true]
EOL[3:39 - 3:39: value = ';', isAfterSpace = false]
StringLiteral[4:41 - 4:47: value = 'test', isAfterSpace = true]
SliceOperator[4:47 - 4:48: value = ':', isAfterSpace = false]
Punctuator[4:49 - 4:50: value = '{', isAfterSpace = true]
EOL[4:50 - 4:50: value = ';', isAfterSpace = false]
StringLiteral[5:53 - 5:62: value = 'another', isAfterSpace = true]
SliceOperator[5:62 - 5:63: value = ':', isAfterSpace = false]
StringLiteral[5:64 - 5:69: value = '123', isAfterSpace = true]
EOL[5:69 - 5:69: value = ';', isAfterSpace = false]
Punctuator[6:71 - 6:72: value = '}', isAfterSpace = true]
Punctuator[6:72 - 6:73: value = ',', isAfterSpace = false]
EOL[6:73 - 6:73: value = ';', isAfterSpace = false]
StringLiteral[7:75 - 7:82: value = 'value', isAfterSpace = true]
SliceOperator[7:82 - 7:83: value = ':', isAfterSpace = false]
StringLiteral[7:84 - 7:89: value = '123', isAfterSpace = true]
Punctuator[7:89 - 7:90: value = ',', isAfterSpace = false]
EOL[7:90 - 7:90: value = ';', isAfterSpace = false]
StringLiteral[8:92 - 8:98: value = 'idtf', isAfterSpace = true]
SliceOperator[8:98 - 8:99: value = ':', isAfterSpace = false]
Identifier[8:100 - 8:117: value = 'valueOfIdentifier', isAfterSpace = true]
EOL[8:117 - 8:117: value = ';', isAfterSpace = false]
Punctuator[9:118 - 9:119: value = '}', isAfterSpace = false]
EOL[9:119 - 9:119: value = ';', isAfterSpace = false]
EOL[10:120 - 10:120: value = ';', isAfterSpace = false]
Identifier[11:121 - 11:126: value = 'print', isAfterSpace = false]
Punctuator[11:126 - 11:127: value = '(', isAfterSpace = false]
Punctuator[11:127 - 11:128: value = '[', isAfterSpace = false]
Identifier[11:128 - 11:136: value = 'myObject', isAfterSpace = false]
Punctuator[11:136 - 11:137: value = '.', isAfterSpace = false]
Identifier[11:137 - 11:141: value = 'test', isAfterSpace = false]
Punctuator[11:141 - 11:142: value = '.', isAfterSpace = false]
Identifier[11:142 - 11:149: value = 'another', isAfterSpace = false]
Punctuator[11:149 - 11:150: value = ',', isAfterSpace = false]
Identifier[11:151 - 11:159: value = 'myObject', isAfterSpace = true]
Punctuator[11:159 - 11:160: value = '.', isAfterSpace = false]
Identifier[11:160 - 11:165: value = 'value', isAfterSpace = false]
Punctuator[11:165 - 11:166: value = ',', isAfterSpace = false]
Identifier[11:167 - 11:175: value = 'myObject', isAfterSpace = true]
Punctuator[11:175 - 11:176: value = '.', isAfterSpace = false]
Identifier[11:176 - 11:180: value = 'idtf', isAfterSpace = false]
Punctuator[11:180 - 11:181: value = ']', isAfterSpace = false]
Punctuator[11:181 - 11:182: value = ')', isAfterSpace = false]
EOL[11:182 - 11:182: value = ';', isAfterSpace = false]
EOL[12:183 - 12:183: value = ';', isAfterSpace = false]
Identifier[13:184 - 13:190: value = 'myList', isAfterSpace = false]
Punctuator[13:191 - 13:192: value = '=', isAfterSpace = true]
Punctuator[13:193 - 13:194: value = '[', isAfterSpace = true]
EOL[13:194 - 13:194: value = ';', isAfterSpace = false]
Punctuator[14:196 - 14:197: value = '{', isAfterSpace = true]
EOL[14:197 - 14:197: value = ';', isAfterSpace = false]
StringLiteral[15:200 - 15:209: value = 'another', isAfterSpace = true]
SliceOperator[15:209 - 15:210: value = ':', isAfterSpace = false]
StringLiteral[15:211 - 15:216: value = '123', isAfterSpace = true]
EOL[15:216 - 15:216: value = ';', isAfterSpace = false]
Punctuator[16:218 - 16:219: value = '}', isAfterSpace = true]
Punctuator[16:219 - 16:220: value = ',', isAfterSpace = false]
EOL[16:220 - 16:220: value = ';', isAfterSpace = false]
StringLiteral[17:222 - 17:227: value = '123', isAfterSpace = true]
Punctuator[17:227 - 17:228: value = ',', isAfterSpace = false]
EOL[17:228 - 17:228: value = ';', isAfterSpace = false]
Identifier[18:230 - 18:247: value = 'valueOfIdentifier', isAfterSpace = true]
EOL[18:247 - 18:247: value = ';', isAfterSpace = false]
Punctuator[19:248 - 19:249: value = ']', isAfterSpace = false]
EOL[19:249 - 19:249: value = ';', isAfterSpace = false]
EOL[20:250 - 20:250: value = ';', isAfterSpace = false]
Identifier[21:251 - 21:256: value = 'print', isAfterSpace = false]
Punctuator[21:256 - 21:257: value = '(', isAfterSpace = false]
Identifier[21:257 - 21:263: value = 'myList', isAfterSpace = false]
Punctuator[21:263 - 21:264: value = ')', isAfterSpace = false]"
`;

exports[`parse default scripts password-generator.src 1`] = `
"Identifier[1:0 - 1:17: value = 'PasswordGenerator', isAfterSpace = false]
Punctuator[1:18 - 1:19: value = '=', isAfterSpace = true]
Punctuator[1:20 - 1:21: value = '{', isAfterSpace = true]
Punctuator[1:21 - 1:22: value = '}', isAfterSpace = false]
EOL[1:22 - 1:22: value = ';', isAfterSpace = false]
EOL[2:23 - 2:23: value = ';', isAfterSpace = false]
Identifier[3:24 - 3:41: value = 'PasswordGenerator', isAfterSpace = false]
Punctuator[3:41 - 3:42: value = '.', isAfterSpace = false]
Identifier[3:42 - 3:61: value = 'MAX_PASSWORD_LENGTH', isAfterSpace = false]
Punctuator[3:62 - 3:63: value = '=', isAfterSpace = true]
NumericLiteral[3:64 - 3:66: value = '15', isAfterSpace = true]
EOL[3:66 - 3:66: value = ';', isAfterSpace = false]
Identifier[4:67 - 4:84: value = 'PasswordGenerator', isAfterSpace = false]
Punctuator[4:84 - 4:85: value = '.', isAfterSpace = false]
Identifier[4:85 - 4:106: value = 'ALPHABETIC_CHARACTERS', isAfterSpace = false]
Punctuator[4:107 - 4:108: value = '=', isAfterSpace = true]
StringLiteral[4:109 - 4:137: value = 'qwertzuiopasdfghjklyxcvbnm', isAfterSpace = true]
EOL[4:137 - 4:137: value = ';', isAfterSpace = false]
Identifier[5:138 - 5:155: value = 'PasswordGenerator', isAfterSpace = false]
Punctuator[5:155 - 5:156: value = '.', isAfterSpace = false]
Identifier[5:156 - 5:173: value = 'NUMBER_CHARACTERS', isAfterSpace = false]
Punctuator[5:174 - 5:175: value = '=', isAfterSpace = true]
StringLiteral[5:176 - 5:188: value = '0123456789', isAfterSpace = true]
EOL[5:188 - 5:188: value = ';', isAfterSpace = false]
Identifier[6:189 - 6:206: value = 'PasswordGenerator', isAfterSpace = false]
Punctuator[6:206 - 6:207: value = '.', isAfterSpace = false]
Identifier[6:207 - 6:220: value = 'ALPHA_NUMERIC', isAfterSpace = false]
Punctuator[6:221 - 6:222: value = '=', isAfterSpace = true]
Identifier[6:223 - 6:240: value = 'PasswordGenerator', isAfterSpace = true]
Punctuator[6:240 - 6:241: value = '.', isAfterSpace = false]
Identifier[6:241 - 6:262: value = 'ALPHABETIC_CHARACTERS', isAfterSpace = false]
Punctuator[6:263 - 6:264: value = '+', isAfterSpace = true]
Identifier[6:265 - 6:282: value = 'PasswordGenerator', isAfterSpace = true]
Punctuator[6:282 - 6:283: value = '.', isAfterSpace = false]
Identifier[6:283 - 6:304: value = 'ALPHABETIC_CHARACTERS', isAfterSpace = false]
Punctuator[6:304 - 6:305: value = '.', isAfterSpace = false]
Identifier[6:305 - 6:310: value = 'upper', isAfterSpace = false]
Punctuator[6:311 - 6:312: value = '+', isAfterSpace = true]
Identifier[6:313 - 6:330: value = 'PasswordGenerator', isAfterSpace = true]
Punctuator[6:330 - 6:331: value = '.', isAfterSpace = false]
Identifier[6:331 - 6:348: value = 'NUMBER_CHARACTERS', isAfterSpace = false]
EOL[6:348 - 6:348: value = ';', isAfterSpace = false]
EOL[7:349 - 7:349: value = ';', isAfterSpace = false]
Identifier[8:350 - 8:367: value = 'PasswordGenerator', isAfterSpace = false]
Punctuator[8:367 - 8:368: value = '.', isAfterSpace = false]
Identifier[8:368 - 8:379: value = 'constructor', isAfterSpace = false]
Punctuator[8:380 - 8:381: value = '=', isAfterSpace = true]
Keyword[8:382 - 8:390: value = 'function', isAfterSpace = true]
Punctuator[8:390 - 8:391: value = '(', isAfterSpace = false]
Punctuator[8:391 - 8:392: value = ')', isAfterSpace = false]
EOL[8:392 - 8:392: value = ';', isAfterSpace = false]
Identifier[9:394 - 9:396: value = 'me', isAfterSpace = true]
Punctuator[9:397 - 9:398: value = '=', isAfterSpace = true]
Identifier[9:399 - 9:403: value = 'self', isAfterSpace = true]
EOL[9:403 - 9:403: value = ';', isAfterSpace = false]
Identifier[10:405 - 10:407: value = 'me', isAfterSpace = true]
Punctuator[10:407 - 10:408: value = '.', isAfterSpace = false]
Identifier[10:408 - 10:414: value = 'buffer', isAfterSpace = false]
Punctuator[10:415 - 10:416: value = '=', isAfterSpace = true]
Punctuator[10:417 - 10:418: value = '[', isAfterSpace = true]
NumericLiteral[10:418 - 10:419: value = '0', isAfterSpace = false]
Punctuator[10:419 - 10:420: value = ']', isAfterSpace = false]
EOL[10:420 - 10:420: value = ';', isAfterSpace = false]
Identifier[11:422 - 11:424: value = 'me', isAfterSpace = true]
Punctuator[11:424 - 11:425: value = '.', isAfterSpace = false]
Identifier[11:425 - 11:435: value = 'characters', isAfterSpace = false]
Punctuator[11:436 - 11:437: value = '=', isAfterSpace = true]
Identifier[11:438 - 11:440: value = 'me', isAfterSpace = true]
Punctuator[11:440 - 11:441: value = '.', isAfterSpace = false]
Identifier[11:441 - 11:454: value = 'ALPHA_NUMERIC', isAfterSpace = false]
EOL[11:454 - 11:454: value = ';', isAfterSpace = false]
Keyword[12:456 - 12:462: value = 'return', isAfterSpace = true]
Identifier[12:463 - 12:465: value = 'me', isAfterSpace = true]
EOL[12:465 - 12:465: value = ';', isAfterSpace = false]
Keyword[13:466 - 13:478: value = 'end function', isAfterSpace = false]
EOL[13:478 - 13:478: value = ';', isAfterSpace = false]
EOL[14:479 - 14:479: value = ';', isAfterSpace = false]
Identifier[15:480 - 15:497: value = 'PasswordGenerator', isAfterSpace = false]
Punctuator[15:497 - 15:498: value = '.', isAfterSpace = false]
Identifier[15:498 - 15:512: value = 'increaseBuffer', isAfterSpace = false]
Punctuator[15:513 - 15:514: value = '=', isAfterSpace = true]
Keyword[15:515 - 15:523: value = 'function', isAfterSpace = true]
Punctuator[15:523 - 15:524: value = '(', isAfterSpace = false]
Identifier[15:524 - 15:525: value = 'i', isAfterSpace = false]
Punctuator[15:525 - 15:526: value = ')', isAfterSpace = false]
EOL[15:526 - 15:526: value = ';', isAfterSpace = false]
Identifier[16:528 - 16:530: value = 'me', isAfterSpace = true]
Punctuator[16:531 - 16:532: value = '=', isAfterSpace = true]
Identifier[16:533 - 16:537: value = 'self', isAfterSpace = true]
EOL[16:537 - 16:537: value = ';', isAfterSpace = false]
Identifier[17:539 - 17:556: value = 'currentCharBuffer', isAfterSpace = true]
Punctuator[17:557 - 17:558: value = '=', isAfterSpace = true]
Identifier[17:559 - 17:561: value = 'me', isAfterSpace = true]
Punctuator[17:561 - 17:562: value = '.', isAfterSpace = false]
Identifier[17:562 - 17:568: value = 'buffer', isAfterSpace = false]
EOL[17:568 - 17:568: value = ';', isAfterSpace = false]
Identifier[18:570 - 18:583: value = 'maxBufferSize', isAfterSpace = true]
Punctuator[18:584 - 18:585: value = '=', isAfterSpace = true]
Identifier[18:586 - 18:588: value = 'me', isAfterSpace = true]
Punctuator[18:588 - 18:589: value = '.', isAfterSpace = false]
Identifier[18:589 - 18:599: value = 'characters', isAfterSpace = false]
Punctuator[18:599 - 18:600: value = '.', isAfterSpace = false]
Identifier[18:600 - 18:603: value = 'len', isAfterSpace = false]
EOL[18:603 - 18:603: value = ';', isAfterSpace = false]
Keyword[19:605 - 19:607: value = 'if', isAfterSpace = true]
Punctuator[19:608 - 19:609: value = '(', isAfterSpace = true]
Identifier[19:609 - 19:610: value = 'i', isAfterSpace = false]
Punctuator[19:611 - 19:613: value = '==', isAfterSpace = true]
NilLiteral[19:614 - 19:618: value = 'null', isAfterSpace = true]
Punctuator[19:618 - 19:619: value = ')', isAfterSpace = false]
Keyword[19:620 - 19:624: value = 'then', isAfterSpace = true]
Identifier[19:625 - 19:626: value = 'i', isAfterSpace = true]
Punctuator[19:627 - 19:628: value = '=', isAfterSpace = true]
Identifier[19:629 - 19:646: value = 'currentCharBuffer', isAfterSpace = true]
Punctuator[19:646 - 19:647: value = '.', isAfterSpace = false]
Identifier[19:647 - 19:650: value = 'len', isAfterSpace = false]
Punctuator[19:651 - 19:652: value = '-', isAfterSpace = true]
NumericLiteral[19:653 - 19:654: value = '1', isAfterSpace = true]
EOL[19:654 - 19:654: value = ';', isAfterSpace = false]
Identifier[20:656 - 20:657: value = 'p', isAfterSpace = true]
Punctuator[20:658 - 20:659: value = '=', isAfterSpace = true]
Identifier[20:660 - 20:677: value = 'currentCharBuffer', isAfterSpace = true]
Punctuator[20:677 - 20:678: value = '[', isAfterSpace = false]
Identifier[20:678 - 20:679: value = 'i', isAfterSpace = false]
Punctuator[20:679 - 20:680: value = ']', isAfterSpace = false]
EOL[20:680 - 20:680: value = ';', isAfterSpace = false]
Identifier[21:682 - 21:683: value = 'p', isAfterSpace = true]
Punctuator[21:684 - 21:685: value = '=', isAfterSpace = true]
Identifier[21:686 - 21:687: value = 'p', isAfterSpace = true]
Punctuator[21:688 - 21:689: value = '+', isAfterSpace = true]
NumericLiteral[21:690 - 21:691: value = '1', isAfterSpace = true]
EOL[21:691 - 21:691: value = ';', isAfterSpace = false]
Identifier[22:693 - 22:710: value = 'currentCharBuffer', isAfterSpace = true]
Punctuator[22:710 - 22:711: value = '[', isAfterSpace = false]
Identifier[22:711 - 22:712: value = 'i', isAfterSpace = false]
Punctuator[22:712 - 22:713: value = ']', isAfterSpace = false]
Punctuator[22:714 - 22:715: value = '=', isAfterSpace = true]
Identifier[22:716 - 22:717: value = 'p', isAfterSpace = true]
EOL[22:717 - 22:717: value = ';', isAfterSpace = false]
Keyword[23:719 - 23:721: value = 'if', isAfterSpace = true]
Punctuator[23:722 - 23:723: value = '(', isAfterSpace = true]
Identifier[23:723 - 23:724: value = 'p', isAfterSpace = false]
Punctuator[23:725 - 23:727: value = '==', isAfterSpace = true]
Identifier[23:728 - 23:741: value = 'maxBufferSize', isAfterSpace = true]
Punctuator[23:741 - 23:742: value = ')', isAfterSpace = false]
Keyword[23:743 - 23:747: value = 'then', isAfterSpace = true]
EOL[23:747 - 23:747: value = ';', isAfterSpace = false]
Identifier[24:750 - 24:767: value = 'currentCharBuffer', isAfterSpace = true]
Punctuator[24:767 - 24:768: value = '[', isAfterSpace = false]
Identifier[24:768 - 24:769: value = 'i', isAfterSpace = false]
Punctuator[24:769 - 24:770: value = ']', isAfterSpace = false]
Punctuator[24:771 - 24:772: value = '=', isAfterSpace = true]
NumericLiteral[24:773 - 24:774: value = '0', isAfterSpace = true]
EOL[24:774 - 24:774: value = ';', isAfterSpace = false]
Keyword[25:777 - 25:779: value = 'if', isAfterSpace = true]
Punctuator[25:780 - 25:781: value = '(', isAfterSpace = true]
Identifier[25:781 - 25:782: value = 'i', isAfterSpace = false]
Punctuator[25:783 - 25:785: value = '==', isAfterSpace = true]
NumericLiteral[25:786 - 25:787: value = '0', isAfterSpace = true]
Punctuator[25:787 - 25:788: value = ')', isAfterSpace = false]
Keyword[25:789 - 25:793: value = 'then', isAfterSpace = true]
EOL[25:793 - 25:793: value = ';', isAfterSpace = false]
Identifier[26:797 - 26:814: value = 'currentCharBuffer', isAfterSpace = true]
Punctuator[26:814 - 26:815: value = '.', isAfterSpace = false]
Identifier[26:815 - 26:819: value = 'push', isAfterSpace = false]
Punctuator[26:819 - 26:820: value = '(', isAfterSpace = false]
NumericLiteral[26:820 - 26:821: value = '0', isAfterSpace = false]
Punctuator[26:821 - 26:822: value = ')', isAfterSpace = false]
EOL[26:822 - 26:822: value = ';', isAfterSpace = false]
Keyword[27:825 - 27:829: value = 'else', isAfterSpace = true]
EOL[27:829 - 27:829: value = ';', isAfterSpace = false]
Identifier[28:833 - 28:835: value = 'me', isAfterSpace = true]
Punctuator[28:835 - 28:836: value = '.', isAfterSpace = false]
Identifier[28:836 - 28:850: value = 'increaseBuffer', isAfterSpace = false]
Punctuator[28:850 - 28:851: value = '(', isAfterSpace = false]
Identifier[28:851 - 28:852: value = 'i', isAfterSpace = false]
Punctuator[28:853 - 28:854: value = '-', isAfterSpace = true]
NumericLiteral[28:855 - 28:856: value = '1', isAfterSpace = true]
Punctuator[28:856 - 28:857: value = ')', isAfterSpace = false]
EOL[28:857 - 28:857: value = ';', isAfterSpace = false]
Keyword[29:860 - 29:866: value = 'end if', isAfterSpace = true]
EOL[29:866 - 29:866: value = ';', isAfterSpace = false]
Keyword[30:868 - 30:874: value = 'end if', isAfterSpace = true]
EOL[30:874 - 30:874: value = ';', isAfterSpace = false]
Keyword[31:875 - 31:887: value = 'end function', isAfterSpace = false]
EOL[31:887 - 31:887: value = ';', isAfterSpace = false]
EOL[32:888 - 32:888: value = ';', isAfterSpace = false]
Identifier[33:889 - 33:906: value = 'PasswordGenerator', isAfterSpace = false]
Punctuator[33:906 - 33:907: value = '.', isAfterSpace = false]
Identifier[33:907 - 33:910: value = 'gen', isAfterSpace = false]
Punctuator[33:911 - 33:912: value = '=', isAfterSpace = true]
Keyword[33:913 - 33:921: value = 'function', isAfterSpace = true]
Punctuator[33:921 - 33:922: value = '(', isAfterSpace = false]
Punctuator[33:922 - 33:923: value = ')', isAfterSpace = false]
EOL[33:923 - 33:923: value = ';', isAfterSpace = false]
Identifier[34:925 - 34:927: value = 'me', isAfterSpace = true]
Punctuator[34:928 - 34:929: value = '=', isAfterSpace = true]
Identifier[34:930 - 34:934: value = 'self', isAfterSpace = true]
EOL[34:934 - 34:934: value = ';', isAfterSpace = false]
Identifier[35:936 - 35:953: value = 'currentCharBuffer', isAfterSpace = true]
Punctuator[35:954 - 35:955: value = '=', isAfterSpace = true]
Identifier[35:956 - 35:958: value = 'me', isAfterSpace = true]
Punctuator[35:958 - 35:959: value = '.', isAfterSpace = false]
Identifier[35:959 - 35:965: value = 'buffer', isAfterSpace = false]
EOL[35:965 - 35:965: value = ';', isAfterSpace = false]
Identifier[36:967 - 36:986: value = 'generatorCharacters', isAfterSpace = true]
Punctuator[36:987 - 36:988: value = '=', isAfterSpace = true]
Identifier[36:989 - 36:991: value = 'me', isAfterSpace = true]
Punctuator[36:991 - 36:992: value = '.', isAfterSpace = false]
Identifier[36:992 - 36:1002: value = 'characters', isAfterSpace = false]
EOL[36:1002 - 36:1002: value = ';', isAfterSpace = false]
Identifier[37:1004 - 37:1012: value = 'password', isAfterSpace = true]
Punctuator[37:1013 - 37:1014: value = '=', isAfterSpace = true]
StringLiteral[37:1015 - 37:1017: value = '', isAfterSpace = true]
EOL[37:1017 - 37:1017: value = ';', isAfterSpace = false]
Identifier[38:1019 - 38:1024: value = 'index', isAfterSpace = true]
Punctuator[38:1025 - 38:1026: value = '=', isAfterSpace = true]
NumericLiteral[38:1027 - 38:1028: value = '0', isAfterSpace = true]
EOL[38:1028 - 38:1028: value = ';', isAfterSpace = false]
EOL[39:1030 - 39:1030: value = ';', isAfterSpace = true]
Keyword[40:1032 - 40:1037: value = 'while', isAfterSpace = true]
Identifier[40:1038 - 40:1043: value = 'index', isAfterSpace = true]
Punctuator[40:1044 - 40:1045: value = '<', isAfterSpace = true]
Identifier[40:1046 - 40:1063: value = 'currentCharBuffer', isAfterSpace = true]
Punctuator[40:1063 - 40:1064: value = '.', isAfterSpace = false]
Identifier[40:1064 - 40:1067: value = 'len', isAfterSpace = false]
EOL[40:1067 - 40:1067: value = ';', isAfterSpace = false]
Identifier[41:1070 - 41:1077: value = 'pointer', isAfterSpace = true]
Punctuator[41:1078 - 41:1079: value = '=', isAfterSpace = true]
Identifier[41:1080 - 41:1097: value = 'currentCharBuffer', isAfterSpace = true]
Punctuator[41:1097 - 41:1098: value = '[', isAfterSpace = false]
Identifier[41:1098 - 41:1103: value = 'index', isAfterSpace = false]
Punctuator[41:1103 - 41:1104: value = ']', isAfterSpace = false]
EOL[41:1104 - 41:1104: value = ';', isAfterSpace = false]
Identifier[42:1107 - 42:1115: value = 'password', isAfterSpace = true]
Punctuator[42:1116 - 42:1117: value = '=', isAfterSpace = true]
Identifier[42:1118 - 42:1126: value = 'password', isAfterSpace = true]
Punctuator[42:1127 - 42:1128: value = '+', isAfterSpace = true]
Identifier[42:1129 - 42:1148: value = 'generatorCharacters', isAfterSpace = true]
Punctuator[42:1148 - 42:1149: value = '[', isAfterSpace = false]
Identifier[42:1149 - 42:1156: value = 'pointer', isAfterSpace = false]
Punctuator[42:1156 - 42:1157: value = ']', isAfterSpace = false]
EOL[42:1157 - 42:1157: value = ';', isAfterSpace = false]
Keyword[43:1160 - 43:1162: value = 'if', isAfterSpace = true]
Punctuator[43:1163 - 43:1164: value = '(', isAfterSpace = true]
Identifier[43:1164 - 43:1169: value = 'index', isAfterSpace = false]
Punctuator[43:1170 - 43:1172: value = '==', isAfterSpace = true]
Identifier[43:1173 - 43:1190: value = 'currentCharBuffer', isAfterSpace = true]
Punctuator[43:1190 - 43:1191: value = '.', isAfterSpace = false]
Identifier[43:1191 - 43:1194: value = 'len', isAfterSpace = false]
Punctuator[43:1195 - 43:1196: value = '-', isAfterSpace = true]
NumericLiteral[43:1197 - 43:1198: value = '1', isAfterSpace = true]
Punctuator[43:1198 - 43:1199: value = ')', isAfterSpace = false]
Keyword[43:1200 - 43:1204: value = 'then', isAfterSpace = true]
Identifier[43:1205 - 43:1209: value = 'self', isAfterSpace = true]
Punctuator[43:1209 - 43:1210: value = '.', isAfterSpace = false]
Identifier[43:1210 - 43:1224: value = 'increaseBuffer', isAfterSpace = false]
Punctuator[43:1224 - 43:1225: value = '(', isAfterSpace = false]
Punctuator[43:1225 - 43:1226: value = ')', isAfterSpace = false]
EOL[43:1226 - 43:1226: value = ';', isAfterSpace = false]
Identifier[44:1229 - 44:1234: value = 'index', isAfterSpace = true]
Punctuator[44:1235 - 44:1236: value = '=', isAfterSpace = true]
Identifier[44:1237 - 44:1242: value = 'index', isAfterSpace = true]
Punctuator[44:1243 - 44:1244: value = '+', isAfterSpace = true]
NumericLiteral[44:1245 - 44:1246: value = '1', isAfterSpace = true]
EOL[44:1246 - 44:1246: value = ';', isAfterSpace = false]
Keyword[45:1248 - 45:1257: value = 'end while', isAfterSpace = true]
EOL[45:1257 - 45:1257: value = ';', isAfterSpace = false]
EOL[46:1258 - 46:1258: value = ';', isAfterSpace = false]
Keyword[47:1260 - 47:1262: value = 'if', isAfterSpace = true]
Punctuator[47:1263 - 47:1264: value = '(', isAfterSpace = true]
Identifier[47:1264 - 47:1281: value = 'currentCharBuffer', isAfterSpace = false]
Punctuator[47:1281 - 47:1282: value = '.', isAfterSpace = false]
Identifier[47:1282 - 47:1285: value = 'len', isAfterSpace = false]
Punctuator[47:1286 - 47:1287: value = '>', isAfterSpace = true]
Identifier[47:1288 - 47:1290: value = 'me', isAfterSpace = true]
Punctuator[47:1290 - 47:1291: value = '.', isAfterSpace = false]
Identifier[47:1291 - 47:1310: value = 'MAX_PASSWORD_LENGTH', isAfterSpace = false]
Punctuator[47:1310 - 47:1311: value = ')', isAfterSpace = false]
Keyword[47:1312 - 47:1316: value = 'then', isAfterSpace = true]
EOL[47:1316 - 47:1316: value = ';', isAfterSpace = false]
Keyword[48:1319 - 48:1325: value = 'return', isAfterSpace = true]
NilLiteral[48:1326 - 48:1330: value = 'null', isAfterSpace = true]
EOL[48:1330 - 48:1330: value = ';', isAfterSpace = false]
Keyword[49:1332 - 49:1338: value = 'end if', isAfterSpace = true]
EOL[49:1338 - 49:1338: value = ';', isAfterSpace = false]
EOL[50:1340 - 50:1340: value = ';', isAfterSpace = true]
Keyword[51:1342 - 51:1348: value = 'return', isAfterSpace = true]
Identifier[51:1349 - 51:1357: value = 'password', isAfterSpace = true]
EOL[51:1357 - 51:1357: value = ';', isAfterSpace = false]
Keyword[52:1358 - 52:1370: value = 'end function', isAfterSpace = false]
EOL[52:1370 - 52:1370: value = ';', isAfterSpace = false]
EOL[53:1371 - 53:1371: value = ';', isAfterSpace = false]
Identifier[54:1372 - 54:1376: value = 'pgen', isAfterSpace = false]
Punctuator[54:1377 - 54:1378: value = '=', isAfterSpace = true]
Punctuator[54:1379 - 54:1380: value = '(', isAfterSpace = true]
Keyword[54:1380 - 54:1383: value = 'new', isAfterSpace = false]
Identifier[54:1384 - 54:1401: value = 'PasswordGenerator', isAfterSpace = true]
Punctuator[54:1401 - 54:1402: value = ')', isAfterSpace = false]
Punctuator[54:1402 - 54:1403: value = '.', isAfterSpace = false]
Identifier[54:1403 - 54:1414: value = 'constructor', isAfterSpace = false]
Punctuator[54:1414 - 54:1415: value = '(', isAfterSpace = false]
Punctuator[54:1415 - 54:1416: value = ')', isAfterSpace = false]
EOL[54:1416 - 54:1416: value = ';', isAfterSpace = false]
EOL[55:1417 - 55:1417: value = ';', isAfterSpace = false]
Identifier[56:1418 - 56:1423: value = 'index', isAfterSpace = false]
Punctuator[56:1424 - 56:1425: value = '=', isAfterSpace = true]
NumericLiteral[56:1426 - 56:1427: value = '0', isAfterSpace = true]
EOL[56:1427 - 56:1427: value = ';', isAfterSpace = false]
Identifier[57:1428 - 57:1431: value = 'max', isAfterSpace = false]
Punctuator[57:1432 - 57:1433: value = '=', isAfterSpace = true]
NumericLiteral[57:1434 - 57:1436: value = '10', isAfterSpace = true]
EOL[57:1436 - 57:1436: value = ';', isAfterSpace = false]
Identifier[58:1437 - 58:1443: value = 'result', isAfterSpace = false]
Punctuator[58:1444 - 58:1445: value = '=', isAfterSpace = true]
Punctuator[58:1446 - 58:1447: value = '[', isAfterSpace = true]
Punctuator[58:1447 - 58:1448: value = ']', isAfterSpace = false]
EOL[58:1448 - 58:1448: value = ';', isAfterSpace = false]
EOL[59:1449 - 59:1449: value = ';', isAfterSpace = false]
Keyword[60:1450 - 60:1455: value = 'while', isAfterSpace = false]
Punctuator[60:1456 - 60:1457: value = '(', isAfterSpace = true]
Identifier[60:1457 - 60:1462: value = 'index', isAfterSpace = false]
Punctuator[60:1463 - 60:1464: value = '<', isAfterSpace = true]
Identifier[60:1465 - 60:1468: value = 'max', isAfterSpace = true]
Punctuator[60:1468 - 60:1469: value = ')', isAfterSpace = false]
EOL[60:1469 - 60:1469: value = ';', isAfterSpace = false]
Identifier[61:1471 - 61:1477: value = 'result', isAfterSpace = true]
Punctuator[61:1477 - 61:1478: value = '.', isAfterSpace = false]
Identifier[61:1478 - 61:1482: value = 'push', isAfterSpace = false]
Punctuator[61:1482 - 61:1483: value = '(', isAfterSpace = false]
Identifier[61:1483 - 61:1487: value = 'pgen', isAfterSpace = false]
Punctuator[61:1487 - 61:1488: value = '.', isAfterSpace = false]
Identifier[61:1488 - 61:1491: value = 'gen', isAfterSpace = false]
Punctuator[61:1491 - 61:1492: value = '(', isAfterSpace = false]
Punctuator[61:1492 - 61:1493: value = ')', isAfterSpace = false]
Punctuator[61:1493 - 61:1494: value = ')', isAfterSpace = false]
EOL[61:1494 - 61:1494: value = ';', isAfterSpace = false]
Identifier[62:1496 - 62:1501: value = 'index', isAfterSpace = true]
Punctuator[62:1502 - 62:1503: value = '=', isAfterSpace = true]
Identifier[62:1504 - 62:1509: value = 'index', isAfterSpace = true]
Punctuator[62:1510 - 62:1511: value = '+', isAfterSpace = true]
NumericLiteral[62:1512 - 62:1513: value = '1', isAfterSpace = true]
EOL[62:1513 - 62:1513: value = ';', isAfterSpace = false]
Keyword[63:1514 - 63:1523: value = 'end while', isAfterSpace = false]
EOL[63:1523 - 63:1523: value = ';', isAfterSpace = false]
EOL[64:1524 - 64:1524: value = ';', isAfterSpace = false]
Identifier[65:1525 - 65:1530: value = 'print', isAfterSpace = false]
Punctuator[65:1530 - 65:1531: value = '(', isAfterSpace = false]
Identifier[65:1531 - 65:1537: value = 'result', isAfterSpace = false]
Punctuator[65:1537 - 65:1538: value = ')', isAfterSpace = false]"
`;

exports[`parse default scripts pseudo-crypto.src 1`] = `
"Identifier[1:0 - 1:6: value = 'String', isAfterSpace = false]
Punctuator[1:7 - 1:8: value = '=', isAfterSpace = true]
Punctuator[1:9 - 1:10: value = '{', isAfterSpace = true]
Punctuator[1:10 - 1:11: value = '}', isAfterSpace = false]
EOL[1:11 - 1:11: value = ';', isAfterSpace = false]
EOL[2:12 - 2:12: value = ';', isAfterSpace = false]
Identifier[3:13 - 3:19: value = 'String', isAfterSpace = false]
Punctuator[3:19 - 3:20: value = '.', isAfterSpace = false]
Identifier[3:20 - 3:31: value = 'constructor', isAfterSpace = false]
Punctuator[3:32 - 3:33: value = '=', isAfterSpace = true]
Keyword[3:34 - 3:42: value = 'function', isAfterSpace = true]
Punctuator[3:42 - 3:43: value = '(', isAfterSpace = false]
Identifier[3:43 - 3:46: value = 'str', isAfterSpace = false]
Punctuator[3:46 - 3:47: value = ')', isAfterSpace = false]
EOL[3:47 - 3:47: value = ';', isAfterSpace = false]
Identifier[4:49 - 4:53: value = 'self', isAfterSpace = true]
Punctuator[4:53 - 4:54: value = '.', isAfterSpace = false]
Identifier[4:54 - 4:57: value = 'str', isAfterSpace = false]
Punctuator[4:58 - 4:59: value = '=', isAfterSpace = true]
Identifier[4:60 - 4:63: value = 'str', isAfterSpace = true]
EOL[4:63 - 4:63: value = ';', isAfterSpace = false]
Keyword[5:65 - 5:71: value = 'return', isAfterSpace = true]
Identifier[5:72 - 5:76: value = 'self', isAfterSpace = true]
EOL[5:76 - 5:76: value = ';', isAfterSpace = false]
Keyword[6:77 - 6:89: value = 'end function', isAfterSpace = false]
EOL[6:89 - 6:89: value = ';', isAfterSpace = false]
EOL[7:90 - 7:90: value = ';', isAfterSpace = false]
Identifier[8:91 - 8:97: value = 'String', isAfterSpace = false]
Punctuator[8:97 - 8:98: value = '.', isAfterSpace = false]
Identifier[8:98 - 8:103: value = 'parse', isAfterSpace = false]
Punctuator[8:104 - 8:105: value = '=', isAfterSpace = true]
Keyword[8:106 - 8:114: value = 'function', isAfterSpace = true]
Punctuator[8:114 - 8:115: value = '(', isAfterSpace = false]
Identifier[8:115 - 8:121: value = 'values', isAfterSpace = false]
Punctuator[8:121 - 8:122: value = ')', isAfterSpace = false]
EOL[8:122 - 8:122: value = ';', isAfterSpace = false]
Identifier[9:124 - 9:130: value = 'result', isAfterSpace = true]
Punctuator[9:131 - 9:132: value = '=', isAfterSpace = true]
Identifier[9:133 - 9:137: value = 'self', isAfterSpace = true]
Punctuator[9:137 - 9:138: value = '.', isAfterSpace = false]
Identifier[9:138 - 9:141: value = 'str', isAfterSpace = false]
EOL[9:141 - 9:141: value = ';', isAfterSpace = false]
Identifier[10:143 - 10:148: value = 'index', isAfterSpace = true]
Punctuator[10:149 - 10:150: value = '=', isAfterSpace = true]
NumericLiteral[10:151 - 10:152: value = '0', isAfterSpace = true]
EOL[10:152 - 10:152: value = ';', isAfterSpace = false]
Identifier[11:154 - 11:162: value = 'maxIndex', isAfterSpace = true]
Punctuator[11:163 - 11:164: value = '=', isAfterSpace = true]
Identifier[11:165 - 11:171: value = 'values', isAfterSpace = true]
Punctuator[11:171 - 11:172: value = '.', isAfterSpace = false]
Identifier[11:172 - 11:175: value = 'len', isAfterSpace = false]
EOL[11:175 - 11:175: value = ';', isAfterSpace = false]
EOL[12:176 - 12:176: value = ';', isAfterSpace = false]
Keyword[13:178 - 13:183: value = 'while', isAfterSpace = true]
Identifier[13:184 - 13:189: value = 'index', isAfterSpace = true]
Punctuator[13:190 - 13:191: value = '<', isAfterSpace = true]
Identifier[13:192 - 13:200: value = 'maxIndex', isAfterSpace = true]
EOL[13:200 - 13:200: value = ';', isAfterSpace = false]
Identifier[14:203 - 14:209: value = 'result', isAfterSpace = true]
Punctuator[14:210 - 14:211: value = '=', isAfterSpace = true]
Identifier[14:212 - 14:218: value = 'result', isAfterSpace = true]
Punctuator[14:218 - 14:219: value = '.', isAfterSpace = false]
Identifier[14:219 - 14:226: value = 'replace', isAfterSpace = false]
Punctuator[14:226 - 14:227: value = '(', isAfterSpace = false]
StringLiteral[14:227 - 14:230: value = '$', isAfterSpace = false]
Punctuator[14:230 - 14:231: value = '+', isAfterSpace = false]
Identifier[14:231 - 14:236: value = 'index', isAfterSpace = false]
Punctuator[14:236 - 14:237: value = ',', isAfterSpace = false]
Identifier[14:238 - 14:244: value = 'values', isAfterSpace = true]
Punctuator[14:244 - 14:245: value = '[', isAfterSpace = false]
Identifier[14:245 - 14:250: value = 'index', isAfterSpace = false]
Punctuator[14:250 - 14:251: value = ']', isAfterSpace = false]
Punctuator[14:251 - 14:252: value = ')', isAfterSpace = false]
EOL[14:252 - 14:252: value = ';', isAfterSpace = false]
Identifier[15:255 - 15:260: value = 'index', isAfterSpace = true]
Punctuator[15:261 - 15:262: value = '=', isAfterSpace = true]
Identifier[15:263 - 15:268: value = 'index', isAfterSpace = true]
Punctuator[15:269 - 15:270: value = '+', isAfterSpace = true]
NumericLiteral[15:271 - 15:272: value = '1', isAfterSpace = true]
EOL[15:272 - 15:272: value = ';', isAfterSpace = false]
Keyword[16:274 - 16:283: value = 'end while', isAfterSpace = true]
EOL[16:283 - 16:283: value = ';', isAfterSpace = false]
EOL[17:284 - 17:284: value = ';', isAfterSpace = false]
Keyword[18:286 - 18:292: value = 'return', isAfterSpace = true]
Punctuator[18:293 - 18:294: value = '(', isAfterSpace = true]
Keyword[18:294 - 18:297: value = 'new', isAfterSpace = false]
Identifier[18:298 - 18:302: value = 'self', isAfterSpace = true]
Punctuator[18:302 - 18:303: value = ')', isAfterSpace = false]
Punctuator[18:303 - 18:304: value = '.', isAfterSpace = false]
Identifier[18:304 - 18:315: value = 'constructor', isAfterSpace = false]
Punctuator[18:315 - 18:316: value = '(', isAfterSpace = false]
Identifier[18:316 - 18:322: value = 'result', isAfterSpace = false]
Punctuator[18:322 - 18:323: value = ')', isAfterSpace = false]
EOL[18:323 - 18:323: value = ';', isAfterSpace = false]
Keyword[19:324 - 19:336: value = 'end function', isAfterSpace = false]
EOL[19:336 - 19:336: value = ';', isAfterSpace = false]
EOL[20:337 - 20:337: value = ';', isAfterSpace = false]
Identifier[21:338 - 21:344: value = 'String', isAfterSpace = false]
Punctuator[21:344 - 21:345: value = '.', isAfterSpace = false]
Identifier[21:345 - 21:355: value = 'startsWith', isAfterSpace = false]
Punctuator[21:356 - 21:357: value = '=', isAfterSpace = true]
Keyword[21:358 - 21:366: value = 'function', isAfterSpace = true]
Punctuator[21:366 - 21:367: value = '(', isAfterSpace = false]
Identifier[21:367 - 21:370: value = 'str', isAfterSpace = false]
Punctuator[21:370 - 21:371: value = ')', isAfterSpace = false]
EOL[21:371 - 21:371: value = ';', isAfterSpace = false]
Keyword[22:373 - 22:379: value = 'return', isAfterSpace = true]
Identifier[22:380 - 22:384: value = 'self', isAfterSpace = true]
Punctuator[22:384 - 22:385: value = '.', isAfterSpace = false]
Identifier[22:385 - 22:388: value = 'str', isAfterSpace = false]
Punctuator[22:388 - 22:389: value = '.', isAfterSpace = false]
Identifier[22:389 - 22:396: value = 'indexOf', isAfterSpace = false]
Punctuator[22:396 - 22:397: value = '(', isAfterSpace = false]
Identifier[22:397 - 22:400: value = 'str', isAfterSpace = false]
Punctuator[22:400 - 22:401: value = ')', isAfterSpace = false]
Punctuator[22:402 - 22:404: value = '==', isAfterSpace = true]
NumericLiteral[22:405 - 22:406: value = '0', isAfterSpace = true]
EOL[22:406 - 22:406: value = ';', isAfterSpace = false]
Keyword[23:407 - 23:419: value = 'end function', isAfterSpace = false]
EOL[23:419 - 23:419: value = ';', isAfterSpace = false]
EOL[24:420 - 24:420: value = ';', isAfterSpace = false]
Identifier[25:421 - 25:427: value = 'String', isAfterSpace = false]
Punctuator[25:427 - 25:428: value = '.', isAfterSpace = false]
Identifier[25:428 - 25:434: value = 'substr', isAfterSpace = false]
Punctuator[25:435 - 25:436: value = '=', isAfterSpace = true]
Keyword[25:437 - 25:445: value = 'function', isAfterSpace = true]
Punctuator[25:445 - 25:446: value = '(', isAfterSpace = false]
Identifier[25:446 - 25:456: value = 'startIndex', isAfterSpace = false]
Punctuator[25:456 - 25:457: value = ',', isAfterSpace = false]
Identifier[25:458 - 25:466: value = 'endIndex', isAfterSpace = true]
Punctuator[25:466 - 25:467: value = ')', isAfterSpace = false]
EOL[25:467 - 25:467: value = ';', isAfterSpace = false]
Keyword[26:469 - 26:475: value = 'return', isAfterSpace = true]
Punctuator[26:476 - 26:477: value = '(', isAfterSpace = true]
Keyword[26:477 - 26:480: value = 'new', isAfterSpace = false]
Identifier[26:481 - 26:485: value = 'self', isAfterSpace = true]
Punctuator[26:485 - 26:486: value = ')', isAfterSpace = false]
Punctuator[26:486 - 26:487: value = '.', isAfterSpace = false]
Identifier[26:487 - 26:498: value = 'constructor', isAfterSpace = false]
Punctuator[26:498 - 26:499: value = '(', isAfterSpace = false]
Identifier[26:499 - 26:504: value = 'slice', isAfterSpace = false]
Punctuator[26:504 - 26:505: value = '(', isAfterSpace = false]
Identifier[26:505 - 26:509: value = 'self', isAfterSpace = false]
Punctuator[26:509 - 26:510: value = '.', isAfterSpace = false]
Identifier[26:510 - 26:513: value = 'str', isAfterSpace = false]
Punctuator[26:513 - 26:514: value = ',', isAfterSpace = false]
Identifier[26:515 - 26:525: value = 'startIndex', isAfterSpace = true]
Punctuator[26:525 - 26:526: value = ',', isAfterSpace = false]
Identifier[26:527 - 26:535: value = 'endIndex', isAfterSpace = true]
Punctuator[26:535 - 26:536: value = ')', isAfterSpace = false]
Punctuator[26:536 - 26:537: value = ')', isAfterSpace = false]
EOL[26:537 - 26:537: value = ';', isAfterSpace = false]
Keyword[27:538 - 27:550: value = 'end function', isAfterSpace = false]
EOL[27:550 - 27:550: value = ';', isAfterSpace = false]
EOL[28:551 - 28:551: value = ';', isAfterSpace = false]
Identifier[29:552 - 29:558: value = 'String', isAfterSpace = false]
Punctuator[29:558 - 29:559: value = '.', isAfterSpace = false]
Identifier[29:559 - 29:566: value = 'indexOf', isAfterSpace = false]
Punctuator[29:567 - 29:568: value = '=', isAfterSpace = true]
Keyword[29:569 - 29:577: value = 'function', isAfterSpace = true]
Punctuator[29:577 - 29:578: value = '(', isAfterSpace = false]
Identifier[29:578 - 29:581: value = 'str', isAfterSpace = false]
Punctuator[29:581 - 29:582: value = ')', isAfterSpace = false]
EOL[29:582 - 29:582: value = ';', isAfterSpace = false]
Keyword[30:584 - 30:590: value = 'return', isAfterSpace = true]
Identifier[30:591 - 30:595: value = 'self', isAfterSpace = true]
Punctuator[30:595 - 30:596: value = '.', isAfterSpace = false]
Identifier[30:596 - 30:599: value = 'str', isAfterSpace = false]
Punctuator[30:599 - 30:600: value = '.', isAfterSpace = false]
Identifier[30:600 - 30:607: value = 'indexOf', isAfterSpace = false]
Punctuator[30:607 - 30:608: value = '(', isAfterSpace = false]
Identifier[30:608 - 30:611: value = 'str', isAfterSpace = false]
Punctuator[30:611 - 30:612: value = ')', isAfterSpace = false]
EOL[30:612 - 30:612: value = ';', isAfterSpace = false]
Keyword[31:613 - 31:625: value = 'end function', isAfterSpace = false]
EOL[31:625 - 31:625: value = ';', isAfterSpace = false]
EOL[32:626 - 32:626: value = ';', isAfterSpace = false]
Identifier[33:627 - 33:633: value = 'String', isAfterSpace = false]
Punctuator[33:633 - 33:634: value = '.', isAfterSpace = false]
Identifier[33:634 - 33:641: value = 'replace', isAfterSpace = false]
Punctuator[33:642 - 33:643: value = '=', isAfterSpace = true]
Keyword[33:644 - 33:652: value = 'function', isAfterSpace = true]
Punctuator[33:652 - 33:653: value = '(', isAfterSpace = false]
Identifier[33:653 - 33:656: value = 'str', isAfterSpace = false]
Punctuator[33:656 - 33:657: value = ',', isAfterSpace = false]
Identifier[33:658 - 33:664: value = 'newStr', isAfterSpace = true]
Punctuator[33:664 - 33:665: value = ')', isAfterSpace = false]
EOL[33:665 - 33:665: value = ';', isAfterSpace = false]
Keyword[34:667 - 34:673: value = 'return', isAfterSpace = true]
Punctuator[34:674 - 34:675: value = '(', isAfterSpace = true]
Keyword[34:675 - 34:678: value = 'new', isAfterSpace = false]
Identifier[34:679 - 34:683: value = 'self', isAfterSpace = true]
Punctuator[34:683 - 34:684: value = ')', isAfterSpace = false]
Punctuator[34:684 - 34:685: value = '.', isAfterSpace = false]
Identifier[34:685 - 34:696: value = 'constructor', isAfterSpace = false]
Punctuator[34:696 - 34:697: value = '(', isAfterSpace = false]
Identifier[34:697 - 34:701: value = 'self', isAfterSpace = false]
Punctuator[34:701 - 34:702: value = '.', isAfterSpace = false]
Identifier[34:702 - 34:705: value = 'str', isAfterSpace = false]
Punctuator[34:705 - 34:706: value = '.', isAfterSpace = false]
Identifier[34:706 - 34:713: value = 'replace', isAfterSpace = false]
Punctuator[34:713 - 34:714: value = '(', isAfterSpace = false]
Identifier[34:714 - 34:717: value = 'str', isAfterSpace = false]
Punctuator[34:717 - 34:718: value = ',', isAfterSpace = false]
Identifier[34:719 - 34:725: value = 'newStr', isAfterSpace = true]
Punctuator[34:725 - 34:726: value = ')', isAfterSpace = false]
Punctuator[34:726 - 34:727: value = ')', isAfterSpace = false]
EOL[34:727 - 34:727: value = ';', isAfterSpace = false]
Keyword[35:728 - 35:740: value = 'end function', isAfterSpace = false]
EOL[35:740 - 35:740: value = ';', isAfterSpace = false]
EOL[36:741 - 36:741: value = ';', isAfterSpace = false]
Identifier[37:742 - 37:748: value = 'String', isAfterSpace = false]
Punctuator[37:748 - 37:749: value = '.', isAfterSpace = false]
Identifier[37:749 - 37:755: value = 'remove', isAfterSpace = false]
Punctuator[37:756 - 37:757: value = '=', isAfterSpace = true]
Keyword[37:758 - 37:766: value = 'function', isAfterSpace = true]
Punctuator[37:766 - 37:767: value = '(', isAfterSpace = false]
Identifier[37:767 - 37:770: value = 'str', isAfterSpace = false]
Punctuator[37:770 - 37:771: value = ')', isAfterSpace = false]
EOL[37:771 - 37:771: value = ';', isAfterSpace = false]
Keyword[38:773 - 38:779: value = 'return', isAfterSpace = true]
Punctuator[38:780 - 38:781: value = '(', isAfterSpace = true]
Keyword[38:781 - 38:784: value = 'new', isAfterSpace = false]
Identifier[38:785 - 38:789: value = 'self', isAfterSpace = true]
Punctuator[38:789 - 38:790: value = ')', isAfterSpace = false]
Punctuator[38:790 - 38:791: value = '.', isAfterSpace = false]
Identifier[38:791 - 38:802: value = 'constructor', isAfterSpace = false]
Punctuator[38:802 - 38:803: value = '(', isAfterSpace = false]
Identifier[38:803 - 38:807: value = 'self', isAfterSpace = false]
Punctuator[38:807 - 38:808: value = '.', isAfterSpace = false]
Identifier[38:808 - 38:811: value = 'str', isAfterSpace = false]
Punctuator[38:811 - 38:812: value = '.', isAfterSpace = false]
Identifier[38:812 - 38:818: value = 'remove', isAfterSpace = false]
Punctuator[38:818 - 38:819: value = '(', isAfterSpace = false]
Identifier[38:819 - 38:822: value = 'str', isAfterSpace = false]
Punctuator[38:822 - 38:823: value = ')', isAfterSpace = false]
Punctuator[38:823 - 38:824: value = ')', isAfterSpace = false]
EOL[38:824 - 38:824: value = ';', isAfterSpace = false]
Keyword[39:825 - 39:837: value = 'end function', isAfterSpace = false]
EOL[39:837 - 39:837: value = ';', isAfterSpace = false]
EOL[40:838 - 40:838: value = ';', isAfterSpace = false]
Identifier[41:839 - 41:845: value = 'String', isAfterSpace = false]
Punctuator[41:845 - 41:846: value = '.', isAfterSpace = false]
Identifier[41:846 - 41:854: value = 'toString', isAfterSpace = false]
Punctuator[41:855 - 41:856: value = '=', isAfterSpace = true]
Keyword[41:857 - 41:865: value = 'function', isAfterSpace = true]
Punctuator[41:865 - 41:866: value = '(', isAfterSpace = false]
Punctuator[41:866 - 41:867: value = ')', isAfterSpace = false]
EOL[41:867 - 41:867: value = ';', isAfterSpace = false]
Keyword[42:869 - 42:875: value = 'return', isAfterSpace = true]
Identifier[42:876 - 42:880: value = 'self', isAfterSpace = true]
Punctuator[42:880 - 42:881: value = '.', isAfterSpace = false]
Identifier[42:881 - 42:884: value = 'str', isAfterSpace = false]
EOL[42:884 - 42:884: value = ';', isAfterSpace = false]
Keyword[43:885 - 43:897: value = 'end function', isAfterSpace = false]
EOL[43:897 - 43:897: value = ';', isAfterSpace = false]
EOL[44:898 - 44:898: value = ';', isAfterSpace = false]
Identifier[45:899 - 45:905: value = 'String', isAfterSpace = false]
Punctuator[45:905 - 45:906: value = '.', isAfterSpace = false]
Identifier[45:906 - 45:912: value = 'length', isAfterSpace = false]
Punctuator[45:913 - 45:914: value = '=', isAfterSpace = true]
Keyword[45:915 - 45:923: value = 'function', isAfterSpace = true]
Punctuator[45:923 - 45:924: value = '(', isAfterSpace = false]
Punctuator[45:924 - 45:925: value = ')', isAfterSpace = false]
EOL[45:925 - 45:925: value = ';', isAfterSpace = false]
Keyword[46:927 - 46:933: value = 'return', isAfterSpace = true]
Identifier[46:934 - 46:938: value = 'self', isAfterSpace = true]
Punctuator[46:938 - 46:939: value = '.', isAfterSpace = false]
Identifier[46:939 - 46:942: value = 'str', isAfterSpace = false]
Punctuator[46:942 - 46:943: value = '.', isAfterSpace = false]
Identifier[46:943 - 46:946: value = 'len', isAfterSpace = false]
EOL[46:946 - 46:946: value = ';', isAfterSpace = false]
Keyword[47:947 - 47:959: value = 'end function', isAfterSpace = false]
EOL[47:959 - 47:959: value = ';', isAfterSpace = false]
EOL[48:960 - 48:960: value = ';', isAfterSpace = false]
Identifier[49:961 - 49:967: value = 'String', isAfterSpace = false]
Punctuator[49:967 - 49:968: value = '.', isAfterSpace = false]
Identifier[49:968 - 49:973: value = 'split', isAfterSpace = false]
Punctuator[49:974 - 49:975: value = '=', isAfterSpace = true]
Keyword[49:976 - 49:984: value = 'function', isAfterSpace = true]
Punctuator[49:984 - 49:985: value = '(', isAfterSpace = false]
Identifier[49:985 - 49:994: value = 'seperator', isAfterSpace = false]
Punctuator[49:994 - 49:995: value = ')', isAfterSpace = false]
EOL[49:995 - 49:995: value = ';', isAfterSpace = false]
Keyword[50:997 - 50:1003: value = 'return', isAfterSpace = true]
Identifier[50:1004 - 50:1008: value = 'self', isAfterSpace = true]
Punctuator[50:1008 - 50:1009: value = '.', isAfterSpace = false]
Identifier[50:1009 - 50:1012: value = 'str', isAfterSpace = false]
Punctuator[50:1012 - 50:1013: value = '.', isAfterSpace = false]
Identifier[50:1013 - 50:1018: value = 'split', isAfterSpace = false]
Punctuator[50:1018 - 50:1019: value = '(', isAfterSpace = false]
Identifier[50:1019 - 50:1028: value = 'seperator', isAfterSpace = false]
Punctuator[50:1028 - 50:1029: value = ')', isAfterSpace = false]
EOL[50:1029 - 50:1029: value = ';', isAfterSpace = false]
Keyword[51:1030 - 51:1042: value = 'end function', isAfterSpace = false]
EOL[51:1042 - 51:1042: value = ';', isAfterSpace = false]
EOL[52:1043 - 52:1043: value = ';', isAfterSpace = false]
Identifier[53:1044 - 53:1050: value = 'String', isAfterSpace = false]
Punctuator[53:1050 - 53:1051: value = '.', isAfterSpace = false]
Identifier[53:1051 - 53:1055: value = 'trim', isAfterSpace = false]
Punctuator[53:1056 - 53:1057: value = '=', isAfterSpace = true]
Keyword[53:1058 - 53:1066: value = 'function', isAfterSpace = true]
Punctuator[53:1066 - 53:1067: value = '(', isAfterSpace = false]
Identifier[53:1067 - 53:1076: value = 'seperator', isAfterSpace = false]
Punctuator[53:1076 - 53:1077: value = ')', isAfterSpace = false]
EOL[53:1077 - 53:1077: value = ';', isAfterSpace = false]
Keyword[54:1079 - 54:1085: value = 'return', isAfterSpace = true]
Punctuator[54:1086 - 54:1087: value = '(', isAfterSpace = true]
Keyword[54:1087 - 54:1090: value = 'new', isAfterSpace = false]
Identifier[54:1091 - 54:1095: value = 'self', isAfterSpace = true]
Punctuator[54:1095 - 54:1096: value = ')', isAfterSpace = false]
Punctuator[54:1096 - 54:1097: value = '.', isAfterSpace = false]
Identifier[54:1097 - 54:1108: value = 'constructor', isAfterSpace = false]
Punctuator[54:1108 - 54:1109: value = '(', isAfterSpace = false]
Identifier[54:1109 - 54:1113: value = 'self', isAfterSpace = false]
Punctuator[54:1113 - 54:1114: value = '.', isAfterSpace = false]
Identifier[54:1114 - 54:1117: value = 'str', isAfterSpace = false]
Punctuator[54:1117 - 54:1118: value = '.', isAfterSpace = false]
Identifier[54:1118 - 54:1122: value = 'trim', isAfterSpace = false]
Punctuator[54:1122 - 54:1123: value = '(', isAfterSpace = false]
Punctuator[54:1123 - 54:1124: value = ')', isAfterSpace = false]
Punctuator[54:1124 - 54:1125: value = ')', isAfterSpace = false]
EOL[54:1125 - 54:1125: value = ';', isAfterSpace = false]
Keyword[55:1126 - 55:1138: value = 'end function', isAfterSpace = false]
EOL[55:1138 - 55:1138: value = ';', isAfterSpace = false]
EOL[56:1139 - 56:1139: value = ';', isAfterSpace = false]
Identifier[57:1140 - 57:1145: value = 'Error', isAfterSpace = false]
Punctuator[57:1146 - 57:1147: value = '=', isAfterSpace = true]
Punctuator[57:1148 - 57:1149: value = '{', isAfterSpace = true]
Punctuator[57:1149 - 57:1150: value = '}', isAfterSpace = false]
EOL[57:1150 - 57:1150: value = ';', isAfterSpace = false]
EOL[58:1151 - 58:1151: value = ';', isAfterSpace = false]
Identifier[59:1152 - 59:1157: value = 'Error', isAfterSpace = false]
Punctuator[59:1157 - 59:1158: value = '.', isAfterSpace = false]
Identifier[59:1158 - 59:1164: value = 'String', isAfterSpace = false]
Punctuator[59:1165 - 59:1166: value = '=', isAfterSpace = true]
Identifier[59:1167 - 59:1173: value = 'String', isAfterSpace = true]
EOL[59:1173 - 59:1173: value = ';', isAfterSpace = false]
EOL[60:1174 - 60:1174: value = ';', isAfterSpace = false]
Identifier[61:1175 - 61:1180: value = 'Error', isAfterSpace = false]
Punctuator[61:1180 - 61:1181: value = '.', isAfterSpace = false]
Identifier[61:1181 - 61:1192: value = 'constructor', isAfterSpace = false]
Punctuator[61:1193 - 61:1194: value = '=', isAfterSpace = true]
Keyword[61:1195 - 61:1203: value = 'function', isAfterSpace = true]
Punctuator[61:1203 - 61:1204: value = '(', isAfterSpace = false]
Identifier[61:1204 - 61:1211: value = 'message', isAfterSpace = false]
Punctuator[61:1211 - 61:1212: value = ',', isAfterSpace = false]
Identifier[61:1213 - 61:1219: value = 'values', isAfterSpace = true]
Punctuator[61:1219 - 61:1220: value = ')', isAfterSpace = false]
EOL[61:1220 - 61:1220: value = ';', isAfterSpace = false]
Identifier[62:1222 - 62:1223: value = 'm', isAfterSpace = true]
Punctuator[62:1224 - 62:1225: value = '=', isAfterSpace = true]
Identifier[62:1226 - 62:1230: value = 'self', isAfterSpace = true]
EOL[62:1230 - 62:1230: value = ';', isAfterSpace = false]
Identifier[63:1232 - 63:1233: value = 'm', isAfterSpace = true]
Punctuator[63:1233 - 63:1234: value = '.', isAfterSpace = false]
Identifier[63:1234 - 63:1241: value = 'message', isAfterSpace = false]
Punctuator[63:1242 - 63:1243: value = '=', isAfterSpace = true]
Identifier[63:1244 - 63:1251: value = 'message', isAfterSpace = true]
EOL[63:1251 - 63:1251: value = ';', isAfterSpace = false]
Keyword[64:1253 - 64:1255: value = 'if', isAfterSpace = true]
Punctuator[64:1256 - 64:1257: value = '(', isAfterSpace = true]
Identifier[64:1257 - 64:1263: value = 'values', isAfterSpace = false]
Punctuator[64:1264 - 64:1266: value = '!=', isAfterSpace = true]
NilLiteral[64:1267 - 64:1271: value = 'null', isAfterSpace = true]
Punctuator[64:1271 - 64:1272: value = ')', isAfterSpace = false]
Keyword[64:1273 - 64:1277: value = 'then', isAfterSpace = true]
EOL[64:1277 - 64:1277: value = ';', isAfterSpace = false]
Identifier[65:1280 - 65:1281: value = 'm', isAfterSpace = true]
Punctuator[65:1281 - 65:1282: value = '.', isAfterSpace = false]
Identifier[65:1282 - 65:1289: value = 'message', isAfterSpace = false]
Punctuator[65:1290 - 65:1291: value = '=', isAfterSpace = true]
Punctuator[65:1292 - 65:1293: value = '(', isAfterSpace = true]
Keyword[65:1293 - 65:1296: value = 'new', isAfterSpace = false]
Identifier[65:1297 - 65:1298: value = 'm', isAfterSpace = true]
Punctuator[65:1298 - 65:1299: value = '.', isAfterSpace = false]
Identifier[65:1299 - 65:1305: value = 'String', isAfterSpace = false]
Punctuator[65:1305 - 65:1306: value = ')', isAfterSpace = false]
Punctuator[65:1306 - 65:1307: value = '.', isAfterSpace = false]
Identifier[65:1307 - 65:1318: value = 'constructor', isAfterSpace = false]
Punctuator[65:1318 - 65:1319: value = '(', isAfterSpace = false]
Identifier[65:1319 - 65:1326: value = 'message', isAfterSpace = false]
Punctuator[65:1326 - 65:1327: value = ')', isAfterSpace = false]
Punctuator[65:1327 - 65:1328: value = '.', isAfterSpace = false]
Identifier[65:1328 - 65:1333: value = 'parse', isAfterSpace = false]
Punctuator[65:1333 - 65:1334: value = '(', isAfterSpace = false]
Identifier[65:1334 - 65:1340: value = 'values', isAfterSpace = false]
Punctuator[65:1340 - 65:1341: value = ')', isAfterSpace = false]
Punctuator[65:1341 - 65:1342: value = '.', isAfterSpace = false]
Identifier[65:1342 - 65:1350: value = 'toString', isAfterSpace = false]
Punctuator[65:1350 - 65:1351: value = '(', isAfterSpace = false]
Punctuator[65:1351 - 65:1352: value = ')', isAfterSpace = false]
EOL[65:1352 - 65:1352: value = ';', isAfterSpace = false]
Keyword[66:1354 - 66:1360: value = 'end if', isAfterSpace = true]
EOL[66:1360 - 66:1360: value = ';', isAfterSpace = false]
Keyword[67:1362 - 67:1368: value = 'return', isAfterSpace = true]
Identifier[67:1369 - 67:1370: value = 'm', isAfterSpace = true]
EOL[67:1370 - 67:1370: value = ';', isAfterSpace = false]
Keyword[68:1371 - 68:1383: value = 'end function', isAfterSpace = false]
EOL[68:1383 - 68:1383: value = ';', isAfterSpace = false]
EOL[69:1384 - 69:1384: value = ';', isAfterSpace = false]
Identifier[70:1385 - 70:1390: value = 'Error', isAfterSpace = false]
Punctuator[70:1390 - 70:1391: value = '.', isAfterSpace = false]
Identifier[70:1391 - 70:1396: value = 'throw', isAfterSpace = false]
Punctuator[70:1397 - 70:1398: value = '=', isAfterSpace = true]
Keyword[70:1399 - 70:1407: value = 'function', isAfterSpace = true]
Punctuator[70:1407 - 70:1408: value = '(', isAfterSpace = false]
Punctuator[70:1408 - 70:1409: value = ')', isAfterSpace = false]
EOL[70:1409 - 70:1409: value = ';', isAfterSpace = false]
Identifier[71:1411 - 71:1415: value = 'exit', isAfterSpace = true]
Punctuator[71:1415 - 71:1416: value = '(', isAfterSpace = false]
StringLiteral[71:1416 - 71:1433: value = '<color=#ff0000>', isAfterSpace = false]
Punctuator[71:1434 - 71:1435: value = '+', isAfterSpace = true]
Identifier[71:1436 - 71:1440: value = 'self', isAfterSpace = true]
Punctuator[71:1440 - 71:1441: value = '.', isAfterSpace = false]
Identifier[71:1441 - 71:1448: value = 'message', isAfterSpace = false]
Punctuator[71:1449 - 71:1450: value = '+', isAfterSpace = true]
StringLiteral[71:1451 - 71:1461: value = '</color>', isAfterSpace = true]
Punctuator[71:1461 - 71:1462: value = ')', isAfterSpace = false]
EOL[71:1462 - 71:1462: value = ';', isAfterSpace = false]
Keyword[72:1463 - 72:1475: value = 'end function', isAfterSpace = false]
EOL[72:1475 - 72:1475: value = ';', isAfterSpace = false]
EOL[73:1476 - 73:1476: value = ';', isAfterSpace = false]
Identifier[74:1477 - 74:1483: value = 'Crypto', isAfterSpace = false]
Punctuator[74:1484 - 74:1485: value = '=', isAfterSpace = true]
Punctuator[74:1486 - 74:1487: value = '{', isAfterSpace = true]
Punctuator[74:1487 - 74:1488: value = '}', isAfterSpace = false]
EOL[74:1488 - 74:1488: value = ';', isAfterSpace = false]
EOL[75:1489 - 75:1489: value = ';', isAfterSpace = false]
Identifier[76:1490 - 76:1496: value = 'Crypto', isAfterSpace = false]
Punctuator[76:1496 - 76:1497: value = '.', isAfterSpace = false]
Identifier[76:1497 - 76:1511: value = 'defaultCharset', isAfterSpace = false]
Punctuator[76:1512 - 76:1513: value = '=', isAfterSpace = true]
StringLiteral[76:1514 - 76:1580: value = 'QWERTZUIOPASDFGHJKLYXCVBNMqwertzuiopasdfghjklyxcvbnm1234567890+-', isAfterSpace = true]
EOL[76:1580 - 76:1580: value = ';', isAfterSpace = false]
Identifier[77:1581 - 77:1587: value = 'Crypto', isAfterSpace = false]
Punctuator[77:1587 - 77:1588: value = '.', isAfterSpace = false]
Identifier[77:1588 - 77:1601: value = 'defaultSecret', isAfterSpace = false]
Punctuator[77:1602 - 77:1603: value = '=', isAfterSpace = true]
StringLiteral[77:1604 - 77:1613: value = 'test123', isAfterSpace = true]
EOL[77:1613 - 77:1613: value = ';', isAfterSpace = false]
Identifier[78:1614 - 78:1620: value = 'Crypto', isAfterSpace = false]
Punctuator[78:1620 - 78:1621: value = '.', isAfterSpace = false]
Identifier[78:1621 - 78:1632: value = 'maxCharCode', isAfterSpace = false]
Punctuator[78:1633 - 78:1634: value = '=', isAfterSpace = true]
NumericLiteral[78:1635 - 78:1640: value = '55295', isAfterSpace = true]
EOL[78:1640 - 78:1640: value = ';', isAfterSpace = false]
Identifier[79:1641 - 79:1647: value = 'Crypto', isAfterSpace = false]
Punctuator[79:1647 - 79:1648: value = '.', isAfterSpace = false]
Identifier[79:1648 - 79:1653: value = 'Error', isAfterSpace = false]
Punctuator[79:1654 - 79:1655: value = '=', isAfterSpace = true]
Identifier[79:1656 - 79:1661: value = 'Error', isAfterSpace = true]
EOL[79:1661 - 79:1661: value = ';', isAfterSpace = false]
EOL[80:1662 - 80:1662: value = ';', isAfterSpace = false]
Identifier[81:1663 - 81:1669: value = 'Crypto', isAfterSpace = false]
Punctuator[81:1669 - 81:1670: value = '.', isAfterSpace = false]
Identifier[81:1670 - 81:1681: value = 'constructor', isAfterSpace = false]
Punctuator[81:1682 - 81:1683: value = '=', isAfterSpace = true]
Keyword[81:1684 - 81:1692: value = 'function', isAfterSpace = true]
Punctuator[81:1692 - 81:1693: value = '(', isAfterSpace = false]
Identifier[81:1693 - 81:1706: value = 'defaultSecret', isAfterSpace = false]
Punctuator[81:1706 - 81:1707: value = ',', isAfterSpace = false]
Identifier[81:1708 - 81:1714: value = 'hashFn', isAfterSpace = true]
Punctuator[81:1714 - 81:1715: value = ',', isAfterSpace = false]
Identifier[81:1716 - 81:1723: value = 'charset', isAfterSpace = true]
Punctuator[81:1723 - 81:1724: value = ')', isAfterSpace = false]
EOL[81:1724 - 81:1724: value = ';', isAfterSpace = false]
Identifier[82:1726 - 82:1728: value = 'me', isAfterSpace = true]
Punctuator[82:1729 - 82:1730: value = '=', isAfterSpace = true]
Identifier[82:1731 - 82:1735: value = 'self', isAfterSpace = true]
EOL[82:1735 - 82:1735: value = ';', isAfterSpace = false]
Identifier[83:1737 - 83:1739: value = 'me', isAfterSpace = true]
Punctuator[83:1739 - 83:1740: value = '.', isAfterSpace = false]
Identifier[83:1740 - 83:1753: value = 'defaultSecret', isAfterSpace = false]
Punctuator[83:1754 - 83:1755: value = '=', isAfterSpace = true]
Identifier[83:1756 - 83:1769: value = 'defaultSecret', isAfterSpace = true]
EOL[83:1769 - 83:1769: value = ';', isAfterSpace = false]
Identifier[84:1771 - 84:1773: value = 'me', isAfterSpace = true]
Punctuator[84:1773 - 84:1774: value = '.', isAfterSpace = false]
Identifier[84:1774 - 84:1779: value = 'table', isAfterSpace = false]
Punctuator[84:1780 - 84:1781: value = '=', isAfterSpace = true]
Identifier[84:1782 - 84:1789: value = 'charset', isAfterSpace = true]
EOL[84:1789 - 84:1789: value = ';', isAfterSpace = false]
Identifier[85:1791 - 85:1793: value = 'me', isAfterSpace = true]
Punctuator[85:1793 - 85:1794: value = '.', isAfterSpace = false]
Identifier[85:1794 - 85:1800: value = 'hashFn', isAfterSpace = false]
Punctuator[85:1801 - 85:1802: value = '=', isAfterSpace = true]
Punctuator[85:1803 - 85:1804: value = '@', isAfterSpace = true]
Identifier[85:1804 - 85:1810: value = 'hashFn', isAfterSpace = false]
EOL[85:1810 - 85:1810: value = ';', isAfterSpace = false]
Keyword[86:1812 - 86:1814: value = 'if', isAfterSpace = true]
Punctuator[86:1815 - 86:1816: value = '(', isAfterSpace = true]
Punctuator[86:1816 - 86:1817: value = '@', isAfterSpace = false]
Identifier[86:1817 - 86:1823: value = 'hashFn', isAfterSpace = false]
Punctuator[86:1824 - 86:1826: value = '==', isAfterSpace = true]
NilLiteral[86:1827 - 86:1831: value = 'null', isAfterSpace = true]
Punctuator[86:1831 - 86:1832: value = ')', isAfterSpace = false]
Keyword[86:1833 - 86:1837: value = 'then', isAfterSpace = true]
Identifier[86:1838 - 86:1840: value = 'me', isAfterSpace = true]
Punctuator[86:1840 - 86:1841: value = '.', isAfterSpace = false]
Identifier[86:1841 - 86:1847: value = 'hashFn', isAfterSpace = false]
Punctuator[86:1848 - 86:1849: value = '=', isAfterSpace = true]
Punctuator[86:1850 - 86:1851: value = '@', isAfterSpace = true]
Identifier[86:1851 - 86:1854: value = 'md5', isAfterSpace = false]
EOL[86:1854 - 86:1854: value = ';', isAfterSpace = false]
Keyword[87:1856 - 87:1858: value = 'if', isAfterSpace = true]
Identifier[87:1859 - 87:1866: value = 'charset', isAfterSpace = true]
Punctuator[87:1867 - 87:1869: value = '==', isAfterSpace = true]
NilLiteral[87:1870 - 87:1874: value = 'null', isAfterSpace = true]
Keyword[87:1875 - 87:1879: value = 'then', isAfterSpace = true]
Identifier[87:1880 - 87:1882: value = 'me', isAfterSpace = true]
Punctuator[87:1882 - 87:1883: value = '.', isAfterSpace = false]
Identifier[87:1883 - 87:1888: value = 'table', isAfterSpace = false]
Punctuator[87:1889 - 87:1890: value = '=', isAfterSpace = true]
Identifier[87:1891 - 87:1893: value = 'me', isAfterSpace = true]
Punctuator[87:1893 - 87:1894: value = '.', isAfterSpace = false]
Identifier[87:1894 - 87:1908: value = 'defaultCharset', isAfterSpace = false]
EOL[87:1908 - 87:1908: value = ';', isAfterSpace = false]
Keyword[88:1910 - 88:1912: value = 'if', isAfterSpace = true]
Identifier[88:1913 - 88:1915: value = 'me', isAfterSpace = true]
Punctuator[88:1915 - 88:1916: value = '.', isAfterSpace = false]
Identifier[88:1916 - 88:1921: value = 'table', isAfterSpace = false]
Punctuator[88:1921 - 88:1922: value = '.', isAfterSpace = false]
Identifier[88:1922 - 88:1925: value = 'len', isAfterSpace = false]
Punctuator[88:1926 - 88:1928: value = '!=', isAfterSpace = true]
NumericLiteral[88:1929 - 88:1931: value = '64', isAfterSpace = true]
Keyword[88:1932 - 88:1936: value = 'then', isAfterSpace = true]
Punctuator[88:1937 - 88:1938: value = '(', isAfterSpace = true]
Keyword[88:1938 - 88:1941: value = 'new', isAfterSpace = false]
Identifier[88:1942 - 88:1944: value = 'me', isAfterSpace = true]
Punctuator[88:1944 - 88:1945: value = '.', isAfterSpace = false]
Identifier[88:1945 - 88:1950: value = 'Error', isAfterSpace = false]
Punctuator[88:1950 - 88:1951: value = ')', isAfterSpace = false]
Punctuator[88:1951 - 88:1952: value = '.', isAfterSpace = false]
Identifier[88:1952 - 88:1963: value = 'constructor', isAfterSpace = false]
Punctuator[88:1963 - 88:1964: value = '(', isAfterSpace = false]
StringLiteral[88:1964 - 88:1987: value = 'Invalid charset $0...', isAfterSpace = false]
Punctuator[88:1987 - 88:1988: value = ',', isAfterSpace = false]
Punctuator[88:1989 - 88:1990: value = '[', isAfterSpace = true]
Identifier[88:1990 - 88:1992: value = 'me', isAfterSpace = false]
Punctuator[88:1992 - 88:1993: value = '.', isAfterSpace = false]
Identifier[88:1993 - 88:1998: value = 'table', isAfterSpace = false]
Punctuator[88:1998 - 88:1999: value = ']', isAfterSpace = false]
Punctuator[88:1999 - 88:2000: value = ')', isAfterSpace = false]
Punctuator[88:2000 - 88:2001: value = '.', isAfterSpace = false]
Identifier[88:2001 - 88:2006: value = 'throw', isAfterSpace = false]
Punctuator[88:2006 - 88:2007: value = '(', isAfterSpace = false]
Punctuator[88:2007 - 88:2008: value = ')', isAfterSpace = false]
EOL[88:2008 - 88:2008: value = ';', isAfterSpace = false]
Keyword[89:2010 - 89:2016: value = 'return', isAfterSpace = true]
Identifier[89:2017 - 89:2019: value = 'me', isAfterSpace = true]
EOL[89:2019 - 89:2019: value = ';', isAfterSpace = false]
Keyword[90:2020 - 90:2032: value = 'end function', isAfterSpace = false]
EOL[90:2032 - 90:2032: value = ';', isAfterSpace = false]
EOL[91:2033 - 91:2033: value = ';', isAfterSpace = false]
Identifier[92:2034 - 92:2040: value = 'Crypto', isAfterSpace = false]
Punctuator[92:2040 - 92:2041: value = '.', isAfterSpace = false]
Identifier[92:2041 - 92:2048: value = 'getHash', isAfterSpace = false]
Punctuator[92:2049 - 92:2050: value = '=', isAfterSpace = true]
Keyword[92:2051 - 92:2059: value = 'function', isAfterSpace = true]
Punctuator[92:2059 - 92:2060: value = '(', isAfterSpace = false]
Identifier[92:2060 - 92:2062: value = 'pw', isAfterSpace = false]
Punctuator[92:2062 - 92:2063: value = ')', isAfterSpace = false]
EOL[92:2063 - 92:2063: value = ';', isAfterSpace = false]
Identifier[93:2065 - 93:2067: value = 'me', isAfterSpace = true]
Punctuator[93:2068 - 93:2069: value = '=', isAfterSpace = true]
Identifier[93:2070 - 93:2074: value = 'self', isAfterSpace = true]
EOL[93:2074 - 93:2074: value = ';', isAfterSpace = false]
Identifier[94:2076 - 94:2080: value = 'hash', isAfterSpace = true]
Punctuator[94:2081 - 94:2082: value = '=', isAfterSpace = true]
Punctuator[94:2083 - 94:2084: value = '[', isAfterSpace = true]
Punctuator[94:2084 - 94:2085: value = ']', isAfterSpace = false]
EOL[94:2085 - 94:2085: value = ';', isAfterSpace = false]
Identifier[95:2087 - 95:2088: value = 'x', isAfterSpace = true]
Punctuator[95:2089 - 95:2090: value = '=', isAfterSpace = true]
Identifier[95:2091 - 95:2093: value = 'me', isAfterSpace = true]
Punctuator[95:2093 - 95:2094: value = '.', isAfterSpace = false]
Identifier[95:2094 - 95:2100: value = 'hashFn', isAfterSpace = false]
Punctuator[95:2100 - 95:2101: value = '(', isAfterSpace = false]
Identifier[95:2101 - 95:2103: value = 'pw', isAfterSpace = false]
Punctuator[95:2103 - 95:2104: value = ')', isAfterSpace = false]
EOL[95:2104 - 95:2104: value = ';', isAfterSpace = false]
Keyword[96:2106 - 96:2109: value = 'for', isAfterSpace = true]
Identifier[96:2110 - 96:2114: value = 'char', isAfterSpace = true]
Keyword[96:2115 - 96:2117: value = 'in', isAfterSpace = true]
Identifier[96:2118 - 96:2119: value = 'x', isAfterSpace = true]
EOL[96:2119 - 96:2119: value = ';', isAfterSpace = false]
Identifier[97:2122 - 97:2126: value = 'hash', isAfterSpace = true]
Punctuator[97:2126 - 97:2127: value = '.', isAfterSpace = false]
Identifier[97:2127 - 97:2131: value = 'push', isAfterSpace = false]
Punctuator[97:2131 - 97:2132: value = '(', isAfterSpace = false]
Identifier[97:2132 - 97:2136: value = 'char', isAfterSpace = false]
Punctuator[97:2136 - 97:2137: value = '.', isAfterSpace = false]
Identifier[97:2137 - 97:2141: value = 'code', isAfterSpace = false]
Punctuator[97:2141 - 97:2142: value = ')', isAfterSpace = false]
EOL[97:2142 - 97:2142: value = ';', isAfterSpace = false]
Keyword[98:2144 - 98:2151: value = 'end for', isAfterSpace = true]
EOL[98:2151 - 98:2151: value = ';', isAfterSpace = false]
Identifier[99:2153 - 99:2157: value = 'hash', isAfterSpace = true]
Punctuator[99:2157 - 99:2158: value = '.', isAfterSpace = false]
Identifier[99:2158 - 99:2165: value = 'reverse', isAfterSpace = false]
EOL[99:2165 - 99:2165: value = ';', isAfterSpace = false]
Keyword[100:2167 - 100:2173: value = 'return', isAfterSpace = true]
Identifier[100:2174 - 100:2178: value = 'hash', isAfterSpace = true]
EOL[100:2178 - 100:2178: value = ';', isAfterSpace = false]
Keyword[101:2179 - 101:2191: value = 'end function', isAfterSpace = false]
EOL[101:2191 - 101:2191: value = ';', isAfterSpace = false]
EOL[102:2192 - 102:2192: value = ';', isAfterSpace = false]
Identifier[103:2193 - 103:2199: value = 'Crypto', isAfterSpace = false]
Punctuator[103:2199 - 103:2200: value = '.', isAfterSpace = false]
Identifier[103:2200 - 103:2207: value = 'encrypt', isAfterSpace = false]
Punctuator[103:2208 - 103:2209: value = '=', isAfterSpace = true]
Keyword[103:2210 - 103:2218: value = 'function', isAfterSpace = true]
Punctuator[103:2218 - 103:2219: value = '(', isAfterSpace = false]
Identifier[103:2219 - 103:2222: value = 'str', isAfterSpace = false]
Punctuator[103:2222 - 103:2223: value = ',', isAfterSpace = false]
Identifier[103:2224 - 103:2226: value = 'pw', isAfterSpace = true]
Punctuator[103:2226 - 103:2227: value = ')', isAfterSpace = false]
EOL[103:2227 - 103:2227: value = ';', isAfterSpace = false]
Identifier[104:2229 - 104:2231: value = 'me', isAfterSpace = true]
Punctuator[104:2232 - 104:2233: value = '=', isAfterSpace = true]
Identifier[104:2234 - 104:2238: value = 'self', isAfterSpace = true]
EOL[104:2238 - 104:2238: value = ';', isAfterSpace = false]
Keyword[105:2240 - 105:2242: value = 'if', isAfterSpace = true]
Punctuator[105:2243 - 105:2244: value = '(', isAfterSpace = true]
Identifier[105:2244 - 105:2246: value = 'pw', isAfterSpace = false]
Punctuator[105:2247 - 105:2249: value = '==', isAfterSpace = true]
NilLiteral[105:2250 - 105:2254: value = 'null', isAfterSpace = true]
Punctuator[105:2254 - 105:2255: value = ')', isAfterSpace = false]
Keyword[105:2256 - 105:2260: value = 'then', isAfterSpace = true]
Identifier[105:2261 - 105:2263: value = 'pw', isAfterSpace = true]
Punctuator[105:2264 - 105:2265: value = '=', isAfterSpace = true]
Identifier[105:2266 - 105:2268: value = 'me', isAfterSpace = true]
Punctuator[105:2268 - 105:2269: value = '.', isAfterSpace = false]
Identifier[105:2269 - 105:2282: value = 'defaultSecret', isAfterSpace = false]
EOL[105:2282 - 105:2282: value = ';', isAfterSpace = false]
Identifier[106:2284 - 106:2288: value = 'hash', isAfterSpace = true]
Punctuator[106:2289 - 106:2290: value = '=', isAfterSpace = true]
Identifier[106:2291 - 106:2293: value = 'me', isAfterSpace = true]
Punctuator[106:2293 - 106:2294: value = '.', isAfterSpace = false]
Identifier[106:2294 - 106:2301: value = 'getHash', isAfterSpace = false]
Punctuator[106:2301 - 106:2302: value = '(', isAfterSpace = false]
Identifier[106:2302 - 106:2304: value = 'pw', isAfterSpace = false]
Punctuator[106:2304 - 106:2305: value = ')', isAfterSpace = false]
EOL[106:2305 - 106:2305: value = ';', isAfterSpace = false]
Identifier[107:2307 - 107:2318: value = 'hashPointer', isAfterSpace = true]
Punctuator[107:2319 - 107:2320: value = '=', isAfterSpace = true]
NumericLiteral[107:2321 - 107:2322: value = '0', isAfterSpace = true]
EOL[107:2322 - 107:2322: value = ';', isAfterSpace = false]
Identifier[108:2324 - 108:2330: value = 'output', isAfterSpace = true]
Punctuator[108:2331 - 108:2332: value = '=', isAfterSpace = true]
Punctuator[108:2333 - 108:2334: value = '[', isAfterSpace = true]
Punctuator[108:2334 - 108:2335: value = ']', isAfterSpace = false]
EOL[108:2335 - 108:2335: value = ';', isAfterSpace = false]
Identifier[109:2337 - 109:2345: value = 'position', isAfterSpace = true]
Punctuator[109:2346 - 109:2347: value = '=', isAfterSpace = true]
NumericLiteral[109:2348 - 109:2349: value = '0', isAfterSpace = true]
EOL[109:2349 - 109:2349: value = ';', isAfterSpace = false]
Identifier[110:2351 - 110:2358: value = 'padding', isAfterSpace = true]
Punctuator[110:2359 - 110:2360: value = '=', isAfterSpace = true]
Identifier[110:2361 - 110:2364: value = 'str', isAfterSpace = true]
Punctuator[110:2364 - 110:2365: value = '.', isAfterSpace = false]
Identifier[110:2365 - 110:2368: value = 'len', isAfterSpace = false]
Punctuator[110:2369 - 110:2370: value = '%', isAfterSpace = true]
NumericLiteral[110:2371 - 110:2372: value = '3', isAfterSpace = true]
EOL[110:2372 - 110:2372: value = ';', isAfterSpace = false]
Identifier[111:2374 - 111:2377: value = 'max', isAfterSpace = true]
Punctuator[111:2378 - 111:2379: value = '=', isAfterSpace = true]
Identifier[111:2380 - 111:2383: value = 'str', isAfterSpace = true]
Punctuator[111:2383 - 111:2384: value = '.', isAfterSpace = false]
Identifier[111:2384 - 111:2387: value = 'len', isAfterSpace = false]
Punctuator[111:2388 - 111:2389: value = '-', isAfterSpace = true]
Identifier[111:2390 - 111:2397: value = 'padding', isAfterSpace = true]
EOL[111:2397 - 111:2397: value = ';', isAfterSpace = false]
Identifier[112:2399 - 112:2402: value = 'get', isAfterSpace = true]
Punctuator[112:2403 - 112:2404: value = '=', isAfterSpace = true]
Keyword[112:2405 - 112:2413: value = 'function', isAfterSpace = true]
Punctuator[112:2413 - 112:2414: value = '(', isAfterSpace = false]
Identifier[112:2414 - 112:2415: value = 'v', isAfterSpace = false]
Punctuator[112:2415 - 112:2416: value = ')', isAfterSpace = false]
EOL[112:2416 - 112:2416: value = ';', isAfterSpace = false]
Keyword[113:2419 - 113:2421: value = 'if', isAfterSpace = true]
Punctuator[113:2422 - 113:2423: value = '(', isAfterSpace = true]
Keyword[113:2423 - 113:2426: value = 'not', isAfterSpace = false]
Identifier[113:2427 - 113:2429: value = 'me', isAfterSpace = true]
Punctuator[113:2429 - 113:2430: value = '.', isAfterSpace = false]
Identifier[113:2430 - 113:2435: value = 'table', isAfterSpace = false]
Punctuator[113:2435 - 113:2436: value = '.', isAfterSpace = false]
Identifier[113:2436 - 113:2444: value = 'hasIndex', isAfterSpace = false]
Punctuator[113:2444 - 113:2445: value = '(', isAfterSpace = false]
Identifier[113:2445 - 113:2446: value = 'v', isAfterSpace = false]
Punctuator[113:2446 - 113:2447: value = ')', isAfterSpace = false]
Punctuator[113:2447 - 113:2448: value = ')', isAfterSpace = false]
Keyword[113:2449 - 113:2453: value = 'then', isAfterSpace = true]
EOL[113:2453 - 113:2453: value = ';', isAfterSpace = false]
Punctuator[114:2457 - 114:2458: value = '(', isAfterSpace = true]
Keyword[114:2458 - 114:2461: value = 'new', isAfterSpace = false]
Identifier[114:2462 - 114:2464: value = 'me', isAfterSpace = true]
Punctuator[114:2464 - 114:2465: value = '.', isAfterSpace = false]
Identifier[114:2465 - 114:2470: value = 'Error', isAfterSpace = false]
Punctuator[114:2470 - 114:2471: value = ')', isAfterSpace = false]
Punctuator[114:2471 - 114:2472: value = '.', isAfterSpace = false]
Identifier[114:2472 - 114:2483: value = 'constructor', isAfterSpace = false]
Punctuator[114:2483 - 114:2484: value = '(', isAfterSpace = false]
StringLiteral[114:2484 - 114:2505: value = 'Invalid index $0...', isAfterSpace = false]
Punctuator[114:2505 - 114:2506: value = ',', isAfterSpace = false]
Punctuator[114:2507 - 114:2508: value = '[', isAfterSpace = true]
Identifier[114:2508 - 114:2509: value = 'v', isAfterSpace = false]
Punctuator[114:2509 - 114:2510: value = ']', isAfterSpace = false]
Punctuator[114:2510 - 114:2511: value = ')', isAfterSpace = false]
Punctuator[114:2511 - 114:2512: value = '.', isAfterSpace = false]
Identifier[114:2512 - 114:2517: value = 'throw', isAfterSpace = false]
Punctuator[114:2517 - 114:2518: value = '(', isAfterSpace = false]
Punctuator[114:2518 - 114:2519: value = ')', isAfterSpace = false]
EOL[114:2519 - 114:2519: value = ';', isAfterSpace = false]
Keyword[115:2522 - 115:2528: value = 'end if', isAfterSpace = true]
EOL[115:2528 - 115:2528: value = ';', isAfterSpace = false]
Keyword[116:2531 - 116:2537: value = 'return', isAfterSpace = true]
Identifier[116:2538 - 116:2540: value = 'me', isAfterSpace = true]
Punctuator[116:2540 - 116:2541: value = '.', isAfterSpace = false]
Identifier[116:2541 - 116:2546: value = 'table', isAfterSpace = false]
Punctuator[116:2546 - 116:2547: value = '[', isAfterSpace = false]
Identifier[116:2547 - 116:2548: value = 'v', isAfterSpace = false]
Punctuator[116:2548 - 116:2549: value = ']', isAfterSpace = false]
EOL[116:2549 - 116:2549: value = ';', isAfterSpace = false]
Keyword[117:2551 - 117:2563: value = 'end function', isAfterSpace = true]
EOL[117:2563 - 117:2563: value = ';', isAfterSpace = false]
Identifier[118:2565 - 118:2568: value = 'AND', isAfterSpace = true]
Punctuator[118:2569 - 118:2570: value = '=', isAfterSpace = true]
Keyword[118:2571 - 118:2579: value = 'function', isAfterSpace = true]
Punctuator[118:2579 - 118:2580: value = '(', isAfterSpace = false]
Identifier[118:2580 - 118:2581: value = 'a', isAfterSpace = false]
Punctuator[118:2581 - 118:2582: value = ',', isAfterSpace = false]
Identifier[118:2583 - 118:2584: value = 'b', isAfterSpace = true]
Punctuator[118:2584 - 118:2585: value = ')', isAfterSpace = false]
EOL[118:2585 - 118:2585: value = ';', isAfterSpace = false]
Keyword[119:2588 - 119:2594: value = 'return', isAfterSpace = true]
Identifier[119:2595 - 119:2602: value = 'bitwise', isAfterSpace = true]
Punctuator[119:2602 - 119:2603: value = '(', isAfterSpace = false]
StringLiteral[119:2603 - 119:2606: value = '&', isAfterSpace = false]
Punctuator[119:2606 - 119:2607: value = ',', isAfterSpace = false]
Identifier[119:2608 - 119:2609: value = 'a', isAfterSpace = true]
Punctuator[119:2609 - 119:2610: value = ',', isAfterSpace = false]
Identifier[119:2611 - 119:2612: value = 'b', isAfterSpace = true]
Punctuator[119:2612 - 119:2613: value = ')', isAfterSpace = false]
EOL[119:2613 - 119:2613: value = ';', isAfterSpace = false]
Keyword[120:2615 - 120:2627: value = 'end function', isAfterSpace = true]
EOL[120:2627 - 120:2627: value = ';', isAfterSpace = false]
Identifier[121:2629 - 121:2635: value = 'LSHIFT', isAfterSpace = true]
Punctuator[121:2636 - 121:2637: value = '=', isAfterSpace = true]
Keyword[121:2638 - 121:2646: value = 'function', isAfterSpace = true]
Punctuator[121:2646 - 121:2647: value = '(', isAfterSpace = false]
Identifier[121:2647 - 121:2648: value = 'a', isAfterSpace = false]
Punctuator[121:2648 - 121:2649: value = ',', isAfterSpace = false]
Identifier[121:2650 - 121:2651: value = 'b', isAfterSpace = true]
Punctuator[121:2651 - 121:2652: value = ')', isAfterSpace = false]
EOL[121:2652 - 121:2652: value = ';', isAfterSpace = false]
Keyword[122:2655 - 122:2661: value = 'return', isAfterSpace = true]
Identifier[122:2662 - 122:2669: value = 'bitwise', isAfterSpace = true]
Punctuator[122:2669 - 122:2670: value = '(', isAfterSpace = false]
StringLiteral[122:2670 - 122:2674: value = '<<', isAfterSpace = false]
Punctuator[122:2674 - 122:2675: value = ',', isAfterSpace = false]
Identifier[122:2676 - 122:2677: value = 'a', isAfterSpace = true]
Punctuator[122:2677 - 122:2678: value = ',', isAfterSpace = false]
Identifier[122:2679 - 122:2680: value = 'b', isAfterSpace = true]
Punctuator[122:2680 - 122:2681: value = ')', isAfterSpace = false]
EOL[122:2681 - 122:2681: value = ';', isAfterSpace = false]
Keyword[123:2683 - 123:2695: value = 'end function', isAfterSpace = true]
EOL[123:2695 - 123:2695: value = ';', isAfterSpace = false]
Identifier[124:2697 - 124:2703: value = 'RSHIFT', isAfterSpace = true]
Punctuator[124:2704 - 124:2705: value = '=', isAfterSpace = true]
Keyword[124:2706 - 124:2714: value = 'function', isAfterSpace = true]
Punctuator[124:2714 - 124:2715: value = '(', isAfterSpace = false]
Identifier[124:2715 - 124:2716: value = 'a', isAfterSpace = false]
Punctuator[124:2716 - 124:2717: value = ',', isAfterSpace = false]
Identifier[124:2718 - 124:2719: value = 'b', isAfterSpace = true]
Punctuator[124:2719 - 124:2720: value = ')', isAfterSpace = false]
EOL[124:2720 - 124:2720: value = ';', isAfterSpace = false]
Keyword[125:2723 - 125:2729: value = 'return', isAfterSpace = true]
Identifier[125:2730 - 125:2737: value = 'bitwise', isAfterSpace = true]
Punctuator[125:2737 - 125:2738: value = '(', isAfterSpace = false]
StringLiteral[125:2738 - 125:2742: value = '>>', isAfterSpace = false]
Punctuator[125:2742 - 125:2743: value = ',', isAfterSpace = false]
Identifier[125:2744 - 125:2745: value = 'a', isAfterSpace = true]
Punctuator[125:2745 - 125:2746: value = ',', isAfterSpace = false]
Identifier[125:2747 - 125:2748: value = 'b', isAfterSpace = true]
Punctuator[125:2748 - 125:2749: value = ')', isAfterSpace = false]
EOL[125:2749 - 125:2749: value = ';', isAfterSpace = false]
Keyword[126:2751 - 126:2763: value = 'end function', isAfterSpace = true]
EOL[126:2763 - 126:2763: value = ';', isAfterSpace = false]
Keyword[127:2765 - 127:2770: value = 'while', isAfterSpace = true]
Identifier[127:2771 - 127:2779: value = 'position', isAfterSpace = true]
Punctuator[127:2780 - 127:2781: value = '<', isAfterSpace = true]
Identifier[127:2782 - 127:2785: value = 'max', isAfterSpace = true]
EOL[127:2785 - 127:2785: value = ';', isAfterSpace = false]
Identifier[128:2788 - 128:2789: value = 'm', isAfterSpace = true]
Punctuator[128:2790 - 128:2791: value = '=', isAfterSpace = true]
Identifier[128:2792 - 128:2796: value = 'hash', isAfterSpace = true]
Punctuator[128:2796 - 128:2797: value = '[', isAfterSpace = false]
Identifier[128:2797 - 128:2805: value = 'position', isAfterSpace = false]
Punctuator[128:2806 - 128:2807: value = '%', isAfterSpace = true]
Identifier[128:2808 - 128:2812: value = 'hash', isAfterSpace = true]
Punctuator[128:2812 - 128:2813: value = '.', isAfterSpace = false]
Identifier[128:2813 - 128:2816: value = 'len', isAfterSpace = false]
Punctuator[128:2817 - 128:2818: value = '-', isAfterSpace = true]
NumericLiteral[128:2819 - 128:2820: value = '1', isAfterSpace = true]
Punctuator[128:2820 - 128:2821: value = ']', isAfterSpace = false]
EOL[128:2821 - 128:2821: value = ';', isAfterSpace = false]
Identifier[129:2824 - 129:2825: value = 'a', isAfterSpace = true]
Punctuator[129:2826 - 129:2827: value = '=', isAfterSpace = true]
Identifier[129:2828 - 129:2834: value = 'LSHIFT', isAfterSpace = true]
Punctuator[129:2834 - 129:2835: value = '(', isAfterSpace = false]
Identifier[129:2835 - 129:2838: value = 'str', isAfterSpace = false]
Punctuator[129:2838 - 129:2839: value = '[', isAfterSpace = false]
Identifier[129:2839 - 129:2847: value = 'position', isAfterSpace = false]
Punctuator[129:2847 - 129:2848: value = ']', isAfterSpace = false]
Punctuator[129:2848 - 129:2849: value = '.', isAfterSpace = false]
Identifier[129:2849 - 129:2853: value = 'code', isAfterSpace = false]
Punctuator[129:2854 - 129:2855: value = '+', isAfterSpace = true]
Identifier[129:2856 - 129:2857: value = 'm', isAfterSpace = true]
Punctuator[129:2857 - 129:2858: value = ',', isAfterSpace = false]
NumericLiteral[129:2859 - 129:2861: value = '16', isAfterSpace = true]
Punctuator[129:2861 - 129:2862: value = ')', isAfterSpace = false]
EOL[129:2862 - 129:2862: value = ';', isAfterSpace = false]
Identifier[130:2865 - 130:2866: value = 'b', isAfterSpace = true]
Punctuator[130:2867 - 130:2868: value = '=', isAfterSpace = true]
Identifier[130:2869 - 130:2875: value = 'LSHIFT', isAfterSpace = true]
Punctuator[130:2875 - 130:2876: value = '(', isAfterSpace = false]
Identifier[130:2876 - 130:2879: value = 'str', isAfterSpace = false]
Punctuator[130:2879 - 130:2880: value = '[', isAfterSpace = false]
Identifier[130:2880 - 130:2888: value = 'position', isAfterSpace = false]
Punctuator[130:2889 - 130:2890: value = '+', isAfterSpace = true]
NumericLiteral[130:2891 - 130:2892: value = '1', isAfterSpace = true]
Punctuator[130:2892 - 130:2893: value = ']', isAfterSpace = false]
Punctuator[130:2893 - 130:2894: value = '.', isAfterSpace = false]
Identifier[130:2894 - 130:2898: value = 'code', isAfterSpace = false]
Punctuator[130:2899 - 130:2900: value = '+', isAfterSpace = true]
Identifier[130:2901 - 130:2902: value = 'm', isAfterSpace = true]
Punctuator[130:2902 - 130:2903: value = ',', isAfterSpace = false]
NumericLiteral[130:2904 - 130:2905: value = '8', isAfterSpace = true]
Punctuator[130:2905 - 130:2906: value = ')', isAfterSpace = false]
EOL[130:2906 - 130:2906: value = ';', isAfterSpace = false]
Identifier[131:2909 - 131:2910: value = 'c', isAfterSpace = true]
Punctuator[131:2911 - 131:2912: value = '=', isAfterSpace = true]
Identifier[131:2913 - 131:2916: value = 'str', isAfterSpace = true]
Punctuator[131:2916 - 131:2917: value = '[', isAfterSpace = false]
Identifier[131:2917 - 131:2925: value = 'position', isAfterSpace = false]
Punctuator[131:2926 - 131:2927: value = '+', isAfterSpace = true]
NumericLiteral[131:2928 - 131:2929: value = '2', isAfterSpace = true]
Punctuator[131:2929 - 131:2930: value = ']', isAfterSpace = false]
Punctuator[131:2930 - 131:2931: value = '.', isAfterSpace = false]
Identifier[131:2931 - 131:2935: value = 'code', isAfterSpace = false]
Punctuator[131:2936 - 131:2937: value = '+', isAfterSpace = true]
Identifier[131:2938 - 131:2939: value = 'm', isAfterSpace = true]
EOL[131:2939 - 131:2939: value = ';', isAfterSpace = false]
Identifier[132:2942 - 132:2948: value = 'buffer', isAfterSpace = true]
Punctuator[132:2949 - 132:2950: value = '=', isAfterSpace = true]
Identifier[132:2951 - 132:2952: value = 'a', isAfterSpace = true]
Punctuator[132:2953 - 132:2954: value = '+', isAfterSpace = true]
Identifier[132:2955 - 132:2956: value = 'b', isAfterSpace = true]
Punctuator[132:2957 - 132:2958: value = '+', isAfterSpace = true]
Identifier[132:2959 - 132:2960: value = 'c', isAfterSpace = true]
EOL[132:2960 - 132:2960: value = ';', isAfterSpace = false]
Identifier[133:2963 - 133:2969: value = 'output', isAfterSpace = true]
Punctuator[133:2969 - 133:2970: value = '.', isAfterSpace = false]
Identifier[133:2970 - 133:2974: value = 'push', isAfterSpace = false]
Punctuator[133:2974 - 133:2975: value = '(', isAfterSpace = false]
Identifier[133:2975 - 133:2978: value = 'get', isAfterSpace = false]
Punctuator[133:2978 - 133:2979: value = '(', isAfterSpace = false]
Identifier[133:2979 - 133:2982: value = 'AND', isAfterSpace = false]
Punctuator[133:2982 - 133:2983: value = '(', isAfterSpace = false]
Identifier[133:2983 - 133:2989: value = 'RSHIFT', isAfterSpace = false]
Punctuator[133:2989 - 133:2990: value = '(', isAfterSpace = false]
Identifier[133:2990 - 133:2996: value = 'buffer', isAfterSpace = false]
Punctuator[133:2996 - 133:2997: value = ',', isAfterSpace = false]
NumericLiteral[133:2998 - 133:3000: value = '18', isAfterSpace = true]
Punctuator[133:3000 - 133:3001: value = ')', isAfterSpace = false]
Punctuator[133:3001 - 133:3002: value = ',', isAfterSpace = false]
NumericLiteral[133:3003 - 133:3005: value = '63', isAfterSpace = true]
Punctuator[133:3005 - 133:3006: value = ')', isAfterSpace = false]
Punctuator[133:3006 - 133:3007: value = ')', isAfterSpace = false]
Punctuator[133:3007 - 133:3008: value = ')', isAfterSpace = false]
EOL[133:3008 - 133:3008: value = ';', isAfterSpace = false]
Identifier[134:3011 - 134:3017: value = 'output', isAfterSpace = true]
Punctuator[134:3017 - 134:3018: value = '.', isAfterSpace = false]
Identifier[134:3018 - 134:3022: value = 'push', isAfterSpace = false]
Punctuator[134:3022 - 134:3023: value = '(', isAfterSpace = false]
Identifier[134:3023 - 134:3026: value = 'get', isAfterSpace = false]
Punctuator[134:3026 - 134:3027: value = '(', isAfterSpace = false]
Identifier[134:3027 - 134:3030: value = 'AND', isAfterSpace = false]
Punctuator[134:3030 - 134:3031: value = '(', isAfterSpace = false]
Identifier[134:3031 - 134:3037: value = 'RSHIFT', isAfterSpace = false]
Punctuator[134:3037 - 134:3038: value = '(', isAfterSpace = false]
Identifier[134:3038 - 134:3044: value = 'buffer', isAfterSpace = false]
Punctuator[134:3044 - 134:3045: value = ',', isAfterSpace = false]
NumericLiteral[134:3046 - 134:3048: value = '12', isAfterSpace = true]
Punctuator[134:3048 - 134:3049: value = ')', isAfterSpace = false]
Punctuator[134:3049 - 134:3050: value = ',', isAfterSpace = false]
NumericLiteral[134:3051 - 134:3053: value = '63', isAfterSpace = true]
Punctuator[134:3053 - 134:3054: value = ')', isAfterSpace = false]
Punctuator[134:3054 - 134:3055: value = ')', isAfterSpace = false]
Punctuator[134:3055 - 134:3056: value = ')', isAfterSpace = false]
EOL[134:3056 - 134:3056: value = ';', isAfterSpace = false]
Identifier[135:3059 - 135:3065: value = 'output', isAfterSpace = true]
Punctuator[135:3065 - 135:3066: value = '.', isAfterSpace = false]
Identifier[135:3066 - 135:3070: value = 'push', isAfterSpace = false]
Punctuator[135:3070 - 135:3071: value = '(', isAfterSpace = false]
Identifier[135:3071 - 135:3074: value = 'get', isAfterSpace = false]
Punctuator[135:3074 - 135:3075: value = '(', isAfterSpace = false]
Identifier[135:3075 - 135:3078: value = 'AND', isAfterSpace = false]
Punctuator[135:3078 - 135:3079: value = '(', isAfterSpace = false]
Identifier[135:3079 - 135:3085: value = 'RSHIFT', isAfterSpace = false]
Punctuator[135:3085 - 135:3086: value = '(', isAfterSpace = false]
Identifier[135:3086 - 135:3092: value = 'buffer', isAfterSpace = false]
Punctuator[135:3092 - 135:3093: value = ',', isAfterSpace = false]
NumericLiteral[135:3094 - 135:3095: value = '6', isAfterSpace = true]
Punctuator[135:3095 - 135:3096: value = ')', isAfterSpace = false]
Punctuator[135:3096 - 135:3097: value = ',', isAfterSpace = false]
NumericLiteral[135:3098 - 135:3100: value = '63', isAfterSpace = true]
Punctuator[135:3100 - 135:3101: value = ')', isAfterSpace = false]
Punctuator[135:3101 - 135:3102: value = ')', isAfterSpace = false]
Punctuator[135:3102 - 135:3103: value = ')', isAfterSpace = false]
EOL[135:3103 - 135:3103: value = ';', isAfterSpace = false]
Identifier[136:3106 - 136:3112: value = 'output', isAfterSpace = true]
Punctuator[136:3112 - 136:3113: value = '.', isAfterSpace = false]
Identifier[136:3113 - 136:3117: value = 'push', isAfterSpace = false]
Punctuator[136:3117 - 136:3118: value = '(', isAfterSpace = false]
Identifier[136:3118 - 136:3121: value = 'get', isAfterSpace = false]
Punctuator[136:3121 - 136:3122: value = '(', isAfterSpace = false]
Identifier[136:3122 - 136:3125: value = 'AND', isAfterSpace = false]
Punctuator[136:3125 - 136:3126: value = '(', isAfterSpace = false]
Identifier[136:3126 - 136:3132: value = 'buffer', isAfterSpace = false]
Punctuator[136:3132 - 136:3133: value = ',', isAfterSpace = false]
NumericLiteral[136:3134 - 136:3136: value = '63', isAfterSpace = true]
Punctuator[136:3136 - 136:3137: value = ')', isAfterSpace = false]
Punctuator[136:3137 - 136:3138: value = ')', isAfterSpace = false]
Punctuator[136:3138 - 136:3139: value = ')', isAfterSpace = false]
EOL[136:3139 - 136:3139: value = ';', isAfterSpace = false]
Identifier[137:3142 - 137:3150: value = 'position', isAfterSpace = true]
Punctuator[137:3151 - 137:3152: value = '=', isAfterSpace = true]
Identifier[137:3153 - 137:3161: value = 'position', isAfterSpace = true]
Punctuator[137:3162 - 137:3163: value = '+', isAfterSpace = true]
NumericLiteral[137:3164 - 137:3165: value = '3', isAfterSpace = true]
EOL[137:3165 - 137:3165: value = ';', isAfterSpace = false]
Keyword[138:3167 - 138:3176: value = 'end while', isAfterSpace = true]
EOL[138:3176 - 138:3176: value = ';', isAfterSpace = false]
Keyword[139:3178 - 139:3180: value = 'if', isAfterSpace = true]
Punctuator[139:3181 - 139:3182: value = '(', isAfterSpace = true]
Identifier[139:3182 - 139:3189: value = 'padding', isAfterSpace = false]
Punctuator[139:3190 - 139:3192: value = '==', isAfterSpace = true]
NumericLiteral[139:3193 - 139:3194: value = '2', isAfterSpace = true]
Punctuator[139:3194 - 139:3195: value = ')', isAfterSpace = false]
Keyword[139:3196 - 139:3200: value = 'then', isAfterSpace = true]
EOL[139:3200 - 139:3200: value = ';', isAfterSpace = false]
Identifier[140:3203 - 140:3204: value = 'm', isAfterSpace = true]
Punctuator[140:3205 - 140:3206: value = '=', isAfterSpace = true]
Identifier[140:3207 - 140:3211: value = 'hash', isAfterSpace = true]
Punctuator[140:3211 - 140:3212: value = '[', isAfterSpace = false]
Identifier[140:3212 - 140:3220: value = 'position', isAfterSpace = false]
Punctuator[140:3221 - 140:3222: value = '%', isAfterSpace = true]
Identifier[140:3223 - 140:3227: value = 'hash', isAfterSpace = true]
Punctuator[140:3227 - 140:3228: value = '.', isAfterSpace = false]
Identifier[140:3228 - 140:3231: value = 'len', isAfterSpace = false]
Punctuator[140:3232 - 140:3233: value = '-', isAfterSpace = true]
NumericLiteral[140:3234 - 140:3235: value = '1', isAfterSpace = true]
Punctuator[140:3235 - 140:3236: value = ']', isAfterSpace = false]
EOL[140:3236 - 140:3236: value = ';', isAfterSpace = false]
Identifier[141:3239 - 141:3240: value = 'a', isAfterSpace = true]
Punctuator[141:3241 - 141:3242: value = '=', isAfterSpace = true]
Identifier[141:3243 - 141:3249: value = 'LSHIFT', isAfterSpace = true]
Punctuator[141:3249 - 141:3250: value = '(', isAfterSpace = false]
Identifier[141:3250 - 141:3253: value = 'str', isAfterSpace = false]
Punctuator[141:3253 - 141:3254: value = '[', isAfterSpace = false]
Identifier[141:3254 - 141:3262: value = 'position', isAfterSpace = false]
Punctuator[141:3262 - 141:3263: value = ']', isAfterSpace = false]
Punctuator[141:3263 - 141:3264: value = '.', isAfterSpace = false]
Identifier[141:3264 - 141:3268: value = 'code', isAfterSpace = false]
Punctuator[141:3269 - 141:3270: value = '+', isAfterSpace = true]
Identifier[141:3271 - 141:3272: value = 'm', isAfterSpace = true]
Punctuator[141:3272 - 141:3273: value = ',', isAfterSpace = false]
NumericLiteral[141:3274 - 141:3275: value = '8', isAfterSpace = true]
Punctuator[141:3275 - 141:3276: value = ')', isAfterSpace = false]
EOL[141:3276 - 141:3276: value = ';', isAfterSpace = false]
Identifier[142:3279 - 142:3280: value = 'b', isAfterSpace = true]
Punctuator[142:3281 - 142:3282: value = '=', isAfterSpace = true]
Identifier[142:3283 - 142:3286: value = 'str', isAfterSpace = true]
Punctuator[142:3286 - 142:3287: value = '[', isAfterSpace = false]
Identifier[142:3287 - 142:3295: value = 'position', isAfterSpace = false]
Punctuator[142:3296 - 142:3297: value = '+', isAfterSpace = true]
NumericLiteral[142:3298 - 142:3299: value = '1', isAfterSpace = true]
Punctuator[142:3299 - 142:3300: value = ']', isAfterSpace = false]
Punctuator[142:3300 - 142:3301: value = '.', isAfterSpace = false]
Identifier[142:3301 - 142:3305: value = 'code', isAfterSpace = false]
Punctuator[142:3306 - 142:3307: value = '+', isAfterSpace = true]
Identifier[142:3308 - 142:3309: value = 'm', isAfterSpace = true]
EOL[142:3309 - 142:3309: value = ';', isAfterSpace = false]
Identifier[143:3312 - 143:3318: value = 'buffer', isAfterSpace = true]
Punctuator[143:3319 - 143:3320: value = '=', isAfterSpace = true]
Identifier[143:3321 - 143:3322: value = 'a', isAfterSpace = true]
Punctuator[143:3323 - 143:3324: value = '+', isAfterSpace = true]
Identifier[143:3325 - 143:3326: value = 'b', isAfterSpace = true]
EOL[143:3326 - 143:3326: value = ';', isAfterSpace = false]
Identifier[144:3329 - 144:3335: value = 'output', isAfterSpace = true]
Punctuator[144:3335 - 144:3336: value = '.', isAfterSpace = false]
Identifier[144:3336 - 144:3340: value = 'push', isAfterSpace = false]
Punctuator[144:3340 - 144:3341: value = '(', isAfterSpace = false]
Identifier[144:3341 - 144:3344: value = 'get', isAfterSpace = false]
Punctuator[144:3344 - 144:3345: value = '(', isAfterSpace = false]
Identifier[144:3345 - 144:3351: value = 'RSHIFT', isAfterSpace = false]
Punctuator[144:3351 - 144:3352: value = '(', isAfterSpace = false]
Identifier[144:3352 - 144:3358: value = 'buffer', isAfterSpace = false]
Punctuator[144:3358 - 144:3359: value = ',', isAfterSpace = false]
NumericLiteral[144:3360 - 144:3362: value = '10', isAfterSpace = true]
Punctuator[144:3362 - 144:3363: value = ')', isAfterSpace = false]
Punctuator[144:3363 - 144:3364: value = ')', isAfterSpace = false]
Punctuator[144:3364 - 144:3365: value = ')', isAfterSpace = false]
EOL[144:3365 - 144:3365: value = ';', isAfterSpace = false]
Identifier[145:3368 - 145:3374: value = 'output', isAfterSpace = true]
Punctuator[145:3374 - 145:3375: value = '.', isAfterSpace = false]
Identifier[145:3375 - 145:3379: value = 'push', isAfterSpace = false]
Punctuator[145:3379 - 145:3380: value = '(', isAfterSpace = false]
Identifier[145:3380 - 145:3383: value = 'get', isAfterSpace = false]
Punctuator[145:3383 - 145:3384: value = '(', isAfterSpace = false]
Identifier[145:3384 - 145:3387: value = 'AND', isAfterSpace = false]
Punctuator[145:3387 - 145:3388: value = '(', isAfterSpace = false]
Identifier[145:3388 - 145:3394: value = 'RSHIFT', isAfterSpace = false]
Punctuator[145:3394 - 145:3395: value = '(', isAfterSpace = false]
Identifier[145:3395 - 145:3401: value = 'buffer', isAfterSpace = false]
Punctuator[145:3401 - 145:3402: value = ',', isAfterSpace = false]
NumericLiteral[145:3403 - 145:3404: value = '4', isAfterSpace = true]
Punctuator[145:3404 - 145:3405: value = ')', isAfterSpace = false]
Punctuator[145:3405 - 145:3406: value = ',', isAfterSpace = false]
NumericLiteral[145:3407 - 145:3409: value = '63', isAfterSpace = true]
Punctuator[145:3409 - 145:3410: value = ')', isAfterSpace = false]
Punctuator[145:3410 - 145:3411: value = ')', isAfterSpace = false]
Punctuator[145:3411 - 145:3412: value = ')', isAfterSpace = false]
EOL[145:3412 - 145:3412: value = ';', isAfterSpace = false]
Identifier[146:3415 - 146:3421: value = 'output', isAfterSpace = true]
Punctuator[146:3421 - 146:3422: value = '.', isAfterSpace = false]
Identifier[146:3422 - 146:3426: value = 'push', isAfterSpace = false]
Punctuator[146:3426 - 146:3427: value = '(', isAfterSpace = false]
Identifier[146:3427 - 146:3430: value = 'get', isAfterSpace = false]
Punctuator[146:3430 - 146:3431: value = '(', isAfterSpace = false]
Identifier[146:3431 - 146:3434: value = 'AND', isAfterSpace = false]
Punctuator[146:3434 - 146:3435: value = '(', isAfterSpace = false]
Identifier[146:3435 - 146:3441: value = 'LSHIFT', isAfterSpace = false]
Punctuator[146:3441 - 146:3442: value = '(', isAfterSpace = false]
Identifier[146:3442 - 146:3448: value = 'buffer', isAfterSpace = false]
Punctuator[146:3448 - 146:3449: value = ',', isAfterSpace = false]
NumericLiteral[146:3450 - 146:3451: value = '2', isAfterSpace = true]
Punctuator[146:3451 - 146:3452: value = ')', isAfterSpace = false]
Punctuator[146:3452 - 146:3453: value = ',', isAfterSpace = false]
NumericLiteral[146:3454 - 146:3456: value = '63', isAfterSpace = true]
Punctuator[146:3456 - 146:3457: value = ')', isAfterSpace = false]
Punctuator[146:3457 - 146:3458: value = ')', isAfterSpace = false]
Punctuator[146:3458 - 146:3459: value = ')', isAfterSpace = false]
EOL[146:3459 - 146:3459: value = ';', isAfterSpace = false]
Identifier[147:3462 - 147:3468: value = 'output', isAfterSpace = true]
Punctuator[147:3468 - 147:3469: value = '.', isAfterSpace = false]
Identifier[147:3469 - 147:3473: value = 'push', isAfterSpace = false]
Punctuator[147:3473 - 147:3474: value = '(', isAfterSpace = false]
StringLiteral[147:3474 - 147:3477: value = '=', isAfterSpace = false]
Punctuator[147:3477 - 147:3478: value = ')', isAfterSpace = false]
EOL[147:3478 - 147:3478: value = ';', isAfterSpace = false]
Keyword[148:3480 - 148:3487: value = 'else if', isAfterSpace = true]
Punctuator[148:3488 - 148:3489: value = '(', isAfterSpace = true]
Identifier[148:3489 - 148:3496: value = 'padding', isAfterSpace = false]
Punctuator[148:3497 - 148:3499: value = '==', isAfterSpace = true]
NumericLiteral[148:3500 - 148:3501: value = '1', isAfterSpace = true]
Punctuator[148:3501 - 148:3502: value = ')', isAfterSpace = false]
Keyword[148:3503 - 148:3507: value = 'then', isAfterSpace = true]
EOL[148:3507 - 148:3507: value = ';', isAfterSpace = false]
Identifier[149:3510 - 149:3511: value = 'm', isAfterSpace = true]
Punctuator[149:3512 - 149:3513: value = '=', isAfterSpace = true]
Identifier[149:3514 - 149:3518: value = 'hash', isAfterSpace = true]
Punctuator[149:3518 - 149:3519: value = '[', isAfterSpace = false]
Identifier[149:3519 - 149:3527: value = 'position', isAfterSpace = false]
Punctuator[149:3528 - 149:3529: value = '%', isAfterSpace = true]
Identifier[149:3530 - 149:3534: value = 'hash', isAfterSpace = true]
Punctuator[149:3534 - 149:3535: value = '.', isAfterSpace = false]
Identifier[149:3535 - 149:3538: value = 'len', isAfterSpace = false]
Punctuator[149:3539 - 149:3540: value = '-', isAfterSpace = true]
NumericLiteral[149:3541 - 149:3542: value = '1', isAfterSpace = true]
Punctuator[149:3542 - 149:3543: value = ']', isAfterSpace = false]
EOL[149:3543 - 149:3543: value = ';', isAfterSpace = false]
Identifier[150:3546 - 150:3552: value = 'buffer', isAfterSpace = true]
Punctuator[150:3553 - 150:3554: value = '=', isAfterSpace = true]
Identifier[150:3555 - 150:3558: value = 'str', isAfterSpace = true]
Punctuator[150:3558 - 150:3559: value = '[', isAfterSpace = false]
Identifier[150:3559 - 150:3567: value = 'position', isAfterSpace = false]
Punctuator[150:3567 - 150:3568: value = ']', isAfterSpace = false]
Punctuator[150:3568 - 150:3569: value = '.', isAfterSpace = false]
Identifier[150:3569 - 150:3573: value = 'code', isAfterSpace = false]
Punctuator[150:3574 - 150:3575: value = '+', isAfterSpace = true]
Identifier[150:3576 - 150:3577: value = 'm', isAfterSpace = true]
EOL[150:3577 - 150:3577: value = ';', isAfterSpace = false]
Identifier[151:3580 - 151:3586: value = 'output', isAfterSpace = true]
Punctuator[151:3586 - 151:3587: value = '.', isAfterSpace = false]
Identifier[151:3587 - 151:3591: value = 'push', isAfterSpace = false]
Punctuator[151:3591 - 151:3592: value = '(', isAfterSpace = false]
Identifier[151:3592 - 151:3595: value = 'get', isAfterSpace = false]
Punctuator[151:3595 - 151:3596: value = '(', isAfterSpace = false]
Identifier[151:3596 - 151:3602: value = 'RSHIFT', isAfterSpace = false]
Punctuator[151:3602 - 151:3603: value = '(', isAfterSpace = false]
Identifier[151:3603 - 151:3609: value = 'buffer', isAfterSpace = false]
Punctuator[151:3609 - 151:3610: value = ',', isAfterSpace = false]
NumericLiteral[151:3611 - 151:3612: value = '2', isAfterSpace = true]
Punctuator[151:3612 - 151:3613: value = ')', isAfterSpace = false]
Punctuator[151:3613 - 151:3614: value = ')', isAfterSpace = false]
Punctuator[151:3614 - 151:3615: value = ')', isAfterSpace = false]
EOL[151:3615 - 151:3615: value = ';', isAfterSpace = false]
Identifier[152:3618 - 152:3624: value = 'output', isAfterSpace = true]
Punctuator[152:3624 - 152:3625: value = '.', isAfterSpace = false]
Identifier[152:3625 - 152:3629: value = 'push', isAfterSpace = false]
Punctuator[152:3629 - 152:3630: value = '(', isAfterSpace = false]
Identifier[152:3630 - 152:3633: value = 'get', isAfterSpace = false]
Punctuator[152:3633 - 152:3634: value = '(', isAfterSpace = false]
Identifier[152:3634 - 152:3637: value = 'AND', isAfterSpace = false]
Punctuator[152:3637 - 152:3638: value = '(', isAfterSpace = false]
Identifier[152:3638 - 152:3644: value = 'LSHIFT', isAfterSpace = false]
Punctuator[152:3644 - 152:3645: value = '(', isAfterSpace = false]
Identifier[152:3645 - 152:3651: value = 'buffer', isAfterSpace = false]
Punctuator[152:3651 - 152:3652: value = ',', isAfterSpace = false]
NumericLiteral[152:3653 - 152:3654: value = '4', isAfterSpace = true]
Punctuator[152:3654 - 152:3655: value = ')', isAfterSpace = false]
Punctuator[152:3655 - 152:3656: value = ',', isAfterSpace = false]
NumericLiteral[152:3657 - 152:3659: value = '63', isAfterSpace = true]
Punctuator[152:3659 - 152:3660: value = ')', isAfterSpace = false]
Punctuator[152:3660 - 152:3661: value = ')', isAfterSpace = false]
Punctuator[152:3661 - 152:3662: value = ')', isAfterSpace = false]
EOL[152:3662 - 152:3662: value = ';', isAfterSpace = false]
Identifier[153:3665 - 153:3671: value = 'output', isAfterSpace = true]
Punctuator[153:3671 - 153:3672: value = '.', isAfterSpace = false]
Identifier[153:3672 - 153:3676: value = 'push', isAfterSpace = false]
Punctuator[153:3676 - 153:3677: value = '(', isAfterSpace = false]
StringLiteral[153:3677 - 153:3681: value = '==', isAfterSpace = false]
Punctuator[153:3681 - 153:3682: value = ')', isAfterSpace = false]
EOL[153:3682 - 153:3682: value = ';', isAfterSpace = false]
Keyword[154:3684 - 154:3690: value = 'end if', isAfterSpace = true]
EOL[154:3690 - 154:3690: value = ';', isAfterSpace = false]
Keyword[155:3692 - 155:3698: value = 'return', isAfterSpace = true]
Identifier[155:3699 - 155:3705: value = 'output', isAfterSpace = true]
Punctuator[155:3705 - 155:3706: value = '.', isAfterSpace = false]
Identifier[155:3706 - 155:3710: value = 'join', isAfterSpace = false]
Punctuator[155:3710 - 155:3711: value = '(', isAfterSpace = false]
StringLiteral[155:3711 - 155:3713: value = '', isAfterSpace = false]
Punctuator[155:3713 - 155:3714: value = ')', isAfterSpace = false]
EOL[155:3714 - 155:3714: value = ';', isAfterSpace = false]
Keyword[156:3715 - 156:3727: value = 'end function', isAfterSpace = false]
EOL[156:3727 - 156:3727: value = ';', isAfterSpace = false]
EOL[157:3728 - 157:3728: value = ';', isAfterSpace = false]
Identifier[158:3729 - 158:3735: value = 'Crypto', isAfterSpace = false]
Punctuator[158:3735 - 158:3736: value = '.', isAfterSpace = false]
Identifier[158:3736 - 158:3743: value = 'decrypt', isAfterSpace = false]
Punctuator[158:3744 - 158:3745: value = '=', isAfterSpace = true]
Keyword[158:3746 - 158:3754: value = 'function', isAfterSpace = true]
Punctuator[158:3754 - 158:3755: value = '(', isAfterSpace = false]
Identifier[158:3755 - 158:3758: value = 'str', isAfterSpace = false]
Punctuator[158:3758 - 158:3759: value = ',', isAfterSpace = false]
Identifier[158:3760 - 158:3762: value = 'pw', isAfterSpace = true]
Punctuator[158:3762 - 158:3763: value = ')', isAfterSpace = false]
EOL[158:3763 - 158:3763: value = ';', isAfterSpace = false]
Identifier[159:3765 - 159:3767: value = 'me', isAfterSpace = true]
Punctuator[159:3768 - 159:3769: value = '=', isAfterSpace = true]
Identifier[159:3770 - 159:3774: value = 'self', isAfterSpace = true]
EOL[159:3774 - 159:3774: value = ';', isAfterSpace = false]
Keyword[160:3776 - 160:3778: value = 'if', isAfterSpace = true]
Punctuator[160:3779 - 160:3780: value = '(', isAfterSpace = true]
Identifier[160:3780 - 160:3782: value = 'pw', isAfterSpace = false]
Punctuator[160:3783 - 160:3785: value = '==', isAfterSpace = true]
NilLiteral[160:3786 - 160:3790: value = 'null', isAfterSpace = true]
Punctuator[160:3790 - 160:3791: value = ')', isAfterSpace = false]
Keyword[160:3792 - 160:3796: value = 'then', isAfterSpace = true]
Identifier[160:3797 - 160:3799: value = 'pw', isAfterSpace = true]
Punctuator[160:3800 - 160:3801: value = '=', isAfterSpace = true]
Identifier[160:3802 - 160:3804: value = 'me', isAfterSpace = true]
Punctuator[160:3804 - 160:3805: value = '.', isAfterSpace = false]
Identifier[160:3805 - 160:3818: value = 'defaultSecret', isAfterSpace = false]
EOL[160:3818 - 160:3818: value = ';', isAfterSpace = false]
Identifier[161:3820 - 161:3824: value = 'hash', isAfterSpace = true]
Punctuator[161:3825 - 161:3826: value = '=', isAfterSpace = true]
Identifier[161:3827 - 161:3829: value = 'me', isAfterSpace = true]
Punctuator[161:3829 - 161:3830: value = '.', isAfterSpace = false]
Identifier[161:3830 - 161:3837: value = 'getHash', isAfterSpace = false]
Punctuator[161:3837 - 161:3838: value = '(', isAfterSpace = false]
Identifier[161:3838 - 161:3840: value = 'pw', isAfterSpace = false]
Punctuator[161:3840 - 161:3841: value = ')', isAfterSpace = false]
EOL[161:3841 - 161:3841: value = ';', isAfterSpace = false]
Identifier[162:3843 - 162:3854: value = 'hashPointer', isAfterSpace = true]
Punctuator[162:3855 - 162:3856: value = '=', isAfterSpace = true]
NumericLiteral[162:3857 - 162:3858: value = '0', isAfterSpace = true]
EOL[162:3858 - 162:3858: value = ';', isAfterSpace = false]
Identifier[163:3860 - 163:3870: value = 'hashLength', isAfterSpace = true]
Punctuator[163:3871 - 163:3872: value = '=', isAfterSpace = true]
Identifier[163:3873 - 163:3877: value = 'hash', isAfterSpace = true]
Punctuator[163:3877 - 163:3878: value = '.', isAfterSpace = false]
Identifier[163:3878 - 163:3881: value = 'len', isAfterSpace = false]
EOL[163:3881 - 163:3881: value = ';', isAfterSpace = false]
Identifier[164:3883 - 164:3889: value = 'output', isAfterSpace = true]
Punctuator[164:3890 - 164:3891: value = '=', isAfterSpace = true]
Punctuator[164:3892 - 164:3893: value = '[', isAfterSpace = true]
Punctuator[164:3893 - 164:3894: value = ']', isAfterSpace = false]
EOL[164:3894 - 164:3894: value = ';', isAfterSpace = false]
Identifier[165:3896 - 165:3906: value = 'bitCounter', isAfterSpace = true]
Punctuator[165:3907 - 165:3908: value = '=', isAfterSpace = true]
NumericLiteral[165:3909 - 165:3910: value = '0', isAfterSpace = true]
EOL[165:3910 - 165:3910: value = ';', isAfterSpace = false]
Identifier[166:3912 - 166:3922: value = 'bitStorage', isAfterSpace = true]
Punctuator[166:3923 - 166:3924: value = '=', isAfterSpace = true]
NumericLiteral[166:3925 - 166:3926: value = '0', isAfterSpace = true]
EOL[166:3926 - 166:3926: value = ';', isAfterSpace = false]
Identifier[167:3928 - 167:3936: value = 'position', isAfterSpace = true]
Punctuator[167:3937 - 167:3938: value = '=', isAfterSpace = true]
NumericLiteral[167:3939 - 167:3940: value = '0', isAfterSpace = true]
EOL[167:3940 - 167:3940: value = ';', isAfterSpace = false]
Identifier[168:3942 - 168:3953: value = 'hashPointer', isAfterSpace = true]
Punctuator[168:3954 - 168:3955: value = '=', isAfterSpace = true]
NumericLiteral[168:3956 - 168:3957: value = '0', isAfterSpace = true]
EOL[168:3957 - 168:3957: value = ';', isAfterSpace = false]
Identifier[169:3959 - 169:3962: value = 'max', isAfterSpace = true]
Punctuator[169:3963 - 169:3964: value = '=', isAfterSpace = true]
Identifier[169:3965 - 169:3968: value = 'str', isAfterSpace = true]
Punctuator[169:3968 - 169:3969: value = '.', isAfterSpace = false]
Identifier[169:3969 - 169:3972: value = 'len', isAfterSpace = false]
EOL[169:3972 - 169:3972: value = ';', isAfterSpace = false]
Identifier[170:3974 - 170:3977: value = 'AND', isAfterSpace = true]
Punctuator[170:3978 - 170:3979: value = '=', isAfterSpace = true]
Keyword[170:3980 - 170:3988: value = 'function', isAfterSpace = true]
Punctuator[170:3988 - 170:3989: value = '(', isAfterSpace = false]
Identifier[170:3989 - 170:3990: value = 'a', isAfterSpace = false]
Punctuator[170:3990 - 170:3991: value = ',', isAfterSpace = false]
Identifier[170:3992 - 170:3993: value = 'b', isAfterSpace = true]
Punctuator[170:3993 - 170:3994: value = ')', isAfterSpace = false]
EOL[170:3994 - 170:3994: value = ';', isAfterSpace = false]
Keyword[171:3997 - 171:4003: value = 'return', isAfterSpace = true]
Identifier[171:4004 - 171:4011: value = 'bitwise', isAfterSpace = true]
Punctuator[171:4011 - 171:4012: value = '(', isAfterSpace = false]
StringLiteral[171:4012 - 171:4015: value = '&', isAfterSpace = false]
Punctuator[171:4015 - 171:4016: value = ',', isAfterSpace = false]
Identifier[171:4017 - 171:4018: value = 'a', isAfterSpace = true]
Punctuator[171:4018 - 171:4019: value = ',', isAfterSpace = false]
Identifier[171:4020 - 171:4021: value = 'b', isAfterSpace = true]
Punctuator[171:4021 - 171:4022: value = ')', isAfterSpace = false]
EOL[171:4022 - 171:4022: value = ';', isAfterSpace = false]
Keyword[172:4024 - 172:4036: value = 'end function', isAfterSpace = true]
EOL[172:4036 - 172:4036: value = ';', isAfterSpace = false]
Identifier[173:4038 - 173:4044: value = 'RSHIFT', isAfterSpace = true]
Punctuator[173:4045 - 173:4046: value = '=', isAfterSpace = true]
Keyword[173:4047 - 173:4055: value = 'function', isAfterSpace = true]
Punctuator[173:4055 - 173:4056: value = '(', isAfterSpace = false]
Identifier[173:4056 - 173:4057: value = 'a', isAfterSpace = false]
Punctuator[173:4057 - 173:4058: value = ',', isAfterSpace = false]
Identifier[173:4059 - 173:4060: value = 'b', isAfterSpace = true]
Punctuator[173:4060 - 173:4061: value = ')', isAfterSpace = false]
EOL[173:4061 - 173:4061: value = ';', isAfterSpace = false]
Keyword[174:4064 - 174:4070: value = 'return', isAfterSpace = true]
Identifier[174:4071 - 174:4078: value = 'bitwise', isAfterSpace = true]
Punctuator[174:4078 - 174:4079: value = '(', isAfterSpace = false]
StringLiteral[174:4079 - 174:4083: value = '>>', isAfterSpace = false]
Punctuator[174:4083 - 174:4084: value = ',', isAfterSpace = false]
Identifier[174:4085 - 174:4086: value = 'a', isAfterSpace = true]
Punctuator[174:4086 - 174:4087: value = ',', isAfterSpace = false]
Identifier[174:4088 - 174:4089: value = 'b', isAfterSpace = true]
Punctuator[174:4089 - 174:4090: value = ')', isAfterSpace = false]
EOL[174:4090 - 174:4090: value = ';', isAfterSpace = false]
Keyword[175:4092 - 175:4104: value = 'end function', isAfterSpace = true]
EOL[175:4104 - 175:4104: value = ';', isAfterSpace = false]
Keyword[176:4106 - 176:4111: value = 'while', isAfterSpace = true]
Identifier[176:4112 - 176:4120: value = 'position', isAfterSpace = true]
Punctuator[176:4121 - 176:4122: value = '<', isAfterSpace = true]
Identifier[176:4123 - 176:4126: value = 'max', isAfterSpace = true]
EOL[176:4126 - 176:4126: value = ';', isAfterSpace = false]
Identifier[177:4129 - 177:4135: value = 'buffer', isAfterSpace = true]
Punctuator[177:4136 - 177:4137: value = '=', isAfterSpace = true]
Identifier[177:4138 - 177:4140: value = 'me', isAfterSpace = true]
Punctuator[177:4140 - 177:4141: value = '.', isAfterSpace = false]
Identifier[177:4141 - 177:4146: value = 'table', isAfterSpace = false]
Punctuator[177:4146 - 177:4147: value = '.', isAfterSpace = false]
Identifier[177:4147 - 177:4154: value = 'indexOf', isAfterSpace = false]
Punctuator[177:4154 - 177:4155: value = '(', isAfterSpace = false]
Identifier[177:4155 - 177:4158: value = 'str', isAfterSpace = false]
Punctuator[177:4158 - 177:4159: value = '[', isAfterSpace = false]
Identifier[177:4159 - 177:4167: value = 'position', isAfterSpace = false]
Punctuator[177:4167 - 177:4168: value = ']', isAfterSpace = false]
Punctuator[177:4168 - 177:4169: value = ')', isAfterSpace = false]
EOL[177:4169 - 177:4169: value = ';', isAfterSpace = false]
Identifier[178:4172 - 178:4182: value = 'currentBit', isAfterSpace = true]
Punctuator[178:4183 - 178:4184: value = '=', isAfterSpace = true]
Identifier[178:4185 - 178:4195: value = 'bitCounter', isAfterSpace = true]
EOL[178:4195 - 178:4195: value = ';', isAfterSpace = false]
Identifier[179:4198 - 179:4208: value = 'bitCounter', isAfterSpace = true]
Punctuator[179:4209 - 179:4210: value = '=', isAfterSpace = true]
Identifier[179:4211 - 179:4221: value = 'bitCounter', isAfterSpace = true]
Punctuator[179:4222 - 179:4223: value = '+', isAfterSpace = true]
NumericLiteral[179:4224 - 179:4225: value = '1', isAfterSpace = true]
EOL[179:4225 - 179:4225: value = ';', isAfterSpace = false]
Keyword[180:4228 - 180:4230: value = 'if', isAfterSpace = true]
Punctuator[180:4231 - 180:4232: value = '(', isAfterSpace = true]
Identifier[180:4232 - 180:4242: value = 'currentBit', isAfterSpace = false]
Punctuator[180:4243 - 180:4244: value = '%', isAfterSpace = true]
NumericLiteral[180:4245 - 180:4246: value = '4', isAfterSpace = true]
Punctuator[180:4246 - 180:4247: value = ')', isAfterSpace = false]
Keyword[180:4248 - 180:4252: value = 'then', isAfterSpace = true]
EOL[180:4252 - 180:4252: value = ';', isAfterSpace = false]
Identifier[181:4256 - 181:4266: value = 'bitStorage', isAfterSpace = true]
Punctuator[181:4267 - 181:4268: value = '=', isAfterSpace = true]
Identifier[181:4269 - 181:4279: value = 'bitStorage', isAfterSpace = true]
Punctuator[181:4280 - 181:4281: value = '*', isAfterSpace = true]
NumericLiteral[181:4282 - 181:4284: value = '64', isAfterSpace = true]
Punctuator[181:4285 - 181:4286: value = '+', isAfterSpace = true]
Identifier[181:4287 - 181:4293: value = 'buffer', isAfterSpace = true]
EOL[181:4293 - 181:4293: value = ';', isAfterSpace = false]
Keyword[182:4296 - 182:4300: value = 'else', isAfterSpace = true]
EOL[182:4300 - 182:4300: value = ';', isAfterSpace = false]
Identifier[183:4304 - 183:4314: value = 'bitStorage', isAfterSpace = true]
Punctuator[183:4315 - 183:4316: value = '=', isAfterSpace = true]
Identifier[183:4317 - 183:4323: value = 'buffer', isAfterSpace = true]
EOL[183:4323 - 183:4323: value = ';', isAfterSpace = false]
Keyword[184:4326 - 184:4332: value = 'end if', isAfterSpace = true]
EOL[184:4332 - 184:4332: value = ';', isAfterSpace = false]
Keyword[185:4335 - 185:4337: value = 'if', isAfterSpace = true]
Punctuator[185:4338 - 185:4339: value = '(', isAfterSpace = true]
Identifier[185:4339 - 185:4349: value = 'currentBit', isAfterSpace = false]
Punctuator[185:4350 - 185:4351: value = '%', isAfterSpace = true]
NumericLiteral[185:4352 - 185:4353: value = '4', isAfterSpace = true]
Punctuator[185:4353 - 185:4354: value = ')', isAfterSpace = false]
Keyword[185:4355 - 185:4359: value = 'then', isAfterSpace = true]
EOL[185:4359 - 185:4359: value = ';', isAfterSpace = false]
Identifier[186:4363 - 186:4380: value = 'expectedHashIndex', isAfterSpace = true]
Punctuator[186:4381 - 186:4382: value = '=', isAfterSpace = true]
Punctuator[186:4383 - 186:4384: value = '(', isAfterSpace = true]
Identifier[186:4384 - 186:4389: value = 'floor', isAfterSpace = false]
Punctuator[186:4389 - 186:4390: value = '(', isAfterSpace = false]
Identifier[186:4390 - 186:4401: value = 'hashPointer', isAfterSpace = false]
Punctuator[186:4402 - 186:4403: value = '/', isAfterSpace = true]
NumericLiteral[186:4404 - 186:4405: value = '3', isAfterSpace = true]
Punctuator[186:4405 - 186:4406: value = ')', isAfterSpace = false]
Punctuator[186:4407 - 186:4408: value = '*', isAfterSpace = true]
NumericLiteral[186:4409 - 186:4410: value = '3', isAfterSpace = true]
Punctuator[186:4410 - 186:4411: value = ')', isAfterSpace = false]
Punctuator[186:4412 - 186:4413: value = '%', isAfterSpace = true]
Identifier[186:4414 - 186:4424: value = 'hashLength', isAfterSpace = true]
Punctuator[186:4425 - 186:4426: value = '-', isAfterSpace = true]
NumericLiteral[186:4427 - 186:4428: value = '1', isAfterSpace = true]
EOL[186:4428 - 186:4428: value = ';', isAfterSpace = false]
Keyword[187:4432 - 187:4434: value = 'if', isAfterSpace = true]
Punctuator[187:4435 - 187:4436: value = '(', isAfterSpace = true]
Keyword[187:4436 - 187:4439: value = 'not', isAfterSpace = false]
Identifier[187:4440 - 187:4444: value = 'hash', isAfterSpace = true]
Punctuator[187:4444 - 187:4445: value = '.', isAfterSpace = false]
Identifier[187:4445 - 187:4453: value = 'hasIndex', isAfterSpace = false]
Punctuator[187:4453 - 187:4454: value = '(', isAfterSpace = false]
Identifier[187:4454 - 187:4471: value = 'expectedHashIndex', isAfterSpace = false]
Punctuator[187:4471 - 187:4472: value = ')', isAfterSpace = false]
Punctuator[187:4472 - 187:4473: value = ')', isAfterSpace = false]
Keyword[187:4474 - 187:4478: value = 'then', isAfterSpace = true]
Keyword[187:4479 - 187:4484: value = 'break', isAfterSpace = true]
EOL[187:4484 - 187:4484: value = ';', isAfterSpace = false]
Identifier[188:4488 - 188:4489: value = 'm', isAfterSpace = true]
Punctuator[188:4490 - 188:4491: value = '=', isAfterSpace = true]
Identifier[188:4492 - 188:4496: value = 'hash', isAfterSpace = true]
Punctuator[188:4496 - 188:4497: value = '[', isAfterSpace = false]
Identifier[188:4497 - 188:4514: value = 'expectedHashIndex', isAfterSpace = false]
Punctuator[188:4514 - 188:4515: value = ']', isAfterSpace = false]
EOL[188:4515 - 188:4515: value = ';', isAfterSpace = false]
Identifier[189:4519 - 189:4528: value = 'operation', isAfterSpace = true]
Punctuator[189:4529 - 189:4530: value = '=', isAfterSpace = true]
Identifier[189:4531 - 189:4534: value = 'AND', isAfterSpace = true]
Punctuator[189:4534 - 189:4535: value = '(', isAfterSpace = false]
Punctuator[189:4535 - 189:4536: value = '-', isAfterSpace = false]
NumericLiteral[189:4536 - 189:4537: value = '2', isAfterSpace = false]
Punctuator[189:4538 - 189:4539: value = '*', isAfterSpace = true]
Identifier[189:4540 - 189:4550: value = 'bitCounter', isAfterSpace = true]
Punctuator[189:4550 - 189:4551: value = ',', isAfterSpace = false]
NumericLiteral[189:4552 - 189:4553: value = '6', isAfterSpace = true]
Punctuator[189:4553 - 189:4554: value = ')', isAfterSpace = false]
EOL[189:4554 - 189:4554: value = ';', isAfterSpace = false]
Identifier[190:4558 - 190:4567: value = 'operation', isAfterSpace = true]
Punctuator[190:4568 - 190:4569: value = '=', isAfterSpace = true]
Identifier[190:4570 - 190:4576: value = 'RSHIFT', isAfterSpace = true]
Punctuator[190:4576 - 190:4577: value = '(', isAfterSpace = false]
Identifier[190:4577 - 190:4587: value = 'bitStorage', isAfterSpace = false]
Punctuator[190:4587 - 190:4588: value = ',', isAfterSpace = false]
Identifier[190:4589 - 190:4598: value = 'operation', isAfterSpace = true]
Punctuator[190:4598 - 190:4599: value = ')', isAfterSpace = false]
EOL[190:4599 - 190:4599: value = ';', isAfterSpace = false]
Identifier[191:4603 - 191:4612: value = 'operation', isAfterSpace = true]
Punctuator[191:4613 - 191:4614: value = '=', isAfterSpace = true]
Identifier[191:4615 - 191:4618: value = 'AND', isAfterSpace = true]
Punctuator[191:4618 - 191:4619: value = '(', isAfterSpace = false]
NumericLiteral[191:4619 - 191:4622: value = '255', isAfterSpace = false]
Punctuator[191:4622 - 191:4623: value = ',', isAfterSpace = false]
Identifier[191:4624 - 191:4633: value = 'operation', isAfterSpace = true]
Punctuator[191:4633 - 191:4634: value = ')', isAfterSpace = false]
EOL[191:4634 - 191:4634: value = ';', isAfterSpace = false]
Keyword[192:4638 - 192:4640: value = 'if', isAfterSpace = true]
Punctuator[192:4641 - 192:4642: value = '(', isAfterSpace = true]
Identifier[192:4642 - 192:4651: value = 'operation', isAfterSpace = false]
Punctuator[192:4652 - 192:4654: value = '!=', isAfterSpace = true]
NumericLiteral[192:4655 - 192:4656: value = '0', isAfterSpace = true]
Punctuator[192:4656 - 192:4657: value = ')', isAfterSpace = false]
Keyword[192:4658 - 192:4662: value = 'then', isAfterSpace = true]
EOL[192:4662 - 192:4662: value = ';', isAfterSpace = false]
Identifier[193:4667 - 193:4675: value = 'charCode', isAfterSpace = true]
Punctuator[193:4676 - 193:4677: value = '=', isAfterSpace = true]
Identifier[193:4678 - 193:4687: value = 'operation', isAfterSpace = true]
Punctuator[193:4688 - 193:4689: value = '-', isAfterSpace = true]
Identifier[193:4690 - 193:4691: value = 'm', isAfterSpace = true]
EOL[193:4691 - 193:4691: value = ';', isAfterSpace = false]
Keyword[194:4696 - 194:4698: value = 'if', isAfterSpace = true]
Punctuator[194:4699 - 194:4700: value = '(', isAfterSpace = true]
Identifier[194:4700 - 194:4708: value = 'charCode', isAfterSpace = false]
Punctuator[194:4709 - 194:4710: value = '>', isAfterSpace = true]
Identifier[194:4711 - 194:4713: value = 'me', isAfterSpace = true]
Punctuator[194:4713 - 194:4714: value = '.', isAfterSpace = false]
Identifier[194:4714 - 194:4725: value = 'maxCharCode', isAfterSpace = false]
Punctuator[194:4725 - 194:4726: value = ')', isAfterSpace = false]
Keyword[194:4727 - 194:4731: value = 'then', isAfterSpace = true]
Keyword[194:4732 - 194:4737: value = 'break', isAfterSpace = true]
EOL[194:4737 - 194:4737: value = ';', isAfterSpace = false]
Identifier[195:4742 - 195:4748: value = 'output', isAfterSpace = true]
Punctuator[195:4748 - 195:4749: value = '.', isAfterSpace = false]
Identifier[195:4749 - 195:4753: value = 'push', isAfterSpace = false]
Punctuator[195:4753 - 195:4754: value = '(', isAfterSpace = false]
Identifier[195:4754 - 195:4758: value = 'char', isAfterSpace = false]
Punctuator[195:4758 - 195:4759: value = '(', isAfterSpace = false]
Identifier[195:4759 - 195:4767: value = 'charCode', isAfterSpace = false]
Punctuator[195:4767 - 195:4768: value = ')', isAfterSpace = false]
Punctuator[195:4768 - 195:4769: value = ')', isAfterSpace = false]
EOL[195:4769 - 195:4769: value = ';', isAfterSpace = false]
Keyword[196:4773 - 196:4779: value = 'end if', isAfterSpace = true]
EOL[196:4779 - 196:4779: value = ';', isAfterSpace = false]
Identifier[197:4783 - 197:4794: value = 'hashPointer', isAfterSpace = true]
Punctuator[197:4795 - 197:4796: value = '=', isAfterSpace = true]
Identifier[197:4797 - 197:4808: value = 'hashPointer', isAfterSpace = true]
Punctuator[197:4809 - 197:4810: value = '+', isAfterSpace = true]
NumericLiteral[197:4811 - 197:4812: value = '1', isAfterSpace = true]
EOL[197:4812 - 197:4812: value = ';', isAfterSpace = false]
Keyword[198:4815 - 198:4821: value = 'end if', isAfterSpace = true]
EOL[198:4821 - 198:4821: value = ';', isAfterSpace = false]
Identifier[199:4824 - 199:4832: value = 'position', isAfterSpace = true]
Punctuator[199:4833 - 199:4834: value = '=', isAfterSpace = true]
Identifier[199:4835 - 199:4843: value = 'position', isAfterSpace = true]
Punctuator[199:4844 - 199:4845: value = '+', isAfterSpace = true]
NumericLiteral[199:4846 - 199:4847: value = '1', isAfterSpace = true]
EOL[199:4847 - 199:4847: value = ';', isAfterSpace = false]
Keyword[200:4849 - 200:4858: value = 'end while', isAfterSpace = true]
EOL[200:4858 - 200:4858: value = ';', isAfterSpace = false]
Keyword[201:4860 - 201:4866: value = 'return', isAfterSpace = true]
Identifier[201:4867 - 201:4873: value = 'output', isAfterSpace = true]
Punctuator[201:4873 - 201:4874: value = '.', isAfterSpace = false]
Identifier[201:4874 - 201:4878: value = 'join', isAfterSpace = false]
Punctuator[201:4878 - 201:4879: value = '(', isAfterSpace = false]
StringLiteral[201:4879 - 201:4881: value = '', isAfterSpace = false]
Punctuator[201:4881 - 201:4882: value = ')', isAfterSpace = false]
EOL[201:4882 - 201:4882: value = ';', isAfterSpace = false]
Keyword[202:4883 - 202:4895: value = 'end function', isAfterSpace = false]
EOL[202:4895 - 202:4895: value = ';', isAfterSpace = false]
EOL[203:4896 - 203:4896: value = ';', isAfterSpace = false]
Identifier[204:4897 - 204:4901: value = 'test', isAfterSpace = false]
Punctuator[204:4902 - 204:4903: value = '=', isAfterSpace = true]
Punctuator[204:4904 - 204:4905: value = '(', isAfterSpace = true]
Keyword[204:4905 - 204:4908: value = 'new', isAfterSpace = false]
Identifier[204:4909 - 204:4915: value = 'Crypto', isAfterSpace = true]
Punctuator[204:4915 - 204:4916: value = ')', isAfterSpace = false]
Punctuator[204:4916 - 204:4917: value = '.', isAfterSpace = false]
Identifier[204:4917 - 204:4928: value = 'constructor', isAfterSpace = false]
Punctuator[204:4928 - 204:4929: value = '(', isAfterSpace = false]
StringLiteral[204:4929 - 204:4935: value = 'test', isAfterSpace = false]
Punctuator[204:4935 - 204:4936: value = ')', isAfterSpace = false]
EOL[204:4936 - 204:4936: value = ';', isAfterSpace = false]
EOL[205:4937 - 205:4937: value = ';', isAfterSpace = false]
Identifier[206:4938 - 206:4941: value = 'pwd', isAfterSpace = false]
Punctuator[206:4942 - 206:4943: value = '=', isAfterSpace = true]
StringLiteral[206:4944 - 206:4951: value = 'abcde', isAfterSpace = true]
EOL[206:4951 - 206:4951: value = ';', isAfterSpace = false]
EOL[207:4952 - 207:4952: value = ';', isAfterSpace = false]
Identifier[208:4953 - 208:4956: value = 'foo', isAfterSpace = false]
Punctuator[208:4957 - 208:4958: value = '=', isAfterSpace = true]
Identifier[208:4959 - 208:4963: value = 'test', isAfterSpace = true]
Punctuator[208:4963 - 208:4964: value = '.', isAfterSpace = false]
Identifier[208:4964 - 208:4971: value = 'encrypt', isAfterSpace = false]
Punctuator[208:4971 - 208:4972: value = '(', isAfterSpace = false]
Identifier[208:4972 - 208:4975: value = 'pwd', isAfterSpace = false]
Punctuator[208:4975 - 208:4976: value = ')', isAfterSpace = false]
EOL[208:4976 - 208:4976: value = ';', isAfterSpace = false]
Identifier[209:4977 - 209:4986: value = 'decrypted', isAfterSpace = false]
Punctuator[209:4987 - 209:4988: value = '=', isAfterSpace = true]
Identifier[209:4989 - 209:4993: value = 'test', isAfterSpace = true]
Punctuator[209:4993 - 209:4994: value = '.', isAfterSpace = false]
Identifier[209:4994 - 209:5001: value = 'decrypt', isAfterSpace = false]
Punctuator[209:5001 - 209:5002: value = '(', isAfterSpace = false]
Identifier[209:5002 - 209:5005: value = 'foo', isAfterSpace = false]
Punctuator[209:5005 - 209:5006: value = ')', isAfterSpace = false]
EOL[209:5006 - 209:5006: value = ';', isAfterSpace = false]
EOL[210:5007 - 210:5007: value = ';', isAfterSpace = false]
Identifier[211:5008 - 211:5013: value = 'print', isAfterSpace = false]
Punctuator[211:5013 - 211:5014: value = '(', isAfterSpace = false]
Identifier[211:5014 - 211:5017: value = 'foo', isAfterSpace = false]
Punctuator[211:5017 - 211:5018: value = ')', isAfterSpace = false]
EOL[211:5018 - 211:5018: value = ';', isAfterSpace = false]
Identifier[212:5019 - 212:5024: value = 'print', isAfterSpace = false]
Punctuator[212:5024 - 212:5025: value = '(', isAfterSpace = false]
Identifier[212:5025 - 212:5034: value = 'decrypted', isAfterSpace = false]
Punctuator[212:5034 - 212:5035: value = ')', isAfterSpace = false]
EOL[212:5035 - 212:5035: value = ';', isAfterSpace = false]"
`;

exports[`parse default scripts random.src 1`] = `
"Identifier[1:0 - 1:6: value = 'Random', isAfterSpace = false]
Punctuator[1:7 - 1:8: value = '=', isAfterSpace = true]
Punctuator[1:9 - 1:10: value = '{', isAfterSpace = true]
Punctuator[1:10 - 1:11: value = '}', isAfterSpace = false]
EOL[1:11 - 1:11: value = ';', isAfterSpace = false]
EOL[2:12 - 2:12: value = ';', isAfterSpace = false]
Identifier[3:13 - 3:19: value = 'Random', isAfterSpace = false]
Punctuator[3:19 - 3:20: value = '.', isAfterSpace = false]
Identifier[3:20 - 3:24: value = 'pool', isAfterSpace = false]
Punctuator[3:25 - 3:26: value = '=', isAfterSpace = true]
Punctuator[3:27 - 3:28: value = '{', isAfterSpace = true]
Punctuator[3:28 - 3:29: value = '}', isAfterSpace = false]
EOL[3:29 - 3:29: value = ';', isAfterSpace = false]
Identifier[4:30 - 4:36: value = 'Random', isAfterSpace = false]
Punctuator[4:36 - 4:37: value = '.', isAfterSpace = false]
Identifier[4:37 - 4:48: value = 'defaultSeed', isAfterSpace = false]
Punctuator[4:49 - 4:50: value = '=', isAfterSpace = true]
StringLiteral[4:51 - 4:59: value = 'random', isAfterSpace = true]
EOL[4:59 - 4:59: value = ';', isAfterSpace = false]
EOL[5:60 - 5:60: value = ';', isAfterSpace = false]
Identifier[6:61 - 6:67: value = 'Random', isAfterSpace = false]
Punctuator[6:67 - 6:68: value = '.', isAfterSpace = false]
Identifier[6:68 - 6:78: value = 'createPool', isAfterSpace = false]
Punctuator[6:79 - 6:80: value = '=', isAfterSpace = true]
Keyword[6:81 - 6:89: value = 'function', isAfterSpace = true]
Punctuator[6:89 - 6:90: value = '(', isAfterSpace = false]
Identifier[6:90 - 6:94: value = 'seed', isAfterSpace = false]
Punctuator[6:94 - 6:95: value = ',', isAfterSpace = false]
Identifier[6:96 - 6:99: value = 'val', isAfterSpace = true]
Punctuator[6:99 - 6:100: value = ')', isAfterSpace = false]
EOL[6:100 - 6:100: value = ';', isAfterSpace = false]
Keyword[7:102 - 7:108: value = 'return', isAfterSpace = true]
Punctuator[7:109 - 7:110: value = '{', isAfterSpace = true]
StringLiteral[7:111 - 7:117: value = 'seed', isAfterSpace = true]
SliceOperator[7:117 - 7:118: value = ':', isAfterSpace = false]
Identifier[7:119 - 7:123: value = 'seed', isAfterSpace = true]
Punctuator[7:123 - 7:124: value = ',', isAfterSpace = false]
StringLiteral[7:125 - 7:132: value = 'value', isAfterSpace = true]
SliceOperator[7:132 - 7:133: value = ':', isAfterSpace = false]
Identifier[7:134 - 7:137: value = 'val', isAfterSpace = true]
Punctuator[7:137 - 7:138: value = ',', isAfterSpace = false]
StringLiteral[7:139 - 7:151: value = 'generation', isAfterSpace = true]
SliceOperator[7:151 - 7:152: value = ':', isAfterSpace = false]
NumericLiteral[7:153 - 7:154: value = '0', isAfterSpace = true]
Punctuator[7:155 - 7:156: value = '}', isAfterSpace = true]
EOL[7:156 - 7:156: value = ';', isAfterSpace = false]
Keyword[8:157 - 8:169: value = 'end function', isAfterSpace = false]
EOL[8:169 - 8:169: value = ';', isAfterSpace = false]
EOL[9:170 - 9:170: value = ';', isAfterSpace = false]
Identifier[10:171 - 10:177: value = 'Random', isAfterSpace = false]
Punctuator[10:177 - 10:178: value = '.', isAfterSpace = false]
Identifier[10:178 - 10:186: value = 'calcSeed', isAfterSpace = false]
Punctuator[10:187 - 10:188: value = '=', isAfterSpace = true]
Keyword[10:189 - 10:197: value = 'function', isAfterSpace = true]
Punctuator[10:197 - 10:198: value = '(', isAfterSpace = false]
Identifier[10:198 - 10:202: value = 'seed', isAfterSpace = false]
Punctuator[10:202 - 10:203: value = ')', isAfterSpace = false]
EOL[10:203 - 10:203: value = ';', isAfterSpace = false]
Identifier[11:205 - 11:212: value = 'seedVal', isAfterSpace = true]
Punctuator[11:213 - 11:214: value = '=', isAfterSpace = true]
NumericLiteral[11:215 - 11:216: value = '0', isAfterSpace = true]
EOL[11:216 - 11:216: value = ';', isAfterSpace = false]
Identifier[12:218 - 12:221: value = 'pos', isAfterSpace = true]
Punctuator[12:222 - 12:223: value = '=', isAfterSpace = true]
Identifier[12:224 - 12:228: value = 'seed', isAfterSpace = true]
Punctuator[12:228 - 12:229: value = '.', isAfterSpace = false]
Identifier[12:229 - 12:232: value = 'len', isAfterSpace = false]
EOL[12:232 - 12:232: value = ';', isAfterSpace = false]
EOL[13:234 - 13:234: value = ';', isAfterSpace = true]
Keyword[14:236 - 14:239: value = 'for', isAfterSpace = true]
Identifier[14:240 - 14:244: value = 'char', isAfterSpace = true]
Keyword[14:245 - 14:247: value = 'in', isAfterSpace = true]
Identifier[14:248 - 14:252: value = 'seed', isAfterSpace = true]
EOL[14:252 - 14:252: value = ';', isAfterSpace = false]
Identifier[15:255 - 15:262: value = 'seedVal', isAfterSpace = true]
Punctuator[15:263 - 15:264: value = '=', isAfterSpace = true]
Identifier[15:265 - 15:272: value = 'seedVal', isAfterSpace = true]
Punctuator[15:273 - 15:274: value = '+', isAfterSpace = true]
Identifier[15:275 - 15:279: value = 'char', isAfterSpace = true]
Punctuator[15:279 - 15:280: value = '.', isAfterSpace = false]
Identifier[15:280 - 15:284: value = 'code', isAfterSpace = false]
Punctuator[15:285 - 15:286: value = '+', isAfterSpace = true]
Identifier[15:287 - 15:290: value = 'pos', isAfterSpace = true]
EOL[15:290 - 15:290: value = ';', isAfterSpace = false]
Identifier[16:293 - 16:296: value = 'pos', isAfterSpace = true]
Punctuator[16:297 - 16:298: value = '=', isAfterSpace = true]
Identifier[16:299 - 16:302: value = 'pos', isAfterSpace = true]
Punctuator[16:303 - 16:304: value = '-', isAfterSpace = true]
NumericLiteral[16:305 - 16:306: value = '1', isAfterSpace = true]
EOL[16:306 - 16:306: value = ';', isAfterSpace = false]
Keyword[17:308 - 17:315: value = 'end for', isAfterSpace = true]
EOL[17:315 - 17:315: value = ';', isAfterSpace = false]
EOL[18:317 - 18:317: value = ';', isAfterSpace = true]
Keyword[19:319 - 19:325: value = 'return', isAfterSpace = true]
Identifier[19:326 - 19:333: value = 'seedVal', isAfterSpace = true]
EOL[19:333 - 19:333: value = ';', isAfterSpace = false]
Keyword[20:334 - 20:346: value = 'end function', isAfterSpace = false]
EOL[20:346 - 20:346: value = ';', isAfterSpace = false]
EOL[21:347 - 21:347: value = ';', isAfterSpace = false]
Identifier[22:348 - 22:354: value = 'Random', isAfterSpace = false]
Punctuator[22:354 - 22:355: value = '.', isAfterSpace = false]
Identifier[22:355 - 22:358: value = 'gen', isAfterSpace = false]
Punctuator[22:359 - 22:360: value = '=', isAfterSpace = true]
Keyword[22:361 - 22:369: value = 'function', isAfterSpace = true]
Punctuator[22:369 - 22:370: value = '(', isAfterSpace = false]
Identifier[22:370 - 22:373: value = 'min', isAfterSpace = false]
Punctuator[22:373 - 22:374: value = ',', isAfterSpace = false]
Identifier[22:375 - 22:378: value = 'max', isAfterSpace = true]
Punctuator[22:378 - 22:379: value = ',', isAfterSpace = false]
Identifier[22:380 - 22:384: value = 'seed', isAfterSpace = true]
Punctuator[22:384 - 22:385: value = ',', isAfterSpace = false]
Identifier[22:386 - 22:389: value = 'inc', isAfterSpace = true]
Punctuator[22:389 - 22:390: value = ')', isAfterSpace = false]
EOL[22:390 - 22:390: value = ';', isAfterSpace = false]
Identifier[23:392 - 23:394: value = 'me', isAfterSpace = true]
Punctuator[23:395 - 23:396: value = '=', isAfterSpace = true]
Identifier[23:397 - 23:401: value = 'self', isAfterSpace = true]
EOL[23:401 - 23:401: value = ';', isAfterSpace = false]
Identifier[24:403 - 24:407: value = 'pool', isAfterSpace = true]
Punctuator[24:408 - 24:409: value = '=', isAfterSpace = true]
Identifier[24:410 - 24:412: value = 'me', isAfterSpace = true]
Punctuator[24:412 - 24:413: value = '.', isAfterSpace = false]
Identifier[24:413 - 24:417: value = 'pool', isAfterSpace = false]
EOL[24:417 - 24:417: value = ';', isAfterSpace = false]
Keyword[25:419 - 25:421: value = 'if', isAfterSpace = true]
Punctuator[25:422 - 25:423: value = '(', isAfterSpace = true]
Identifier[25:423 - 25:426: value = 'inc', isAfterSpace = false]
Punctuator[25:427 - 25:429: value = '==', isAfterSpace = true]
NilLiteral[25:430 - 25:434: value = 'null', isAfterSpace = true]
Punctuator[25:434 - 25:435: value = ')', isAfterSpace = false]
Keyword[25:436 - 25:440: value = 'then', isAfterSpace = true]
Identifier[25:441 - 25:444: value = 'inc', isAfterSpace = true]
Punctuator[25:445 - 25:446: value = '=', isAfterSpace = true]
BooleanLiteral[25:447 - 25:451: value = 'true', isAfterSpace = true]
EOL[25:451 - 25:451: value = ';', isAfterSpace = false]
Keyword[26:453 - 26:455: value = 'if', isAfterSpace = true]
Punctuator[26:456 - 26:457: value = '(', isAfterSpace = true]
Identifier[26:457 - 26:461: value = 'seed', isAfterSpace = false]
Punctuator[26:462 - 26:464: value = '==', isAfterSpace = true]
NilLiteral[26:465 - 26:469: value = 'null', isAfterSpace = true]
Punctuator[26:469 - 26:470: value = ')', isAfterSpace = false]
Keyword[26:471 - 26:475: value = 'then', isAfterSpace = true]
Identifier[26:476 - 26:480: value = 'seed', isAfterSpace = true]
Punctuator[26:481 - 26:482: value = '=', isAfterSpace = true]
Identifier[26:483 - 26:485: value = 'me', isAfterSpace = true]
Punctuator[26:485 - 26:486: value = '.', isAfterSpace = false]
Identifier[26:486 - 26:497: value = 'defaultSeed', isAfterSpace = false]
EOL[26:497 - 26:497: value = ';', isAfterSpace = false]
Keyword[27:499 - 27:501: value = 'if', isAfterSpace = true]
Punctuator[27:502 - 27:503: value = '(', isAfterSpace = true]
Identifier[27:503 - 27:507: value = 'pool', isAfterSpace = false]
Punctuator[27:507 - 27:508: value = '.', isAfterSpace = false]
Identifier[27:508 - 27:516: value = 'hasIndex', isAfterSpace = false]
Punctuator[27:516 - 27:517: value = '(', isAfterSpace = false]
Identifier[27:517 - 27:521: value = 'seed', isAfterSpace = false]
Punctuator[27:521 - 27:522: value = ')', isAfterSpace = false]
Punctuator[27:522 - 27:523: value = ')', isAfterSpace = false]
Keyword[27:524 - 27:528: value = 'then', isAfterSpace = true]
EOL[27:528 - 27:528: value = ';', isAfterSpace = false]
Identifier[28:531 - 28:533: value = 'ps', isAfterSpace = true]
Punctuator[28:534 - 28:535: value = '=', isAfterSpace = true]
Identifier[28:536 - 28:540: value = 'pool', isAfterSpace = true]
Punctuator[28:540 - 28:541: value = '[', isAfterSpace = false]
Identifier[28:541 - 28:545: value = 'seed', isAfterSpace = false]
Punctuator[28:545 - 28:546: value = ']', isAfterSpace = false]
EOL[28:546 - 28:546: value = ';', isAfterSpace = false]
Keyword[29:549 - 29:551: value = 'if', isAfterSpace = true]
Punctuator[29:552 - 29:553: value = '(', isAfterSpace = true]
Keyword[29:553 - 29:556: value = 'not', isAfterSpace = false]
Identifier[29:557 - 29:560: value = 'inc', isAfterSpace = true]
Punctuator[29:560 - 29:561: value = ')', isAfterSpace = false]
Keyword[29:562 - 29:566: value = 'then', isAfterSpace = true]
Keyword[29:567 - 29:573: value = 'return', isAfterSpace = true]
Identifier[29:574 - 29:576: value = 'ps', isAfterSpace = true]
Punctuator[29:576 - 29:577: value = '.', isAfterSpace = false]
Identifier[29:577 - 29:582: value = 'value', isAfterSpace = false]
EOL[29:582 - 29:582: value = ';', isAfterSpace = false]
Identifier[30:585 - 30:587: value = 'ps', isAfterSpace = true]
Punctuator[30:587 - 30:588: value = '.', isAfterSpace = false]
Identifier[30:588 - 30:598: value = 'generation', isAfterSpace = false]
Punctuator[30:599 - 30:600: value = '=', isAfterSpace = true]
Identifier[30:601 - 30:603: value = 'ps', isAfterSpace = true]
Punctuator[30:603 - 30:604: value = '.', isAfterSpace = false]
Identifier[30:604 - 30:614: value = 'generation', isAfterSpace = false]
Punctuator[30:615 - 30:616: value = '+', isAfterSpace = true]
NumericLiteral[30:617 - 30:618: value = '1', isAfterSpace = true]
EOL[30:618 - 30:618: value = ';', isAfterSpace = false]
Identifier[31:621 - 31:624: value = 'val', isAfterSpace = true]
Punctuator[31:625 - 31:626: value = '=', isAfterSpace = true]
Identifier[31:627 - 31:632: value = 'floor', isAfterSpace = true]
Punctuator[31:632 - 31:633: value = '(', isAfterSpace = false]
Punctuator[31:633 - 31:634: value = '(', isAfterSpace = false]
Identifier[31:634 - 31:637: value = 'rnd', isAfterSpace = false]
Punctuator[31:637 - 31:638: value = '(', isAfterSpace = false]
Identifier[31:638 - 31:640: value = 'ps', isAfterSpace = false]
Punctuator[31:640 - 31:641: value = '.', isAfterSpace = false]
Identifier[31:641 - 31:646: value = 'value', isAfterSpace = false]
Punctuator[31:647 - 31:648: value = '+', isAfterSpace = true]
Identifier[31:649 - 31:651: value = 'ps', isAfterSpace = true]
Punctuator[31:651 - 31:652: value = '.', isAfterSpace = false]
Identifier[31:652 - 31:662: value = 'generation', isAfterSpace = false]
Punctuator[31:662 - 31:663: value = ')', isAfterSpace = false]
Punctuator[31:664 - 31:665: value = '*', isAfterSpace = true]
Punctuator[31:666 - 31:667: value = '(', isAfterSpace = true]
Identifier[31:667 - 31:670: value = 'max', isAfterSpace = false]
Punctuator[31:671 - 31:672: value = '-', isAfterSpace = true]
Identifier[31:673 - 31:676: value = 'min', isAfterSpace = true]
Punctuator[31:676 - 31:677: value = ')', isAfterSpace = false]
Punctuator[31:677 - 31:678: value = ')', isAfterSpace = false]
Punctuator[31:679 - 31:680: value = '+', isAfterSpace = true]
Identifier[31:681 - 31:684: value = 'min', isAfterSpace = true]
Punctuator[31:684 - 31:685: value = ')', isAfterSpace = false]
EOL[31:685 - 31:685: value = ';', isAfterSpace = false]
Identifier[32:688 - 32:690: value = 'ps', isAfterSpace = true]
Punctuator[32:690 - 32:691: value = '.', isAfterSpace = false]
Identifier[32:691 - 32:696: value = 'value', isAfterSpace = false]
Punctuator[32:697 - 32:698: value = '=', isAfterSpace = true]
Identifier[32:699 - 32:702: value = 'val', isAfterSpace = true]
EOL[32:702 - 32:702: value = ';', isAfterSpace = false]
Keyword[33:705 - 33:711: value = 'return', isAfterSpace = true]
Identifier[33:712 - 33:715: value = 'val', isAfterSpace = true]
EOL[33:715 - 33:715: value = ';', isAfterSpace = false]
Keyword[34:717 - 34:723: value = 'end if', isAfterSpace = true]
EOL[34:723 - 34:723: value = ';', isAfterSpace = false]
EOL[35:725 - 35:725: value = ';', isAfterSpace = true]
Identifier[36:727 - 36:734: value = 'seedVal', isAfterSpace = true]
Punctuator[36:735 - 36:736: value = '=', isAfterSpace = true]
Identifier[36:737 - 36:739: value = 'me', isAfterSpace = true]
Punctuator[36:739 - 36:740: value = '.', isAfterSpace = false]
Identifier[36:740 - 36:748: value = 'calcSeed', isAfterSpace = false]
Punctuator[36:748 - 36:749: value = '(', isAfterSpace = false]
Identifier[36:749 - 36:753: value = 'seed', isAfterSpace = false]
Punctuator[36:753 - 36:754: value = ')', isAfterSpace = false]
EOL[36:754 - 36:754: value = ';', isAfterSpace = false]
EOL[37:756 - 37:756: value = ';', isAfterSpace = true]
Identifier[38:758 - 38:761: value = 'val', isAfterSpace = true]
Punctuator[38:762 - 38:763: value = '=', isAfterSpace = true]
Identifier[38:764 - 38:769: value = 'floor', isAfterSpace = true]
Punctuator[38:769 - 38:770: value = '(', isAfterSpace = false]
Punctuator[38:770 - 38:771: value = '(', isAfterSpace = false]
Identifier[38:771 - 38:774: value = 'rnd', isAfterSpace = false]
Punctuator[38:774 - 38:775: value = '(', isAfterSpace = false]
Identifier[38:775 - 38:782: value = 'seedVal', isAfterSpace = false]
Punctuator[38:782 - 38:783: value = ')', isAfterSpace = false]
Punctuator[38:784 - 38:785: value = '*', isAfterSpace = true]
Punctuator[38:786 - 38:787: value = '(', isAfterSpace = true]
Identifier[38:787 - 38:790: value = 'max', isAfterSpace = false]
Punctuator[38:791 - 38:792: value = '-', isAfterSpace = true]
Identifier[38:793 - 38:796: value = 'min', isAfterSpace = true]
Punctuator[38:796 - 38:797: value = ')', isAfterSpace = false]
Punctuator[38:797 - 38:798: value = ')', isAfterSpace = false]
Punctuator[38:799 - 38:800: value = '+', isAfterSpace = true]
Identifier[38:801 - 38:804: value = 'min', isAfterSpace = true]
Punctuator[38:804 - 38:805: value = ')', isAfterSpace = false]
EOL[38:805 - 38:805: value = ';', isAfterSpace = false]
Identifier[39:807 - 39:811: value = 'pool', isAfterSpace = true]
Punctuator[39:811 - 39:812: value = '[', isAfterSpace = false]
Identifier[39:812 - 39:816: value = 'seed', isAfterSpace = false]
Punctuator[39:816 - 39:817: value = ']', isAfterSpace = false]
Punctuator[39:818 - 39:819: value = '=', isAfterSpace = true]
Identifier[39:820 - 39:822: value = 'me', isAfterSpace = true]
Punctuator[39:822 - 39:823: value = '.', isAfterSpace = false]
Identifier[39:823 - 39:833: value = 'createPool', isAfterSpace = false]
Punctuator[39:833 - 39:834: value = '(', isAfterSpace = false]
Identifier[39:834 - 39:841: value = 'seedVal', isAfterSpace = false]
Punctuator[39:841 - 39:842: value = ',', isAfterSpace = false]
Identifier[39:843 - 39:846: value = 'val', isAfterSpace = true]
Punctuator[39:846 - 39:847: value = ')', isAfterSpace = false]
EOL[39:847 - 39:847: value = ';', isAfterSpace = false]
EOL[40:849 - 40:849: value = ';', isAfterSpace = true]
Keyword[41:851 - 41:857: value = 'return', isAfterSpace = true]
Identifier[41:858 - 41:861: value = 'val', isAfterSpace = true]
EOL[41:861 - 41:861: value = ';', isAfterSpace = false]
Keyword[42:862 - 42:874: value = 'end function', isAfterSpace = false]
EOL[42:874 - 42:874: value = ';', isAfterSpace = false]
EOL[43:875 - 43:875: value = ';', isAfterSpace = false]
Identifier[44:876 - 44:882: value = 'Random', isAfterSpace = false]
Punctuator[44:882 - 44:883: value = '.', isAfterSpace = false]
Identifier[44:883 - 44:886: value = 'seq', isAfterSpace = false]
Punctuator[44:887 - 44:888: value = '=', isAfterSpace = true]
Keyword[44:889 - 44:897: value = 'function', isAfterSpace = true]
Punctuator[44:897 - 44:898: value = '(', isAfterSpace = false]
Identifier[44:898 - 44:901: value = 'min', isAfterSpace = false]
Punctuator[44:901 - 44:902: value = ',', isAfterSpace = false]
Identifier[44:903 - 44:906: value = 'max', isAfterSpace = true]
Punctuator[44:906 - 44:907: value = ',', isAfterSpace = false]
Identifier[44:908 - 44:912: value = 'seed', isAfterSpace = true]
Punctuator[44:912 - 44:913: value = ',', isAfterSpace = false]
Identifier[44:914 - 44:920: value = 'amount', isAfterSpace = true]
Punctuator[44:920 - 44:921: value = ',', isAfterSpace = false]
Identifier[44:922 - 44:930: value = 'keepPool', isAfterSpace = true]
Punctuator[44:930 - 44:931: value = ')', isAfterSpace = false]
EOL[44:931 - 44:931: value = ';', isAfterSpace = false]
Identifier[45:933 - 45:935: value = 'me', isAfterSpace = true]
Punctuator[45:936 - 45:937: value = '=', isAfterSpace = true]
Identifier[45:938 - 45:942: value = 'self', isAfterSpace = true]
EOL[45:942 - 45:942: value = ';', isAfterSpace = false]
Identifier[46:944 - 46:949: value = 'index', isAfterSpace = true]
Punctuator[46:950 - 46:951: value = '=', isAfterSpace = true]
NumericLiteral[46:952 - 46:953: value = '0', isAfterSpace = true]
EOL[46:953 - 46:953: value = ';', isAfterSpace = false]
Identifier[47:955 - 47:961: value = 'result', isAfterSpace = true]
Punctuator[47:962 - 47:963: value = '=', isAfterSpace = true]
Punctuator[47:964 - 47:965: value = '[', isAfterSpace = true]
Punctuator[47:965 - 47:966: value = ']', isAfterSpace = false]
EOL[47:966 - 47:966: value = ';', isAfterSpace = false]
Keyword[48:968 - 48:973: value = 'while', isAfterSpace = true]
Identifier[48:974 - 48:979: value = 'index', isAfterSpace = true]
Punctuator[48:980 - 48:981: value = '<', isAfterSpace = true]
Identifier[48:982 - 48:988: value = 'amount', isAfterSpace = true]
EOL[48:988 - 48:988: value = ';', isAfterSpace = false]
Identifier[49:991 - 49:995: value = 'temp', isAfterSpace = true]
Punctuator[49:996 - 49:997: value = '=', isAfterSpace = true]
Identifier[49:998 - 49:1000: value = 'me', isAfterSpace = true]
Punctuator[49:1000 - 49:1001: value = '.', isAfterSpace = false]
Identifier[49:1001 - 49:1004: value = 'gen', isAfterSpace = false]
Punctuator[49:1004 - 49:1005: value = '(', isAfterSpace = false]
Identifier[49:1005 - 49:1008: value = 'min', isAfterSpace = false]
Punctuator[49:1008 - 49:1009: value = ',', isAfterSpace = false]
Identifier[49:1010 - 49:1013: value = 'max', isAfterSpace = true]
Punctuator[49:1013 - 49:1014: value = ',', isAfterSpace = false]
Identifier[49:1015 - 49:1019: value = 'seed', isAfterSpace = true]
Punctuator[49:1019 - 49:1020: value = ')', isAfterSpace = false]
EOL[49:1020 - 49:1020: value = ';', isAfterSpace = false]
Identifier[50:1023 - 50:1029: value = 'result', isAfterSpace = true]
Punctuator[50:1029 - 50:1030: value = '.', isAfterSpace = false]
Identifier[50:1030 - 50:1034: value = 'push', isAfterSpace = false]
Punctuator[50:1034 - 50:1035: value = '(', isAfterSpace = false]
Identifier[50:1035 - 50:1039: value = 'temp', isAfterSpace = false]
Punctuator[50:1040 - 50:1041: value = ')', isAfterSpace = true]
EOL[50:1041 - 50:1041: value = ';', isAfterSpace = false]
Identifier[51:1044 - 51:1049: value = 'index', isAfterSpace = true]
Punctuator[51:1050 - 51:1051: value = '=', isAfterSpace = true]
Identifier[51:1052 - 51:1057: value = 'index', isAfterSpace = true]
Punctuator[51:1058 - 51:1059: value = '+', isAfterSpace = true]
NumericLiteral[51:1060 - 51:1061: value = '1', isAfterSpace = true]
EOL[51:1061 - 51:1061: value = ';', isAfterSpace = false]
Keyword[52:1063 - 52:1072: value = 'end while', isAfterSpace = true]
EOL[52:1072 - 52:1072: value = ';', isAfterSpace = false]
Keyword[53:1074 - 53:1076: value = 'if', isAfterSpace = true]
Punctuator[53:1077 - 53:1078: value = '(', isAfterSpace = true]
Identifier[53:1078 - 53:1086: value = 'keepPool', isAfterSpace = false]
Punctuator[53:1087 - 53:1089: value = '!=', isAfterSpace = true]
BooleanLiteral[53:1090 - 53:1094: value = 'true', isAfterSpace = true]
Punctuator[53:1094 - 53:1095: value = ')', isAfterSpace = false]
Keyword[53:1096 - 53:1100: value = 'then', isAfterSpace = true]
Identifier[53:1101 - 53:1103: value = 'me', isAfterSpace = true]
Punctuator[53:1103 - 53:1104: value = '.', isAfterSpace = false]
Identifier[53:1104 - 53:1108: value = 'pool', isAfterSpace = false]
Punctuator[53:1108 - 53:1109: value = '.', isAfterSpace = false]
Identifier[53:1109 - 53:1115: value = 'remove', isAfterSpace = false]
Punctuator[53:1115 - 53:1116: value = '(', isAfterSpace = false]
Identifier[53:1116 - 53:1120: value = 'seed', isAfterSpace = false]
Punctuator[53:1120 - 53:1121: value = ')', isAfterSpace = false]
EOL[53:1121 - 53:1121: value = ';', isAfterSpace = false]
Keyword[54:1123 - 54:1129: value = 'return', isAfterSpace = true]
Identifier[54:1130 - 54:1136: value = 'result', isAfterSpace = true]
EOL[54:1136 - 54:1136: value = ';', isAfterSpace = false]
Keyword[55:1137 - 55:1149: value = 'end function', isAfterSpace = false]
EOL[55:1149 - 55:1149: value = ';', isAfterSpace = false]
EOL[56:1150 - 56:1150: value = ';', isAfterSpace = false]
Identifier[57:1151 - 57:1157: value = 'Random', isAfterSpace = false]
Punctuator[57:1157 - 57:1158: value = '.', isAfterSpace = false]
Identifier[57:1158 - 57:1161: value = 'get', isAfterSpace = false]
Punctuator[57:1162 - 57:1163: value = '=', isAfterSpace = true]
Keyword[57:1164 - 57:1172: value = 'function', isAfterSpace = true]
Punctuator[57:1172 - 57:1173: value = '(', isAfterSpace = false]
Identifier[57:1173 - 57:1176: value = 'min', isAfterSpace = false]
Punctuator[57:1176 - 57:1177: value = ',', isAfterSpace = false]
Identifier[57:1178 - 57:1181: value = 'max', isAfterSpace = true]
Punctuator[57:1181 - 57:1182: value = ')', isAfterSpace = false]
EOL[57:1182 - 57:1182: value = ';', isAfterSpace = false]
Keyword[58:1184 - 58:1190: value = 'return', isAfterSpace = true]
Identifier[58:1191 - 58:1195: value = 'self', isAfterSpace = true]
Punctuator[58:1195 - 58:1196: value = '.', isAfterSpace = false]
Identifier[58:1196 - 58:1199: value = 'gen', isAfterSpace = false]
Punctuator[58:1199 - 58:1200: value = '(', isAfterSpace = false]
Identifier[58:1200 - 58:1203: value = 'min', isAfterSpace = false]
Punctuator[58:1203 - 58:1204: value = ',', isAfterSpace = false]
Identifier[58:1205 - 58:1208: value = 'max', isAfterSpace = true]
Punctuator[58:1208 - 58:1209: value = ')', isAfterSpace = false]
EOL[58:1209 - 58:1209: value = ';', isAfterSpace = false]
Keyword[59:1210 - 59:1222: value = 'end function', isAfterSpace = false]
EOL[59:1222 - 59:1222: value = ';', isAfterSpace = false]
EOL[60:1223 - 60:1223: value = ';', isAfterSpace = false]
Identifier[61:1224 - 61:1229: value = 'print', isAfterSpace = false]
Punctuator[61:1229 - 61:1230: value = '(', isAfterSpace = false]
Identifier[61:1230 - 61:1236: value = 'Random', isAfterSpace = false]
Punctuator[61:1236 - 61:1237: value = '.', isAfterSpace = false]
Identifier[61:1237 - 61:1240: value = 'get', isAfterSpace = false]
Punctuator[61:1240 - 61:1241: value = '(', isAfterSpace = false]
NumericLiteral[61:1241 - 61:1244: value = '100', isAfterSpace = false]
Punctuator[61:1244 - 61:1245: value = ',', isAfterSpace = false]
NumericLiteral[61:1245 - 61:1248: value = '500', isAfterSpace = false]
Punctuator[61:1248 - 61:1249: value = ')', isAfterSpace = false]
Punctuator[61:1249 - 61:1250: value = ')', isAfterSpace = false]
EOL[61:1250 - 61:1250: value = ';', isAfterSpace = false]
Identifier[62:1251 - 62:1256: value = 'print', isAfterSpace = false]
Punctuator[62:1256 - 62:1257: value = '(', isAfterSpace = false]
Identifier[62:1257 - 62:1263: value = 'Random', isAfterSpace = false]
Punctuator[62:1263 - 62:1264: value = '.', isAfterSpace = false]
Identifier[62:1264 - 62:1267: value = 'seq', isAfterSpace = false]
Punctuator[62:1267 - 62:1268: value = '(', isAfterSpace = false]
NumericLiteral[62:1268 - 62:1271: value = '100', isAfterSpace = false]
Punctuator[62:1271 - 62:1272: value = ',', isAfterSpace = false]
NumericLiteral[62:1272 - 62:1275: value = '500', isAfterSpace = false]
Punctuator[62:1275 - 62:1276: value = ',', isAfterSpace = false]
StringLiteral[62:1277 - 62:1283: value = 'test', isAfterSpace = true]
Punctuator[62:1283 - 62:1284: value = ',', isAfterSpace = false]
NumericLiteral[62:1285 - 62:1287: value = '10', isAfterSpace = true]
Punctuator[62:1287 - 62:1288: value = ')', isAfterSpace = false]
Punctuator[62:1288 - 62:1289: value = ')', isAfterSpace = false]"
`;

exports[`parse default scripts scuffed-if-clauses.src 1`] = `
"Keyword[1:0 - 1:2: value = 'if', isAfterSpace = false]
Punctuator[1:3 - 1:4: value = '(', isAfterSpace = true]
BooleanLiteral[1:4 - 1:8: value = 'true', isAfterSpace = false]
Punctuator[1:8 - 1:9: value = ')', isAfterSpace = false]
Keyword[1:10 - 1:14: value = 'then', isAfterSpace = true]
Identifier[1:15 - 1:20: value = 'print', isAfterSpace = true]
Punctuator[1:20 - 1:21: value = '(', isAfterSpace = false]
StringLiteral[1:21 - 1:31: value = 'true - 1', isAfterSpace = false]
Punctuator[1:31 - 1:32: value = ')', isAfterSpace = false]
EOL[1:32 - 1:32: value = ';', isAfterSpace = false]
Keyword[2:33 - 2:39: value = 'end if', isAfterSpace = false]
EOL[2:39 - 2:39: value = ';', isAfterSpace = false]
EOL[3:40 - 3:40: value = ';', isAfterSpace = false]
EOL[4:41 - 4:41: value = ';', isAfterSpace = false]
Keyword[5:42 - 5:44: value = 'if', isAfterSpace = false]
Punctuator[5:45 - 5:46: value = '(', isAfterSpace = true]
BooleanLiteral[5:46 - 5:50: value = 'true', isAfterSpace = false]
Punctuator[5:50 - 5:51: value = ')', isAfterSpace = false]
Keyword[5:52 - 5:56: value = 'then', isAfterSpace = true]
Identifier[5:57 - 5:62: value = 'print', isAfterSpace = true]
Punctuator[5:62 - 5:63: value = '(', isAfterSpace = false]
StringLiteral[5:63 - 5:73: value = 'true - 2', isAfterSpace = false]
Punctuator[5:73 - 5:74: value = ')', isAfterSpace = false]
EOL[5:74 - 5:74: value = ';', isAfterSpace = false]
Keyword[6:75 - 6:82: value = 'else if', isAfterSpace = false]
Punctuator[6:83 - 6:84: value = '(', isAfterSpace = true]
BooleanLiteral[6:84 - 6:88: value = 'true', isAfterSpace = false]
Punctuator[6:88 - 6:89: value = ')', isAfterSpace = false]
Keyword[6:90 - 6:94: value = 'then', isAfterSpace = true]
Identifier[6:95 - 6:100: value = 'print', isAfterSpace = true]
Punctuator[6:100 - 6:101: value = '(', isAfterSpace = false]
StringLiteral[6:101 - 6:111: value = 'true - 2', isAfterSpace = false]
Punctuator[6:111 - 6:112: value = ')', isAfterSpace = false]
EOL[6:112 - 6:112: value = ';', isAfterSpace = false]
Keyword[7:113 - 7:119: value = 'end if', isAfterSpace = false]
EOL[7:119 - 7:119: value = ';', isAfterSpace = false]
EOL[8:120 - 8:120: value = ';', isAfterSpace = false]
Keyword[9:121 - 9:123: value = 'if', isAfterSpace = false]
Punctuator[9:124 - 9:125: value = '(', isAfterSpace = true]
BooleanLiteral[9:125 - 9:129: value = 'true', isAfterSpace = false]
Punctuator[9:129 - 9:130: value = ')', isAfterSpace = false]
Keyword[9:131 - 9:135: value = 'then', isAfterSpace = true]
Identifier[9:136 - 9:141: value = 'print', isAfterSpace = true]
Punctuator[9:141 - 9:142: value = '(', isAfterSpace = false]
StringLiteral[9:142 - 9:152: value = 'true - 3', isAfterSpace = false]
Punctuator[9:152 - 9:153: value = ')', isAfterSpace = false]
EOL[9:153 - 9:153: value = ';', isAfterSpace = false]
Keyword[10:154 - 10:161: value = 'else if', isAfterSpace = false]
Punctuator[10:162 - 10:163: value = '(', isAfterSpace = true]
BooleanLiteral[10:163 - 10:167: value = 'true', isAfterSpace = false]
Punctuator[10:167 - 10:168: value = ')', isAfterSpace = false]
Keyword[10:169 - 10:173: value = 'then', isAfterSpace = true]
Identifier[10:174 - 10:179: value = 'print', isAfterSpace = true]
Punctuator[10:179 - 10:180: value = '(', isAfterSpace = false]
StringLiteral[10:180 - 10:190: value = 'true - 3', isAfterSpace = false]
Punctuator[10:190 - 10:191: value = ')', isAfterSpace = false]
EOL[10:191 - 10:191: value = ';', isAfterSpace = false]
Keyword[11:192 - 11:199: value = 'else if', isAfterSpace = false]
Punctuator[11:200 - 11:201: value = '(', isAfterSpace = true]
BooleanLiteral[11:201 - 11:205: value = 'true', isAfterSpace = false]
Punctuator[11:205 - 11:206: value = ')', isAfterSpace = false]
Keyword[11:207 - 11:211: value = 'then', isAfterSpace = true]
Identifier[11:212 - 11:217: value = 'print', isAfterSpace = true]
Punctuator[11:217 - 11:218: value = '(', isAfterSpace = false]
StringLiteral[11:218 - 11:228: value = 'true - 3', isAfterSpace = false]
Punctuator[11:228 - 11:229: value = ')', isAfterSpace = false]
EOL[11:229 - 11:229: value = ';', isAfterSpace = false]
Keyword[12:230 - 12:236: value = 'end if', isAfterSpace = false]
EOL[12:236 - 12:236: value = ';', isAfterSpace = false]
EOL[13:237 - 13:237: value = ';', isAfterSpace = false]
EOL[14:238 - 14:238: value = ';', isAfterSpace = false]
Keyword[15:239 - 15:241: value = 'if', isAfterSpace = false]
Punctuator[15:242 - 15:243: value = '(', isAfterSpace = true]
BooleanLiteral[15:243 - 15:247: value = 'true', isAfterSpace = false]
Punctuator[15:247 - 15:248: value = ')', isAfterSpace = false]
Keyword[15:249 - 15:253: value = 'then', isAfterSpace = true]
Identifier[15:254 - 15:259: value = 'print', isAfterSpace = true]
Punctuator[15:259 - 15:260: value = '(', isAfterSpace = false]
StringLiteral[15:260 - 15:270: value = 'true - 4', isAfterSpace = false]
Punctuator[15:270 - 15:271: value = ')', isAfterSpace = false]
EOL[15:271 - 15:271: value = ';', isAfterSpace = false]
Keyword[16:272 - 16:279: value = 'else if', isAfterSpace = false]
Punctuator[16:280 - 16:281: value = '(', isAfterSpace = true]
BooleanLiteral[16:281 - 16:285: value = 'true', isAfterSpace = false]
Punctuator[16:285 - 16:286: value = ')', isAfterSpace = false]
Keyword[16:287 - 16:291: value = 'then', isAfterSpace = true]
Identifier[16:292 - 16:297: value = 'print', isAfterSpace = true]
Punctuator[16:297 - 16:298: value = '(', isAfterSpace = false]
StringLiteral[16:298 - 16:308: value = 'true - 4', isAfterSpace = false]
Punctuator[16:308 - 16:309: value = ')', isAfterSpace = false]
EOL[16:309 - 16:309: value = ';', isAfterSpace = false]
Keyword[17:310 - 17:317: value = 'else if', isAfterSpace = false]
Punctuator[17:318 - 17:319: value = '(', isAfterSpace = true]
BooleanLiteral[17:319 - 17:323: value = 'true', isAfterSpace = false]
Punctuator[17:323 - 17:324: value = ')', isAfterSpace = false]
Keyword[17:325 - 17:329: value = 'then', isAfterSpace = true]
Identifier[17:330 - 17:335: value = 'print', isAfterSpace = true]
Punctuator[17:335 - 17:336: value = '(', isAfterSpace = false]
StringLiteral[17:336 - 17:346: value = 'true - 4', isAfterSpace = false]
Punctuator[17:346 - 17:347: value = ')', isAfterSpace = false]
EOL[17:347 - 17:347: value = ';', isAfterSpace = false]
Keyword[18:348 - 18:352: value = 'else', isAfterSpace = false]
Identifier[18:353 - 18:358: value = 'print', isAfterSpace = true]
Punctuator[18:358 - 18:359: value = '(', isAfterSpace = false]
StringLiteral[18:359 - 18:369: value = 'true - 4', isAfterSpace = false]
Punctuator[18:369 - 18:370: value = ')', isAfterSpace = false]
EOL[18:370 - 18:370: value = ';', isAfterSpace = false]
Keyword[19:371 - 19:377: value = 'end if', isAfterSpace = false]
EOL[19:377 - 19:377: value = ';', isAfterSpace = false]
EOL[20:378 - 20:378: value = ';', isAfterSpace = false]
Keyword[21:379 - 21:381: value = 'if', isAfterSpace = false]
Punctuator[21:382 - 21:383: value = '(', isAfterSpace = true]
BooleanLiteral[21:383 - 21:387: value = 'true', isAfterSpace = false]
Punctuator[21:387 - 21:388: value = ')', isAfterSpace = false]
Keyword[21:389 - 21:393: value = 'then', isAfterSpace = true]
Identifier[21:394 - 21:399: value = 'print', isAfterSpace = true]
Punctuator[21:399 - 21:400: value = '(', isAfterSpace = false]
StringLiteral[21:400 - 21:410: value = 'true - 5', isAfterSpace = false]
Punctuator[21:410 - 21:411: value = ')', isAfterSpace = false]
EOL[21:411 - 21:411: value = ';', isAfterSpace = false]
Keyword[22:412 - 22:419: value = 'else if', isAfterSpace = false]
Punctuator[22:420 - 22:421: value = '(', isAfterSpace = true]
BooleanLiteral[22:421 - 22:425: value = 'true', isAfterSpace = false]
Punctuator[22:425 - 22:426: value = ')', isAfterSpace = false]
Keyword[22:427 - 22:431: value = 'then', isAfterSpace = true]
Identifier[22:432 - 22:437: value = 'print', isAfterSpace = true]
Punctuator[22:437 - 22:438: value = '(', isAfterSpace = false]
StringLiteral[22:438 - 22:448: value = 'true - 5', isAfterSpace = false]
Punctuator[22:448 - 22:449: value = ')', isAfterSpace = false]
EOL[22:449 - 22:449: value = ';', isAfterSpace = false]
Keyword[23:450 - 23:454: value = 'else', isAfterSpace = false]
Identifier[23:455 - 23:460: value = 'print', isAfterSpace = true]
Punctuator[23:460 - 23:461: value = '(', isAfterSpace = false]
StringLiteral[23:461 - 23:471: value = 'true - 5', isAfterSpace = false]
Punctuator[23:471 - 23:472: value = ')', isAfterSpace = false]
EOL[23:472 - 23:472: value = ';', isAfterSpace = false]
Keyword[24:473 - 24:479: value = 'end if', isAfterSpace = false]
EOL[24:479 - 24:479: value = ';', isAfterSpace = false]
EOL[25:480 - 25:480: value = ';', isAfterSpace = false]
Keyword[26:481 - 26:483: value = 'if', isAfterSpace = false]
Punctuator[26:484 - 26:485: value = '(', isAfterSpace = true]
BooleanLiteral[26:485 - 26:489: value = 'true', isAfterSpace = false]
Punctuator[26:489 - 26:490: value = ')', isAfterSpace = false]
Keyword[26:491 - 26:495: value = 'then', isAfterSpace = true]
Identifier[26:496 - 26:501: value = 'print', isAfterSpace = true]
Punctuator[26:501 - 26:502: value = '(', isAfterSpace = false]
StringLiteral[26:502 - 26:512: value = 'true - 6', isAfterSpace = false]
Punctuator[26:512 - 26:513: value = ')', isAfterSpace = false]
EOL[26:513 - 26:513: value = ';', isAfterSpace = false]
Keyword[27:514 - 27:518: value = 'else', isAfterSpace = false]
Identifier[27:519 - 27:524: value = 'print', isAfterSpace = true]
Punctuator[27:524 - 27:525: value = '(', isAfterSpace = false]
StringLiteral[27:525 - 27:535: value = 'true - 6', isAfterSpace = false]
Punctuator[27:535 - 27:536: value = ')', isAfterSpace = false]
EOL[27:536 - 27:536: value = ';', isAfterSpace = false]
Keyword[28:537 - 28:543: value = 'end if', isAfterSpace = false]"
`;

exports[`parse default scripts simple-object.src 1`] = `
"Identifier[1:0 - 1:4: value = 'test', isAfterSpace = false]
Punctuator[1:5 - 1:6: value = '=', isAfterSpace = true]
Punctuator[1:7 - 1:8: value = '{', isAfterSpace = true]
Punctuator[1:8 - 1:9: value = '}', isAfterSpace = false]
EOL[1:9 - 1:9: value = ';', isAfterSpace = false]
EOL[2:10 - 2:10: value = ';', isAfterSpace = false]
Identifier[3:11 - 3:15: value = 'test', isAfterSpace = false]
Punctuator[3:15 - 3:16: value = '.', isAfterSpace = false]
Identifier[3:16 - 3:20: value = 'here', isAfterSpace = false]
Punctuator[3:21 - 3:22: value = '=', isAfterSpace = true]
StringLiteral[3:23 - 3:28: value = 'was', isAfterSpace = true]
EOL[3:28 - 3:28: value = ';', isAfterSpace = false]
EOL[4:29 - 4:29: value = ';', isAfterSpace = false]
Identifier[5:30 - 5:34: value = 'test', isAfterSpace = false]
Punctuator[5:34 - 5:35: value = '.', isAfterSpace = false]
Identifier[5:35 - 5:38: value = 'was', isAfterSpace = false]
Punctuator[5:39 - 5:40: value = '=', isAfterSpace = true]
Keyword[5:41 - 5:49: value = 'function', isAfterSpace = true]
Punctuator[5:49 - 5:50: value = '(', isAfterSpace = false]
Punctuator[5:50 - 5:51: value = ')', isAfterSpace = false]
EOL[5:51 - 5:51: value = ';', isAfterSpace = false]
Identifier[6:53 - 6:58: value = 'print', isAfterSpace = true]
Punctuator[6:58 - 6:59: value = '(', isAfterSpace = false]
Identifier[6:59 - 6:63: value = 'self', isAfterSpace = false]
Punctuator[6:63 - 6:64: value = '.', isAfterSpace = false]
Identifier[6:64 - 6:68: value = 'here', isAfterSpace = false]
Punctuator[6:68 - 6:69: value = ')', isAfterSpace = false]
EOL[6:69 - 6:69: value = ';', isAfterSpace = false]
Keyword[7:70 - 7:82: value = 'end function', isAfterSpace = false]
EOL[7:82 - 7:82: value = ';', isAfterSpace = false]
EOL[8:83 - 8:83: value = ';', isAfterSpace = false]
Identifier[9:84 - 9:89: value = 'print', isAfterSpace = false]
Punctuator[9:89 - 9:90: value = '(', isAfterSpace = false]
Identifier[9:90 - 9:94: value = 'test', isAfterSpace = false]
Punctuator[9:94 - 9:95: value = '.', isAfterSpace = false]
Identifier[9:95 - 9:98: value = 'was', isAfterSpace = false]
Punctuator[9:98 - 9:99: value = '(', isAfterSpace = false]
Punctuator[9:99 - 9:100: value = ')', isAfterSpace = false]
Punctuator[9:100 - 9:101: value = ')', isAfterSpace = false]"
`;

exports[`parse default scripts slice.src 1`] = `
"Identifier[1:0 - 1:12: value = 'divideString', isAfterSpace = false]
Punctuator[1:13 - 1:14: value = '=', isAfterSpace = true]
Keyword[1:15 - 1:23: value = 'function', isAfterSpace = true]
Punctuator[1:23 - 1:24: value = '(', isAfterSpace = false]
Identifier[1:24 - 1:27: value = 'str', isAfterSpace = false]
Punctuator[1:27 - 1:28: value = ',', isAfterSpace = false]
Identifier[1:28 - 1:33: value = 'limit', isAfterSpace = false]
Punctuator[1:33 - 1:34: value = ')', isAfterSpace = false]
EOL[1:34 - 1:34: value = ';', isAfterSpace = false]
Identifier[2:36 - 2:42: value = 'offset', isAfterSpace = true]
Punctuator[2:43 - 2:44: value = '=', isAfterSpace = true]
NumericLiteral[2:45 - 2:46: value = '0', isAfterSpace = true]
EOL[2:46 - 2:46: value = ';', isAfterSpace = false]
Identifier[3:48 - 3:54: value = 'maxLen', isAfterSpace = true]
Punctuator[3:55 - 3:56: value = '=', isAfterSpace = true]
Identifier[3:57 - 3:60: value = 'str', isAfterSpace = true]
Punctuator[3:60 - 3:61: value = '.', isAfterSpace = false]
Identifier[3:61 - 3:64: value = 'len', isAfterSpace = false]
EOL[3:64 - 3:64: value = ';', isAfterSpace = false]
Identifier[4:66 - 4:71: value = 'frags', isAfterSpace = true]
Punctuator[4:72 - 4:73: value = '=', isAfterSpace = true]
Punctuator[4:74 - 4:75: value = '[', isAfterSpace = true]
Punctuator[4:75 - 4:76: value = ']', isAfterSpace = false]
EOL[4:76 - 4:76: value = ';', isAfterSpace = false]
EOL[5:77 - 5:77: value = ';', isAfterSpace = false]
Keyword[6:79 - 6:84: value = 'while', isAfterSpace = true]
Identifier[6:85 - 6:91: value = 'offset', isAfterSpace = true]
Punctuator[6:92 - 6:93: value = '<', isAfterSpace = true]
Identifier[6:94 - 6:100: value = 'maxLen', isAfterSpace = true]
EOL[6:100 - 6:100: value = ';', isAfterSpace = false]
Identifier[7:103 - 7:107: value = 'next', isAfterSpace = true]
Punctuator[7:108 - 7:109: value = '=', isAfterSpace = true]
Identifier[7:110 - 7:116: value = 'offset', isAfterSpace = true]
Punctuator[7:117 - 7:118: value = '+', isAfterSpace = true]
Identifier[7:119 - 7:124: value = 'limit', isAfterSpace = true]
EOL[7:124 - 7:124: value = ';', isAfterSpace = false]
Identifier[8:127 - 8:132: value = 'frags', isAfterSpace = true]
Punctuator[8:132 - 8:133: value = '.', isAfterSpace = false]
Identifier[8:133 - 8:137: value = 'push', isAfterSpace = false]
Punctuator[8:137 - 8:138: value = '(', isAfterSpace = false]
Identifier[8:138 - 8:141: value = 'str', isAfterSpace = false]
Punctuator[8:141 - 8:142: value = '[', isAfterSpace = false]
Identifier[8:142 - 8:148: value = 'offset', isAfterSpace = false]
SliceOperator[8:148 - 8:149: value = ':', isAfterSpace = false]
Identifier[8:149 - 8:153: value = 'next', isAfterSpace = false]
Punctuator[8:153 - 8:154: value = ']', isAfterSpace = false]
Punctuator[8:154 - 8:155: value = ')', isAfterSpace = false]
EOL[8:155 - 8:155: value = ';', isAfterSpace = false]
Identifier[9:158 - 9:164: value = 'offset', isAfterSpace = true]
Punctuator[9:165 - 9:166: value = '=', isAfterSpace = true]
Identifier[9:167 - 9:171: value = 'next', isAfterSpace = true]
EOL[9:171 - 9:171: value = ';', isAfterSpace = false]
Keyword[10:173 - 10:182: value = 'end while', isAfterSpace = true]
EOL[10:182 - 10:182: value = ';', isAfterSpace = false]
EOL[11:183 - 11:183: value = ';', isAfterSpace = false]
Keyword[12:185 - 12:191: value = 'return', isAfterSpace = true]
Identifier[12:192 - 12:197: value = 'frags', isAfterSpace = true]
EOL[12:197 - 12:197: value = ';', isAfterSpace = false]
Keyword[13:198 - 13:210: value = 'end function', isAfterSpace = false]
EOL[13:210 - 13:210: value = ';', isAfterSpace = false]
EOL[14:211 - 14:211: value = ';', isAfterSpace = false]
Identifier[15:212 - 15:217: value = 'print', isAfterSpace = false]
Punctuator[15:217 - 15:218: value = '(', isAfterSpace = false]
Identifier[15:218 - 15:230: value = 'divideString', isAfterSpace = false]
Punctuator[15:230 - 15:231: value = '(', isAfterSpace = false]
StringLiteral[15:231 - 15:266: value = 'blahhblahhblahhblahhblahhblahhgad', isAfterSpace = false]
Punctuator[15:266 - 15:267: value = ',', isAfterSpace = false]
NumericLiteral[15:267 - 15:268: value = '5', isAfterSpace = false]
Punctuator[15:268 - 15:269: value = ')', isAfterSpace = false]
Punctuator[15:269 - 15:270: value = ')', isAfterSpace = false]
EOL[15:270 - 15:270: value = ';', isAfterSpace = false]
EOL[16:271 - 16:271: value = ';', isAfterSpace = false]
Identifier[17:272 - 17:276: value = 'test', isAfterSpace = false]
Punctuator[17:276 - 17:277: value = '.', isAfterSpace = false]
Identifier[17:277 - 17:289: value = 'current_path', isAfterSpace = false]
Punctuator[17:290 - 17:291: value = '=', isAfterSpace = true]
StringLiteral[17:292 - 17:300: value = '/home/', isAfterSpace = true]
Punctuator[17:300 - 17:301: value = '+', isAfterSpace = false]
Identifier[17:301 - 17:305: value = 'test', isAfterSpace = false]
Punctuator[17:305 - 17:306: value = '.', isAfterSpace = false]
Identifier[17:306 - 17:309: value = 'moo', isAfterSpace = false]
Punctuator[17:309 - 17:310: value = '[', isAfterSpace = false]
Punctuator[17:310 - 17:311: value = '-', isAfterSpace = false]
NumericLiteral[17:311 - 17:312: value = '1', isAfterSpace = false]
Punctuator[17:312 - 17:313: value = ']', isAfterSpace = false]
Punctuator[17:313 - 17:314: value = '.', isAfterSpace = false]
Identifier[17:314 - 17:318: value = 'user', isAfterSpace = false]
Punctuator[17:318 - 17:319: value = '[', isAfterSpace = false]
Identifier[17:319 - 17:323: value = 'test', isAfterSpace = false]
Punctuator[17:323 - 17:324: value = '.', isAfterSpace = false]
Identifier[17:324 - 17:327: value = 'bar', isAfterSpace = false]
Punctuator[17:327 - 17:328: value = '[', isAfterSpace = false]
Punctuator[17:328 - 17:329: value = '-', isAfterSpace = false]
NumericLiteral[17:329 - 17:330: value = '1', isAfterSpace = false]
Punctuator[17:330 - 17:331: value = ']', isAfterSpace = false]
Punctuator[17:331 - 17:332: value = '.', isAfterSpace = false]
Identifier[17:332 - 17:335: value = 'foo', isAfterSpace = false]
Punctuator[17:335 - 17:336: value = '.', isAfterSpace = false]
Identifier[17:336 - 17:343: value = 'indexOf', isAfterSpace = false]
Punctuator[17:343 - 17:344: value = '(', isAfterSpace = false]
StringLiteral[17:344 - 17:347: value = '@', isAfterSpace = false]
Punctuator[17:347 - 17:348: value = ')', isAfterSpace = false]
Punctuator[17:348 - 17:349: value = '+', isAfterSpace = false]
NumericLiteral[17:349 - 17:350: value = '1', isAfterSpace = false]
SliceOperator[17:350 - 17:351: value = ':', isAfterSpace = false]
Punctuator[17:351 - 17:352: value = ']', isAfterSpace = false]
EOL[17:352 - 17:352: value = ';', isAfterSpace = false]
EOL[18:353 - 18:353: value = ';', isAfterSpace = false]
Keyword[19:354 - 19:357: value = 'for', isAfterSpace = false]
Identifier[19:358 - 19:359: value = 'i', isAfterSpace = true]
Keyword[19:360 - 19:362: value = 'in', isAfterSpace = true]
Identifier[19:363 - 19:368: value = 'range', isAfterSpace = true]
Punctuator[19:368 - 19:369: value = '(', isAfterSpace = false]
NumericLiteral[19:369 - 19:370: value = '0', isAfterSpace = false]
Punctuator[19:370 - 19:371: value = ',', isAfterSpace = false]
Identifier[19:371 - 19:372: value = 's', isAfterSpace = false]
Punctuator[19:372 - 19:373: value = '.', isAfterSpace = false]
Identifier[19:373 - 19:376: value = 'len', isAfterSpace = false]
Punctuator[19:376 - 19:377: value = '-', isAfterSpace = false]
NumericLiteral[19:377 - 19:378: value = '4', isAfterSpace = false]
Punctuator[19:378 - 19:379: value = ')', isAfterSpace = false]
EOL[19:379 - 19:379: value = ';', isAfterSpace = false]
Keyword[20:381 - 20:383: value = 'if', isAfterSpace = true]
Identifier[20:384 - 20:385: value = 'f', isAfterSpace = true]
Punctuator[20:385 - 20:386: value = '.', isAfterSpace = false]
Identifier[20:386 - 20:394: value = 'hasIndex', isAfterSpace = false]
Punctuator[20:394 - 20:395: value = '(', isAfterSpace = false]
Identifier[20:395 - 20:396: value = 's', isAfterSpace = false]
Punctuator[20:396 - 20:397: value = '[', isAfterSpace = false]
Identifier[20:397 - 20:398: value = 'i', isAfterSpace = false]
SliceOperator[20:398 - 20:399: value = ':', isAfterSpace = false]
Identifier[20:399 - 20:400: value = 'i', isAfterSpace = false]
Punctuator[20:400 - 20:401: value = '+', isAfterSpace = false]
NumericLiteral[20:401 - 20:402: value = '3', isAfterSpace = false]
Punctuator[20:402 - 20:403: value = ']', isAfterSpace = false]
Punctuator[20:403 - 20:404: value = ')', isAfterSpace = false]
Keyword[20:405 - 20:409: value = 'then', isAfterSpace = true]
Identifier[20:410 - 20:411: value = 'f', isAfterSpace = true]
Punctuator[20:411 - 20:412: value = '[', isAfterSpace = false]
Identifier[20:412 - 20:413: value = 's', isAfterSpace = false]
Punctuator[20:413 - 20:414: value = '[', isAfterSpace = false]
Identifier[20:414 - 20:415: value = 'i', isAfterSpace = false]
SliceOperator[20:415 - 20:416: value = ':', isAfterSpace = false]
Identifier[20:416 - 20:417: value = 'i', isAfterSpace = false]
Punctuator[20:417 - 20:418: value = '+', isAfterSpace = false]
NumericLiteral[20:418 - 20:419: value = '3', isAfterSpace = false]
Punctuator[20:419 - 20:420: value = ']', isAfterSpace = false]
Punctuator[20:420 - 20:421: value = ']', isAfterSpace = false]
Punctuator[20:421 - 20:422: value = '[', isAfterSpace = false]
Identifier[20:422 - 20:423: value = 's', isAfterSpace = false]
Punctuator[20:423 - 20:424: value = '.', isAfterSpace = false]
Identifier[20:424 - 20:427: value = 'len', isAfterSpace = false]
Punctuator[20:427 - 20:428: value = ']', isAfterSpace = false]
Punctuator[20:428 - 20:429: value = '=', isAfterSpace = false]
NumericLiteral[20:429 - 20:430: value = '1', isAfterSpace = false]
Keyword[20:431 - 20:435: value = 'else', isAfterSpace = true]
Identifier[20:436 - 20:437: value = 'f', isAfterSpace = true]
Punctuator[20:437 - 20:438: value = '[', isAfterSpace = false]
Identifier[20:438 - 20:439: value = 's', isAfterSpace = false]
Punctuator[20:439 - 20:440: value = '[', isAfterSpace = false]
Identifier[20:440 - 20:441: value = 'i', isAfterSpace = false]
SliceOperator[20:441 - 20:442: value = ':', isAfterSpace = false]
Identifier[20:442 - 20:443: value = 'i', isAfterSpace = false]
Punctuator[20:443 - 20:444: value = '+', isAfterSpace = false]
NumericLiteral[20:444 - 20:445: value = '3', isAfterSpace = false]
Punctuator[20:445 - 20:446: value = ']', isAfterSpace = false]
Punctuator[20:446 - 20:447: value = ']', isAfterSpace = false]
Punctuator[20:447 - 20:448: value = '=', isAfterSpace = false]
Punctuator[20:448 - 20:449: value = '{', isAfterSpace = false]
Identifier[20:449 - 20:450: value = 's', isAfterSpace = false]
Punctuator[20:450 - 20:451: value = '.', isAfterSpace = false]
Identifier[20:451 - 20:454: value = 'len', isAfterSpace = false]
SliceOperator[20:454 - 20:455: value = ':', isAfterSpace = false]
NumericLiteral[20:455 - 20:456: value = '1', isAfterSpace = false]
Punctuator[20:456 - 20:457: value = '}', isAfterSpace = false]
EOL[20:457 - 20:457: value = ';', isAfterSpace = false]
Keyword[21:458 - 21:465: value = 'end for', isAfterSpace = false]
EOL[21:465 - 21:465: value = ';', isAfterSpace = false]
EOL[22:466 - 22:466: value = ';', isAfterSpace = false]
Identifier[23:467 - 23:470: value = 'foo', isAfterSpace = false]
Punctuator[23:470 - 23:471: value = '[', isAfterSpace = false]
NumericLiteral[23:471 - 23:472: value = '1', isAfterSpace = false]
SliceOperator[23:472 - 23:473: value = ':', isAfterSpace = false]
Punctuator[23:473 - 23:474: value = ']', isAfterSpace = false]
EOL[23:474 - 23:474: value = ';', isAfterSpace = false]
Identifier[24:475 - 24:478: value = 'foo', isAfterSpace = false]
Punctuator[24:478 - 24:479: value = '[', isAfterSpace = false]
SliceOperator[24:479 - 24:480: value = ':', isAfterSpace = false]
NumericLiteral[24:480 - 24:481: value = '1', isAfterSpace = false]
Punctuator[24:481 - 24:482: value = ']', isAfterSpace = false]
EOL[24:482 - 24:482: value = ';', isAfterSpace = false]
Identifier[25:483 - 25:486: value = 'foo', isAfterSpace = false]
Punctuator[25:486 - 25:487: value = '[', isAfterSpace = false]
Identifier[25:487 - 25:490: value = 'foo', isAfterSpace = false]
Punctuator[25:490 - 25:491: value = '[', isAfterSpace = false]
NumericLiteral[25:491 - 25:492: value = '1', isAfterSpace = false]
SliceOperator[25:492 - 25:493: value = ':', isAfterSpace = false]
Punctuator[25:493 - 25:494: value = ']', isAfterSpace = false]
SliceOperator[25:494 - 25:495: value = ':', isAfterSpace = false]
Punctuator[25:495 - 25:496: value = ']', isAfterSpace = false]
EOL[25:496 - 25:496: value = ';', isAfterSpace = false]
Identifier[26:497 - 26:500: value = 'foo', isAfterSpace = false]
Punctuator[26:500 - 26:501: value = '[', isAfterSpace = false]
SliceOperator[26:501 - 26:502: value = ':', isAfterSpace = false]
Identifier[26:502 - 26:505: value = 'foo', isAfterSpace = false]
Punctuator[26:505 - 26:506: value = '[', isAfterSpace = false]
SliceOperator[26:506 - 26:507: value = ':', isAfterSpace = false]
NumericLiteral[26:507 - 26:508: value = '1', isAfterSpace = false]
Punctuator[26:508 - 26:509: value = ']', isAfterSpace = false]
Punctuator[26:509 - 26:510: value = ']', isAfterSpace = false]
EOL[26:510 - 26:510: value = ';', isAfterSpace = false]
Identifier[27:511 - 27:514: value = 'foo', isAfterSpace = false]
Punctuator[27:514 - 27:515: value = '[', isAfterSpace = false]
Identifier[27:515 - 27:518: value = 'foo', isAfterSpace = false]
Punctuator[27:518 - 27:519: value = '[', isAfterSpace = false]
NumericLiteral[27:519 - 27:520: value = '1', isAfterSpace = false]
SliceOperator[27:520 - 27:521: value = ':', isAfterSpace = false]
Punctuator[27:521 - 27:522: value = ']', isAfterSpace = false]
SliceOperator[27:522 - 27:523: value = ':', isAfterSpace = false]
Identifier[27:523 - 27:526: value = 'foo', isAfterSpace = false]
Punctuator[27:526 - 27:527: value = '[', isAfterSpace = false]
SliceOperator[27:527 - 27:528: value = ':', isAfterSpace = false]
NumericLiteral[27:528 - 27:529: value = '1', isAfterSpace = false]
Punctuator[27:529 - 27:530: value = ']', isAfterSpace = false]
Punctuator[27:530 - 27:531: value = ']', isAfterSpace = false]"
`;

exports[`parse default scripts unary.src 1`] = `
"Identifier[1:0 - 1:4: value = 'test', isAfterSpace = false]
Punctuator[1:5 - 1:6: value = '=', isAfterSpace = true]
Keyword[1:7 - 1:15: value = 'function', isAfterSpace = true]
Punctuator[1:15 - 1:16: value = '(', isAfterSpace = false]
Punctuator[1:16 - 1:17: value = ')', isAfterSpace = false]
EOL[1:17 - 1:17: value = ';', isAfterSpace = false]
Keyword[2:19 - 2:25: value = 'return', isAfterSpace = true]
NilLiteral[2:26 - 2:30: value = 'null', isAfterSpace = true]
EOL[2:30 - 2:30: value = ';', isAfterSpace = false]
Keyword[3:31 - 3:43: value = 'end function', isAfterSpace = false]
EOL[3:43 - 3:43: value = ';', isAfterSpace = false]
EOL[4:44 - 4:44: value = ';', isAfterSpace = false]
Identifier[5:45 - 5:50: value = 'print', isAfterSpace = false]
Punctuator[5:50 - 5:51: value = '(', isAfterSpace = false]
Punctuator[5:51 - 5:52: value = '@', isAfterSpace = false]
StringLiteral[5:52 - 5:57: value = 'was', isAfterSpace = false]
Punctuator[5:57 - 5:58: value = '.', isAfterSpace = false]
Identifier[5:58 - 5:63: value = 'split', isAfterSpace = false]
Keyword[5:64 - 5:67: value = 'and', isAfterSpace = true]
Punctuator[5:68 - 5:69: value = '(', isAfterSpace = true]
BooleanLiteral[5:69 - 5:74: value = 'false', isAfterSpace = false]
Keyword[5:75 - 5:77: value = 'or', isAfterSpace = true]
Keyword[5:78 - 5:81: value = 'not', isAfterSpace = true]
BooleanLiteral[5:82 - 5:87: value = 'false', isAfterSpace = true]
Punctuator[5:87 - 5:88: value = ')', isAfterSpace = false]
Punctuator[5:88 - 5:89: value = ')', isAfterSpace = false]
EOL[5:89 - 5:89: value = ';', isAfterSpace = false]
Identifier[6:90 - 6:95: value = 'print', isAfterSpace = false]
Punctuator[6:95 - 6:96: value = '(', isAfterSpace = false]
Punctuator[6:96 - 6:97: value = '@', isAfterSpace = false]
Punctuator[6:97 - 6:98: value = '(', isAfterSpace = false]
StringLiteral[6:98 - 6:103: value = 'was', isAfterSpace = false]
Punctuator[6:103 - 6:104: value = '.', isAfterSpace = false]
Identifier[6:104 - 6:109: value = 'split', isAfterSpace = false]
Keyword[6:110 - 6:113: value = 'and', isAfterSpace = true]
Punctuator[6:114 - 6:115: value = '(', isAfterSpace = true]
BooleanLiteral[6:115 - 6:120: value = 'false', isAfterSpace = false]
Keyword[6:121 - 6:123: value = 'or', isAfterSpace = true]
Keyword[6:124 - 6:127: value = 'not', isAfterSpace = true]
BooleanLiteral[6:128 - 6:133: value = 'false', isAfterSpace = true]
Punctuator[6:133 - 6:134: value = ')', isAfterSpace = false]
Punctuator[6:134 - 6:135: value = ')', isAfterSpace = false]
Punctuator[6:135 - 6:136: value = ')', isAfterSpace = false]
EOL[6:136 - 6:136: value = ';', isAfterSpace = false]
Identifier[7:137 - 7:142: value = 'print', isAfterSpace = false]
Punctuator[7:142 - 7:143: value = '(', isAfterSpace = false]
Keyword[7:143 - 7:146: value = 'not', isAfterSpace = false]
StringLiteral[7:147 - 7:152: value = 'was', isAfterSpace = true]
Punctuator[7:152 - 7:153: value = '.', isAfterSpace = false]
Identifier[7:153 - 7:158: value = 'split', isAfterSpace = false]
Keyword[7:159 - 7:162: value = 'and', isAfterSpace = true]
Punctuator[7:163 - 7:164: value = '(', isAfterSpace = true]
BooleanLiteral[7:164 - 7:169: value = 'false', isAfterSpace = false]
Keyword[7:170 - 7:172: value = 'or', isAfterSpace = true]
Keyword[7:173 - 7:176: value = 'not', isAfterSpace = true]
BooleanLiteral[7:177 - 7:182: value = 'false', isAfterSpace = true]
Punctuator[7:182 - 7:183: value = ')', isAfterSpace = false]
Punctuator[7:183 - 7:184: value = ')', isAfterSpace = false]
EOL[7:184 - 7:184: value = ';', isAfterSpace = false]
Identifier[8:185 - 8:190: value = 'print', isAfterSpace = false]
Punctuator[8:190 - 8:191: value = '(', isAfterSpace = false]
Keyword[8:191 - 8:194: value = 'not', isAfterSpace = false]
Punctuator[8:195 - 8:196: value = '(', isAfterSpace = true]
StringLiteral[8:196 - 8:201: value = 'was', isAfterSpace = false]
Punctuator[8:201 - 8:202: value = '.', isAfterSpace = false]
Identifier[8:202 - 8:207: value = 'split', isAfterSpace = false]
Keyword[8:208 - 8:211: value = 'and', isAfterSpace = true]
Punctuator[8:212 - 8:213: value = '(', isAfterSpace = true]
BooleanLiteral[8:213 - 8:218: value = 'false', isAfterSpace = false]
Keyword[8:219 - 8:221: value = 'or', isAfterSpace = true]
Keyword[8:222 - 8:225: value = 'not', isAfterSpace = true]
BooleanLiteral[8:226 - 8:231: value = 'false', isAfterSpace = true]
Punctuator[8:231 - 8:232: value = ')', isAfterSpace = false]
Punctuator[8:232 - 8:233: value = ')', isAfterSpace = false]
Punctuator[8:233 - 8:234: value = ')', isAfterSpace = false]
EOL[8:234 - 8:234: value = ';', isAfterSpace = false]
Identifier[9:235 - 9:240: value = 'print', isAfterSpace = false]
Punctuator[9:240 - 9:241: value = '(', isAfterSpace = false]
Punctuator[9:241 - 9:242: value = '-', isAfterSpace = false]
NumericLiteral[9:242 - 9:243: value = '1', isAfterSpace = false]
Punctuator[9:244 - 9:245: value = '+', isAfterSpace = true]
NumericLiteral[9:246 - 9:247: value = '2', isAfterSpace = true]
Punctuator[9:247 - 9:248: value = ')', isAfterSpace = false]
EOL[9:248 - 9:248: value = ';', isAfterSpace = false]
Identifier[10:249 - 10:254: value = 'print', isAfterSpace = false]
Punctuator[10:254 - 10:255: value = '(', isAfterSpace = false]
Punctuator[10:255 - 10:256: value = '-', isAfterSpace = false]
Punctuator[10:256 - 10:257: value = '(', isAfterSpace = false]
NumericLiteral[10:257 - 10:258: value = '1', isAfterSpace = false]
Punctuator[10:259 - 10:260: value = '+', isAfterSpace = true]
NumericLiteral[10:261 - 10:262: value = '2', isAfterSpace = true]
Punctuator[10:262 - 10:263: value = ')', isAfterSpace = false]
Punctuator[10:263 - 10:264: value = ')', isAfterSpace = false]
EOL[10:264 - 10:264: value = ';', isAfterSpace = false]"
`;
